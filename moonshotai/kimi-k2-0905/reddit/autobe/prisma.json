{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"description":"Core platform configuration and settings management for the Reddit community platform. Manages system-wide parameters that affect all communities and users.","foreignFields":[],"ginIndexes":[{"fieldName":"description"}],"material":false,"name":"reddit_community_platform_settings","plainFields":[{"description":"Unique identifier for the platform setting configuration key.","name":"setting_key","nullable":false,"type":"string"},{"description":"The value or configuration data for this platform setting.","name":"setting_value","nullable":false,"type":"string"},{"description":"The data type of this setting (string, number, boolean, json).","name":"setting_type","nullable":false,"type":"string"},{"description":"Detailed description explaining the purpose and usage of this platform setting.","name":"description","nullable":true,"type":"string"},{"description":"The functional category this setting belongs to (admin, moderation, content, etc).","name":"category","nullable":false,"type":"string"},{"description":"Whether this setting is visible to the public or only to administrators.","name":"is_public","nullable":false,"type":"boolean"},{"description":"Whether this setting can be modified through the admin interface.","name":"is_editable","nullable":false,"type":"boolean"},{"description":"The minimum acceptable numeric value for this setting if applicable.","name":"min_value","nullable":true,"type":"double"},{"description":"The maximum acceptable numeric value for this setting if applicable.","name":"max_value","nullable":true,"type":"double"},{"description":"The default value that should be used if no explicit value is set.","name":"default_value","nullable":true,"type":"string"},{"description":"JSON array containing validation rules for this setting's values.","name":"validation_rules","nullable":true,"type":"string"},{"description":"The timestamp when this platform setting was first created.","name":"created_at","nullable":false,"type":"datetime"},{"description":"The timestamp when this platform setting was last modified.","name":"updated_at","nullable":false,"type":"datetime"},{"description":"The timestamp when this platform setting was last updated by an admin user.","name":"updated_by","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["category"]},{"fieldNames":["is_public"]},{"fieldNames":["is_editable"]},{"fieldNames":["created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["setting_key"],"unique":true}]},{"description":"Content categorization system for organizing posts and discussions into hierarchical topic classifications across communities.","foreignFields":[{"description":"Content category's {@link reddit_community_content_categories.parent_id} for hierarchical categorization.","name":"parent_id","nullable":true,"relation":{"name":"parent","targetModel":"reddit_community_content_categories","mappingName":"recursive"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"name"},{"fieldName":"description"}],"material":false,"name":"reddit_community_content_categories","plainFields":[{"description":"The display name of this content category used in user interfaces.","name":"name","nullable":false,"type":"string"},{"description":"URL-friendly identifier for this category used in links and routing.","name":"slug","nullable":false,"type":"string"},{"description":"Detailed description explaining the purpose and scope of this category.","name":"description","nullable":true,"type":"string"},{"description":"Whether this category is currently active and available for content organization.","name":"is_active","nullable":false,"type":"boolean"},{"description":"The display order position for this category within its parent level.","name":"sort_order","nullable":false,"type":"int"},{"description":"Name of the icon asset to display for this category in the UI.","name":"icon_name","nullable":true,"type":"string"},{"description":"Hexadecimal color code for this category's visual styling.","name":"color_hex","nullable":true,"type":"string"},{"description":"Hierarchy level (0-5) indicating depth within category tree structure.","name":"level","nullable":false,"type":"int"},{"description":"Dot-separated path of this category within the complete hierarchy.","name":"level_path","nullable":false,"type":"string"},{"description":"Timestamp when content category was first created.","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when content category was last modified.","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["is_active"]},{"fieldNames":["sort_order"]},{"fieldNames":["level"]},{"fieldNames":["parent_id"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["slug"],"unique":true},{"fieldNames":["parent_id","name"],"unique":true}]},{"description":"Standardized report reason definitions used across all communities for consistent content moderation and user reporting workflows.","foreignFields":[],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}],"material":false,"name":"reddit_community_report_reasons","plainFields":[{"description":"Unique code identifier for this report reason used in APIs and logic.","name":"reason_code","nullable":false,"type":"string"},{"description":"The display title shown to users when selecting report reasons.","name":"title","nullable":false,"type":"string"},{"description":"Detailed explanation of when to use this report reason.","name":"description","nullable":true,"type":"string"},{"description":"The category this reason belongs to (spam, harassment, policy_violation, etc).","name":"category","nullable":false,"type":"string"},{"description":"Severity rating (1-5) used for priority sorting in moderation queues.","name":"severity_level","nullable":false,"type":"int"},{"description":"Whether this report reason is active and available for users.","name":"is_active","nullable":false,"type":"boolean"},{"description":"Whether content reported with this reason should be auto-hidden and queued.","name":"is_auto_approved","nullable":false,"type":"boolean"},{"description":"Whether selecting this reason requires users to provide additional context.","name":"requires_explanation","nullable":false,"type":"boolean"},{"description":"Minimum number of characters required for the explanation when required.","name":"minimum_explanation_length","nullable":true,"type":"int"},{"description":"Number of reports before auto-escalating to admin review (null means no auto escalation).","name":"escalation_threshold","nullable":true,"type":"int"},{"description":"Help text shown to reporters guiding their submission for this reason.","name":"help_text","nullable":true,"type":"string"},{"description":"Sample content showing what this reason is appropriate for reporting.","name":"example_text","nullable":true,"type":"string"},{"description":"The position this reason should appear in when shown to users.","name":"sort_order","nullable":false,"type":"int"},{"description":"Timestamp when this report reason was created.","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when this report reason was last updated.","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["category"]},{"fieldNames":["severity_level"]},{"fieldNames":["is_active"]},{"fieldNames":["sort_order"]},{"fieldNames":["escalation_threshold"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["reason_code"],"unique":true},{"fieldNames":["category","title"],"unique":true}]},{"description":"Comprehensive audit trail logging system that tracks all significant platform activities, configuration changes, user actions, and system events for compliance and debugging purposes.","foreignFields":[{"description":"User's {@link reddit_community_members.id} who performed the audited action.","name":"performed_by_id","nullable":true,"relation":{"mappingName":"reddit_community_audit_logs_of_performed_by_id","name":"performedBy","targetModel":"reddit_community_members"},"type":"uuid","unique":false},{"description":"User's {@link reddit_community_members.id} who was impacted by the audited action.","name":"impacted_user_id","nullable":true,"relation":{"mappingName":"reddit_community_audit_logs_of_impacted_user_id","name":"impactedUser","targetModel":"reddit_community_members"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"action_description"}],"material":false,"name":"reddit_community_audit_logs","plainFields":[{"description":"The type of action performed (create, update, delete, login, logout, ban).","name":"action_type","nullable":false,"type":"string"},{"description":"The platform entity affected (user, community, post, comment, vote, admin).","name":"entity_type","nullable":false,"type":"string"},{"description":"The ID of the specific entity that was modified or affected.","name":"entity_id","nullable":true,"type":"uuid"},{"description":"Human-readable description of the specific action that was performed.","name":"action_description","nullable":false,"type":"string"},{"description":"JSON string containing previous state of modified fields before change.","name":"previous_values","nullable":true,"type":"string"},{"description":"JSON string containing new state of modified fields after change.","name":"new_values","nullable":true,"type":"string"},{"description":"Severity level (1-5) for filtering and prioritizing audit entries.","name":"severity_level","nullable":false,"type":"int"},{"description":"IP address associated with the user action for security tracking.","name":"ip_address","nullable":true,"type":"uri"},{"description":"User agent string from the browser or client application.","name":"user_agent","nullable":true,"type":"string"},{"description":"Session ID linking this audit entry to user authentication context.","name":"session_id","nullable":true,"type":"string"},{"description":"Whether the action completed (succeeded, failed, partially_completed).","name":"action_status","nullable":false,"type":"string"},{"description":"If status is failed, contains the error details or failure reason.","name":"error_message","nullable":true,"type":"string"},{"description":"JSON metadata with additional context fields for specific audit types.","name":"metadata","nullable":true,"type":"string"},{"description":"The exact timestamp when this audit action was performed.","name":"timestamp","nullable":false,"type":"datetime"},{"description":"Audit log entry creation timestamp.","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["action_type"]},{"fieldNames":["entity_type","entity_id"]},{"fieldNames":["performed_by_id"]},{"fieldNames":["timestamp"]},{"fieldNames":["severity_level"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"snapshot","uniqueIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"reddit_community_guest_profiles","description":"Guest user profiles for non-authenticated browsing with limited platform access. Guest accounts enable content viewing and community discovery without requiring registration, providing seamless entry into the platform ecosystem.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"guest_alias","type":"string","description":"Anonymous display name for guest browsing sessions","nullable":true},{"name":"session_id","type":"string","description":"Unique session identifier for tracking guest activity","nullable":false},{"name":"last_ip_address","type":"string","description":"Most recent IP address used by the guest","nullable":true},{"name":"device_info","type":"string","description":"Browser and device metadata for session management","nullable":true},{"name":"browsing_preferences","type":"string","description":"JSON-encoded preferences for content filtering and display","nullable":true},{"name":"total_views","type":"int","description":"Total number of posts and comments viewed during guest session","nullable":false},{"name":"is_active","type":"boolean","description":"Whether the guest session is currently active","nullable":false},{"name":"session_started_at","type":"datetime","description":"When the guest session was initiated","nullable":false},{"name":"session_expires_at","type":"datetime","description":"When the guest session will automatically expire","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true},{"fieldNames":["session_id"],"unique":true}],"plainIndexes":[{"fieldNames":["session_expires_at","is_active"]},{"fieldNames":["guest_alias"]}],"ginIndexes":[{"fieldName":"device_info"}]},{"description":"Registered member accounts with full platform access including authentication, karma tracking, and community participation privileges.","foreignFields":[{"description":"Target user's reddit_community_user_profiles.id","name":"user_id","nullable":false,"relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"type":"uuid","unique":true}],"ginIndexes":[],"material":false,"name":"reddit_community_members","plainFields":[{"description":"Unique username for member identification","name":"username","nullable":false,"type":"string"},{"description":"Email address for authentication and notifications","name":"email","nullable":false,"type":"string"},{"description":"Hashed password for secure authentication","name":"password_hash","nullable":false,"type":"string"},{"description":"Whether the member's email address has been verified","name":"email_verified","nullable":false,"type":"boolean"},{"description":"Current business workflow status (active, suspended, banned, pending)","name":"business_status","nullable":false,"type":"string"},{"description":"Total karma earned from post submissions","name":"post_karma","nullable":false,"type":"int"},{"description":"Total karma earned from comment contributions","name":"comment_karma","nullable":false,"type":"int"},{"description":"Combined karma score from all contributions","name":"total_karma","nullable":false,"type":"int"},{"description":"Current reputation level based on karma thresholds","name":"reputation_level","nullable":false,"type":"string"},{"description":"Whether the member can create new communities","name":"can_create_communities","nullable":false,"type":"boolean"},{"description":"Whether the member has moderator privileges in any community","name":"is_moderator","nullable":false,"type":"boolean"},{"description":"Soft delete timestamp for account deactivation","name":"deleted_at","nullable":true,"type":"datetime"},{"description":"Most recent login timestamp","name":"last_login_at","nullable":true,"type":"datetime"},{"description":"When the member joined the platform","name":"joined_at","nullable":false,"type":"datetime"},{"description":"Record creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Record last update timestamp","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["business_status","email_verified"]},{"fieldNames":["reputation_level"]},{"fieldNames":["last_login_at"]},{"fieldNames":["deleted_at"]},{"fieldNames":["user_id"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}]},{"name":"reddit_community_moderators","description":"Community moderator accounts with permissions for content management, user supervision, and community governance within specific communities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Moderator's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Moderated community's {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false},{"name":"member_id","type":"uuid","description":"Member account's {@link reddit_community_members.id}","relation":{"name":"member","targetModel":"reddit_community_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"moderator_level","type":"string","description":"Moderator hierarchy level: head, senior, or junior","nullable":false},{"name":"permissions_set","type":"string","description":"JSON-encoded object defining specific moderation permissions","nullable":false},{"name":"appointed_by","type":"uuid","description":"Member ID of the moderator who appointed this role","relation":{"name":"appointedBy","targetModel":"reddit_community_members"},"unique":false,"nullable":true},{"name":"moderation_count","type":"int","description":"Total number of moderation actions taken","nullable":false},{"name":"appointed_at","type":"datetime","description":"When the moderator role was assigned","nullable":false},{"name":"last_moderation_at","type":"datetime","description":"Most recent moderation action timestamp","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the moderator role is currently active","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp","nullable":false}],"uniqueIndexes":[{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id","is_active"]},{"fieldNames":["moderator_level"]},{"fieldNames":["last_moderation_at"]},{"fieldNames":["appointed_by"]}],"ginIndexes":[{"fieldName":"permissions_set"}]},{"name":"reddit_community_admin_accounts","description":"Platform administrator accounts with system-wide privileges for platform management, policy enforcement, and administrative oversight across all communities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Administrator's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"admin_level","type":"string","description":"Admin hierarchy level (super, senior, support)","nullable":false},{"name":"admin_role","type":"string","description":"Specific administrative role (platform, legal, community, technical)","nullable":false},{"name":"permissions_matrix","type":"string","description":"JSON-encoded object defining system-wide permissions","nullable":false},{"name":"appointed_at","type":"datetime","description":"When the administrator role was assigned","nullable":false},{"name":"last_admin_action_at","type":"datetime","description":"Most recent administrative action timestamp","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the admin account is currently active","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["admin_level","is_active"]},{"fieldNames":["admin_role"]},{"fieldNames":["last_admin_action_at"]},{"fieldNames":["is_active"]}],"ginIndexes":[{"fieldName":"permissions_matrix"}]},{"description":"Core user profile information serving as the public identity interface with display customization and verification status.","foreignFields":[{"description":"Parent user profile reference","name":"user_id","nullable":false,"relation":{"name":"parentUser","targetModel":"reddit_community_user_profiles","mappingName":"recursive"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_user_profiles","plainFields":[{"description":"User's public display name shown in communities and posts","name":"display_name","nullable":false,"type":"string"},{"description":"Brief user biography or description visible in profile","name":"bio","nullable":true,"type":"string"},{"description":"User's public location information","name":"location","nullable":true,"type":"string"},{"description":"User's personal website URL","name":"website_url","nullable":true,"type":"uri"},{"description":"User's Reddit profile URL","name":"reddit_url","nullable":true,"type":"uri"},{"description":"User's Twitter profile URL","name":"twitter_url","nullable":true,"type":"uri"},{"description":"Whether user's email and identity are verified","name":"is_verified","nullable":false,"type":"boolean"},{"description":"Date when user was verified","name":"verification_date","nullable":true,"type":"datetime"},{"description":"Soft delete timestamp for profile deactivation","name":"deleted_at","nullable":true,"type":"datetime"},{"description":"Record creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Record last update timestamp","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["display_name"]},{"fieldNames":["is_verified"]},{"fieldNames":["deleted_at"]},{"fieldNames":["created_at"]},{"fieldNames":["user_id"]}],"primaryField":{"description":"Primary Key","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"description":"Core content posts that users create within communities, supporting multiple content types including text, links, and images with comprehensive editing capabilities and version control. Enhanced with proper soft delete handling and improved moderation status tracking.","foreignFields":[{"description":"Author's reddit_community_members.id","name":"reddit_community_member_id","nullable":false,"relation":{"name":"author","targetModel":"reddit_community_members"},"type":"uuid","unique":false},{"description":"Belonged community's reddit_community_communities.id","name":"reddit_community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_posts","plainFields":[{"description":"URL-friendly identifier for the post, unique within the community","name":"slug","nullable":false,"type":"string"},{"description":"Type of post: text, link, image, video, poll, or collection","name":"type","nullable":false,"type":"string"},{"description":"Publication status: draft, published, scheduled, or archived","name":"status","nullable":false,"type":"string"},{"description":"Visibility level: public, community_only, members_only, or private","name":"visibility","nullable":false,"type":"string"},{"description":"Current moderation status: pending, approved, flagged, hidden, removed, or deleted","name":"moderation_status","nullable":false,"type":"string"},{"description":"Calculated score based on upvotes minus downvotes","name":"score","nullable":false,"type":"int"},{"description":"Whether the post is pinned to the top of the community feed","name":"is_pinned","nullable":true,"type":"boolean"},{"description":"Whether comments are allowed on this post","name":"allow_comments","nullable":false,"type":"boolean"},{"description":"Whether voting is enabled for this post","name":"allow_voting","nullable":false,"type":"boolean"},{"description":"Total number of comments on this post","name":"comment_count","nullable":false,"type":"int"},{"description":"Timestamp when the post was created","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when the post was last modified","name":"updated_at","nullable":false,"type":"datetime"},{"description":"Timestamp when the post was soft deleted","name":"deleted_at","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["reddit_community_member_id","created_at"]},{"fieldNames":["reddit_community_id","created_at"]},{"fieldNames":["type","status","visibility"]},{"fieldNames":["moderation_status","score","created_at"]},{"fieldNames":["score","is_pinned"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["reddit_community_id","slug"],"unique":true}]},{"description":"Historical snapshots capturing post content states at specific points in time, enabling rollback capabilities and content history tracking for version control.","foreignFields":[{"description":"Original post's {@link reddit_community_posts.id}","name":"reddit_community_posts_id","nullable":false,"relation":{"name":"post","targetModel":"reddit_community_posts"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}],"material":false,"name":"reddit_community_post_snapshots","plainFields":[{"description":"Snapshot of the post title at this point in time.","name":"title","nullable":false,"type":"string"},{"description":"Snapshot of the post body/content at this point in time.","name":"body","nullable":true,"type":"string"},{"description":"Snapshot of the linked URL for link posts.","name":"link_url","nullable":true,"type":"uri"},{"description":"JSON metadata for post content including image URLs, embedded media, or structured data.","name":"content_metadata","nullable":true,"type":"string"},{"description":"Optional reason provided by the editor for this snapshot.","name":"edit_reason","nullable":true,"type":"string"},{"description":"Timestamp when this snapshot was created.","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["reddit_community_posts_id","created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"snapshot","uniqueIndexes":[]},{"description":"Individual units within multi-part posts, enabling structured content like series, albums, or step-by-step guides with proper sequencing and organization.","foreignFields":[{"description":"Parent post's {@link reddit_community_posts.id}","name":"reddit_community_posts_id","nullable":false,"relation":{"name":"post","targetModel":"reddit_community_posts"},"type":"uuid","unique":false},{"description":"Parent unit for nested hierarchy {@link reddit_community_post_units.id}","name":"parent_reddit_community_post_unit_id","nullable":true,"relation":{"name":"parentUnit","targetModel":"reddit_community_post_units","mappingName":"recursive"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content_summary"}],"material":false,"name":"reddit_community_post_units","plainFields":[{"description":"Display order of this unit within the post.","name":"sequence_order","nullable":false,"type":"int"},{"description":"Type of unit: text, image, video, link, poll, or embedded.","name":"type","nullable":false,"type":"string"},{"description":"Title for this specific unit.","name":"title","nullable":false,"type":"string"},{"description":"Brief summary or description of the unit content.","name":"content_summary","nullable":true,"type":"string"},{"description":"JSON data containing unit-specific content, URLs, or media references.","name":"content_data","nullable":true,"type":"string"},{"description":"Whether this unit must be completed or viewed.","name":"is_required","nullable":false,"type":"boolean"},{"description":"Timestamp when this unit was created.","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when this unit was last updated.","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["reddit_community_posts_id","type"]},{"fieldNames":["parent_reddit_community_post_unit_id","created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["reddit_community_posts_id","sequence_order"],"unique":true}]},{"description":"Configuration options for interactive post units, enabling features like poll choices, quiz answers, or interactive elements within multi-part content.","foreignFields":[{"description":"Parent unit's {@link reddit_community_post_units.id}","name":"reddit_community_post_units_id","nullable":false,"relation":{"name":"unit","targetModel":"reddit_community_post_units"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"option_label"}],"material":false,"name":"reddit_community_post_unit_options","plainFields":[{"description":"Identifier for this option within the unit.","name":"option_key","nullable":false,"type":"string"},{"description":"Display label for this option.","name":"option_label","nullable":false,"type":"string"},{"description":"JSON data containing option configuration, values, or metadata.","name":"option_data","nullable":true,"type":"string"},{"description":"Display order of this option within the unit.","name":"sequence_order","nullable":false,"type":"int"},{"description":"Whether this option is correct (for quizzes).","name":"is_correct","nullable":true,"type":"boolean"},{"description":"Timestamp when this option was created.","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["reddit_community_post_units_id","sequence_order"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["reddit_community_post_units_id","option_key"],"unique":true}]},{"name":"reddit_community_comments","description":"Individual comment entities with nested reply support up to 6 levels deep. Contains text content, author information, vote statistics, and hierarchical positioning for threaded discussions. Fixed unique constraint reference issue.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_community_post_id","type":"uuid","description":"Target model's reddit_community_posts.id","relation":{"name":"post","targetModel":"reddit_community_posts"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Parent comment's reddit_community_comments.id for nested replies","relation":{"name":"parent","targetModel":"reddit_community_comments","mappingName":"recursive"},"unique":false,"nullable":true},{"name":"reddit_community_member_id","type":"uuid","description":"Target model's reddit_community_members.id","relation":{"name":"author","targetModel":"reddit_community_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"Comment text content up to 10,000 characters with full markdown support","nullable":false},{"name":"depth","type":"int","description":"Nesting depth level from 1-6 indicating reply chain position","nullable":false},{"name":"upvotes","type":"int","description":"Number of upvotes received for this comment","nullable":false},{"name":"downvotes","type":"int","description":"Number of downvotes received for this comment","nullable":false},{"name":"is_deleted","type":"boolean","description":"Whether the comment has been soft-deleted by author","nullable":false},{"name":"is_moderator_removed","type":"boolean","description":"Whether the comment was removed by moderators","nullable":false},{"name":"is_hidden","type":"boolean","description":"Whether the comment is hidden due to low score or moderation","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when comment was first created","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when comment content was last edited","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when comment was soft-deleted if applicable","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_community_post_id","created_at"]},{"fieldNames":["reddit_community_member_id","created_at"]},{"fieldNames":["parent_id","depth"]},{"fieldNames":["created_at"]},{"fieldNames":["is_deleted"]},{"fieldNames":["is_moderator_removed"]},{"fieldNames":["is_hidden","created_at"]}],"ginIndexes":[{"fieldName":"content"}]}]},{"filename":"schema-04-communities.prisma","namespace":"Communities","models":[{"description":"Community (subreddit) entities that serve as the primary organizational units for content and discussions. Communities can be public, restricted, or private, and support custom themes, rules, and member management with comprehensive moderation and analytics capabilities.","foreignFields":[{"description":"Creator user's {@link reddit_community_user_profiles.id}","name":"creator_id","nullable":false,"relation":{"name":"creator","targetModel":"reddit_community_user_profiles"},"type":"uuid","unique":false},{"description":"Primary category for community discovery {@link reddit_community_content_categories.id}","name":"primary_category_id","nullable":false,"relation":{"name":"primaryCategory","targetModel":"reddit_community_content_categories"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"description"}],"material":false,"name":"reddit_community_communities","plainFields":[{"description":"Unique community name (3-21 characters, alphanumeric and underscores only)","name":"name","nullable":false,"type":"string"},{"description":"Display title of the community","name":"title","nullable":false,"type":"string"},{"description":"Community description and purpose","name":"description","nullable":true,"type":"string"},{"description":"Community access type: public, restricted, or private","name":"community_type","nullable":false,"type":"string"},{"description":"Current operational status: active, archived, suspended, under_review","name":"business_status","nullable":false,"type":"string"},{"description":"Whether community contains NSFW content requiring age verification","name":"nsfw","nullable":false,"type":"boolean"},{"description":"Current number of community members","name":"member_count","nullable":false,"type":"int"},{"description":"Total number of posts in the community","name":"post_count","nullable":false,"type":"int"},{"description":"Community creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Last modification timestamp","name":"updated_at","nullable":false,"type":"datetime"},{"description":"Soft deletion timestamp for community removal","name":"deleted_at","nullable":true,"type":"datetime"},{"description":"URL of community header image","name":"header_image","nullable":true,"type":"uri"},{"description":"Primary color for community theme","name":"banner_color","nullable":true,"type":"string"}],"plainIndexes":[{"fieldNames":["primary_category_id","member_count"]},{"fieldNames":["creator_id"]},{"fieldNames":["business_status","created_at"]},{"fieldNames":["deleted_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["name"],"unique":true}]},{"description":"User subscriptions to communities with join/leave functionality, notification preferences, and subscription metadata for feed personalization.","foreignFields":[{"description":"Subscribed community's {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false},{"description":"Subscribing user's {@link reddit_community_members.id}","name":"member_id","nullable":false,"relation":{"name":"member","targetModel":"reddit_community_members"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_communities_subscriptions","plainFields":[{"description":"Timestamp when user joined the community","name":"joined_at","nullable":false,"type":"datetime"},{"description":"Whether user wants notifications for community activity","name":"notification_enabled","nullable":false,"type":"boolean"},{"description":"Whether subscription is visible in user's public profile","name":"show_in_profile","nullable":false,"type":"boolean"},{"description":"Type of subscription: regular, premium, or founder","name":"subscription_type","nullable":false,"type":"string"},{"description":"Last time user visited this community","name":"last_visit","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["member_id","joined_at"]},{"fieldNames":["community_id","notification_enabled"]},{"fieldNames":["last_visit"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["community_id","member_id"],"unique":true}]},{"description":"Moderators assigned to communities with hierarchical permissions (head, senior, junior) and granular control over community management functions.","foreignFields":[{"description":"Moderated community's {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false},{"description":"Moderator user's {@link reddit_community_members.id}","name":"member_id","nullable":false,"relation":{"name":"member","targetModel":"reddit_community_members","mappingName":"reddit_community_community_moderators_of_member_id"},"type":"uuid","unique":false},{"description":"Member who appointed this moderator {@link reddit_community_members.id}","name":"appointed_by_id","nullable":false,"relation":{"name":"appointedBy","targetModel":"reddit_community_members","mappingName":"reddit_community_community_moderators_of_appointed_by_id"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_community_moderators","plainFields":[{"description":"Moderator hierarchy level: head, senior, or junior","name":"moderator_level","nullable":false,"type":"string"},{"description":"When this user became a moderator","name":"appointed_at","nullable":false,"type":"datetime"},{"description":"Permission to remove posts and comments","name":"can_remove_content","nullable":false,"type":"boolean"},{"description":"Permission to ban community members","name":"can_ban_users","nullable":false,"type":"boolean"},{"description":"Permission to modify community settings","name":"can_edit_settings","nullable":false,"type":"boolean"},{"description":"Permission to appoint other moderators","name":"can_add_moderators","nullable":false,"type":"boolean"},{"description":"Whether moderator is currently active","name":"is_active","nullable":false,"type":"boolean"}],"plainIndexes":[{"fieldNames":["community_id","moderator_level"]},{"fieldNames":["member_id"]},{"fieldNames":["appointed_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["community_id","member_id"],"unique":true}]},{"description":"Community classification system for discovery and categorization, supporting multiple categories per community and hierarchical topic organization for better content discovery.","foreignFields":[{"description":"Classified community's {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false},{"description":"Classification category {@link reddit_community_content_categories.id}","name":"category_id","nullable":false,"relation":{"name":"category","targetModel":"reddit_community_content_categories"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_community_classifications","plainFields":[{"description":"Whether this is the primary classification for the community","name":"is_primary","nullable":false,"type":"boolean"},{"description":"When classification was assigned","name":"assigned_at","nullable":false,"type":"datetime"},{"description":"Classification weight for sorting and recommendation","name":"weight","nullable":false,"type":"int"}],"plainIndexes":[{"fieldNames":["category_id","is_primary"]},{"fieldNames":["community_id","weight"]},{"fieldNames":["assigned_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["community_id","category_id"],"unique":true}]},{"description":"Democratic governance polls for community decisions including rule changes, moderator appointments, and policy modifications with configurable voting periods and participation requirements.","foreignFields":[{"description":"Community holding the poll {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false},{"description":"Member who created the poll {@link reddit_community_members.id}","name":"creator_id","nullable":false,"relation":{"name":"creator","targetModel":"reddit_community_members"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}],"material":false,"name":"reddit_community_community_polls","plainFields":[{"description":"Poll question or title","name":"title","nullable":false,"type":"string"},{"description":"Detailed explanation of the poll and its implications","name":"description","nullable":true,"type":"string"},{"description":"Type of poll: rule_change, moderator_addition, policy_modification, or general","name":"poll_type","nullable":false,"type":"string"},{"description":"When voting period begins","name":"starts_at","nullable":false,"type":"datetime"},{"description":"When voting period ends","name":"ends_at","nullable":false,"type":"datetime"},{"description":"Minimum number of votes required for valid poll","name":"min_participation","nullable":false,"type":"int"},{"description":"Percentage of votes needed for approval (0.0-1.0)","name":"approval_threshold","nullable":false,"type":"double"},{"description":"Current status: draft, active, completed, or cancelled","name":"status","nullable":false,"type":"string"},{"description":"Poll creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Whether results have been published to community","name":"results_published","nullable":false,"type":"boolean"}],"plainIndexes":[{"fieldNames":["community_id","status"]},{"fieldNames":["starts_at"]},{"fieldNames":["ends_at"]},{"fieldNames":["creator_id"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["community_id","title"],"unique":true}]},{"description":"Individual vote records for posts and comments within communities, serving as real-time mechanism for content ranking and community engagement metrics. Provides integration between community content and voting system with audit trail capabilities.","foreignFields":[{"description":"Community content being voted on {@link reddit_community_posts.id}","name":"community_post_id","nullable":false,"relation":{"name":"communityPost","targetModel":"reddit_community_posts"},"type":"uuid","unique":false},{"description":"Community member casting vote {@link reddit_community_members.id}","name":"community_member_id","nullable":false,"relation":{"name":"communityVoter","targetModel":"reddit_community_members"},"type":"uuid","unique":false},{"description":"Target community {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"targetCommunity","targetModel":"reddit_community_communities"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_community_votes","plainFields":[{"description":"Type of vote: upvote or downvote","name":"vote_type","nullable":false,"type":"string"},{"description":"Weighted score multiplier based on voter reputation ","name":"vote_weight","nullable":false,"type":"double"},{"description":"Whether this vote affects community popularity calculations","name":"affects_community_score","nullable":false,"type":"boolean"},{"description":"Confidence score for anti-manipulation detection","name":"confidence_score","nullable":false,"type":"double"},{"description":"IP address of voter for fraud detection","name":"ip_address","nullable":false,"type":"string"},{"description":"Timestamp when vote was cast","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["community_id","created_at"]},{"fieldNames":["vote_type","confidence_score"]},{"fieldNames":["affects_community_score"],"unique":true}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["community_member_id","community_post_id"],"unique":true}]}]},{"filename":"schema-05-voting-karma.prisma","namespace":"VotingKarma","models":[{"description":"Individual vote records for posts and comments, serving as the core mechanism for content curation and karma calculation. Tracks vote type, timing, and voter information for real-time ranking updates and anti-manipulation analysis.","foreignFields":[{"description":"Voter's {@link reddit_community_members.id}","name":"user_id","nullable":false,"relation":{"name":"voter","targetModel":"reddit_community_members"},"type":"uuid","unique":false},{"description":"Target content's ID (post or comment)","name":"content_id","nullable":false,"relation":{"name":"content","targetModel":"reddit_community_posts"},"type":"uuid","unique":false},{"description":"Target comment's {@link reddit_community_comments.id} if voting on comment","name":"content_comment_id","nullable":true,"relation":{"name":"comment","targetModel":"reddit_community_comments"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_votes","plainFields":[{"description":"Type of content voted on: 'post' or 'comment'","name":"content_type","nullable":false,"type":"string"},{"description":"Type of vote: 'upvote' or 'downvote'","name":"vote_type","nullable":false,"type":"string"},{"description":"Calculated weight of vote based on voter reputation and anti-manipulation factors","name":"vote_weight","nullable":false,"type":"double"},{"description":"IP address of voter for fraud detection","name":"ip_address","nullable":false,"type":"string"},{"description":"Browser user agent for fraud detection","name":"user_agent","nullable":true,"type":"string"},{"description":"Timestamp when vote was cast","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when vote was modified","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["created_at","vote_type"]},{"fieldNames":["content_type","vote_weight"]},{"fieldNames":["user_id","created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"primary","uniqueIndexes":[{"fieldNames":["user_id","content_id","content_type"],"unique":true}]},{"description":"Complete audit trail of karma changes for users, tracking every karma-modifying event including votes received, votes reverted, and system adjustments. Essential for reputation calculations and dispute resolution.","foreignFields":[{"description":"User whose karma changed {@link reddit_community_members.id}","name":"user_id","nullable":false,"relation":{"name":"user","targetModel":"reddit_community_members"},"type":"uuid","unique":false},{"description":"Source content ID that caused karma change","name":"source_id","nullable":true,"relation":{"name":"source","targetModel":"reddit_community_posts"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_karma_history","plainFields":[{"description":"Type of karma: 'post' or 'comment'","name":"karma_type","nullable":false,"type":"string"},{"description":"Amount of karma change (positive or negative)","name":"change_amount","nullable":false,"type":"int"},{"description":"Reason for karma change: 'upvote','downvote','revert','adjustment'","name":"change_reason","nullable":false,"type":"string"},{"description":"Type of source content: 'post','comment','award','manual'","name":"source_type","nullable":false,"type":"string"},{"description":"Community where karma was earned {@link reddit_community_communities.id}","name":"community_id","nullable":true,"type":"uuid"},{"description":"User karma balance before this change","name":"previous_balance","nullable":false,"type":"int"},{"description":"User karma balance after this change","name":"new_balance","nullable":false,"type":"int"},{"description":"Timestamp when karma change occurred","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["karma_type","change_reason"]},{"fieldNames":["community_id","created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"snapshot","uniqueIndexes":[]},{"description":"Point-in-time snapshots of voting patterns and content scores for historical analysis and algorithm calibration. Captures vote distributions, engagement metrics, and ranking factors used in content sorting algorithms.","foreignFields":[{"description":"Content being snapshotted (post or comment)","name":"content_id","nullable":false,"relation":{"name":"content","targetModel":"reddit_community_posts"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_vote_snapshots","plainFields":[{"description":"Type of content: 'post' or 'comment'","name":"content_type","nullable":false,"type":"string"},{"description":"Community ID for context {@link reddit_community_communities.id}","name":"community_id","nullable":false,"type":"uuid"},{"description":"Type of snapshot: 'ranking','trending','algorithm','manual'","name":"snapshot_type","nullable":false,"type":"string"},{"description":"Number of upvotes at snapshot time","name":"upvote_count","nullable":false,"type":"int"},{"description":"Number of downvotes at snapshot time","name":"downvote_count","nullable":false,"type":"int"},{"description":"Calculated net score (upvotes - downvotes)","name":"net_score","nullable":false,"type":"int"},{"description":"Controversy calculation: (upvotes+downvotes)/max(|net_score|,1)","name":"controversy_score","nullable":false,"type":"double"},{"description":"Hot algorithm score for content ranking","name":"hot_score","nullable":false,"type":"double"},{"description":"Number of comments at snapshot time","name":"comment_count","nullable":false,"type":"int"},{"description":"Engagement rate calculation","name":"engagement_rate","nullable":false,"type":"double"},{"description":"Votes per hour rate at snapshot time","name":"vote_velocity","nullable":false,"type":"double"},{"description":"Timestamp when snapshot was created","name":"created_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["community_id","snapshot_type"]},{"fieldNames":["hot_score","controversy_score"]},{"fieldNames":["vote_velocity","engagement_rate"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"snapshot","uniqueIndexes":[{"fieldNames":["content_id","snapshot_type","created_at"],"unique":true}]},{"description":"Defines reputation tiers and associated privileges based on karma thresholds. Controls access to advanced features, moderation capabilities, and platform recognition programs.","foreignFields":[],"ginIndexes":[],"material":false,"name":"reddit_community_reputation_levels","plainFields":[{"description":"Name of reputation level: 'New User','Regular','Active','Established','Veteran','Elite'","name":"level_name","nullable":false,"type":"string"},{"description":"Numeric order of level (1-6) for ranking purposes","name":"level_order","nullable":false,"type":"int"},{"description":"Minimum total karma required for this level","name":"min_karma","nullable":false,"type":"int"},{"description":"Maximum karma for this level (null for highest level)","name":"max_karma","nullable":true,"type":"int"},{"description":"JSON array of unlocked privileges for this level","name":"privileges","nullable":true,"type":"string"},{"description":"Hex color code for level badge display","name":"badge_color","nullable":false,"type":"string"},{"description":"URI to badge icon for visual representation","name":"badge_icon","nullable":true,"type":"uri"},{"description":"Description of reputation level and benefits","name":"description","nullable":false,"type":"string"},{"description":"Whether this reputation level is currently active","name":"is_active","nullable":false,"type":"boolean"},{"description":"When reputation level was defined","name":"created_at","nullable":false,"type":"datetime"},{"description":"When reputation level was last modified","name":"updated_at","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["min_karma","max_karma"]},{"fieldNames":["is_active","level_order"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["level_order"],"unique":true},{"fieldNames":["level_name"],"unique":true}]}]},{"filename":"schema-06-comments.prisma","namespace":"Comments","models":[{"description":"Centralized moderation queue for comment content review with SLA tracking and processing status for all moderation actions across communities.","foreignFields":[{"description":"Associated report's {@link reddit_community_content_reports.id}","name":"content_report_id","nullable":true,"relation":{"name":"contentReport","targetModel":"reddit_community_content_reports"},"type":"uuid","unique":false},{"description":"Assigned moderator's {@link reddit_community_moderators.id}","name":"assigned_moderator_id","nullable":false,"relation":{"name":"assignedModerator","targetModel":"reddit_community_moderators"},"type":"uuid","unique":false},{"description":"Community where content exists {@link reddit_community_communities.id}","name":"community_id","nullable":false,"relation":{"name":"community","targetModel":"reddit_community_communities"},"type":"uuid","unique":false}],"ginIndexes":[{"fieldName":"review_notes"}],"material":false,"name":"reddit_community_comment_moderation_queue","plainFields":[{"description":"Target model's {@link reddit_community_comments.id}","name":"reddit_community_comment_id","nullable":false,"relation":{"name":"comment","targetModel":"reddit_community_comments"},"type":"uuid","unique":true},{"description":"Queue type (report_review, automated_flag, dmca_notice, legal_review, appeal_review)","name":"queue_type","nullable":false,"type":"string"},{"description":"SLA deadline based on violation severity (4h/24h/72h)","name":"sla_deadline","nullable":false,"type":"datetime"},{"description":"Priority classification (high, medium, low) for processing order","name":"priority_level","nullable":false,"type":"string"},{"description":"Status (pending, in_review, approved, rejected, deferred, escalated)","name":"status","nullable":false,"type":"string"},{"description":"Moderator notes and decision rationale","name":"review_notes","nullable":true,"type":"string"},{"description":"Action taken (no_action, warning, content_removal, user_restriction, user_ban, community_ban)","name":"enforcement_action","nullable":true,"type":"string"},{"description":"Status pending/reviewed/approved/removed/appealed","name":"moderation_status","nullable":false,"type":"string"},{"description":"Priority level high/medium/low for review urgency","name":"priority","nullable":false,"type":"string"},{"description":"Detailed explanation of reported violation","name":"reason_detail","nullable":true,"type":"string"},{"description":"Whether item was escalated to platform administrators","name":"escalated_to_admin","nullable":false,"type":"boolean"},{"description":"When item entered queue","name":"created_at","nullable":false,"type":"datetime"},{"description":"When moderator began review","name":"started_review_at","nullable":true,"type":"datetime"},{"description":"When resolution was completed","name":"resolved_at","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["priority_level","status"]},{"fieldNames":["assigned_moderator_id","status"]},{"fieldNames":["community_id","priority_level","created_at"]},{"fieldNames":["status","priority_level","created_at"]}],"primaryField":{"description":"Primary Key","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[]},{"description":"Voting records for individual comments tracking upvotes and downvotes with user identification and timestamps. Enables anti-manipulation measures and karma calculations.","foreignFields":[{"description":"Target model's {@link reddit_community_comments.id}","name":"reddit_community_comment_id","nullable":false,"relation":{"name":"comment","targetModel":"reddit_community_comments"},"type":"uuid","unique":false},{"description":"Target model's {@link reddit_community_members.id}","name":"reddit_community_member_id","nullable":false,"relation":{"name":"member","targetModel":"reddit_community_members"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_comment_votes","plainFields":[{"description":"Type of vote either 'upvote' or 'downvote'","name":"vote_type","nullable":false,"type":"string"},{"description":"Karma weight multiplier based on user reputation","name":"weight","nullable":false,"type":"double"},{"description":"Timestamp when the vote was cast","name":"created_at","nullable":false,"type":"datetime"},{"description":"IP address of voting user for anti-manipulation","name":"ip_address","nullable":true,"type":"string"},{"description":"Browser user agent string for fraud detection","name":"user_agent","nullable":true,"type":"string"}],"plainIndexes":[{"fieldNames":["reddit_community_comment_id"]},{"fieldNames":["reddit_community_member_id"]},{"fieldNames":["created_at"]},{"fieldNames":["vote_type","created_at"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["reddit_community_comment_id","reddit_community_member_id"],"unique":true}]},{"description":"Thread structure management for nested comment discussions supporting up to 6 levels deep. Maintains parent-child relationships and thread state for display optimization.","foreignFields":[{"description":"Target model's {@link reddit_community_posts.id}","name":"reddit_community_post_id","nullable":false,"relation":{"name":"post","targetModel":"reddit_community_posts"},"type":"uuid","unique":true}],"ginIndexes":[],"material":false,"name":"reddit_community_comment_threads","plainFields":[{"description":"Maximum nesting depth achieved in this thread","name":"max_depth_reached","nullable":false,"type":"int"},{"description":"Total number of comments in the thread","name":"comment_count","nullable":false,"type":"int"},{"description":"Number of comments hidden due to low scores","name":"hidden_count","nullable":false,"type":"int"},{"description":"Default sorting mode best/new/controversial/old","name":"sort_default","nullable":false,"type":"string"},{"description":"Whether new comments are disabled for this thread","name":"is_locked","nullable":false,"type":"boolean"},{"description":"Timestamp when thread was first created","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp of last structural change","name":"updated_at","nullable":false,"type":"datetime"},{"description":"Timestamp of most recent comment activity","name":"last_activity","nullable":false,"type":"datetime"}],"plainIndexes":[{"fieldNames":["last_activity"]},{"fieldNames":["is_locked"]},{"fieldNames":["comment_count"]},{"fieldNames":["max_depth_reached"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[{"fieldNames":["reddit_community_post_id"],"unique":true}]}]},{"filename":"schema-07-subscriptions.prisma","namespace":"Subscriptions","models":[{"name":"reddit_community_user_subscriptions","description":"User subscription relationships with communities including subscription status, preferences, and engagement tracking. Supports subscription management, feed customization, and community relationship analytics.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Target community's {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"subscription_status","type":"string","description":"Active subscription status: active, inactive, pending_approval","nullable":false},{"name":"subscription_type","type":"string","description":"Type of subscription: standard, priority, muted","nullable":false},{"name":"joined_at","type":"datetime","description":"Timestamp when user joined the community","nullable":false},{"name":"last_engagement_at","type":"datetime","description":"Last time user engaged with community content","nullable":true},{"name":"engagement_score","type":"double","description":"Calculated engagement level based on interactions","nullable":false},{"name":"notification_frequency","type":"string","description":"Preferred notification frequency: real_time, daily_digest, weekly_digest, none","nullable":false},{"name":"is_primary_subscription","type":"boolean","description":"Whether this is a primary subscription for feed priority","nullable":false},{"name":"subscription_priority","type":"int","description":"Priority level for feed sorting (higher = more important)","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Record update timestamp","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for subscription history","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id","subscription_status"]},{"fieldNames":["community_id","subscription_status"]},{"fieldNames":["last_engagement_at","subscription_status"]},{"fieldNames":["subscription_priority","last_engagement_at"]}],"ginIndexes":[]},{"name":"reddit_community_subscription_preferences","description":"Individual subscription preferences and settings for personalized user experience. Controls notification settings, display preferences, and feed customization options for each subscription relationship.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"subscription_id","type":"uuid","description":"Target subscription's {@link reddit_community_user_subscriptions.id}","relation":{"name":"subscription","targetModel":"reddit_community_user_subscriptions"},"unique":true,"nullable":false}],"plainFields":[{"name":"feed_priority","type":"int","description":"Feed priority weight (0-100) for algorithm calculations","nullable":false},{"name":"show_nsfw_content","type":"boolean","description":"Whether to show NSFW content from this community","nullable":false},{"name":"show_spoiler_content","type":"boolean","description":"Whether to show spoiler content from this community","nullable":false},{"name":"content_type_filter","type":"string","description":"Content type filter: all, text_only, link_only, media_only","nullable":false},{"name":"sorting_preference","type":"string","description":"Default sorting: hot, new, top, controversial, rising","nullable":false},{"name":"time_filter","type":"string","description":"Time filter preference: today, week, month, year, all_time","nullable":false},{"name":"auto_refresh_enabled","type":"boolean","description":"Whether feed auto-refresh is enabled","nullable":false},{"name":"desktop_notifications","type":"boolean","description":"Whether desktop notifications are enabled","nullable":false},{"name":"push_notifications","type":"boolean","description":"Whether push notifications are enabled","nullable":false},{"name":"email_notifications","type":"boolean","description":"Whether email notifications are enabled","nullable":false},{"name":"notification_keywords","type":"string","description":"Keywords for smart notification filtering (comma-separated)","nullable":true},{"name":"mute_community","type":"boolean","description":"Temporarily mute all notifications from this community","nullable":false},{"name":"mute_until","type":"datetime","description":"End date for community muting","nullable":true},{"name":"created_at","type":"datetime","description":"Preference creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Preference update timestamp","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["subscription_id","feed_priority"]},{"fieldNames":["subscription_id","sorting_preference","time_filter"]}],"ginIndexes":[]},{"name":"reddit_community_feed_algorithms","description":"Feed algorithm configurations for personalized content delivery. Defines sorting weights, recommendation factors, and machine learning model parameters for individual users.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"algorithm_type","type":"string","description":"Algorithm type: collaborative, content_based, popularity_based, social_graph","nullable":false},{"name":"collaborative_weight","type":"double","description":"Weight for collaborative filtering (0.0-1.0)","nullable":false},{"name":"content_similarity_weight","type":"double","description":"Content similarity weight in recommendations","nullable":false},{"name":"popularity_weight","type":"double","description":"Popularity score weight for trend content","nullable":false},{"name":"social_graph_weight","type":"double","description":"Social network relationship weight","nullable":false},{"name":"recency_weight","type":"double","description":"Content age weight (newer = higher)","nullable":false},{"name":"engagement_weight","type":"double","description":"Engagement rate weight (comments + votes)","nullable":false},{"name":"user_interest_weight","type":"double","description":"User-specific interest category weights","nullable":false},{"name":"diversity_factor","type":"double","description":"Ensures recommendation diversity (0.1-1.0)","nullable":false},{"name":"freshness_threshold","type":"int","description":"Maximum content age in hours for fresh feed","nullable":false},{"name":"recommendation_pool_size","type":"int","description":"Number of candidate items per recommendation batch","nullable":false},{"name":"personalization_strength","type":"double","description":"Overall personalization intensity (0.0-1.0)","nullable":false},{"name":"learning_rate","type":"double","description":"ML model learning rate for adaptive algorithms","nullable":false},{"name":"cold_start_strategy","type":"string","description":"Strategy for new users (popular, diverse, social)","nullable":false},{"name":"model_version","type":"string","description":"Current ML model version identifier","nullable":false},{"name":"last_trained_at","type":"datetime","description":"Last time algorithm was retrained","nullable":true},{"name":"created_at","type":"datetime","description":"Algorithm creation timestamp","nullable":false},{"name":"updated_at","type":"datetime","description":"Algorithm update timestamp","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","algorithm_type"]},{"fieldNames":["created_at","algorithm_type"]}],"ginIndexes":[]},{"name":"reddit_community_content_discoveries","description":"Content discovery history and recommendations including viewed content, clicked suggestions, and discovery effectiveness metrics. Tracks user behavior for improving recommendation algorithms and feed personalization.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":false,"nullable":false},{"name":"content_id","type":"uuid","description":"Content item ID (post, comment, or community ID)","relation":{"name":"contentItem","targetModel":"reddit_community_posts"},"unique":false,"nullable":false},{"name":"source_community_id","type":"uuid","description":"Community where discovery originated {@link reddit_community_communities.id}","relation":{"name":"sourceCommunity","targetModel":"reddit_community_communities"},"unique":false,"nullable":true},{"name":"recommendation_source_id","type":"uuid","description":"Feed algorithm or recommendation source {@link reddit_community_feed_algorithms.id}","relation":{"name":"recommendationSource","targetModel":"reddit_community_feed_algorithms"},"unique":false,"nullable":true}],"plainFields":[{"name":"content_type","type":"string","description":"Type of content: post, comment, community, user","nullable":false},{"name":"discovery_method","type":"string","description":"Discovery source: feed, search, recommendation, trending, social","nullable":false},{"name":"discovery_context","type":"string","description":"Context of discovery: hot_list, new_list, recommendation_card, search_result","nullable":false},{"name":"user_interaction","type":"string","description":"User's interaction: viewed, clicked, upvoted, downvoted, commented","nullable":false},{"name":"interaction_duration","type":"int","description":"Duration of interaction in seconds","nullable":true},{"name":"recommendation_confidence","type":"double","description":"Algorithm confidence score when recommended","nullable":true},{"name":"user_satisfaction","type":"boolean","description":"Whether user appeared satisfied (clicked/upvoted)","nullable":true},{"name":"is_organic_discovery","type":"boolean","description":"Non-recommendation natural discovery","nullable":false},{"name":"rank_position","type":"int","description":"Position in feed or recommendation list","nullable":true},{"name":"time_to_interaction","type":"int","description":"Time between display and interaction in seconds","nullable":true},{"name":"discovered_at","type":"datetime","description":"Discovery timestamp for analytics","nullable":false},{"name":"interaction_at","type":"datetime","description":"User interaction timestamp if applicable","nullable":true},{"name":"session_id","type":"string","description":"User session identifier for correlation","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","content_id","discovery_method","discovered_at"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id","discovered_at"]},{"fieldNames":["content_id","user_interaction"]},{"fieldNames":["discovery_method","user_satisfaction"]},{"fieldNames":["recommendation_source_id","user_interaction"]}],"ginIndexes":[]},{"name":"mv_reddit_community_user_subscription_analytics","description":"Materialized view for subscription analytics including engagement scores, subscription patterns, and feed optimization metrics. Supports real-time feed personalization and subscription recommendation systems.","material":true,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link reddit_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Target community's {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"total_subscriptions","type":"int","description":"Total number of user subscriptions","nullable":false},{"name":"active_subscriptions","type":"int","description":"Number of currently active subscriptions","nullable":false},{"name":"avg_engagement_score","type":"double","description":"Average engagement score across all communities","nullable":false},{"name":"total_posts_viewed","type":"int","description":"Total posts viewed across all subscriptions","nullable":false},{"name":"total_comments_made","type":"int","description":"Total comments posted across all communities","nullable":false},{"name":"total_votes_cast","type":"int","description":"Total votes cast across all communities","nullable":false},{"name":"last_subscription_added_at","type":"datetime","description":"Timestamp of most recent subscription","nullable":true},{"name":"feed_refresh_frequency","type":"int","description":"Average feed refresh frequency in minutes","nullable":false},{"name":"recommendation_click_rate","type":"double","description":"Rate at which recommendations are clicked","nullable":false},{"name":"subscription_churn_rate","type":"double","description":"Rate of subscription cancellations","nullable":false},{"name":"most_active_category","type":"string","description":"Most engaged content category","nullable":true},{"name":"calculated_at","type":"datetime","description":"Analytics calculation timestamp","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["avg_engagement_score","active_subscriptions"]},{"fieldNames":["subscription_churn_rate","total_subscriptions"]},{"fieldNames":["last_subscription_added_at"]}],"ginIndexes":[]},{"name":"mv_reddit_community_popular_subscriptions","description":"Materialized view tracking most popular community subscriptions with engagement metrics. Used for trending community discovery and popular feed generation based on subscription patterns and engagement quality.","material":true,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Target community's {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":true,"nullable":false}],"plainFields":[{"name":"total_subscribers","type":"int","description":"Total number of subscribed users","nullable":false},{"name":"active_subscribers","type":"int","description":"Number of active subscribers in past 30 days","nullable":false},{"name":"new_subscribers_last_week","type":"int","description":"Number of new subscribers last 7 days","nullable":false},{"name":"engagement_score","type":"double","description":"Community engagement score based on interactions","nullable":false},{"name":"avg_subscription_duration","type":"double","description":"Average user subscription duration in days","nullable":false},{"name":"subscription_growth_rate","type":"double","description":"Growth percentage over past month","nullable":false},{"name":"churn_rate","type":"double","description":"User unsubscribing rate percentage","nullable":false},{"name":"top_discovery_methods","type":"string","description":"Top sources of community discovery","nullable":true},{"name":"peak_engagement_hour","type":"int","description":"Peak hour for community engagement","nullable":true},{"name":"content_quality_score","type":"double","description":"Calculated content quality score","nullable":false},{"name":"trending_score","type":"double","description":"Current trending score for discovery rankings","nullable":false},{"name":"calculated_at","type":"datetime","description":"Analytics calculation timestamp","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["engagement_score","active_subscribers"]},{"fieldNames":["subscription_growth_rate","total_subscribers"]},{"fieldNames":["trending_score","active_subscribers"]}],"ginIndexes":[]}]},{"filename":"schema-08-moderation.prisma","namespace":"Moderation","models":[{"name":"reddit_community_content_reports","description":"User-submitted reports for content violations across posts, comments, and user profiles with priority scoring and anonymous reporter protection.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_id","type":"uuid","description":"Reporter user's {@link reddit_community_members.id}","relation":{"name":"reporter","targetModel":"reddit_community_members","mappingName":"reddit_community_content_reports_of_reporter_id"},"unique":false,"nullable":false},{"name":"content_author_id","type":"uuid","description":"Author of reported content's {@link reddit_community_members.id}","relation":{"name":"contentAuthor","targetModel":"reddit_community_members","mappingName":"reddit_community_content_reports_of_content_author_id"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Reported post's {@link reddit_community_posts.id} if applicable","relation":{"name":"post","targetModel":"reddit_community_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Reported comment's {@link reddit_community_comments.id} if applicable","relation":{"name":"comment","targetModel":"reddit_community_comments"},"unique":false,"nullable":true},{"name":"community_id","type":"uuid","description":"Community where violation occurred {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"report_category","type":"string","description":"Violation category (harassment_hate, spam_misleading, violence_threats, inappropriate_nsfw, copyright_infringement, personal_info, impersonation, community_rule)","nullable":false},{"name":"severity_level","type":"string","description":"Severity classification (level_1_minor, level_2_moderate, level_3_serious, level_4_severe) for progressive discipline","nullable":false},{"name":"violation_type","type":"string","description":"Specific violation type within the main category","nullable":false},{"name":"description","type":"string","description":"Detailed explanation of violation with minimum 30 characters for community rule violations","nullable":false},{"name":"priority_score","type":"int","description":"Automated priority score (0-100) for queue ordering based on severity and user patterns","nullable":false},{"name":"auto_escalation_triggered","type":"boolean","description":"Whether automatic escalation occurred due to pattern or threshold","nullable":false},{"name":"status","type":"string","description":"Report status (submitted, under_review, resolved_approved, resolved_rejected, escalated)","nullable":false},{"name":"escalation_reason","type":"string","description":"Reason for escalating to administrators if applicable","nullable":true},{"name":"resolution_notes","type":"string","description":"Internal notes from moderator review and resolution","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when report was submitted","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last status update","nullable":false},{"name":"resolved_at","type":"datetime","description":"Timestamp when resolution was finalized","nullable":true}],"plainIndexes":[{"fieldNames":["priority_score","created_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["community_id","status"]},{"fieldNames":["content_author_id","created_at"]},{"fieldNames":["reporter_id","community_id"]},{"fieldNames":["severity_level","auto_escalation_triggered"]}],"ginIndexes":[{"fieldName":"description"}],"uniqueIndexes":[{"fieldNames":["reporter_id","post_id","comment_id"],"unique":true}]},{"name":"reddit_community_moderation_queue","description":"Centralized moderation queue for content review workflows with SLA tracking and processing status for all moderation actions across communities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"content_report_id","type":"uuid","description":"Associated report's {@link reddit_community_content_reports.id}","relation":{"name":"contentReport","targetModel":"reddit_community_content_reports"},"unique":false,"nullable":true},{"name":"assigned_moderator_id","type":"uuid","description":"Assigned moderator's {@link reddit_community_moderators.id}","relation":{"name":"assignedModerator","targetModel":"reddit_community_moderators"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where content exists {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"queue_type","type":"string","description":"Queue type (report_review, automated_flag, dmca_notice, legal_review, appeal_review)","nullable":false},{"name":"sla_deadline","type":"datetime","description":"SLA deadline based on violation severity (4h/24h/72h)","nullable":false},{"name":"priority_level","type":"string","description":"Priority classification (high, medium, low) for processing order","nullable":false},{"name":"enforcement_level","type":"int","description":"Enforcement level (1-4) for progressive discipline framework","nullable":false},{"name":"review_notes","type":"string","description":"Moderator notes and decision rationale","nullable":true},{"name":"status","type":"string","description":"Queue status (pending, in_review, approved, rejected, deferred, escalated)","nullable":false},{"name":"enforcement_action","type":"string","description":"Action taken (no_action, warning, content_removal, user_restriction, user_ban, community_ban)","nullable":true},{"name":"enforcement_duration","type":"int","description":"Duration in days for temporary restrictions (null for permanent or warning)","nullable":true},{"name":"escalated_to_admin","type":"boolean","description":"Whether item was escalated to platform administrators","nullable":false},{"name":"appeal_deadline","type":"datetime","description":"Deadline for user to submit appeal if applicable","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when item entered queue","nullable":false},{"name":"started_review_at","type":"datetime","description":"When moderator began review","nullable":true},{"name":"resolved_at","type":"datetime","description":"When resolution was completed","nullable":true}],"plainIndexes":[{"fieldNames":["sla_deadline","status"]},{"fieldNames":["assigned_moderator_id","status"]},{"fieldNames":["community_id","priority_level","created_at"]},{"fieldNames":["status","priority_level","created_at"]},{"fieldNames":["enforcement_level"]},{"fieldNames":["appeal_deadline","status"]}],"ginIndexes":[{"fieldName":"review_notes"}],"uniqueIndexes":[{"fieldNames":["content_report_id","queue_type"],"unique":true}]},{"name":"reddit_community_violation_records","description":"Historical records of all policy violations and enforcement actions supporting progressive discipline through user behavior pattern tracking across communities and time periods.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Violating user's {@link reddit_community_members.id}","relation":{"name":"user","targetModel":"reddit_community_members"},"unique":false,"nullable":false},{"name":"moderator_id","type":"uuid","description":"Taking action moderator's {@link reddit_community_moderators.id}","relation":{"name":"moderator","targetModel":"reddit_community_moderators"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where violation occurred {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false},{"name":"related_post_id","type":"uuid","description":"Violating post's {@link reddit_community_posts.id} if applicable","relation":{"name":"relatedPost","targetModel":"reddit_community_posts"},"unique":false,"nullable":true},{"name":"related_comment_id","type":"uuid","description":"Violating comment's {@link reddit_community_comments.id} if applicable","relation":{"name":"relatedComment","targetModel":"reddit_community_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"violation_type","type":"string","description":"Type of violation (harassment, spam, community_rule, content_policy, dmca)","nullable":false},{"name":"severity_level","type":"string","description":"Severity classification (level_1_minor, level_2_moderate, level_3_serious, level_4_severe)","nullable":false},{"name":"enforcement_action","type":"string","description":"Action taken (warning, content_removal, posting_restriction, temporary_ban, permanent_ban)","nullable":false},{"name":"action_duration_days","type":"int","description":"Duration of restriction in days (null for warnings or permanent actions)","nullable":true},{"name":"policy_section","type":"string","description":"Specific platform policy or community rule violated","nullable":false},{"name":"violation_description","type":"string","description":"Detailed description of specific violation and evidence","nullable":false},{"name":"violating_content_evidence","type":"string","description":"JSON containing screenshots/content excerpts as evidence","nullable":true},{"name":"user_response","type":"string","description":"User's explanation or appeal submission","nullable":true},{"name":"appeal_status","type":"string","description":"Appeal status (none_pending, under_appeal, appeal_approved, appeal_denied)","nullable":false},{"name":"cross_community_pattern","type":"boolean","description":"Whether part of cross-community violation pattern","nullable":false},{"name":"expires_at","type":"datetime","description":"When temporary restrictions expire (null for permanent actions)","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when violation was recorded","nullable":false},{"name":"resolved_at","type":"datetime","description":"When resolution was completed including appeals","nullable":true},{"name":"moderator_justification","type":"string","description":"Required justification from moderator taking action","nullable":false}],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["severity_level","created_at"]},{"fieldNames":["appeal_status","created_at"]},{"fieldNames":["expires_at","appeal_status"]},{"fieldNames":["community_id","severity_level"]},{"fieldNames":["cross_community_pattern","created_at"]}],"ginIndexes":[{"fieldName":"violation_description"}],"uniqueIndexes":[{"fieldNames":["user_id","community_id","violation_type","created_at"],"unique":true}]},{"name":"reddit_community_automated_moderation","description":"Automated content moderation results from AI/ML systems tracking content screening confidence scores, automated actions, and model performance for machine learning moderation workflows.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"content_post_id","type":"uuid","description":"Screened post's {@link reddit_community_posts.id} if applicable","relation":{"name":"contentPost","targetModel":"reddit_community_posts"},"unique":false,"nullable":true},{"name":"content_comment_id","type":"uuid","description":"Screened comment's {@link reddit_community_comments.id} if applicable","relation":{"name":"contentComment","targetModel":"reddit_community_comments"},"unique":false,"nullable":true},{"name":"community_id","type":"uuid","description":"Community where content was posted {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"screening_type","type":"string","description":"Type of automated screening (text_analysis, image_recognition, link_validation, pattern_detection)","nullable":false},{"name":"confidence_score","type":"double","description":"ML model confidence score (0.0-1.0) for violation prediction","nullable":false},{"name":"violation_flags","type":"string","description":"Detected violation types (harassment, spam, nsfw, copyright, impersonation)","nullable":false},{"name":"automated_action","type":"string","description":"Automated action taken (immediate_removal, priority_review, standard_queue, no_action)","nullable":false},{"name":"action_threshold","type":"double","description":"Confidence threshold that triggered automated action","nullable":false},{"name":"model_version","type":"string","description":"Version identifier of ML model used for screening","nullable":false},{"name":"processing_time_ms","type":"int","description":"Processing time in milliseconds for performance monitoring","nullable":false},{"name":"false_positive_flag","type":"boolean","description":"Whether human review identified this as false positive","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when automated screening completed","nullable":false},{"name":"human_review_required","type":"boolean","description":"Whether human review is required based on confidence level","nullable":false},{"name":"cross_reference_id","type":"string","description":"Reference to human review when escalated","nullable":true},{"name":"model_accuracy_feedback","type":"string","description":"JSON containing model performance feedback for training improvement","nullable":true}],"plainIndexes":[{"fieldNames":["confidence_score","created_at"]},{"fieldNames":["automated_action","confidence_score"]},{"fieldNames":["community_id","screening_type"]},{"fieldNames":["model_version","created_at"]},{"fieldNames":["false_positive_flag","created_at"]},{"fieldNames":["screening_type","human_review_required"]}],"ginIndexes":[{"fieldName":"violation_flags"}],"uniqueIndexes":[]},{"name":"reddit_community_user_bans","description":"User-level enforcement actions including temporary and permanent bans from individual communities, with appeal processes and rehabilitation tracking for progressive discipline.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Banned user's {@link reddit_community_members.id}","relation":{"name":"bannedUser","targetModel":"reddit_community_members"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where ban is applied {@link reddit_community_communities.id}","relation":{"name":"community","targetModel":"reddit_community_communities"},"unique":false,"nullable":false},{"name":"moderator_id","type":"uuid","description":"Banning moderator's {@link reddit_community_moderators.id}","relation":{"name":"bannedBy","targetModel":"reddit_community_moderators"},"unique":false,"nullable":false}],"plainFields":[{"name":"ban_type","type":"string","description":"Ban type: temporary, permanent, community_wide","nullable":false},{"name":"ban_duration_days","type":"int","description":"Duration in days (null for permanent bans)","nullable":true},{"name":"ban_level","type":"int","description":"Enforcement level (1-4) based on violation severity","nullable":false},{"name":"reason_category","type":"string","description":"Violation category that triggered the ban","nullable":false},{"name":"reason_details","type":"string","description":"Detailed explanation of ban reason with evidence","nullable":true},{"name":"ban_effective_at","type":"datetime","description":"When the ban becomes active","nullable":false},{"name":"ban_expires_at","type":"datetime","description":"When temporary ban expires (null for permanent)","nullable":true},{"name":"is_appealable","type":"boolean","description":"Whether user can appeal this ban","nullable":false},{"name":"appeal_deadline","type":"datetime","description":"Deadline for submitting appeal","nullable":true},{"name":"previous_violation_count","type":"int","description":"Number of prior violations used for progressive discipline","nullable":false},{"name":"rehabilitation_required","type":"boolean","description":"Whether user must complete rehabilitation before appeal","nullable":false},{"name":"created_at","type":"datetime","description":"When ban was imposed","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp","nullable":false}],"plainIndexes":[{"fieldNames":["community_id","ban_expires_at"]},{"fieldNames":["user_id","ban_effective_at"]},{"fieldNames":["ban_type","ban_level"]},{"fieldNames":["moderator_id","created_at"]},{"fieldNames":["is_appealable","ban_expires_at"]}],"ginIndexes":[],"uniqueIndexes":[{"fieldNames":["user_id","community_id","ban_effective_at"],"unique":true}]},{"name":"reddit_community_appeals","description":"User-submitted appeals for moderation decisions with multi-level review hierarchy, transparent appeal tracking, and fair resolution process for all enforcement actions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"violation_record_id","type":"uuid","description":"Original violation being appealed {@link reddit_community_violation_records.id}","relation":{"name":"violationRecord","targetModel":"reddit_community_violation_records"},"unique":false,"nullable":false},{"name":"appellant_user_id","type":"uuid","description":"User submitting appeal {@link reddit_community_members.id}","relation":{"name":"appellant","targetModel":"reddit_community_members"},"unique":false,"nullable":false},{"name":"assigned_reviewer_id","type":"uuid","description":"Reviewer handling appeal {@link reddit_community_moderators.id}","relation":{"name":"assignedReviewer","targetModel":"reddit_community_moderators"},"unique":false,"nullable":true}],"plainFields":[{"name":"appeal_reason","type":"string","description":"Detailed explanation of why violation decision should be overturned","nullable":false},{"name":"new_evidence_provided","type":"string","description":"JSON containing new evidence, screenshots, or supporting documentation","nullable":true},{"name":"appeal_status","type":"string","description":"Status: submitted, under_review, approved, rejected, escalated","nullable":false},{"name":"review_level","type":"string","description":"Review level: initial, senior_moderator, community_council, admin_panel","nullable":false},{"name":"assigned_reviewer_notes","type":"string","description":"Review notes from assigned reviewer","nullable":true},{"name":"review_decision","type":"string","description":"Reviewer decision: uphold_original, modify_action, overturn_completely","nullable":true},{"name":"decision_explanation","type":"string","description":"Detailed explanation of appeal decision","nullable":true},{"name":"final_action_taken","type":"string","description":"Action resulting from appeal decision","nullable":true},{"name":"deadline_for_response","type":"datetime","description":"Deadline for user to respond to reviewer questions","nullable":true},{"name":"deadline_for_decision","type":"datetime","description":"Deadline for reviewer to provide decision","nullable":false},{"name":"escalated_reason","type":"string","description":"Reason for escalating to higher review level","nullable":true},{"name":"appeal_fees_paid","type":"boolean","description":"Whether any appeal fees were paid or waived","nullable":false},{"name":"created_at","type":"datetime","description":"When appeal was submitted","nullable":false},{"name":"review_started_at","type":"datetime","description":"When review process began","nullable":true},{"name":"resolved_at","type":"datetime","description":"When final decision was made","nullable":true},{"name":"finalized_at","type":"datetime","description":"When decision was implemented and finalized","nullable":true}],"plainIndexes":[{"fieldNames":["appellant_user_id","created_at"]},{"fieldNames":["assigned_reviewer_id","appeal_status"]},{"fieldNames":["violation_record_id","appeal_status"]},{"fieldNames":["deadline_for_decision","appeal_status"]},{"fieldNames":["review_level","appeal_status"]}],"ginIndexes":[{"fieldName":"appeal_reason"}],"uniqueIndexes":[]}]},{"filename":"schema-09-profiles.prisma","namespace":"Profiles","models":[{"description":"Individual tracking of user activities across the platform including posts, comments, votes, and community interactions used for analytics, personalization, and reputation calculation while maintaining historical audit trails","foreignFields":[{"description":"User profile associated with activity","name":"user_profile_id","nullable":false,"relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_user_activities","plainFields":[{"description":"Type of activity: post_creation, comment_creation, vote, subscription, profile_update, login, logout","name":"activity_type","nullable":false,"type":"string"},{"description":"Client information from user agent","name":"user_agent","nullable":true,"type":"string"},{"description":"IP address of the user for security tracking","name":"ip_address","nullable":false,"type":"string"},{"description":"Duration of activity in seconds","name":"activity_duration_seconds","nullable":true,"type":"int"},{"description":"Whether activity completed successfully","name":"is_completed","nullable":false,"type":"boolean"},{"description":"Karma change associated with this activity","name":"karma_delta","nullable":false,"type":"int"},{"description":"Platform-wide reputation score calculated from this activity","name":"platform_reputation_score","nullable":false,"type":"double"},{"description":"UUID of current session","name":"session_id","nullable":true,"type":"string"},{"description":"Optional community ID where activity occurred","name":"community_id","nullable":true,"type":"uuid"},{"description":"Optional post ID where activity occurred","name":"post_id","nullable":true,"type":"uuid"},{"description":"Optional comment ID where activity occurred","name":"comment_id","nullable":true,"type":"uuid"},{"description":"Related vote ID if activity involved voting","name":"vote_id","nullable":true,"type":"uuid"},{"description":"When the activity occurred","name":"event_timestamp","nullable":false,"type":"datetime"},{"description":"When this activity record was created","name":"created_at","nullable":false,"type":"datetime"},{"description":"Timestamp when activity was soft deleted","name":"deleted_at","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["user_profile_id","event_timestamp"]},{"fieldNames":["activity_type"]},{"fieldNames":["event_timestamp"]},{"fieldNames":["session_id"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"snapshot","uniqueIndexes":[]},{"description":"Comprehensive privacy controls for user data visibility, sharing preferences, and access levels across the platform ecosystem with GDPR compliance","foreignFields":[{"description":"User profile whose privacy is being controlled","name":"user_profile_id","nullable":false,"relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_user_privacy_settings","plainFields":[{"description":"Profile visibility level: public, followers_only, or private","name":"profile_visibility","nullable":false,"type":"string"},{"description":"Whether to display karma scores publicly","name":"show_karma","nullable":false,"type":"boolean"},{"description":"Who can view profile information","name":"profile_view_permission","nullable":false,"type":"string"},{"description":"Whether to show activity history publicly","name":"show_activities","nullable":false,"type":"boolean"},{"description":"Whether other users can follow this profile","name":"allow_followers","nullable":false,"type":"boolean"},{"description":"Whether profile appears in search results","name":"search_visibility","nullable":false,"type":"boolean"},{"description":"Email notification preferences","name":"email_notifications","nullable":false,"type":"boolean"},{"description":"Push notification preferences","name":"push_notifications","nullable":false,"type":"boolean"},{"description":"Browser notification preferences","name":"browser_notifications","nullable":false,"type":"boolean"},{"description":"Notification frequency: immediate, daily_digest, weekly_digest, none","name":"notification_frequency","nullable":false,"type":"string"},{"description":"Who can send direct messages","name":"message_privacy_level","nullable":false,"type":"string"},{"description":"Whether to accept contact from non-followers","name":"contact_preferences","nullable":false,"type":"string"},{"description":"JSON array of blocked user IDs","name":"blocked_users","nullable":true,"type":"string"},{"description":"JSON array of blocked community IDs","name":"blocked_communities","nullable":true,"type":"string"},{"description":"Whether user can export their personal data","name":"data_export_enabled","nullable":false,"type":"boolean"},{"description":"Whether to display location information publicly","name":"location_sharing","nullable":false,"type":"boolean"},{"description":"Record creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Last update timestamp","name":"updated_at","nullable":false,"type":"datetime"},{"description":"Timestamp when privacy settings were soft deleted","name":"deleted_at","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["user_profile_id"]},{"fieldNames":["profile_visibility"]},{"fieldNames":["message_privacy_level"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[]},{"description":"User customization preferences for profile appearance, themes, and personalization including color schemes, layout preferences, and display options","foreignFields":[{"description":"User profile whose settings are being customized","name":"user_profile_id","nullable":false,"relation":{"name":"userProfile","targetModel":"reddit_community_user_profiles"},"type":"uuid","unique":false}],"ginIndexes":[],"material":false,"name":"reddit_community_profile_customizations","plainFields":[{"description":"Preferred theme: light, dark, or auto","name":"theme_preference","nullable":false,"type":"string"},{"description":"Custom color scheme for profile elements as hex values","name":"color_scheme","nullable":true,"type":"string"},{"description":"Preferred font size: small, medium, or large","name":"font_size","nullable":false,"type":"string"},{"description":"Content density preference: compact, normal, or comfortable","name":"layout_density","nullable":false,"type":"string"},{"description":"Whether to highlight usernames in community posts","name":"display_name_highlight","nullable":false,"type":"boolean"},{"description":"Whether to display navigation breadcrumbs in profile","name":"show_breadcrumbs","nullable":false,"type":"boolean"},{"description":"Whether to display account creation date prominently","name":"show_join_date","nullable":false,"type":"boolean"},{"description":"Whether to show total comment count on profile","name":"show_comment_count","nullable":false,"type":"boolean"},{"description":"Whether to display detailed karma breakdown on profile","name":"show_karma_breakdown","nullable":false,"type":"boolean"},{"description":"JSON array of profile sections to show/hide by default","name":"sections_visibility","nullable":true,"type":"string"},{"description":"Whether to prioritize personalized feed suggestions","name":"priority_feed_suggestions","nullable":false,"type":"boolean"},{"description":"Whether to show community badges on profile","name":"show_community_badges","nullable":false,"type":"boolean"},{"description":"Whether to automatically mark notifications as read","name":"auto_mark_read","nullable":false,"type":"boolean"},{"description":"Record creation timestamp","name":"created_at","nullable":false,"type":"datetime"},{"description":"Last update timestamp","name":"updated_at","nullable":false,"type":"datetime"},{"description":"Timestamp when customization was soft deleted","name":"deleted_at","nullable":true,"type":"datetime"}],"plainIndexes":[{"fieldNames":["user_profile_id"]},{"fieldNames":["theme_preference"]}],"primaryField":{"description":"Primary Key.","name":"id","type":"uuid"},"stance":"subsidiary","uniqueIndexes":[]}]}]}