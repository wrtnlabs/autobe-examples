import { tags } from "typia";

import { IETodoRole } from "./IETodoRole";
import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Complete member user profile containing authentication details, activity
 * history, and security information. Represents a full todo_member record with
 * all associated data for comprehensive user account management.
 *
 * This profile contains complete member information including authentication
 * tokens, security settings, and account activity. It enables administrators
 * and the member themselves to view comprehensive account status while
 * maintaining appropriate privacy boundaries for sensitive information.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoMember = {
  /** Unique member identifier from todo_member.id */
  id: string & tags.Format<"uuid">;

  /** Member email address for authentication and communication */
  email: string & tags.Format<"email">;

  /** User role designation for access control (member/admin) */
  role: string;

  /** Timestamp of most recent successful login activity */
  last_login_at?: (string & tags.Format<"date-time">) | undefined;

  /** Count of consecutive failed login attempts for security monitoring */
  login_attempts?: (number & tags.Type<"int32">) | undefined;

  /** Account lockout end timestamp after excessive failed attempts */
  locked_until?: (string & tags.Format<"date-time">) | undefined;

  /** Account creation timestamp as immutable registration record */
  created_at: string & tags.Format<"date-time">;

  /** Most recent account modification timestamp for audit trails */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoMember {
  /**
   * Member user authorization response with authentication tokens and account
   * details.
   *
   * Represents successful member login, registration, or token refresh,
   * providing complete authentication and account information.
   */
  export type IAuthorized = {
    /** Unique member identifier for account reference */
    id: string & tags.Format<"uuid">;

    /** Member email address for account identification */
    email: string & tags.Format<"email">;

    /** Member role determining access permissions */
    role: IETodoRole;

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /** Timestamp of the member's most recent successful login */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Member search and filtering request parameters for paginated member
   * listing.
   *
   * Supports basic member discovery with email-based search and standard
   * pagination controls for efficient user management.
   */
  export type IRequest = {
    /** Page number for paginated member results */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Number of members per page (default: 100, max: 100) */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Optional search text to filter members by email or identifier */
    search?: string | undefined;
  };

  /**
   * Member profile update data supporting partial field modification.
   *
   * Allows selective updates to member profile fields while preserving
   * existing values for unspecified properties, enabling efficient
   * incremental profile management.
   */
  export type IUpdate = {
    /** Optional updated email address for account identification */
    email?: (string & tags.Format<"email">) | null | undefined;

    /** Optional role update for permission changes */
    role?: IETodoRole | null | undefined;
  };

  /**
   * Simplified member summary optimized for paginated member lists.
   *
   * Provides essential member information for user discovery and account
   * management interfaces while maintaining privacy by excluding sensitive
   * authentication data.
   */
  export type ISummary = {
    /** Unique member identifier for list reference */
    id: string & tags.Format<"uuid">;

    /** Member email address for identification in member lists */
    email: string & tags.Format<"email">;

    /** Member role indicating access level and permissions */
    role: IETodoRole;

    /** ISO 8601 account creation timestamp for member sorting */
    created_at: string & tags.Format<"date-time">;

    /** ISO 8601 last login timestamp for activity tracking */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
