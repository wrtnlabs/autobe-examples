{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"reddit_clone_configurations","description":"System configuration settings for the Reddit-like community platform. Stores platform-wide settings, feature flags, and system parameters that control platform behavior.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"Configuration key identifier.","nullable":false},{"name":"value","type":"string","description":"Configuration value.","nullable":false},{"name":"description","type":"string","description":"Description of the configuration setting.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the configuration was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the configuration was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"reddit_clone_guest","description":"Guest users who can view public content and register/login. This table stores temporary session information for unauthenticated users.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":true,"description":"Email address for registration (optional for guests)."},{"name":"password_hash","type":"string","nullable":true,"description":"Password hash for login (optional for guests)."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the guest session was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the guest session was last updated."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_member","description":"Authenticated members who can create content, vote, and manage their profile. This table stores all regular user accounts.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address for authentication."},{"name":"password_hash","type":"string","nullable":false,"description":"Secure password hash for login."},{"name":"username","type":"string","nullable":false,"description":"Unique username for display."},{"name":"karma","type":"int","nullable":false,"description":"User's karma score based on votes."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the account was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the account was last updated."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_moderator","description":"Users with moderation privileges in specific communities. This table stores moderator-specific information.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","relation":{"name":"member","targetModel":"reddit_clone_member"},"unique":false,"nullable":false,"description":"Reference to the member account. {@link reddit_clone_member.id}."},{"name":"community_id","type":"uuid","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false,"description":"Community where the user is a moderator. {@link reddit_clone_communities.id}."}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when moderator privileges were granted."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when moderator privileges were last updated."}],"uniqueIndexes":[{"fieldNames":["member_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_admin","description":"System administrators with full access to manage all users and communities. This table stores admin-specific information.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","relation":{"name":"member","targetModel":"reddit_clone_member"},"unique":false,"nullable":false,"description":"Reference to the member account. {@link reddit_clone_member.id}."}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when admin privileges were granted."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when admin privileges were last updated."}],"uniqueIndexes":[{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"reddit_clone_communities","description":"Core community entity representing subreddit-like communities where users can post content, subscribe, and interact. This table stores all community metadata and serves as the central hub for community operations.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"creator_id","type":"uuid","description":"The member who created this community. {@link reddit_clone_member.id}.","relation":{"name":"creator","targetModel":"reddit_clone_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Unique name of the community (e.g., 'programming', 'gaming').","nullable":false},{"name":"description","type":"string","description":"Detailed description of the community's purpose and topics.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the community was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the community was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the community was soft deleted, if applicable.","nullable":true},{"name":"is_nsfw","type":"boolean","description":"Flag indicating if the community contains adult content.","nullable":false},{"name":"member_count","type":"int","description":"Current number of subscribers to this community.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["creator_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"reddit_clone_community_subscriptions","description":"Junction table representing the many-to-many relationship between users and communities. Tracks which users are subscribed to which communities and manages subscription metadata.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"The user who is subscribed to the community. {@link reddit_clone_member.id}.","relation":{"name":"user","targetModel":"reddit_clone_member"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"The community being subscribed to. {@link reddit_clone_communities.id}.","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"subscribed_at","type":"datetime","description":"Timestamp when the user subscribed to the community.","nullable":false},{"name":"is_muted","type":"boolean","description":"Flag indicating if the user has muted notifications from this community.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id","subscribed_at"]},{"fieldNames":["community_id","subscribed_at"]}],"ginIndexes":[]}]},{"filename":"schema-04-content.prisma","namespace":"Content","models":[{"name":"reddit_clone_posts","description":"Represents user-created posts in the Reddit-like community platform. Posts are the primary content entities that users create, edit, and manage. Each post belongs to a community and has an author. Posts can be text, links, or images and support voting functionality.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"author_id","type":"uuid","description":"The author who created the post. {@link reddit_clone_member.id}.","relation":{"name":"author","targetModel":"reddit_clone_member"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"The community where the post was created. {@link reddit_clone_communities.id}.","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the post.","nullable":false},{"name":"content","type":"string","description":"The content of the post.","nullable":false},{"name":"content_type","type":"string","description":"The type of content (text, link, image).","nullable":false},{"name":"created_at","type":"datetime","description":"When the post was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the post was last updated.","nullable":false},{"name":"is_locked","type":"boolean","description":"Whether the post is locked (no new comments allowed).","nullable":false},{"name":"is_nsfw","type":"boolean","description":"Whether the post contains NSFW (Not Safe For Work) content.","nullable":false},{"name":"upvote_count","type":"int","description":"The number of upvotes the post has received.","nullable":false},{"name":"downvote_count","type":"int","description":"The number of downvotes the post has received.","nullable":false},{"name":"comment_count","type":"int","description":"The number of comments on the post.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["community_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"reddit_clone_comments","description":"Represents user comments on posts in the Reddit-like community platform. Comments are primary content entities that users create, edit, and manage. Each comment belongs to a post and has an author. Comments support nested replies and voting functionality.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"The post this comment belongs to. {@link reddit_clone_posts.id}.","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":false},{"name":"author_id","type":"uuid","description":"The author who created the comment. {@link reddit_clone_member.id}.","relation":{"name":"author","targetModel":"reddit_clone_member"},"unique":false,"nullable":false},{"name":"parent_comment_id","type":"uuid","description":"The parent comment ID for nested replies (null for top-level comments). {@link reddit_clone_comments.id}.","relation":{"name":"parent","targetModel":"reddit_clone_comments","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"The content of the comment.","nullable":false},{"name":"created_at","type":"datetime","description":"When the comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the comment was last updated.","nullable":false},{"name":"upvote_count","type":"int","description":"The number of upvotes the comment has received.","nullable":false},{"name":"downvote_count","type":"int","description":"The number of downvotes the comment has received.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id","created_at"]},{"fieldNames":["parent_comment_id"]}],"ginIndexes":[{"fieldName":"content"}]}]},{"filename":"schema-05-voting.prisma","namespace":"Voting","models":[{"name":"reddit_clone_post_votes","description":"Tracks user votes on posts in the Reddit-like community platform. This table records each user's vote (upvote or downvote) on specific posts, ensuring data integrity through composite primary keys and enforcing that users can only vote once per post. The table supports the core voting functionality and enables features like vote counting, user vote history, and content ranking.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who cast the vote. {@link reddit_clone_member.id}.","relation":{"name":"user","targetModel":"reddit_clone_member"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Post that received the vote. {@link reddit_clone_posts.id}.","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote (upvote or downvote).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["post_id","created_at"]},{"fieldNames":["user_id","created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_comment_votes","description":"Tracks user votes on comments in the Reddit-like community platform. This table records each user's vote (upvote or downvote) on specific comments, ensuring data integrity through composite primary keys and enforcing that users can only vote once per comment. The table supports nested comment voting and enables features like comment ranking, user vote history, and reputation systems.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who cast the vote. {@link reddit_clone_member.id}.","relation":{"name":"user","targetModel":"reddit_clone_member"},"unique":false,"nullable":false},{"name":"comment_id","type":"uuid","description":"Comment that received the vote. {@link reddit_clone_comments.id}.","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote (upvote or downvote).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["comment_id","created_at"]},{"fieldNames":["user_id","created_at"]}],"ginIndexes":[]}]}]}