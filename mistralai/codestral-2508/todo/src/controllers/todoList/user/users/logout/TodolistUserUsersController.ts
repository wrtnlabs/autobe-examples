import { Controller } from "@nestjs/common";
import { TypedRoute } from "@nestia/core";
import typia from "typia";
import { postTodoListUserUsersLogout } from "../../../../../providers/postTodoListUserUsersLogout";
import { UserAuth } from "../../../../../decorators/UserAuth";
import { UserPayload } from "../../../../../decorators/payload/UserPayload";

@Controller("/todoList/user/users/logout")
export class TodolistUserUsersController {
  /**
   * Log out the current user from the system.
   *
   * This operation allows a user to log out of the system. When executed, it
   * will invalidate the user's current session and clear any authentication
   * tokens associated with the user. This ensures that the user is no longer
   * authenticated and will need to log in again to access protected resources.
   * The operation is associated with the todo_list_users table in the Prisma
   * schema, which stores user information including authentication tokens.
   *
   * @param connection
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async logout(
    @UserAuth()
    user: UserPayload,
  ): Promise<void> {
    try {
      return await postTodoListUserUsersLogout({
        user,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
