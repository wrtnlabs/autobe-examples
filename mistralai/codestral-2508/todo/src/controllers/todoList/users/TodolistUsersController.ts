import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postTodoListUsers } from "../../../providers/postTodoListUsers";
import { postTodoListUsersLogin } from "../../../providers/postTodoListUsersLogin";

import { ITodoListUser } from "../../../api/structures/ITodoListUser";

@Controller("/todoList/users")
export class TodolistUsersController {
  /**
   * Create a new user account in the Todo list application. This operation
   * handles user registration by collecting essential information such as email
   * address and password. The system validates the provided information against
   * system requirements before creating the account. Upon successful
   * registration, the user is added to the todo_list_users table in the Prisma
   * schema, where their credentials and personal information are stored. This
   * operation is essential for enabling users to access the Todo list
   * application and manage their tasks.
   *
   * @param connection
   * @param body User registration information including email address and
   *   password
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: ITodoListUser.ICreate,
  ): Promise<ITodoListUser> {
    try {
      return await postTodoListUsers({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Authenticate a user in the Todo list application by verifying their
   * credentials. This operation checks the provided email address and password
   * against the stored information in the todo_list_users table. Upon
   * successful authentication, the operation generates an access token for the
   * user to access protected resources. This operation is essential for
   * enabling users to securely access their Todo list and manage their tasks.
   *
   * @param connection
   * @param body User login credentials including email address and password
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post("login")
  public async login(
    @TypedBody()
    body: ITodoListUser.ILogin,
  ): Promise<ITodoListUser.IAccessToken> {
    try {
      return await postTodoListUsersLogin({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
