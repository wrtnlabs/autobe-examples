[{"id":"0199e33b-946e-751e-af4d-4709deb3d8c5","type":"userMessage","contents":[{"type":"text","text":"I want to create a simple economic/political discussion board.\r\n\r\nSince I'm not familiar with programming, please write a requirements analysis report as you see fit."}],"created_at":"2025-10-14T14:59:16.718Z"},{"type":"analyze","id":"0199e341-4a3a-74b8-9637-d4c58b9265ae","instruction":"Focus on creating a simple economic/political discussion board with user registration and login functionality, discussion thread creation, and comment features. Prioritize user authentication with role-based permissions, and emphasize a clean, intuitive interface for easy navigation and content creation.","prefix":"economicPoliticalDiscussionBoard","roles":[{"name":"guest","description":"Unauthenticated users who can only view public content and register/login.","kind":"guest"},{"name":"member","description":"Authenticated users who can create and comment on discussion threads.","kind":"member"},{"name":"moderator","description":"Users with elevated permissions who can manage content and enforce community guidelines.","kind":"admin"},{"name":"admin","description":"System administrators with full access to manage users, content, and system settings.","kind":"admin"}],"files":[{"reason":"To provide an overview of the economic/political discussion board service, including its purpose, target audience, and key features.","filename":"00-toc.md","documentType":"service-overview","outline":["Service Vision","Target Audience","Key Features","User Roles","Technical Requirements"],"audience":"general","keyQuestions":["What problem does this service solve?","Who are the primary and secondary users?","What are the main competitive advantages?","How will we measure success?"],"detailLevel":"high-level overview","relatedDocuments":[],"constraints":["Must include a clear value proposition","Focus on user-friendly interface","Include measurable KPIs and success metrics"],"content":"# Functional Requirements for Economic/Political Discussion Board\n\n## User Authentication\n\n### Registration and Login\n\n- Users can register with email and password.\n- Users can log in with email and password.\n- Users can log out to end their session.\n- System maintains user sessions securely.\n- Users can verify their email address.\n- Users can reset forgotten passwords.\n- Users can change their password.\n- Users can revoke access from all devices.\n\n### Role-Based Permissions\n\n- **Guest**: Unauthenticated users who can only view public content and register/login.\n- **Member**: Authenticated users who can create and comment on discussion threads.\n- **Moderator**: Users with elevated permissions who can manage content and enforce community guidelines.\n- **Admin**: System administrators with full access to manage users, content, and system settings.\n\n### Password Recovery\n\n- Users can request a password reset link via email.\n- Password reset links expire after 24 hours.\n- Users can set a new password using the reset link.\n\n## Discussion Thread Creation\n\n### Thread Creation\n\n- Members can create new discussion threads.\n- Threads require a title and content.\n- Threads can be categorized (e.g., economics, politics, general).\n- Threads can be edited by the creator within 24 hours.\n- Threads can be deleted by the creator or moderators.\n\n### Thread Management\n\n- Threads can be pinned by moderators.\n- Threads can be locked by moderators to prevent new comments.\n- Threads can be moved to different categories by moderators.\n\n### Thread Categories\n\n- Categories include economics, politics, general, and others.\n- Categories can be created and managed by admins.\n\n## Commenting System\n\n### Comment Creation\n\n- Members can comment on discussion threads.\n- Comments require content.\n- Comments can be edited by the creator within 24 hours.\n- Comments can be deleted by the creator or moderators.\n\n### Comment Management\n\n- Comments can be flagged by users for moderator review.\n- Comments can be hidden by moderators.\n- Comments can be restored by moderators.\n\n### Comment Moderation\n\n- Moderators can review flagged comments.\n- Moderators can approve or reject flagged comments.\n- Moderators can delete inappropriate comments.\n\n## Content Moderation\n\n### Moderation Tools\n\n- Moderators can view reported content.\n- Moderators can take action on reported content (e.g., delete, warn, ban).\n- Moderators can view user activity logs.\n\n### Reporting System\n\n- Users can report inappropriate content.\n- Reports include a reason and description.\n- Reports are reviewed by moderators.\n\n### Enforcement of Community Guidelines\n\n- Community guidelines are outlined in the service overview.\n- Violations of guidelines result in warnings, bans, or account termination.\n\n## User Management\n\n### User Profiles\n\n- Users can view and edit their profiles.\n- Profiles include username, email, and bio.\n- Users can upload a profile picture.\n\n### User Roles and Permissions\n\n- Admins can assign roles to users.\n- Admins can revoke roles from users.\n- Admins can view and manage user roles and permissions.\n\n### User Activity Tracking\n\n- Admins can view user activity logs.\n- Admins can track user actions (e.g., thread creation, comments).\n- Admins can ban users for violating community guidelines.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To define the core features and user needs for the economic/political discussion board before moving on to detailed user flow documentation.","filename":"01-functional-requirements.md","documentType":"requirement","outline":["User Authentication","Discussion Thread Creation","Commenting System","Content Moderation","User Management"],"audience":"development team","keyQuestions":["What are the essential features for user engagement?","How will user authentication be implemented?","What are the requirements for discussion thread creation?","How will comments be managed and displayed?","What moderation tools are needed to maintain community guidelines?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md"],"constraints":["Must support 10,000 concurrent users","Must comply with GDPR","Must integrate with payment systems"],"content":"# Functional Requirements for Economic/Political Discussion Board\n\n## User Authentication\n\n### Registration and Login\n\n- Users can register with email and password.\n- Users can log in with email and password.\n- Users can log out to end their session.\n- System maintains user sessions securely.\n- Users can verify their email address.\n- Users can reset forgotten passwords.\n- Users can change their password.\n- Users can revoke access from all devices.\n\n### Role-Based Permissions\n\n- **Guest**: Unauthenticated users who can only view public content and register/login.\n- **Member**: Authenticated users who can create and comment on discussion threads.\n- **Moderator**: Users with elevated permissions who can manage content and enforce community guidelines.\n- **Admin**: System administrators with full access to manage users, content, and system settings.\n\n### Password Recovery\n\n- Users can request a password reset link via email.\n- Password reset links expire after 24 hours.\n- Users can set a new password using the reset link.\n\n## Discussion Thread Creation\n\n### Thread Creation\n\n- Members can create new discussion threads.\n- Threads require a title and content.\n- Threads can be categorized (e.g., economics, politics, general).\n- Threads can be edited by the creator within 24 hours.\n- Threads can be deleted by the creator or moderators.\n\n### Thread Management\n\n- Threads can be pinned by moderators.\n- Threads can be locked by moderators to prevent new comments.\n- Threads can be moved to different categories by moderators.\n\n### Thread Categories\n\n- Categories include economics, politics, general, and others.\n- Categories can be created and managed by admins.\n\n## Commenting System\n\n### Comment Creation\n\n- Members can comment on discussion threads.\n- Comments require content.\n- Comments can be edited by the creator within 24 hours.\n- Comments can be deleted by the creator or moderators.\n\n### Comment Management\n\n- Comments can be flagged by users for moderator review.\n- Comments can be hidden by moderators.\n- Comments can be restored by moderators.\n\n### Comment Moderation\n\n- Moderators can review flagged comments.\n- Moderators can approve or reject flagged comments.\n- Moderators can delete inappropriate comments.\n\n## Content Moderation\n\n### Moderation Tools\n\n- Moderators can view reported content.\n- Moderators can take action on reported content (e.g., delete, warn, ban).\n- Moderators can view user activity logs.\n\n### Reporting System\n\n- Users can report inappropriate content.\n- Reports include a reason and description.\n- Reports are reviewed by moderators.\n\n### Enforcement of Community Guidelines\n\n- Community guidelines are outlined in the service overview.\n- Violations of guidelines result in warnings, bans, or account termination.\n\n## User Management\n\n### User Profiles\n\n- Users can view and edit their profiles.\n- Profiles include username, email, and bio.\n- Users can upload a profile picture.\n\n### User Roles and Permissions\n\n- Admins can assign roles to users.\n- Admins can revoke roles from users.\n- Admins can view and manage user roles and permissions.\n\n### User Activity Tracking\n\n- Admins can view user activity logs.\n- Admins can track user actions (e.g., thread creation, comments).\n- Admins can ban users for violating community guidelines.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To outline the user journey and interaction flow for the economic/political discussion board, ensuring a seamless and intuitive user experience.","filename":"02-user-flow.md","documentType":"user-flow","outline":["User Registration and Login","Creating and Managing Discussion Threads","Posting and Managing Comments","Moderating Content","Administering the System"],"audience":"development team","keyQuestions":["What is the step-by-step process for user registration and login?","How do users create and manage discussion threads?","What is the workflow for posting and managing comments?","What are the steps for content moderation?","How do administrators manage the system?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","01-functional-requirements.md"],"constraints":["Must be intuitive and user-friendly","Must ensure a smooth user experience","Must include error handling and recovery processes"],"content":"## Economic/Political Discussion Board User Flow Documentation\n\n### User Registration and Login\n\n#### User Registration\n\n1. User navigates to the registration page\n2. User enters email address, username, and password\n3. User submits registration form\n4. System validates input and checks for existing accounts\n5. System sends verification email\n6. User clicks verification link in email\n7. System activates user account\n\n#### User Login\n\n1. User navigates to the login page\n2. User enters username and password\n3. User submits login form\n4. System validates credentials\n5. System redirects user to the dashboard\n\n### Creating and Managing Discussion Threads\n\n#### Creating a Discussion Thread\n\n1. User logs in and navigates to the discussion board\n2. User clicks \"Create New Thread\" button\n3. User enters thread title and content\n4. User selects relevant categories\n5. User submits thread\n6. System validates and publishes thread\n\n#### Managing Discussion Threads\n\n1. User navigates to their profile\n2. User selects \"My Threads\"\n3. User can edit, delete, or close threads\n4. System updates thread status accordingly\n\n### Posting and Managing Comments\n\n#### Posting a Comment\n\n1. User navigates to a discussion thread\n2. User enters comment text in the comment box\n3. User submits comment\n4. System validates and publishes comment\n\n#### Managing Comments\n\n1. User navigates to their profile\n2. User selects \"My Comments\"\n3. User can edit or delete comments\n4. System updates comment status accordingly\n\n### Moderating Content\n\n#### Moderating Discussion Threads\n\n1. Moderator logs in and navigates to the moderation dashboard\n2. Moderator reviews threads for compliance with guidelines\n3. Moderator can edit, delete, or lock threads\n4. Moderator can assign warnings or bans to users\n\n#### Moderating Comments\n\n1. Moderator navigates to the moderation dashboard\n2. Moderator reviews comments for compliance with guidelines\n3. Moderator can edit, delete, or hide comments\n4. Moderator can assign warnings or bans to users\n\n### Administering the System\n\n#### Managing Users\n\n1. Admin logs in and navigates to the admin dashboard\n2. Admin can view, edit, or delete user accounts\n3. Admin can assign or revoke roles and permissions\n\n#### Managing Content\n\n1. Admin navigates to the content management section\n2. Admin can view, edit, or delete all content\n3. Admin can manage categories and tags\n\n#### System Settings\n\n1. Admin navigates to the system settings\n2. Admin can configure site-wide settings\n3. Admin can manage system notifications and alerts\n\n### Error Handling and Recovery\n\n#### Common Errors and Solutions\n\n- **Registration Errors**:\n  - Email already in use: Prompt user to log in or reset password\n  - Invalid email format: Display error message and request correction\n  - Password requirements not met: Display error message and request correction\n\n- **Login Errors**:\n  - Incorrect username or password: Display error message and prompt for retry\n  - Account locked: Display message and provide password reset option\n  - Account not verified: Prompt user to check email for verification link\n\n- **Thread Creation Errors**:\n  - Missing title or content: Display error message and request correction\n  - Invalid categories: Display error message and request correction\n\n- **Comment Errors**:\n  - Missing comment text: Display error message and request correction\n\n- **Moderation Errors**:\n  - Insufficient permissions: Display error message and redirect to appropriate page\n\n- **Admin Errors**:\n  - Insufficient permissions: Display error message and redirect to appropriate page\n\n### User Flow Diagrams\n\n#### User Registration Flow\n\n```mermaid\n\ngraph LR\n\n  A[\"User Navigates to Registration Page\"] --> B[\"User Enters Email, Username, Password\"]\n  B --> C[\"User Submits Registration Form\"]\n  C --> D[\"System Validates Input and Checks for Existing Accounts\"]\n  D --> E[\"System Sends Verification Email\"]\n  E --> F[\"User Clicks Verification Link in Email\"]\n  F --> G[\"System Activates User Account\"]\n\n```\n\n#### User Login Flow\n\n```mermaid\n\n  graph LR\n\n  A[\"User Navigates to Login Page\"] --> B[\"User Enters Username and Password\"]\n  B --> C[\"User Submits Login Form\"]\n  C --> D[\"System Validates Credentials\"]\n  D --> E[\"System Redirects User to Dashboard\"]\n\n```\n\n#### Creating a Discussion Thread Flow\n\n```mermaid\n\n  graph LR\n\n  A[\"User Logs in and Navigates to Discussion Board\"] --> B[\"User Clicks 'Create New Thread' Button\"]\n  B --> C[\"User Enters Thread Title and Content\"]\n  C --> D[\"User Selects Relevant Categories\"]\n  D --> E[\"User Submits Thread\"]\n  E --> F[\"System Validates and Publishes Thread\"]\n\n```\n\n#### Posting a Comment Flow\n\n```mermaid\n\n  graph LR\n\n  A[\"User Navigates to Discussion Thread\"] --> B[\"User Enters Comment Text in Comment Box\"]\n  B --> C[\"User Submits Comment\"]\n  C --> D[\"System Validates and Publishes Comment\"]\n\n```\n\n#### Moderating Content Flow\n\n```mermaid\n\n  graph LR\n\n  A[\"Moderator Logs in and Navigates to Moderation Dashboard\"] --> B[\"Moderator Reviews Threads or Comments for Compliance with Guidelines\"]\n  B --> C[\"Moderator Can Edit, Delete, or Lock Threads or Comments\"]\n  C --> D[\"Moderator Can Assign Warnings or Bans to Users\"]\n\n```\n\n#### Administering the System Flow\n\n```mermaid\n\n  graph LR\n\n  A[\"Admin Logs in and Navigates to Admin Dashboard\"] --> B[\"Admin Can View, Edit, or Delete User Accounts\"]\n  B --> C[\"Admin Can Assign or Revoke Roles and Permissions\"]\n  C --> D[\"Admin Can View, Edit, or Delete All Content\"]\n  D --> E[\"Admin Can Manage Categories and Tags\"]\n  E --> F[\"Admin Can Configure Site-Wide Settings\"]\n  F --> G[\"Admin Can Manage System Notifications and Alerts\"]\n\n```\n\n### Conclusion\n\nThis document provides a comprehensive overview of the user flow for the economic/political discussion board, ensuring a seamless and intuitive user experience. By following these guidelines, developers can create a user-friendly platform that meets the needs of all stakeholders."},{"reason":"To define the business model, revenue streams, and cost structure for the economic/political discussion board, ensuring a sustainable and profitable operation.","filename":"03-business-model.md","documentType":"business-model","outline":["Revenue Streams","Cost Structure","Value Proposition","Market Analysis","Financial Projections"],"audience":"business stakeholders","keyQuestions":["What are the primary revenue streams?","What are the main cost components?","What is the unique value proposition?","What is the market analysis and competition?","What are the financial projections and growth strategy?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md"],"constraints":["Must include a clear revenue model","Must ensure cost efficiency","Must address market competition","Must provide a realistic financial projection"],"content":"## Economic/Political Discussion Board Business Model Analysis\n\n### Revenue Streams\n\n#### Subscription Model\n- **Description**: Users pay a monthly or annual fee for premium features and access to exclusive content.\n- **Details**:\n  - Basic Subscription: $5/month\n  - Premium Subscription: $10/month\n  - Family Plan: $20/month for multiple users\n\n#### Advertisement\n- **Description**: Display ads on the platform to generate revenue.\n- **Details**:\n  - Banner Ads: $0.05 per impression\n  - Sponsored Posts: $10 per post\n  - Sponsored Comments: $5 per comment\n\n#### Premium Features\n- **Description**: Offer additional features for a fee.\n- **Details**:\n  - Ad-Free Experience: $2/month\n  - Exclusive Content Access: $3/month\n  - Priority Support: $1/month\n\n#### Donations\n- **Description**: Allow users to donate to support the platform.\n- **Details**:\n  - One-time Donations: $1, $5, $10, $20, $50\n  - Recurring Donations: $5/month, $10/month\n\n### Cost Structure\n\n#### Development Costs\n- **Description**: Costs associated with developing and maintaining the platform.\n- **Details**:\n  - Initial Development: $50,000\n  - Ongoing Maintenance: $10,000/year\n  - Feature Updates: $5,000/year\n\n#### Hosting and Infrastructure\n- **Description**: Costs for server hosting and infrastructure.\n- **Details**:\n  - Server Hosting: $2,000/year\n  - CDN: $1,000/year\n  - Backup Services: $500/year\n\n#### Marketing and Promotion\n- **Description**: Costs for marketing and promoting the platform.\n- **Details**:\n  - Social Media Marketing: $3,000/month\n  - Content Marketing: $2,000/month\n  - Paid Advertising: $5,000/month\n\n#### Operational Costs\n- **Description**: Costs for day-to-day operations.\n- **Details**:\n  - Customer Support: $2,000/month\n  - Legal and Compliance: $1,000/month\n  - Miscellaneous: $1,000/month\n\n### Value Proposition\n\n#### Unique Features\n- **Description**: Features that set the platform apart from competitors.\n- **Details**:\n  - Advanced Moderation Tools\n  - Exclusive Content Access\n  - Priority Support\n\n#### Target Audience\n- **Description**: The primary and secondary users of the platform.\n- **Details**:\n  - Primary Users: Economists, Politicians, Analysts\n  - Secondary Users: General Public, Students\n\n#### Competitive Advantages\n- **Description**: Advantages that make the platform stand out.\n- **Details**:\n  - User-Friendly Interface\n  - Robust Moderation System\n  - Exclusive Content\n\n### Market Analysis\n\n#### Market Trends\n- **Description**: Current trends in the economic/political discussion board market.\n- **Details**:\n  - Increasing Demand for Online Discussions\n  - Growth in Digital Content Consumption\n  - Rising Interest in Political and Economic Analysis\n\n#### Competitor Analysis\n- **Description**: Analysis of key competitors in the market.\n- **Details**:\n  - Competitor 1: Features, Pricing, Strengths, Weaknesses\n  - Competitor 2: Features, Pricing, Strengths, Weaknesses\n  - Competitor 3: Features, Pricing, Strengths, Weaknesses\n\n#### Target Market\n- **Description**: The primary market segments for the platform.\n- **Details**:\n  - Economists and Analysts\n  - Politicians and Policy Makers\n  - General Public and Students\n\n### Financial Projections\n\n#### Initial Investment\n- **Description**: Initial investment required to launch the platform.\n- **Details**:\n  - Development Costs: $50,000\n  - Hosting and Infrastructure: $5,000\n  - Marketing and Promotion: $10,000\n  - Operational Costs: $5,000\n  - Total Initial Investment: $75,000\n\n#### Revenue Forecast\n- **Description**: Expected revenue streams and projections.\n- **Details**:\n  - Subscription Revenue: $12,000/month\n  - Advertisement Revenue: $10,000/month\n  - Premium Features Revenue: $5,000/month\n  - Donations Revenue: $3,000/month\n  - Total Monthly Revenue: $30,000\n\n#### Profitability Analysis\n- **Description**: Analysis of the platform's profitability.\n- **Details**:\n  - Monthly Revenue: $30,000\n  - Monthly Costs: $20,000\n  - Monthly Profit: $10,000\n  - Break-Even Point: 3 months\n\n#### Growth Strategy\n- **Description**: Strategies to ensure the platform's growth and sustainability.\n- **Details**:\n  - Expand Target Audience\n  - Enhance User Experience\n  - Improve Marketing Efforts\n  - Introduce New Features\n\nThis document provides a comprehensive analysis of the business model for the economic/political discussion board, ensuring a sustainable and profitable operation."}],"created_at":"2025-10-14T14:59:18.227Z","completed_at":"2025-10-14T15:05:30.938Z","step":0},{"id":"0199e341-4a91-7093-8c2f-90dceda2d2e6","type":"userMessage","contents":[{"type":"text","text":"Design the database schema."}],"created_at":"2025-10-14T15:05:31.025Z"},{"type":"prisma","id":"0199e341-ded5-744e-b412-9304337e6daa","instruction":"Design a flexible database schema for a discussion board with user authentication, discussion threads, and comments. Prioritize user data security and relationship integrity for the economic/political discussion platform.","schemas":{"schema-01-systematic.prisma":"/// Represents the main channels or sections of the discussion board where\n/// users can engage in conversations. Each channel has a unique identifier,\n/// name, and description. Channels are organized into sections and can\n/// contain multiple categories. This table serves as the top-level\n/// organizational structure for the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_channels {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The name of the channel.\n  name String\n  \n  /// A brief description of the channel's purpose and content.\n  description String?\n  \n  /// The timestamp when the channel was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the channel was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the channel was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_sections economic_political_discussion_board_sections[]\n  economic_political_discussion_board_threads economic_political_discussion_board_threads[]\n  \n  @@unique([name])\n}\n\n/// Represents the sections within a channel of the discussion board. Each\n/// section has a unique identifier, name, and description. Sections are used\n/// to further organize content within a channel and can contain multiple\n/// categories. This table provides a mid-level organizational structure for\n/// the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_sections {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The ID of the channel that this section belongs to. {@link\n  /// economic_political_discussion_board_channels.id}\n  economic_political_discussion_board_channel_id String @db.Uuid\n  \n  /// The name of the section.\n  name String\n  \n  /// A brief description of the section's purpose and content.\n  description String?\n  \n  /// The timestamp when the section was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the section was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the section was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  channel economic_political_discussion_board_channels @relation(fields: [economic_political_discussion_board_channel_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_sections_economic__e24e0ee5\")\n  \n  economic_political_discussion_board_categories economic_political_discussion_board_categories[]\n  \n  @@unique([economic_political_discussion_board_channel_id, name], map: \"economic_political_discussion_board_sections_economic__cdef8d35\")\n  @@index([economic_political_discussion_board_channel_id], map: \"economic_political_discussion_board_sections_economic__b64b2a68\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents the categories within a section of the discussion board. Each\n/// category has a unique identifier, name, and description. Categories are\n/// used to further organize content within a section and can contain\n/// multiple discussion threads. This table provides a detailed\n/// organizational structure for the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The ID of the section that this category belongs to. {@link\n  /// economic_political_discussion_board_sections.id}\n  economic_political_discussion_board_section_id String @db.Uuid\n  \n  /// The name of the category.\n  name String\n  \n  /// A brief description of the category's purpose and content.\n  description String?\n  \n  /// The timestamp when the category was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the category was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the category was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  section economic_political_discussion_board_sections @relation(fields: [economic_political_discussion_board_section_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_categories_economi_57c2bb22\")\n  \n  economic_political_discussion_board_threads economic_political_discussion_board_threads[]\n  \n  @@unique([economic_political_discussion_board_section_id, name], map: \"economic_political_discussion_board_categories_economi_655ecfff\")\n  @@index([economic_political_discussion_board_section_id], map: \"economic_political_discussion_board_categories_economi_bd814340\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-02-actors.prisma":"/// Represents unauthenticated users who can only view public content.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_guest {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Timestamp when the guest record was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the guest record was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@index([created_at])\n}\n\n/// Represents authenticated users who can create and comment on discussion\n/// threads.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_member {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Email address of the member.\n  email String\n  \n  /// Hashed password for authentication.\n  password_hash String\n  \n  /// Username of the member.\n  username String\n  \n  /// Timestamp when the member record was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the member record was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_comments economic_political_discussion_board_comments[]\n  economic_political_discussion_board_reports economic_political_discussion_board_reports[]\n  \n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents users with elevated permissions who can manage content and\n/// enforce community guidelines.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_moderator {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Email address of the moderator.\n  email String\n  \n  /// Hashed password for authentication.\n  password_hash String\n  \n  /// Username of the moderator.\n  username String\n  \n  /// Timestamp when the moderator record was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the moderator record was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_moderation_snapshots economic_political_discussion_board_moderation_snapshots[]\n  \n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents system administrators with full access to manage users,\n/// content, and system settings.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_admin {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Email address of the admin.\n  email String\n  \n  /// Hashed password for authentication.\n  password_hash String\n  \n  /// Username of the admin.\n  username String\n  \n  /// Timestamp when the admin record was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the admin record was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-03-threads.prisma":"/// Represents a discussion thread in the economic/political discussion\n/// board. This table captures the essential information for a thread,\n/// including its title, content, and status. It serves as the primary entity\n/// for user interactions and content management.\n///\n/// @namespace Threads\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_threads {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The channel to which this thread belongs. {@link\n  /// economic_political_discussion_board_channels.id}\n  economic_political_discussion_board_channel_id String @db.Uuid\n  \n  /// The category to which this thread belongs. {@link\n  /// economic_political_discussion_board_categories.id}\n  economic_political_discussion_board_category_id String @db.Uuid\n  \n  /// The title of the thread.\n  title String\n  \n  /// The content of the thread.\n  content String\n  \n  /// The status of the thread (e.g., open, closed, locked).\n  status String\n  \n  /// The timestamp when the thread was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the thread was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the thread was deleted (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  channel economic_political_discussion_board_channels @relation(fields: [economic_political_discussion_board_channel_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_threads_economic_p_5e193129\")\n  category economic_political_discussion_board_categories @relation(fields: [economic_political_discussion_board_category_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_threads_economic_p_57ee3657\")\n  \n  economic_political_discussion_board_thread_snapshots economic_political_discussion_board_thread_snapshots[]\n  economic_political_discussion_board_comments economic_political_discussion_board_comments[]\n  economic_political_discussion_board_reports economic_political_discussion_board_reports[]\n  \n  @@index([economic_political_discussion_board_channel_id, created_at], map: \"economic_political_discussion_board_threads_economic_p_813af20d\")\n  @@index([economic_political_discussion_board_category_id, created_at], map: \"economic_political_discussion_board_threads_economic_p_8abec909\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents a snapshot of a discussion thread at a specific point in time.\n/// This table captures the historical states of threads, allowing for audit\n/// trails and change tracking. It is used for historical data access and\n/// audit trail queries.\n///\n/// @namespace Threads\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_thread_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The thread to which this snapshot belongs. {@link\n  /// economic_political_discussion_board_threads.id}\n  economic_political_discussion_board_thread_id String @db.Uuid\n  \n  /// The title of the thread at the time of the snapshot.\n  title String\n  \n  /// The content of the thread at the time of the snapshot.\n  content String\n  \n  /// The status of the thread at the time of the snapshot.\n  status String\n  \n  /// The timestamp when the snapshot was created.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  thread economic_political_discussion_board_threads @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_thread_snapshots_e_4da99565\")\n  \n  @@index([economic_political_discussion_board_thread_id, created_at], map: \"economic_political_discussion_board_thread_snapshots_e_717c13fb\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"economic_political_discussion_board_thread_snapshots_c_a0917c42\")\n}","schema-04-comments.prisma":"/// Represents user comments on discussion threads in the economic/political\n/// discussion board. Each comment is associated with a specific thread and\n/// member, and maintains a complete history of changes through related\n/// snapshots.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The thread this comment belongs to. {@link\n  /// economic_political_discussion_board_threads.id}.\n  economic_political_discussion_board_thread_id String @db.Uuid\n  \n  /// The member who created this comment. {@link\n  /// economic_political_discussion_board_member.id}.\n  economic_political_discussion_board_member_id String @db.Uuid\n  \n  /// The text content of the comment.\n  content String\n  \n  /// When the comment was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// When the comment was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// When the comment was deleted (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  thread economic_political_discussion_board_threads @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comments_economic__299e8947\")\n  member economic_political_discussion_board_member @relation(fields: [economic_political_discussion_board_member_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comments_economic__62344682\")\n  \n  economic_political_discussion_board_comment_snapshots economic_political_discussion_board_comment_snapshots[]\n  economic_political_discussion_board_reports economic_political_discussion_board_reports[]\n  \n  @@index([economic_political_discussion_board_member_id], map: \"economic_political_discussion_board_comments_economic__8ec5f8f2\")\n  \n  @@index([economic_political_discussion_board_thread_id, created_at], map: \"economic_political_discussion_board_comments_economic__ba86dd00\")\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Historical snapshots of economic_political_discussion_board_comments for\n/// audit trails and change tracking. Each snapshot captures the complete\n/// state of a comment at a specific point in time.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_comment_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The comment this snapshot belongs to. {@link\n  /// economic_political_discussion_board_comments.id}.\n  economic_political_discussion_board_comment_id String @db.Uuid\n  \n  /// The text content of the comment at this snapshot.\n  content String\n  \n  /// When this snapshot was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// When the comment was last updated at this snapshot.\n  updated_at DateTime @db.Timestamptz\n  \n  /// When the comment was deleted at this snapshot (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  comment economic_political_discussion_board_comments @relation(fields: [economic_political_discussion_board_comment_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comment_snapshots__f75c22b9\")\n  \n  @@index([economic_political_discussion_board_comment_id, created_at], map: \"economic_political_discussion_board_comment_snapshots__baa43092\")\n}","schema-05-moderation.prisma":"/// Table for storing reports of inappropriate content in the\n/// economic/political discussion board. This table captures user reports of\n/// content violations, including the reason for reporting and the status of\n/// the report. It establishes relationships with user tables and content\n/// tables to maintain a complete record of reported content.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The member who submitted the report. {@link\n  /// economic_political_discussion_board_member.id}\n  economic_political_discussion_board_member_id String @db.Uuid\n  \n  /// The thread that was reported. {@link\n  /// economic_political_discussion_board_threads.id}\n  economic_political_discussion_board_thread_id String? @db.Uuid\n  \n  /// The comment that was reported. {@link\n  /// economic_political_discussion_board_comments.id}\n  economic_political_discussion_board_comment_id String? @db.Uuid\n  \n  /// The reason for the report.\n  reason String\n  \n  /// Additional details about the report.\n  description String?\n  \n  /// The current status of the report (e.g., pending, reviewed, resolved).\n  status String\n  \n  /// The timestamp when the report was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// The timestamp when the report was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member economic_political_discussion_board_member @relation(fields: [economic_political_discussion_board_member_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_29a5f38d\")\n  thread economic_political_discussion_board_threads? @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_6e3d1eff\")\n  comment economic_political_discussion_board_comments? @relation(fields: [economic_political_discussion_board_comment_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_32f99e86\")\n  \n  economic_political_discussion_board_moderation_snapshots economic_political_discussion_board_moderation_snapshots[]\n  \n  @@index([economic_political_discussion_board_member_id], map: \"economic_political_discussion_board_reports_economic_p_eb0dca25\")\n  @@index([economic_political_discussion_board_thread_id], map: \"economic_political_discussion_board_reports_economic_p_27ea9c49\")\n  @@index([economic_political_discussion_board_comment_id], map: \"economic_political_discussion_board_reports_economic_p_b91055d9\")\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Table for storing snapshots of moderation actions taken on reported\n/// content. This table captures the details of moderation actions, including\n/// the action taken, the reason, and the moderator who took the action. It\n/// establishes relationships with user tables and content tables to maintain\n/// a complete audit trail of moderation actions.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_moderation_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The report that was moderated. {@link\n  /// economic_political_discussion_board_reports.id}\n  economic_political_discussion_board_report_id String @db.Uuid\n  \n  /// The moderator who took the action. {@link\n  /// economic_political_discussion_board_moderator.id}\n  economic_political_discussion_board_moderator_id String @db.Uuid\n  \n  /// The action taken by the moderator (e.g., delete, warn, ban).\n  action String\n  \n  /// The reason for the moderation action.\n  reason String\n  \n  /// The timestamp when the moderation action was taken.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  report economic_political_discussion_board_reports @relation(fields: [economic_political_discussion_board_report_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_moderation_snapsho_69105f1a\")\n  moderator economic_political_discussion_board_moderator @relation(fields: [economic_political_discussion_board_moderator_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_moderation_snapsho_660bcb32\")\n  \n  @@index([economic_political_discussion_board_report_id], map: \"economic_political_discussion_board_moderation_snapsho_4117ede1\")\n  @@index([economic_political_discussion_board_moderator_id], map: \"economic_political_discussion_board_moderation_snapsho_85166e65\")\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"economic_political_discussion_board_moderation_snapsho_175c655b\")\n}","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  engineType      = \"client\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}"},"result":{"success":true,"data":{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"economic_political_discussion_board_channels","description":"Represents the main channels or sections of the discussion board where users can engage in conversations. Each channel has a unique identifier, name, and description. Channels are organized into sections and can contain multiple categories. This table serves as the top-level organizational structure for the discussion board.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"The name of the channel.","nullable":false},{"name":"description","type":"string","description":"A brief description of the channel's purpose and content.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the channel was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the channel was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the channel was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"economic_political_discussion_board_sections","description":"Represents the sections within a channel of the discussion board. Each section has a unique identifier, name, and description. Sections are used to further organize content within a channel and can contain multiple categories. This table provides a mid-level organizational structure for the discussion board.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_channel_id","type":"uuid","description":"The ID of the channel that this section belongs to. {@link economic_political_discussion_board_channels.id}","relation":{"name":"channel","targetModel":"economic_political_discussion_board_channels"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"The name of the section.","nullable":false},{"name":"description","type":"string","description":"A brief description of the section's purpose and content.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the section was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the section was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the section was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["economic_political_discussion_board_channel_id","name"],"unique":true}],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_channel_id"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"economic_political_discussion_board_categories","description":"Represents the categories within a section of the discussion board. Each category has a unique identifier, name, and description. Categories are used to further organize content within a section and can contain multiple discussion threads. This table provides a detailed organizational structure for the discussion board.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_section_id","type":"uuid","description":"The ID of the section that this category belongs to. {@link economic_political_discussion_board_sections.id}","relation":{"name":"section","targetModel":"economic_political_discussion_board_sections"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"The name of the category.","nullable":false},{"name":"description","type":"string","description":"A brief description of the category's purpose and content.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the category was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the category was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the category was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["economic_political_discussion_board_section_id","name"],"unique":true}],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_section_id"]}],"ginIndexes":[{"fieldName":"name"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"economic_political_discussion_board_guest","description":"Represents unauthenticated users who can only view public content.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the guest record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the guest record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"economic_political_discussion_board_member","description":"Represents authenticated users who can create and comment on discussion threads.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Email address of the member.","nullable":false},{"name":"password_hash","type":"string","description":"Hashed password for authentication.","nullable":false},{"name":"username","type":"string","description":"Username of the member.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the member record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the member record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"username"}]},{"name":"economic_political_discussion_board_moderator","description":"Represents users with elevated permissions who can manage content and enforce community guidelines.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Email address of the moderator.","nullable":false},{"name":"password_hash","type":"string","description":"Hashed password for authentication.","nullable":false},{"name":"username","type":"string","description":"Username of the moderator.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the moderator record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the moderator record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"username"}]},{"name":"economic_political_discussion_board_admin","description":"Represents system administrators with full access to manage users, content, and system settings.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Email address of the admin.","nullable":false},{"name":"password_hash","type":"string","description":"Hashed password for authentication.","nullable":false},{"name":"username","type":"string","description":"Username of the admin.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the admin record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the admin record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"username"}]}]},{"filename":"schema-03-threads.prisma","namespace":"Threads","models":[{"name":"economic_political_discussion_board_threads","description":"Represents a discussion thread in the economic/political discussion board. This table captures the essential information for a thread, including its title, content, and status. It serves as the primary entity for user interactions and content management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_channel_id","type":"uuid","description":"The channel to which this thread belongs. {@link economic_political_discussion_board_channels.id}","relation":{"name":"channel","targetModel":"economic_political_discussion_board_channels"},"unique":false,"nullable":false},{"name":"economic_political_discussion_board_category_id","type":"uuid","description":"The category to which this thread belongs. {@link economic_political_discussion_board_categories.id}","relation":{"name":"category","targetModel":"economic_political_discussion_board_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the thread.","nullable":false},{"name":"content","type":"string","description":"The content of the thread.","nullable":false},{"name":"status","type":"string","description":"The status of the thread (e.g., open, closed, locked).","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the thread was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the thread was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the thread was deleted (soft delete).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_channel_id","created_at"]},{"fieldNames":["economic_political_discussion_board_category_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"economic_political_discussion_board_thread_snapshots","description":"Represents a snapshot of a discussion thread at a specific point in time. This table captures the historical states of threads, allowing for audit trails and change tracking. It is used for historical data access and audit trail queries.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_thread_id","type":"uuid","description":"The thread to which this snapshot belongs. {@link economic_political_discussion_board_threads.id}","relation":{"name":"thread","targetModel":"economic_political_discussion_board_threads"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the thread at the time of the snapshot.","nullable":false},{"name":"content","type":"string","description":"The content of the thread at the time of the snapshot.","nullable":false},{"name":"status","type":"string","description":"The status of the thread at the time of the snapshot.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the snapshot was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_thread_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]}]},{"filename":"schema-04-comments.prisma","namespace":"Comments","models":[{"name":"economic_political_discussion_board_comments","description":"Represents user comments on discussion threads in the economic/political discussion board. Each comment is associated with a specific thread and member, and maintains a complete history of changes through related snapshots.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_thread_id","type":"uuid","description":"The thread this comment belongs to. {@link economic_political_discussion_board_threads.id}.","relation":{"name":"thread","targetModel":"economic_political_discussion_board_threads"},"unique":false,"nullable":false},{"name":"economic_political_discussion_board_member_id","type":"uuid","description":"The member who created this comment. {@link economic_political_discussion_board_member.id}.","relation":{"name":"member","targetModel":"economic_political_discussion_board_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"The text content of the comment.","nullable":false},{"name":"created_at","type":"datetime","description":"When the comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the comment was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"When the comment was deleted (soft delete).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_thread_id","created_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"economic_political_discussion_board_comment_snapshots","description":"Historical snapshots of economic_political_discussion_board_comments for audit trails and change tracking. Each snapshot captures the complete state of a comment at a specific point in time.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_comment_id","type":"uuid","description":"The comment this snapshot belongs to. {@link economic_political_discussion_board_comments.id}.","relation":{"name":"comment","targetModel":"economic_political_discussion_board_comments"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"The text content of the comment at this snapshot.","nullable":false},{"name":"created_at","type":"datetime","description":"When this snapshot was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the comment was last updated at this snapshot.","nullable":false},{"name":"deleted_at","type":"datetime","description":"When the comment was deleted at this snapshot (soft delete).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_comment_id","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-moderation.prisma","namespace":"Moderation","models":[{"name":"economic_political_discussion_board_reports","description":"Table for storing reports of inappropriate content in the economic/political discussion board. This table captures user reports of content violations, including the reason for reporting and the status of the report. It establishes relationships with user tables and content tables to maintain a complete record of reported content.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_member_id","type":"uuid","description":"The member who submitted the report. {@link economic_political_discussion_board_member.id}","relation":{"name":"member","targetModel":"economic_political_discussion_board_member"},"unique":false,"nullable":false},{"name":"economic_political_discussion_board_thread_id","type":"uuid","description":"The thread that was reported. {@link economic_political_discussion_board_threads.id}","relation":{"name":"thread","targetModel":"economic_political_discussion_board_threads"},"unique":false,"nullable":true},{"name":"economic_political_discussion_board_comment_id","type":"uuid","description":"The comment that was reported. {@link economic_political_discussion_board_comments.id}","relation":{"name":"comment","targetModel":"economic_political_discussion_board_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"The reason for the report.","nullable":false},{"name":"description","type":"string","description":"Additional details about the report.","nullable":true},{"name":"status","type":"string","description":"The current status of the report (e.g., pending, reviewed, resolved).","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the report was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the report was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_member_id"]},{"fieldNames":["economic_political_discussion_board_thread_id"]},{"fieldNames":["economic_political_discussion_board_comment_id"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"economic_political_discussion_board_moderation_snapshots","description":"Table for storing snapshots of moderation actions taken on reported content. This table captures the details of moderation actions, including the action taken, the reason, and the moderator who took the action. It establishes relationships with user tables and content tables to maintain a complete audit trail of moderation actions.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"economic_political_discussion_board_report_id","type":"uuid","description":"The report that was moderated. {@link economic_political_discussion_board_reports.id}","relation":{"name":"report","targetModel":"economic_political_discussion_board_reports"},"unique":false,"nullable":false},{"name":"economic_political_discussion_board_moderator_id","type":"uuid","description":"The moderator who took the action. {@link economic_political_discussion_board_moderator.id}","relation":{"name":"moderator","targetModel":"economic_political_discussion_board_moderator"},"unique":false,"nullable":false}],"plainFields":[{"name":"action","type":"string","description":"The action taken by the moderator (e.g., delete, warn, ban).","nullable":false},{"name":"reason","type":"string","description":"The reason for the moderation action.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the moderation action was taken.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["economic_political_discussion_board_report_id"]},{"fieldNames":["economic_political_discussion_board_moderator_id"]}],"ginIndexes":[{"fieldName":"reason"}]}]}]}},"compiled":{"type":"success","schemas":{"schema-01-systematic.prisma":"/// Represents the main channels or sections of the discussion board where\n/// users can engage in conversations. Each channel has a unique identifier,\n/// name, and description. Channels are organized into sections and can\n/// contain multiple categories. This table serves as the top-level\n/// organizational structure for the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_channels {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The name of the channel.\n  name String\n\n  /// A brief description of the channel's purpose and content.\n  description String?\n\n  /// The timestamp when the channel was created.\n  created_at DateTime @db.Timestamptz\n\n  /// The timestamp when the channel was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// The timestamp when the channel was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_sections economic_political_discussion_board_sections[]\n  economic_political_discussion_board_threads  economic_political_discussion_board_threads[]\n\n  @@unique([name])\n}\n\n/// Represents the sections within a channel of the discussion board. Each\n/// section has a unique identifier, name, and description. Sections are used\n/// to further organize content within a channel and can contain multiple\n/// categories. This table provides a mid-level organizational structure for\n/// the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_sections {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The ID of the channel that this section belongs to. {@link\n  /// economic_political_discussion_board_channels.id}\n  economic_political_discussion_board_channel_id String @db.Uuid\n\n  /// The name of the section.\n  name String\n\n  /// A brief description of the section's purpose and content.\n  description String?\n\n  /// The timestamp when the section was created.\n  created_at DateTime @db.Timestamptz\n\n  /// The timestamp when the section was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// The timestamp when the section was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  channel economic_political_discussion_board_channels @relation(fields: [economic_political_discussion_board_channel_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_sections_economic__e24e0ee5\")\n\n  economic_political_discussion_board_categories economic_political_discussion_board_categories[]\n\n  @@unique([economic_political_discussion_board_channel_id, name], map: \"economic_political_discussion_board_sections_economic__cdef8d35\")\n  @@index([economic_political_discussion_board_channel_id], map: \"economic_political_discussion_board_sections_economic__b64b2a68\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents the categories within a section of the discussion board. Each\n/// category has a unique identifier, name, and description. Categories are\n/// used to further organize content within a section and can contain\n/// multiple discussion threads. This table provides a detailed\n/// organizational structure for the discussion board.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The ID of the section that this category belongs to. {@link\n  /// economic_political_discussion_board_sections.id}\n  economic_political_discussion_board_section_id String @db.Uuid\n\n  /// The name of the category.\n  name String\n\n  /// A brief description of the category's purpose and content.\n  description String?\n\n  /// The timestamp when the category was created.\n  created_at DateTime @db.Timestamptz\n\n  /// The timestamp when the category was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// The timestamp when the category was deleted, if applicable.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  section economic_political_discussion_board_sections @relation(fields: [economic_political_discussion_board_section_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_categories_economi_57c2bb22\")\n\n  economic_political_discussion_board_threads economic_political_discussion_board_threads[]\n\n  @@unique([economic_political_discussion_board_section_id, name], map: \"economic_political_discussion_board_categories_economi_655ecfff\")\n  @@index([economic_political_discussion_board_section_id], map: \"economic_political_discussion_board_categories_economi_bd814340\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-02-actors.prisma":"/// Represents unauthenticated users who can only view public content.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_guest {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Timestamp when the guest record was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the guest record was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@index([created_at])\n}\n\n/// Represents authenticated users who can create and comment on discussion\n/// threads.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_member {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Email address of the member.\n  email String\n\n  /// Hashed password for authentication.\n  password_hash String\n\n  /// Username of the member.\n  username String\n\n  /// Timestamp when the member record was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the member record was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_comments economic_political_discussion_board_comments[]\n  economic_political_discussion_board_reports  economic_political_discussion_board_reports[]\n\n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents users with elevated permissions who can manage content and\n/// enforce community guidelines.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_moderator {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Email address of the moderator.\n  email String\n\n  /// Hashed password for authentication.\n  password_hash String\n\n  /// Username of the moderator.\n  username String\n\n  /// Timestamp when the moderator record was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the moderator record was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  economic_political_discussion_board_moderation_snapshots economic_political_discussion_board_moderation_snapshots[]\n\n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents system administrators with full access to manage users,\n/// content, and system settings.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_admin {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Email address of the admin.\n  email String\n\n  /// Hashed password for authentication.\n  password_hash String\n\n  /// Username of the admin.\n  username String\n\n  /// Timestamp when the admin record was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the admin record was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([email])\n  @@index([created_at])\n  @@index([username(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-03-threads.prisma":"/// Represents a discussion thread in the economic/political discussion\n/// board. This table captures the essential information for a thread,\n/// including its title, content, and status. It serves as the primary entity\n/// for user interactions and content management.\n///\n/// @namespace Threads\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_threads {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The channel to which this thread belongs. {@link\n  /// economic_political_discussion_board_channels.id}\n  economic_political_discussion_board_channel_id String @db.Uuid\n\n  /// The category to which this thread belongs. {@link\n  /// economic_political_discussion_board_categories.id}\n  economic_political_discussion_board_category_id String @db.Uuid\n\n  /// The title of the thread.\n  title String\n\n  /// The content of the thread.\n  content String\n\n  /// The status of the thread (e.g., open, closed, locked).\n  status String\n\n  /// The timestamp when the thread was created.\n  created_at DateTime @db.Timestamptz\n\n  /// The timestamp when the thread was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// The timestamp when the thread was deleted (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  channel  economic_political_discussion_board_channels   @relation(fields: [economic_political_discussion_board_channel_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_threads_economic_p_5e193129\")\n  category economic_political_discussion_board_categories @relation(fields: [economic_political_discussion_board_category_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_threads_economic_p_57ee3657\")\n\n  economic_political_discussion_board_thread_snapshots economic_political_discussion_board_thread_snapshots[]\n  economic_political_discussion_board_comments         economic_political_discussion_board_comments[]\n  economic_political_discussion_board_reports          economic_political_discussion_board_reports[]\n\n  @@index([economic_political_discussion_board_channel_id, created_at], map: \"economic_political_discussion_board_threads_economic_p_813af20d\")\n  @@index([economic_political_discussion_board_category_id, created_at], map: \"economic_political_discussion_board_threads_economic_p_8abec909\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Represents a snapshot of a discussion thread at a specific point in time.\n/// This table captures the historical states of threads, allowing for audit\n/// trails and change tracking. It is used for historical data access and\n/// audit trail queries.\n///\n/// @namespace Threads\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_thread_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The thread to which this snapshot belongs. {@link\n  /// economic_political_discussion_board_threads.id}\n  economic_political_discussion_board_thread_id String @db.Uuid\n\n  /// The title of the thread at the time of the snapshot.\n  title String\n\n  /// The content of the thread at the time of the snapshot.\n  content String\n\n  /// The status of the thread at the time of the snapshot.\n  status String\n\n  /// The timestamp when the snapshot was created.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  thread economic_political_discussion_board_threads @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_thread_snapshots_e_4da99565\")\n\n  @@index([economic_political_discussion_board_thread_id, created_at], map: \"economic_political_discussion_board_thread_snapshots_e_717c13fb\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"economic_political_discussion_board_thread_snapshots_c_a0917c42\")\n}\n","schema-04-comments.prisma":"/// Represents user comments on discussion threads in the economic/political\n/// discussion board. Each comment is associated with a specific thread and\n/// member, and maintains a complete history of changes through related\n/// snapshots.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The thread this comment belongs to. {@link\n  /// economic_political_discussion_board_threads.id}.\n  economic_political_discussion_board_thread_id String @db.Uuid\n\n  /// The member who created this comment. {@link\n  /// economic_political_discussion_board_member.id}.\n  economic_political_discussion_board_member_id String @db.Uuid\n\n  /// The text content of the comment.\n  content String\n\n  /// When the comment was created.\n  created_at DateTime @db.Timestamptz\n\n  /// When the comment was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// When the comment was deleted (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  thread economic_political_discussion_board_threads @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comments_economic__299e8947\")\n  member economic_political_discussion_board_member  @relation(fields: [economic_political_discussion_board_member_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comments_economic__62344682\")\n\n  economic_political_discussion_board_comment_snapshots economic_political_discussion_board_comment_snapshots[]\n  economic_political_discussion_board_reports           economic_political_discussion_board_reports[]\n\n  @@index([economic_political_discussion_board_member_id], map: \"economic_political_discussion_board_comments_economic__8ec5f8f2\")\n  @@index([economic_political_discussion_board_thread_id, created_at], map: \"economic_political_discussion_board_comments_economic__ba86dd00\")\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Historical snapshots of economic_political_discussion_board_comments for\n/// audit trails and change tracking. Each snapshot captures the complete\n/// state of a comment at a specific point in time.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_comment_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The comment this snapshot belongs to. {@link\n  /// economic_political_discussion_board_comments.id}.\n  economic_political_discussion_board_comment_id String @db.Uuid\n\n  /// The text content of the comment at this snapshot.\n  content String\n\n  /// When this snapshot was created.\n  created_at DateTime @db.Timestamptz\n\n  /// When the comment was last updated at this snapshot.\n  updated_at DateTime @db.Timestamptz\n\n  /// When the comment was deleted at this snapshot (soft delete).\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  comment economic_political_discussion_board_comments @relation(fields: [economic_political_discussion_board_comment_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_comment_snapshots__f75c22b9\")\n\n  @@index([economic_political_discussion_board_comment_id, created_at], map: \"economic_political_discussion_board_comment_snapshots__baa43092\")\n}\n","schema-05-moderation.prisma":"/// Table for storing reports of inappropriate content in the\n/// economic/political discussion board. This table captures user reports of\n/// content violations, including the reason for reporting and the status of\n/// the report. It establishes relationships with user tables and content\n/// tables to maintain a complete record of reported content.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The member who submitted the report. {@link\n  /// economic_political_discussion_board_member.id}\n  economic_political_discussion_board_member_id String @db.Uuid\n\n  /// The thread that was reported. {@link\n  /// economic_political_discussion_board_threads.id}\n  economic_political_discussion_board_thread_id String? @db.Uuid\n\n  /// The comment that was reported. {@link\n  /// economic_political_discussion_board_comments.id}\n  economic_political_discussion_board_comment_id String? @db.Uuid\n\n  /// The reason for the report.\n  reason String\n\n  /// Additional details about the report.\n  description String?\n\n  /// The current status of the report (e.g., pending, reviewed, resolved).\n  status String\n\n  /// The timestamp when the report was created.\n  created_at DateTime @db.Timestamptz\n\n  /// The timestamp when the report was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member  economic_political_discussion_board_member    @relation(fields: [economic_political_discussion_board_member_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_29a5f38d\")\n  thread  economic_political_discussion_board_threads?  @relation(fields: [economic_political_discussion_board_thread_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_6e3d1eff\")\n  comment economic_political_discussion_board_comments? @relation(fields: [economic_political_discussion_board_comment_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_reports_economic_p_32f99e86\")\n\n  economic_political_discussion_board_moderation_snapshots economic_political_discussion_board_moderation_snapshots[]\n\n  @@index([economic_political_discussion_board_member_id], map: \"economic_political_discussion_board_reports_economic_p_eb0dca25\")\n  @@index([economic_political_discussion_board_thread_id], map: \"economic_political_discussion_board_reports_economic_p_27ea9c49\")\n  @@index([economic_political_discussion_board_comment_id], map: \"economic_political_discussion_board_reports_economic_p_b91055d9\")\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Table for storing snapshots of moderation actions taken on reported\n/// content. This table captures the details of moderation actions, including\n/// the action taken, the reason, and the moderator who took the action. It\n/// establishes relationships with user tables and content tables to maintain\n/// a complete audit trail of moderation actions.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel economic_political_discussion_board_moderation_snapshots {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The report that was moderated. {@link\n  /// economic_political_discussion_board_reports.id}\n  economic_political_discussion_board_report_id String @db.Uuid\n\n  /// The moderator who took the action. {@link\n  /// economic_political_discussion_board_moderator.id}\n  economic_political_discussion_board_moderator_id String @db.Uuid\n\n  /// The action taken by the moderator (e.g., delete, warn, ban).\n  action String\n\n  /// The reason for the moderation action.\n  reason String\n\n  /// The timestamp when the moderation action was taken.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  report    economic_political_discussion_board_reports   @relation(fields: [economic_political_discussion_board_report_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_moderation_snapsho_69105f1a\")\n  moderator economic_political_discussion_board_moderator @relation(fields: [economic_political_discussion_board_moderator_id], references: [id], onDelete: Cascade, map: \"economic_political_discussion_board_moderation_snapsho_660bcb32\")\n\n  @@index([economic_political_discussion_board_report_id], map: \"economic_political_discussion_board_moderation_snapsho_4117ede1\")\n  @@index([economic_political_discussion_board_moderator_id], map: \"economic_political_discussion_board_moderation_snapsho_85166e65\")\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"economic_political_discussion_board_moderation_snapsho_175c655b\")\n}\n","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  engineType      = \"client\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}\n"},"nodeModules":{"node_modules/.prisma/client/client.d.ts":"export * from \"./index\"","node_modules/.prisma/client/default.d.ts":"export * from \"./index\"","node_modules/.prisma/client/edge.d.ts":"export * from \"./default\"","node_modules/.prisma/client/index.d.ts":"\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/client.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model economic_political_discussion_board_channels\n * Represents the main channels or sections of the discussion board where\n * users can engage in conversations. Each channel has a unique identifier,\n * name, and description. Channels are organized into sections and can\n * contain multiple categories. This table serves as the top-level\n * organizational structure for the discussion board.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_channels = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_channelsPayload>\n/**\n * Model economic_political_discussion_board_sections\n * Represents the sections within a channel of the discussion board. Each\n * section has a unique identifier, name, and description. Sections are used\n * to further organize content within a channel and can contain multiple\n * categories. This table provides a mid-level organizational structure for\n * the discussion board.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_sections = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_sectionsPayload>\n/**\n * Model economic_political_discussion_board_categories\n * Represents the categories within a section of the discussion board. Each\n * category has a unique identifier, name, and description. Categories are\n * used to further organize content within a section and can contain\n * multiple discussion threads. This table provides a detailed\n * organizational structure for the discussion board.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_categories = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_categoriesPayload>\n/**\n * Model economic_political_discussion_board_guest\n * Represents unauthenticated users who can only view public content.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_guest = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_guestPayload>\n/**\n * Model economic_political_discussion_board_member\n * Represents authenticated users who can create and comment on discussion\n * threads.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_member = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_memberPayload>\n/**\n * Model economic_political_discussion_board_moderator\n * Represents users with elevated permissions who can manage content and\n * enforce community guidelines.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_moderator = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_moderatorPayload>\n/**\n * Model economic_political_discussion_board_admin\n * Represents system administrators with full access to manage users,\n * content, and system settings.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_admin = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_adminPayload>\n/**\n * Model economic_political_discussion_board_threads\n * Represents a discussion thread in the economic/political discussion\n * board. This table captures the essential information for a thread,\n * including its title, content, and status. It serves as the primary entity\n * for user interactions and content management.\n * \n * @namespace Threads\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_threads = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_threadsPayload>\n/**\n * Model economic_political_discussion_board_thread_snapshots\n * Represents a snapshot of a discussion thread at a specific point in time.\n * This table captures the historical states of threads, allowing for audit\n * trails and change tracking. It is used for historical data access and\n * audit trail queries.\n * \n * @namespace Threads\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_thread_snapshots = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n/**\n * Model economic_political_discussion_board_comments\n * Represents user comments on discussion threads in the economic/political\n * discussion board. Each comment is associated with a specific thread and\n * member, and maintains a complete history of changes through related\n * snapshots.\n * \n * @namespace Comments\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_comments = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_commentsPayload>\n/**\n * Model economic_political_discussion_board_comment_snapshots\n * Historical snapshots of economic_political_discussion_board_comments for\n * audit trails and change tracking. Each snapshot captures the complete\n * state of a comment at a specific point in time.\n * \n * @namespace Comments\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_comment_snapshots = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n/**\n * Model economic_political_discussion_board_reports\n * Table for storing reports of inappropriate content in the\n * economic/political discussion board. This table captures user reports of\n * content violations, including the reason for reporting and the status of\n * the report. It establishes relationships with user tables and content\n * tables to maintain a complete record of reported content.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_reports = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_reportsPayload>\n/**\n * Model economic_political_discussion_board_moderation_snapshots\n * Table for storing snapshots of moderation actions taken on reported\n * content. This table captures the details of moderation actions, including\n * the action taken, the reason, and the moderator who took the action. It\n * establishes relationships with user tables and content tables to maintain\n * a complete audit trail of moderation actions.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type economic_political_discussion_board_moderation_snapshots = $Result.DefaultSelection<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n\n/**\n * ##  Prisma Client ʲˢ\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Economic_political_discussion_board_channels\n * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client ʲˢ\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Economic_political_discussion_board_channels\n   * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.economic_political_discussion_board_channels`: Exposes CRUD operations for the **economic_political_discussion_board_channels** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_channels\n    * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_channels(): Prisma.economic_political_discussion_board_channelsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_sections`: Exposes CRUD operations for the **economic_political_discussion_board_sections** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_sections\n    * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_sections(): Prisma.economic_political_discussion_board_sectionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_categories`: Exposes CRUD operations for the **economic_political_discussion_board_categories** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_categories\n    * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_categories(): Prisma.economic_political_discussion_board_categoriesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_guest`: Exposes CRUD operations for the **economic_political_discussion_board_guest** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_guests\n    * const economic_political_discussion_board_guests = await prisma.economic_political_discussion_board_guest.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_guest(): Prisma.economic_political_discussion_board_guestDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_member`: Exposes CRUD operations for the **economic_political_discussion_board_member** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_members\n    * const economic_political_discussion_board_members = await prisma.economic_political_discussion_board_member.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_member(): Prisma.economic_political_discussion_board_memberDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_moderator`: Exposes CRUD operations for the **economic_political_discussion_board_moderator** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_moderators\n    * const economic_political_discussion_board_moderators = await prisma.economic_political_discussion_board_moderator.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_moderator(): Prisma.economic_political_discussion_board_moderatorDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_admin`: Exposes CRUD operations for the **economic_political_discussion_board_admin** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_admins\n    * const economic_political_discussion_board_admins = await prisma.economic_political_discussion_board_admin.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_admin(): Prisma.economic_political_discussion_board_adminDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_threads`: Exposes CRUD operations for the **economic_political_discussion_board_threads** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_threads\n    * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_threads(): Prisma.economic_political_discussion_board_threadsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_thread_snapshots`: Exposes CRUD operations for the **economic_political_discussion_board_thread_snapshots** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_thread_snapshots\n    * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_thread_snapshots(): Prisma.economic_political_discussion_board_thread_snapshotsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_comments`: Exposes CRUD operations for the **economic_political_discussion_board_comments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_comments\n    * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_comments(): Prisma.economic_political_discussion_board_commentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_comment_snapshots`: Exposes CRUD operations for the **economic_political_discussion_board_comment_snapshots** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_comment_snapshots\n    * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_comment_snapshots(): Prisma.economic_political_discussion_board_comment_snapshotsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_reports`: Exposes CRUD operations for the **economic_political_discussion_board_reports** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_reports\n    * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_reports(): Prisma.economic_political_discussion_board_reportsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.economic_political_discussion_board_moderation_snapshots`: Exposes CRUD operations for the **economic_political_discussion_board_moderation_snapshots** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Economic_political_discussion_board_moderation_snapshots\n    * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findMany()\n    * ```\n    */\n  get economic_political_discussion_board_moderation_snapshots(): Prisma.economic_political_discussion_board_moderation_snapshotsDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    economic_political_discussion_board_channels: 'economic_political_discussion_board_channels',\n    economic_political_discussion_board_sections: 'economic_political_discussion_board_sections',\n    economic_political_discussion_board_categories: 'economic_political_discussion_board_categories',\n    economic_political_discussion_board_guest: 'economic_political_discussion_board_guest',\n    economic_political_discussion_board_member: 'economic_political_discussion_board_member',\n    economic_political_discussion_board_moderator: 'economic_political_discussion_board_moderator',\n    economic_political_discussion_board_admin: 'economic_political_discussion_board_admin',\n    economic_political_discussion_board_threads: 'economic_political_discussion_board_threads',\n    economic_political_discussion_board_thread_snapshots: 'economic_political_discussion_board_thread_snapshots',\n    economic_political_discussion_board_comments: 'economic_political_discussion_board_comments',\n    economic_political_discussion_board_comment_snapshots: 'economic_political_discussion_board_comment_snapshots',\n    economic_political_discussion_board_reports: 'economic_political_discussion_board_reports',\n    economic_political_discussion_board_moderation_snapshots: 'economic_political_discussion_board_moderation_snapshots'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"economic_political_discussion_board_channels\" | \"economic_political_discussion_board_sections\" | \"economic_political_discussion_board_categories\" | \"economic_political_discussion_board_guest\" | \"economic_political_discussion_board_member\" | \"economic_political_discussion_board_moderator\" | \"economic_political_discussion_board_admin\" | \"economic_political_discussion_board_threads\" | \"economic_political_discussion_board_thread_snapshots\" | \"economic_political_discussion_board_comments\" | \"economic_political_discussion_board_comment_snapshots\" | \"economic_political_discussion_board_reports\" | \"economic_political_discussion_board_moderation_snapshots\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      economic_political_discussion_board_channels: {\n        payload: Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_channelsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_channelsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_channelsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_channelsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_channelsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_channelsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_channelsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_channelsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_channelsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_channelsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_channelsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_channelsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_channelsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_channelsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_channelsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_channelsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_channelsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_channels>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_channelsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_channelsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_channelsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_channelsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_sections: {\n        payload: Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_sectionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_sectionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_sectionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_sectionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_sectionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_sectionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_sectionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_sectionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_sectionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_sectionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_sectionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_sectionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_sectionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_sectionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_sectionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_sectionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_sectionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_sections>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_sectionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_sectionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_sectionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_sectionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_categories: {\n        payload: Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_categoriesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_categoriesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_categoriesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_categoriesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_categoriesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_categoriesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_categoriesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_categoriesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_categoriesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_categoriesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_categoriesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_categoriesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_categoriesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_categoriesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_categoriesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_categoriesPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_categoriesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_categories>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_categoriesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_categoriesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_categoriesCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_categoriesCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_guest: {\n        payload: Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_guestFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_guestFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_guestFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_guestFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_guestFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_guestFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_guestCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_guestCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_guestCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_guestDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_guestUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_guestDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_guestUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_guestUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_guestUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_guestPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_guestAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_guest>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_guestGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_guestGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_guestCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_guestCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_member: {\n        payload: Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_memberFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_memberFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_memberFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_memberFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_memberFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_memberFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_memberCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_memberCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_memberCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_memberDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_memberUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_memberDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_memberUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_memberUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_memberUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_memberPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_memberAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_member>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_memberGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_memberGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_memberCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_memberCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_moderator: {\n        payload: Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_moderatorFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_moderatorFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_moderatorFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_moderatorFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_moderatorFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_moderatorFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_moderatorCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_moderatorCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_moderatorCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_moderatorDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_moderatorUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_moderatorDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_moderatorUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_moderatorUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_moderatorUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderatorPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_moderatorAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_moderator>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_moderatorGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_moderatorGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_moderatorCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_moderatorCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_admin: {\n        payload: Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_adminFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_adminFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_adminFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_adminFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_adminFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_adminFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_adminCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_adminCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_adminCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_adminDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_adminUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_adminDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_adminUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_adminUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_adminUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_adminPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_adminAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_admin>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_adminGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_adminGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_adminCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_adminCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_threads: {\n        payload: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_threadsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_threadsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_threadsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_threadsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_threadsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_threadsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_threadsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_threadsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_threadsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_threadsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_threadsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_threadsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_threadsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_threadsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_threadsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_threadsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_threadsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_threads>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_threadsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_threadsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_threadsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_threadsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_thread_snapshots: {\n        payload: Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_thread_snapshotsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_thread_snapshotsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_thread_snapshots>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_thread_snapshotsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_thread_snapshotsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_thread_snapshotsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_comments: {\n        payload: Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_commentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_commentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_commentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_commentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_commentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_commentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_commentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_commentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_commentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_commentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_commentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_commentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_commentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_commentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_commentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_commentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_commentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_comments>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_commentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_commentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_commentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_commentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_comment_snapshots: {\n        payload: Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_comment_snapshotsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_comment_snapshotsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_comment_snapshots>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_comment_snapshotsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_comment_snapshotsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_comment_snapshotsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_reports: {\n        payload: Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_reportsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_reportsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_reportsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_reportsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_reportsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_reportsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_reportsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_reportsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_reportsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_reportsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_reportsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_reportsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_reportsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_reportsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_reportsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_reportsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_reportsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_reports>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_reportsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_reportsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_reportsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_reportsCountAggregateOutputType> | number\n          }\n        }\n      }\n      economic_political_discussion_board_moderation_snapshots: {\n        payload: Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>\n        fields: Prisma.economic_political_discussion_board_moderation_snapshotsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          findFirst: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          findMany: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>[]\n          }\n          create: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          createMany: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>[]\n          }\n          delete: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          update: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          deleteMany: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>[]\n          }\n          upsert: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload>\n          }\n          aggregate: {\n            args: Prisma.Economic_political_discussion_board_moderation_snapshotsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateEconomic_political_discussion_board_moderation_snapshots>\n          }\n          groupBy: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_moderation_snapshotsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.economic_political_discussion_board_moderation_snapshotsCountArgs<ExtArgs>\n            result: $Utils.Optional<Economic_political_discussion_board_moderation_snapshotsCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Shorthand for `emit: 'stdout'`\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events only\n     * log: [\n     *   { emit: 'event', level: 'query' },\n     *   { emit: 'event', level: 'info' },\n     *   { emit: 'event', level: 'warn' }\n     *   { emit: 'event', level: 'error' }\n     * ]\n     * \n     * / Emit as events and log to stdout\n     * og: [\n     *  { emit: 'stdout', level: 'query' },\n     *  { emit: 'stdout', level: 'info' },\n     *  { emit: 'stdout', level: 'warn' }\n     *  { emit: 'stdout', level: 'error' }\n     * \n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`\n     */\n    adapter?: runtime.SqlDriverAdapterFactory | null\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    economic_political_discussion_board_channels?: economic_political_discussion_board_channelsOmit\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsOmit\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesOmit\n    economic_political_discussion_board_guest?: economic_political_discussion_board_guestOmit\n    economic_political_discussion_board_member?: economic_political_discussion_board_memberOmit\n    economic_political_discussion_board_moderator?: economic_political_discussion_board_moderatorOmit\n    economic_political_discussion_board_admin?: economic_political_discussion_board_adminOmit\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsOmit\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsOmit\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsOmit\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsOmit\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsOmit\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;\n\n  export type GetLogType<T> = CheckIsLogLevel<\n    T extends LogDefinition ? T['level'] : T\n  >;\n\n  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>\n    ? GetLogType<T[number]>\n    : never;\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Economic_political_discussion_board_channelsCountOutputType\n   */\n\n  export type Economic_political_discussion_board_channelsCountOutputType = {\n    economic_political_discussion_board_sections: number\n    economic_political_discussion_board_threads: number\n  }\n\n  export type Economic_political_discussion_board_channelsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_sections?: boolean | Economic_political_discussion_board_channelsCountOutputTypeCountEconomic_political_discussion_board_sectionsArgs\n    economic_political_discussion_board_threads?: boolean | Economic_political_discussion_board_channelsCountOutputTypeCountEconomic_political_discussion_board_threadsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_channelsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_channelsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_channelsCountOutputType\n     */\n    select?: Economic_political_discussion_board_channelsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_channelsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_channelsCountOutputTypeCountEconomic_political_discussion_board_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_sectionsWhereInput\n  }\n\n  /**\n   * Economic_political_discussion_board_channelsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_channelsCountOutputTypeCountEconomic_political_discussion_board_threadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_sectionsCountOutputType\n   */\n\n  export type Economic_political_discussion_board_sectionsCountOutputType = {\n    economic_political_discussion_board_categories: number\n  }\n\n  export type Economic_political_discussion_board_sectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_categories?: boolean | Economic_political_discussion_board_sectionsCountOutputTypeCountEconomic_political_discussion_board_categoriesArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_sectionsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_sectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_sectionsCountOutputType\n     */\n    select?: Economic_political_discussion_board_sectionsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_sectionsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_sectionsCountOutputTypeCountEconomic_political_discussion_board_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_categoriesWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_categoriesCountOutputType\n   */\n\n  export type Economic_political_discussion_board_categoriesCountOutputType = {\n    economic_political_discussion_board_threads: number\n  }\n\n  export type Economic_political_discussion_board_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_threads?: boolean | Economic_political_discussion_board_categoriesCountOutputTypeCountEconomic_political_discussion_board_threadsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_categoriesCountOutputType without action\n   */\n  export type Economic_political_discussion_board_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_categoriesCountOutputType\n     */\n    select?: Economic_political_discussion_board_categoriesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_categoriesCountOutputType without action\n   */\n  export type Economic_political_discussion_board_categoriesCountOutputTypeCountEconomic_political_discussion_board_threadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_memberCountOutputType\n   */\n\n  export type Economic_political_discussion_board_memberCountOutputType = {\n    economic_political_discussion_board_comments: number\n    economic_political_discussion_board_reports: number\n  }\n\n  export type Economic_political_discussion_board_memberCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_comments?: boolean | Economic_political_discussion_board_memberCountOutputTypeCountEconomic_political_discussion_board_commentsArgs\n    economic_political_discussion_board_reports?: boolean | Economic_political_discussion_board_memberCountOutputTypeCountEconomic_political_discussion_board_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_memberCountOutputType without action\n   */\n  export type Economic_political_discussion_board_memberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_memberCountOutputType\n     */\n    select?: Economic_political_discussion_board_memberCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_memberCountOutputType without action\n   */\n  export type Economic_political_discussion_board_memberCountOutputTypeCountEconomic_political_discussion_board_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  /**\n   * Economic_political_discussion_board_memberCountOutputType without action\n   */\n  export type Economic_political_discussion_board_memberCountOutputTypeCountEconomic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_moderatorCountOutputType\n   */\n\n  export type Economic_political_discussion_board_moderatorCountOutputType = {\n    economic_political_discussion_board_moderation_snapshots: number\n  }\n\n  export type Economic_political_discussion_board_moderatorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_moderation_snapshots?: boolean | Economic_political_discussion_board_moderatorCountOutputTypeCountEconomic_political_discussion_board_moderation_snapshotsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_moderatorCountOutputType without action\n   */\n  export type Economic_political_discussion_board_moderatorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_moderatorCountOutputType\n     */\n    select?: Economic_political_discussion_board_moderatorCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_moderatorCountOutputType without action\n   */\n  export type Economic_political_discussion_board_moderatorCountOutputTypeCountEconomic_political_discussion_board_moderation_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_threadsCountOutputType\n   */\n\n  export type Economic_political_discussion_board_threadsCountOutputType = {\n    economic_political_discussion_board_thread_snapshots: number\n    economic_political_discussion_board_comments: number\n    economic_political_discussion_board_reports: number\n  }\n\n  export type Economic_political_discussion_board_threadsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_thread_snapshots?: boolean | Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_thread_snapshotsArgs\n    economic_political_discussion_board_comments?: boolean | Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_commentsArgs\n    economic_political_discussion_board_reports?: boolean | Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_threadsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_threadsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_threadsCountOutputType\n     */\n    select?: Economic_political_discussion_board_threadsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_threadsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_thread_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n  }\n\n  /**\n   * Economic_political_discussion_board_threadsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  /**\n   * Economic_political_discussion_board_threadsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_threadsCountOutputTypeCountEconomic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_commentsCountOutputType\n   */\n\n  export type Economic_political_discussion_board_commentsCountOutputType = {\n    economic_political_discussion_board_comment_snapshots: number\n    economic_political_discussion_board_reports: number\n  }\n\n  export type Economic_political_discussion_board_commentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_comment_snapshots?: boolean | Economic_political_discussion_board_commentsCountOutputTypeCountEconomic_political_discussion_board_comment_snapshotsArgs\n    economic_political_discussion_board_reports?: boolean | Economic_political_discussion_board_commentsCountOutputTypeCountEconomic_political_discussion_board_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_commentsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_commentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_commentsCountOutputType\n     */\n    select?: Economic_political_discussion_board_commentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_commentsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_commentsCountOutputTypeCountEconomic_political_discussion_board_comment_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n  }\n\n  /**\n   * Economic_political_discussion_board_commentsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_commentsCountOutputTypeCountEconomic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Economic_political_discussion_board_reportsCountOutputType\n   */\n\n  export type Economic_political_discussion_board_reportsCountOutputType = {\n    economic_political_discussion_board_moderation_snapshots: number\n  }\n\n  export type Economic_political_discussion_board_reportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_moderation_snapshots?: boolean | Economic_political_discussion_board_reportsCountOutputTypeCountEconomic_political_discussion_board_moderation_snapshotsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Economic_political_discussion_board_reportsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_reportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Economic_political_discussion_board_reportsCountOutputType\n     */\n    select?: Economic_political_discussion_board_reportsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Economic_political_discussion_board_reportsCountOutputType without action\n   */\n  export type Economic_political_discussion_board_reportsCountOutputTypeCountEconomic_political_discussion_board_moderation_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model economic_political_discussion_board_channels\n   */\n\n  export type AggregateEconomic_political_discussion_board_channels = {\n    _count: Economic_political_discussion_board_channelsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_channelsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_channelsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_channelsMinAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_channelsMaxAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_channelsCountAggregateOutputType = {\n    id: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_channelsMinAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_channelsMaxAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_channelsCountAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_channelsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_channels to aggregate.\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_channels to fetch.\n     */\n    orderBy?: economic_political_discussion_board_channelsOrderByWithRelationInput | economic_political_discussion_board_channelsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_channelsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_channels from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_channels.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_channels\n    **/\n    _count?: true | Economic_political_discussion_board_channelsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_channelsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_channelsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_channelsAggregateType<T extends Economic_political_discussion_board_channelsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_channels]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_channels[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_channels[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_channelsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_channelsWhereInput\n    orderBy?: economic_political_discussion_board_channelsOrderByWithAggregationInput | economic_political_discussion_board_channelsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_channelsScalarFieldEnum[] | Economic_political_discussion_board_channelsScalarFieldEnum\n    having?: economic_political_discussion_board_channelsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_channelsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_channelsMinAggregateInputType\n    _max?: Economic_political_discussion_board_channelsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_channelsGroupByOutputType = {\n    id: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_channelsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_channelsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_channelsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_channelsGroupByPayload<T extends economic_political_discussion_board_channelsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_channelsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_channelsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_channelsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_channelsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_channelsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    economic_political_discussion_board_sections?: boolean | economic_political_discussion_board_channels$economic_political_discussion_board_sectionsArgs<ExtArgs>\n    economic_political_discussion_board_threads?: boolean | economic_political_discussion_board_channels$economic_political_discussion_board_threadsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_channelsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_channels\"]>\n\n  export type economic_political_discussion_board_channelsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_channels\"]>\n\n  export type economic_political_discussion_board_channelsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_channels\"]>\n\n  export type economic_political_discussion_board_channelsSelectScalar = {\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_channelsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_channels\"]>\n  export type economic_political_discussion_board_channelsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_sections?: boolean | economic_political_discussion_board_channels$economic_political_discussion_board_sectionsArgs<ExtArgs>\n    economic_political_discussion_board_threads?: boolean | economic_political_discussion_board_channels$economic_political_discussion_board_threadsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_channelsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_channelsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type economic_political_discussion_board_channelsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $economic_political_discussion_board_channelsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_channels\"\n    objects: {\n      economic_political_discussion_board_sections: Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>[]\n      economic_political_discussion_board_threads: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The name of the channel.\n       */\n      name: string\n      /**\n       * A brief description of the channel's purpose and content.\n       */\n      description: string | null\n      /**\n       * The timestamp when the channel was created.\n       */\n      created_at: Date\n      /**\n       * The timestamp when the channel was last updated.\n       */\n      updated_at: Date\n      /**\n       * The timestamp when the channel was deleted, if applicable.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_channels\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_channelsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_channelsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload, S>\n\n  type economic_political_discussion_board_channelsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_channelsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_channelsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_channelsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_channels'], meta: { name: 'economic_political_discussion_board_channels' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_channels that matches the filter.\n     * @param {economic_political_discussion_board_channelsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_channels\n     * @example\n     * // Get one Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_channelsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_channels that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_channelsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_channels\n     * @example\n     * // Get one Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_channelsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_channels that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_channels\n     * @example\n     * // Get one Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_channelsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_channels that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_channels\n     * @example\n     * // Get one Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_channelsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_channels that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_channelsWithIdOnly = await prisma.economic_political_discussion_board_channels.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_channelsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsCreateArgs} args - Arguments to create a Economic_political_discussion_board_channels.\n     * @example\n     * // Create one Economic_political_discussion_board_channels\n     * const Economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_channels\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_channelsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_channels.\n     * @example\n     * // Create many Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_channelsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_channels and returns the data saved in the database.\n     * @param {economic_political_discussion_board_channelsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_channels.\n     * @example\n     * // Create many Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_channels and only return the `id`\n     * const economic_political_discussion_board_channelsWithIdOnly = await prisma.economic_political_discussion_board_channels.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_channelsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_channels.\n     * @example\n     * // Delete one Economic_political_discussion_board_channels\n     * const Economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_channels\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_channelsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_channels.\n     * @example\n     * // Update one Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_channelsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_channels to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_channels\n     * const { count } = await prisma.economic_political_discussion_board_channels.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_channelsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_channelsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_channels.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_channelsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_channels and returns the data updated in the database.\n     * @param {economic_political_discussion_board_channelsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_channels.\n     * @example\n     * // Update many Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_channels and only return the `id`\n     * const economic_political_discussion_board_channelsWithIdOnly = await prisma.economic_political_discussion_board_channels.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_channelsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_channels.\n     * @param {economic_political_discussion_board_channelsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_channels.\n     * @example\n     * // Update or create a Economic_political_discussion_board_channels\n     * const economic_political_discussion_board_channels = await prisma.economic_political_discussion_board_channels.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_channels\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_channels we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_channelsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_channelsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_channels.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsCountArgs} args - Arguments to filter Economic_political_discussion_board_channels to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_channels\n     * const count = await prisma.economic_political_discussion_board_channels.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_channels we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_channelsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_channelsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_channelsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_channels.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_channelsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_channelsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_channelsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_channelsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_channels.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_channelsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_channelsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_channelsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_channelsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_channelsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_channelsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_channels model\n   */\n  readonly fields: economic_political_discussion_board_channelsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_channels.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_channelsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    economic_political_discussion_board_sections<T extends economic_political_discussion_board_channels$economic_political_discussion_board_sectionsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_channels$economic_political_discussion_board_sectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    economic_political_discussion_board_threads<T extends economic_political_discussion_board_channels$economic_political_discussion_board_threadsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_channels$economic_political_discussion_board_threadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_channels model\n   */\n  interface economic_political_discussion_board_channelsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_channels\", 'String'>\n    readonly name: FieldRef<\"economic_political_discussion_board_channels\", 'String'>\n    readonly description: FieldRef<\"economic_political_discussion_board_channels\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_channels\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_channels\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_channels\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_channels findUnique\n   */\n  export type economic_political_discussion_board_channelsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_channels to fetch.\n     */\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_channels findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_channelsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_channels to fetch.\n     */\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_channels findFirst\n   */\n  export type economic_political_discussion_board_channelsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_channels to fetch.\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_channels to fetch.\n     */\n    orderBy?: economic_political_discussion_board_channelsOrderByWithRelationInput | economic_political_discussion_board_channelsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_channels.\n     */\n    cursor?: economic_political_discussion_board_channelsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_channels from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_channels.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_channels.\n     */\n    distinct?: Economic_political_discussion_board_channelsScalarFieldEnum | Economic_political_discussion_board_channelsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_channels findFirstOrThrow\n   */\n  export type economic_political_discussion_board_channelsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_channels to fetch.\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_channels to fetch.\n     */\n    orderBy?: economic_political_discussion_board_channelsOrderByWithRelationInput | economic_political_discussion_board_channelsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_channels.\n     */\n    cursor?: economic_political_discussion_board_channelsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_channels from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_channels.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_channels.\n     */\n    distinct?: Economic_political_discussion_board_channelsScalarFieldEnum | Economic_political_discussion_board_channelsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_channels findMany\n   */\n  export type economic_political_discussion_board_channelsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_channels to fetch.\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_channels to fetch.\n     */\n    orderBy?: economic_political_discussion_board_channelsOrderByWithRelationInput | economic_political_discussion_board_channelsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_channels.\n     */\n    cursor?: economic_political_discussion_board_channelsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_channels from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_channels.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_channelsScalarFieldEnum | Economic_political_discussion_board_channelsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_channels create\n   */\n  export type economic_political_discussion_board_channelsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_channels.\n     */\n    data: XOR<economic_political_discussion_board_channelsCreateInput, economic_political_discussion_board_channelsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_channels createMany\n   */\n  export type economic_political_discussion_board_channelsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_channels.\n     */\n    data: economic_political_discussion_board_channelsCreateManyInput | economic_political_discussion_board_channelsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_channels createManyAndReturn\n   */\n  export type economic_political_discussion_board_channelsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_channels.\n     */\n    data: economic_political_discussion_board_channelsCreateManyInput | economic_political_discussion_board_channelsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_channels update\n   */\n  export type economic_political_discussion_board_channelsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_channels.\n     */\n    data: XOR<economic_political_discussion_board_channelsUpdateInput, economic_political_discussion_board_channelsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_channels to update.\n     */\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_channels updateMany\n   */\n  export type economic_political_discussion_board_channelsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_channels.\n     */\n    data: XOR<economic_political_discussion_board_channelsUpdateManyMutationInput, economic_political_discussion_board_channelsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_channels to update\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_channels to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_channels updateManyAndReturn\n   */\n  export type economic_political_discussion_board_channelsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_channels.\n     */\n    data: XOR<economic_political_discussion_board_channelsUpdateManyMutationInput, economic_political_discussion_board_channelsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_channels to update\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_channels to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_channels upsert\n   */\n  export type economic_political_discussion_board_channelsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_channels to update in case it exists.\n     */\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_channels found by the `where` argument doesn't exist, create a new economic_political_discussion_board_channels with this data.\n     */\n    create: XOR<economic_political_discussion_board_channelsCreateInput, economic_political_discussion_board_channelsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_channels was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_channelsUpdateInput, economic_political_discussion_board_channelsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_channels delete\n   */\n  export type economic_political_discussion_board_channelsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_channels to delete.\n     */\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_channels deleteMany\n   */\n  export type economic_political_discussion_board_channelsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_channels to delete\n     */\n    where?: economic_political_discussion_board_channelsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_channels to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_channels.economic_political_discussion_board_sections\n   */\n  export type economic_political_discussion_board_channels$economic_political_discussion_board_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_sectionsWhereInput\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithRelationInput | economic_political_discussion_board_sectionsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_sectionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_sectionsScalarFieldEnum | Economic_political_discussion_board_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_channels.economic_political_discussion_board_threads\n   */\n  export type economic_political_discussion_board_channels$economic_political_discussion_board_threadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_threadsWhereInput\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_threadsScalarFieldEnum | Economic_political_discussion_board_threadsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_channels without action\n   */\n  export type economic_political_discussion_board_channelsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_channels\n     */\n    select?: economic_political_discussion_board_channelsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_channels\n     */\n    omit?: economic_political_discussion_board_channelsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_channelsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_sections\n   */\n\n  export type AggregateEconomic_political_discussion_board_sections = {\n    _count: Economic_political_discussion_board_sectionsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_sectionsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_sectionsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_sectionsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_channel_id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_sectionsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_channel_id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_sectionsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_channel_id: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_sectionsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_sectionsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_sectionsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_sectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_sections to aggregate.\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_sections to fetch.\n     */\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithRelationInput | economic_political_discussion_board_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_sections\n    **/\n    _count?: true | Economic_political_discussion_board_sectionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_sectionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_sectionsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_sectionsAggregateType<T extends Economic_political_discussion_board_sectionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_sections]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_sections[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_sections[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_sectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_sectionsWhereInput\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithAggregationInput | economic_political_discussion_board_sectionsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_sectionsScalarFieldEnum[] | Economic_political_discussion_board_sectionsScalarFieldEnum\n    having?: economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_sectionsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_sectionsMinAggregateInputType\n    _max?: Economic_political_discussion_board_sectionsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_sectionsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_sectionsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_sectionsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_sectionsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_sectionsGroupByPayload<T extends economic_political_discussion_board_sectionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_sectionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_sectionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_sectionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_sectionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_sectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    economic_political_discussion_board_categories?: boolean | economic_political_discussion_board_sections$economic_political_discussion_board_categoriesArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_sectionsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_sections\"]>\n\n  export type economic_political_discussion_board_sectionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_sections\"]>\n\n  export type economic_political_discussion_board_sectionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_sections\"]>\n\n  export type economic_political_discussion_board_sectionsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_sectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_channel_id\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_sections\"]>\n  export type economic_political_discussion_board_sectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    economic_political_discussion_board_categories?: boolean | economic_political_discussion_board_sections$economic_political_discussion_board_categoriesArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_sectionsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_sectionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_sectionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_sectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_sections\"\n    objects: {\n      channel: Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>\n      economic_political_discussion_board_categories: Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The ID of the channel that this section belongs to. {@link\n       * economic_political_discussion_board_channels.id}\n       */\n      economic_political_discussion_board_channel_id: string\n      /**\n       * The name of the section.\n       */\n      name: string\n      /**\n       * A brief description of the section's purpose and content.\n       */\n      description: string | null\n      /**\n       * The timestamp when the section was created.\n       */\n      created_at: Date\n      /**\n       * The timestamp when the section was last updated.\n       */\n      updated_at: Date\n      /**\n       * The timestamp when the section was deleted, if applicable.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_sections\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_sectionsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_sectionsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload, S>\n\n  type economic_political_discussion_board_sectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_sectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_sectionsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_sectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_sections'], meta: { name: 'economic_political_discussion_board_sections' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_sections that matches the filter.\n     * @param {economic_political_discussion_board_sectionsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_sections\n     * @example\n     * // Get one Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_sectionsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_sections that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_sectionsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_sections\n     * @example\n     * // Get one Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_sectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_sections that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_sections\n     * @example\n     * // Get one Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_sectionsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_sections that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_sections\n     * @example\n     * // Get one Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_sectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_sections that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_sectionsWithIdOnly = await prisma.economic_political_discussion_board_sections.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_sectionsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsCreateArgs} args - Arguments to create a Economic_political_discussion_board_sections.\n     * @example\n     * // Create one Economic_political_discussion_board_sections\n     * const Economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_sections\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_sectionsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_sections.\n     * @example\n     * // Create many Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_sectionsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_sections and returns the data saved in the database.\n     * @param {economic_political_discussion_board_sectionsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_sections.\n     * @example\n     * // Create many Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_sections and only return the `id`\n     * const economic_political_discussion_board_sectionsWithIdOnly = await prisma.economic_political_discussion_board_sections.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_sectionsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_sections.\n     * @example\n     * // Delete one Economic_political_discussion_board_sections\n     * const Economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_sections\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_sectionsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_sections.\n     * @example\n     * // Update one Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_sectionsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_sections to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_sections\n     * const { count } = await prisma.economic_political_discussion_board_sections.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_sectionsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_sectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_sectionsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_sections and returns the data updated in the database.\n     * @param {economic_political_discussion_board_sectionsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_sections.\n     * @example\n     * // Update many Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_sections and only return the `id`\n     * const economic_political_discussion_board_sectionsWithIdOnly = await prisma.economic_political_discussion_board_sections.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_sectionsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_sections.\n     * @param {economic_political_discussion_board_sectionsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_sections.\n     * @example\n     * // Update or create a Economic_political_discussion_board_sections\n     * const economic_political_discussion_board_sections = await prisma.economic_political_discussion_board_sections.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_sections\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_sections we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_sectionsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_sectionsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsCountArgs} args - Arguments to filter Economic_political_discussion_board_sections to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_sections\n     * const count = await prisma.economic_political_discussion_board_sections.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_sections we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_sectionsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_sectionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_sectionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_sectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_sectionsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_sectionsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_sectionsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_sectionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_sectionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_sectionsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_sectionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_sectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_sectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_sections model\n   */\n  readonly fields: economic_political_discussion_board_sectionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_sections.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_sectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    channel<T extends economic_political_discussion_board_channelsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_channelsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    economic_political_discussion_board_categories<T extends economic_political_discussion_board_sections$economic_political_discussion_board_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_sections$economic_political_discussion_board_categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_sections model\n   */\n  interface economic_political_discussion_board_sectionsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_sections\", 'String'>\n    readonly economic_political_discussion_board_channel_id: FieldRef<\"economic_political_discussion_board_sections\", 'String'>\n    readonly name: FieldRef<\"economic_political_discussion_board_sections\", 'String'>\n    readonly description: FieldRef<\"economic_political_discussion_board_sections\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_sections\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_sections\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_sections\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_sections findUnique\n   */\n  export type economic_political_discussion_board_sectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_sections to fetch.\n     */\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_sections findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_sectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_sections to fetch.\n     */\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_sections findFirst\n   */\n  export type economic_political_discussion_board_sectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_sections to fetch.\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_sections to fetch.\n     */\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithRelationInput | economic_political_discussion_board_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_sections.\n     */\n    cursor?: economic_political_discussion_board_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_sections.\n     */\n    distinct?: Economic_political_discussion_board_sectionsScalarFieldEnum | Economic_political_discussion_board_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_sections findFirstOrThrow\n   */\n  export type economic_political_discussion_board_sectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_sections to fetch.\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_sections to fetch.\n     */\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithRelationInput | economic_political_discussion_board_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_sections.\n     */\n    cursor?: economic_political_discussion_board_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_sections.\n     */\n    distinct?: Economic_political_discussion_board_sectionsScalarFieldEnum | Economic_political_discussion_board_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_sections findMany\n   */\n  export type economic_political_discussion_board_sectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_sections to fetch.\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_sections to fetch.\n     */\n    orderBy?: economic_political_discussion_board_sectionsOrderByWithRelationInput | economic_political_discussion_board_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_sections.\n     */\n    cursor?: economic_political_discussion_board_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_sections.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_sectionsScalarFieldEnum | Economic_political_discussion_board_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_sections create\n   */\n  export type economic_political_discussion_board_sectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_sections.\n     */\n    data: XOR<economic_political_discussion_board_sectionsCreateInput, economic_political_discussion_board_sectionsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_sections createMany\n   */\n  export type economic_political_discussion_board_sectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_sections.\n     */\n    data: economic_political_discussion_board_sectionsCreateManyInput | economic_political_discussion_board_sectionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_sections createManyAndReturn\n   */\n  export type economic_political_discussion_board_sectionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_sections.\n     */\n    data: economic_political_discussion_board_sectionsCreateManyInput | economic_political_discussion_board_sectionsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_sections update\n   */\n  export type economic_political_discussion_board_sectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_sections.\n     */\n    data: XOR<economic_political_discussion_board_sectionsUpdateInput, economic_political_discussion_board_sectionsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_sections to update.\n     */\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_sections updateMany\n   */\n  export type economic_political_discussion_board_sectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_sections.\n     */\n    data: XOR<economic_political_discussion_board_sectionsUpdateManyMutationInput, economic_political_discussion_board_sectionsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_sections to update\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_sections to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_sections updateManyAndReturn\n   */\n  export type economic_political_discussion_board_sectionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_sections.\n     */\n    data: XOR<economic_political_discussion_board_sectionsUpdateManyMutationInput, economic_political_discussion_board_sectionsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_sections to update\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_sections to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_sections upsert\n   */\n  export type economic_political_discussion_board_sectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_sections to update in case it exists.\n     */\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_sections found by the `where` argument doesn't exist, create a new economic_political_discussion_board_sections with this data.\n     */\n    create: XOR<economic_political_discussion_board_sectionsCreateInput, economic_political_discussion_board_sectionsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_sections was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_sectionsUpdateInput, economic_political_discussion_board_sectionsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_sections delete\n   */\n  export type economic_political_discussion_board_sectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_sections to delete.\n     */\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_sections deleteMany\n   */\n  export type economic_political_discussion_board_sectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_sections to delete\n     */\n    where?: economic_political_discussion_board_sectionsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_sections to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_sections.economic_political_discussion_board_categories\n   */\n  export type economic_political_discussion_board_sections$economic_political_discussion_board_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_categoriesWhereInput\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithRelationInput | economic_political_discussion_board_categoriesOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_categoriesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_categoriesScalarFieldEnum | Economic_political_discussion_board_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_sections without action\n   */\n  export type economic_political_discussion_board_sectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_sections\n     */\n    select?: economic_political_discussion_board_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_sections\n     */\n    omit?: economic_political_discussion_board_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_sectionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_categories\n   */\n\n  export type AggregateEconomic_political_discussion_board_categories = {\n    _count: Economic_political_discussion_board_categoriesCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_categoriesMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_categoriesMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_categoriesMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_section_id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_categoriesMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_section_id: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_categoriesCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_section_id: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_categoriesMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_section_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_categoriesMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_section_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_categoriesCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_section_id?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_categories to aggregate.\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_categories to fetch.\n     */\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithRelationInput | economic_political_discussion_board_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_categories\n    **/\n    _count?: true | Economic_political_discussion_board_categoriesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_categoriesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_categoriesMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_categoriesAggregateType<T extends Economic_political_discussion_board_categoriesAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_categories]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_categories[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_categories[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_categoriesWhereInput\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithAggregationInput | economic_political_discussion_board_categoriesOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_categoriesScalarFieldEnum[] | Economic_political_discussion_board_categoriesScalarFieldEnum\n    having?: economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_categoriesCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_categoriesMinAggregateInputType\n    _max?: Economic_political_discussion_board_categoriesMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_categoriesGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_section_id: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_categoriesCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_categoriesMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_categoriesMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_categoriesGroupByPayload<T extends economic_political_discussion_board_categoriesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_categoriesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_categoriesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_categoriesGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_categoriesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n    economic_political_discussion_board_threads?: boolean | economic_political_discussion_board_categories$economic_political_discussion_board_threadsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_categories\"]>\n\n  export type economic_political_discussion_board_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_categories\"]>\n\n  export type economic_political_discussion_board_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_categories\"]>\n\n  export type economic_political_discussion_board_categoriesSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_section_id\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_categories\"]>\n  export type economic_political_discussion_board_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n    economic_political_discussion_board_threads?: boolean | economic_political_discussion_board_categories$economic_political_discussion_board_threadsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    section?: boolean | economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_categories\"\n    objects: {\n      section: Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>\n      economic_political_discussion_board_threads: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The ID of the section that this category belongs to. {@link\n       * economic_political_discussion_board_sections.id}\n       */\n      economic_political_discussion_board_section_id: string\n      /**\n       * The name of the category.\n       */\n      name: string\n      /**\n       * A brief description of the category's purpose and content.\n       */\n      description: string | null\n      /**\n       * The timestamp when the category was created.\n       */\n      created_at: Date\n      /**\n       * The timestamp when the category was last updated.\n       */\n      updated_at: Date\n      /**\n       * The timestamp when the category was deleted, if applicable.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_categories\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_categoriesGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_categoriesDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload, S>\n\n  type economic_political_discussion_board_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_categoriesCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_categories'], meta: { name: 'economic_political_discussion_board_categories' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_categories that matches the filter.\n     * @param {economic_political_discussion_board_categoriesFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_categories\n     * @example\n     * // Get one Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_categoriesFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_categories that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_categories\n     * @example\n     * // Get one Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_categories\n     * @example\n     * // Get one Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_categoriesFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_categories that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_categories\n     * @example\n     * // Get one Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_categoriesWithIdOnly = await prisma.economic_political_discussion_board_categories.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_categoriesFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesCreateArgs} args - Arguments to create a Economic_political_discussion_board_categories.\n     * @example\n     * // Create one Economic_political_discussion_board_categories\n     * const Economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_categories\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_categoriesCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_categories.\n     * @example\n     * // Create many Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_categoriesCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_categories and returns the data saved in the database.\n     * @param {economic_political_discussion_board_categoriesCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_categories.\n     * @example\n     * // Create many Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_categories and only return the `id`\n     * const economic_political_discussion_board_categoriesWithIdOnly = await prisma.economic_political_discussion_board_categories.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_categories.\n     * @example\n     * // Delete one Economic_political_discussion_board_categories\n     * const Economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_categories\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_categoriesDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesUpdateArgs} args - Arguments to update one Economic_political_discussion_board_categories.\n     * @example\n     * // Update one Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_categoriesUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_categories to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_categories\n     * const { count } = await prisma.economic_political_discussion_board_categories.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_categoriesDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_categoriesUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_categories and returns the data updated in the database.\n     * @param {economic_political_discussion_board_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_categories.\n     * @example\n     * // Update many Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_categories and only return the `id`\n     * const economic_political_discussion_board_categoriesWithIdOnly = await prisma.economic_political_discussion_board_categories.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_categories.\n     * @param {economic_political_discussion_board_categoriesUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_categories.\n     * @example\n     * // Update or create a Economic_political_discussion_board_categories\n     * const economic_political_discussion_board_categories = await prisma.economic_political_discussion_board_categories.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_categories\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_categories we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_categoriesUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_categoriesUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesCountArgs} args - Arguments to filter Economic_political_discussion_board_categories to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_categories\n     * const count = await prisma.economic_political_discussion_board_categories.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_categoriesCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_categoriesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_categoriesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_categoriesAggregateArgs>(args: Subset<T, Economic_political_discussion_board_categoriesAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_categoriesAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_categoriesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_categoriesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_categoriesGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_categoriesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_categories model\n   */\n  readonly fields: economic_political_discussion_board_categoriesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_categories.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    section<T extends economic_political_discussion_board_sectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_sectionsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_sectionsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_sectionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    economic_political_discussion_board_threads<T extends economic_political_discussion_board_categories$economic_political_discussion_board_threadsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_categories$economic_political_discussion_board_threadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_categories model\n   */\n  interface economic_political_discussion_board_categoriesFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_categories\", 'String'>\n    readonly economic_political_discussion_board_section_id: FieldRef<\"economic_political_discussion_board_categories\", 'String'>\n    readonly name: FieldRef<\"economic_political_discussion_board_categories\", 'String'>\n    readonly description: FieldRef<\"economic_political_discussion_board_categories\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_categories\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_categories\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_categories\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_categories findUnique\n   */\n  export type economic_political_discussion_board_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_categories to fetch.\n     */\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_categories findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_categories to fetch.\n     */\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_categories findFirst\n   */\n  export type economic_political_discussion_board_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_categories to fetch.\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_categories to fetch.\n     */\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithRelationInput | economic_political_discussion_board_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_categories.\n     */\n    cursor?: economic_political_discussion_board_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_categories.\n     */\n    distinct?: Economic_political_discussion_board_categoriesScalarFieldEnum | Economic_political_discussion_board_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_categories findFirstOrThrow\n   */\n  export type economic_political_discussion_board_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_categories to fetch.\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_categories to fetch.\n     */\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithRelationInput | economic_political_discussion_board_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_categories.\n     */\n    cursor?: economic_political_discussion_board_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_categories.\n     */\n    distinct?: Economic_political_discussion_board_categoriesScalarFieldEnum | Economic_political_discussion_board_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_categories findMany\n   */\n  export type economic_political_discussion_board_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_categories to fetch.\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_categories to fetch.\n     */\n    orderBy?: economic_political_discussion_board_categoriesOrderByWithRelationInput | economic_political_discussion_board_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_categories.\n     */\n    cursor?: economic_political_discussion_board_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_categories.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_categoriesScalarFieldEnum | Economic_political_discussion_board_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_categories create\n   */\n  export type economic_political_discussion_board_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_categories.\n     */\n    data: XOR<economic_political_discussion_board_categoriesCreateInput, economic_political_discussion_board_categoriesUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_categories createMany\n   */\n  export type economic_political_discussion_board_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_categories.\n     */\n    data: economic_political_discussion_board_categoriesCreateManyInput | economic_political_discussion_board_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_categories createManyAndReturn\n   */\n  export type economic_political_discussion_board_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_categories.\n     */\n    data: economic_political_discussion_board_categoriesCreateManyInput | economic_political_discussion_board_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_categories update\n   */\n  export type economic_political_discussion_board_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_categories.\n     */\n    data: XOR<economic_political_discussion_board_categoriesUpdateInput, economic_political_discussion_board_categoriesUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_categories to update.\n     */\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_categories updateMany\n   */\n  export type economic_political_discussion_board_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_categories.\n     */\n    data: XOR<economic_political_discussion_board_categoriesUpdateManyMutationInput, economic_political_discussion_board_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_categories to update\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_categories updateManyAndReturn\n   */\n  export type economic_political_discussion_board_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_categories.\n     */\n    data: XOR<economic_political_discussion_board_categoriesUpdateManyMutationInput, economic_political_discussion_board_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_categories to update\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_categories to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_categories upsert\n   */\n  export type economic_political_discussion_board_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_categories to update in case it exists.\n     */\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_categories found by the `where` argument doesn't exist, create a new economic_political_discussion_board_categories with this data.\n     */\n    create: XOR<economic_political_discussion_board_categoriesCreateInput, economic_political_discussion_board_categoriesUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_categories was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_categoriesUpdateInput, economic_political_discussion_board_categoriesUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_categories delete\n   */\n  export type economic_political_discussion_board_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_categories to delete.\n     */\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_categories deleteMany\n   */\n  export type economic_political_discussion_board_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_categories to delete\n     */\n    where?: economic_political_discussion_board_categoriesWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_categories.economic_political_discussion_board_threads\n   */\n  export type economic_political_discussion_board_categories$economic_political_discussion_board_threadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_threadsWhereInput\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_threadsScalarFieldEnum | Economic_political_discussion_board_threadsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_categories without action\n   */\n  export type economic_political_discussion_board_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_categories\n     */\n    select?: economic_political_discussion_board_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_categories\n     */\n    omit?: economic_political_discussion_board_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_categoriesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_guest\n   */\n\n  export type AggregateEconomic_political_discussion_board_guest = {\n    _count: Economic_political_discussion_board_guestCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_guestMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_guestMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_guestMinAggregateOutputType = {\n    id: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_guestMaxAggregateOutputType = {\n    id: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_guestCountAggregateOutputType = {\n    id: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_guestMinAggregateInputType = {\n    id?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_guestMaxAggregateInputType = {\n    id?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_guestCountAggregateInputType = {\n    id?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_guestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_guest to aggregate.\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_guests to fetch.\n     */\n    orderBy?: economic_political_discussion_board_guestOrderByWithRelationInput | economic_political_discussion_board_guestOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_guestWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_guests\n    **/\n    _count?: true | Economic_political_discussion_board_guestCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_guestMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_guestMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_guestAggregateType<T extends Economic_political_discussion_board_guestAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_guest]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_guest[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_guest[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_guestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_guestWhereInput\n    orderBy?: economic_political_discussion_board_guestOrderByWithAggregationInput | economic_political_discussion_board_guestOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_guestScalarFieldEnum[] | Economic_political_discussion_board_guestScalarFieldEnum\n    having?: economic_political_discussion_board_guestScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_guestCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_guestMinAggregateInputType\n    _max?: Economic_political_discussion_board_guestMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_guestGroupByOutputType = {\n    id: string\n    created_at: Date\n    updated_at: Date\n    _count: Economic_political_discussion_board_guestCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_guestMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_guestMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_guestGroupByPayload<T extends economic_political_discussion_board_guestGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_guestGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_guestGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_guestGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_guestGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_guestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_guest\"]>\n\n  export type economic_political_discussion_board_guestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_guest\"]>\n\n  export type economic_political_discussion_board_guestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_guest\"]>\n\n  export type economic_political_discussion_board_guestSelectScalar = {\n    id?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type economic_political_discussion_board_guestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_guest\"]>\n\n  export type $economic_political_discussion_board_guestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_guest\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Timestamp when the guest record was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the guest record was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_guest\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_guestGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_guestDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload, S>\n\n  type economic_political_discussion_board_guestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_guestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_guestCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_guestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_guest'], meta: { name: 'economic_political_discussion_board_guest' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_guest that matches the filter.\n     * @param {economic_political_discussion_board_guestFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_guest\n     * @example\n     * // Get one Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_guestFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_guestFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_guest that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_guestFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_guest\n     * @example\n     * // Get one Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_guestFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_guestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_guest that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_guest\n     * @example\n     * // Get one Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_guestFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_guest that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_guest\n     * @example\n     * // Get one Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_guestFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_guests that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guests = await prisma.economic_political_discussion_board_guest.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guests = await prisma.economic_political_discussion_board_guest.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_guestWithIdOnly = await prisma.economic_political_discussion_board_guest.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_guestFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_guest.\n     * @param {economic_political_discussion_board_guestCreateArgs} args - Arguments to create a Economic_political_discussion_board_guest.\n     * @example\n     * // Create one Economic_political_discussion_board_guest\n     * const Economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_guest\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_guestCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_guestCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_guests.\n     * @param {economic_political_discussion_board_guestCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_guests.\n     * @example\n     * // Create many Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_guestCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_guests and returns the data saved in the database.\n     * @param {economic_political_discussion_board_guestCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_guests.\n     * @example\n     * // Create many Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_guests and only return the `id`\n     * const economic_political_discussion_board_guestWithIdOnly = await prisma.economic_political_discussion_board_guest.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_guestCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_guest.\n     * @param {economic_political_discussion_board_guestDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_guest.\n     * @example\n     * // Delete one Economic_political_discussion_board_guest\n     * const Economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_guest\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_guestDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_guestDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_guest.\n     * @param {economic_political_discussion_board_guestUpdateArgs} args - Arguments to update one Economic_political_discussion_board_guest.\n     * @example\n     * // Update one Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_guestUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_guestUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_guests.\n     * @param {economic_political_discussion_board_guestDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_guests to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_guests\n     * const { count } = await prisma.economic_political_discussion_board_guest.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_guestDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_guestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_guestUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_guestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_guests and returns the data updated in the database.\n     * @param {economic_political_discussion_board_guestUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_guests.\n     * @example\n     * // Update many Economic_political_discussion_board_guests\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_guests and only return the `id`\n     * const economic_political_discussion_board_guestWithIdOnly = await prisma.economic_political_discussion_board_guest.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_guestUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_guestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_guest.\n     * @param {economic_political_discussion_board_guestUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_guest.\n     * @example\n     * // Update or create a Economic_political_discussion_board_guest\n     * const economic_political_discussion_board_guest = await prisma.economic_political_discussion_board_guest.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_guest\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_guest we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_guestUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_guestUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_guestClient<$Result.GetResult<Prisma.$economic_political_discussion_board_guestPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestCountArgs} args - Arguments to filter Economic_political_discussion_board_guests to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_guests\n     * const count = await prisma.economic_political_discussion_board_guest.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_guests we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_guestCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_guestCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_guestCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_guest.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_guestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_guestAggregateArgs>(args: Subset<T, Economic_political_discussion_board_guestAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_guestAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_guest.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_guestGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_guestGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_guestGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_guestGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_guestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_guestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_guest model\n   */\n  readonly fields: economic_political_discussion_board_guestFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_guest.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_guestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_guest model\n   */\n  interface economic_political_discussion_board_guestFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_guest\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_guest\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_guest\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_guest findUnique\n   */\n  export type economic_political_discussion_board_guestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_guest to fetch.\n     */\n    where: economic_political_discussion_board_guestWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_guest findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_guestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_guest to fetch.\n     */\n    where: economic_political_discussion_board_guestWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_guest findFirst\n   */\n  export type economic_political_discussion_board_guestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_guest to fetch.\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_guests to fetch.\n     */\n    orderBy?: economic_political_discussion_board_guestOrderByWithRelationInput | economic_political_discussion_board_guestOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_guests.\n     */\n    cursor?: economic_political_discussion_board_guestWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_guests.\n     */\n    distinct?: Economic_political_discussion_board_guestScalarFieldEnum | Economic_political_discussion_board_guestScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_guest findFirstOrThrow\n   */\n  export type economic_political_discussion_board_guestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_guest to fetch.\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_guests to fetch.\n     */\n    orderBy?: economic_political_discussion_board_guestOrderByWithRelationInput | economic_political_discussion_board_guestOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_guests.\n     */\n    cursor?: economic_political_discussion_board_guestWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_guests.\n     */\n    distinct?: Economic_political_discussion_board_guestScalarFieldEnum | Economic_political_discussion_board_guestScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_guest findMany\n   */\n  export type economic_political_discussion_board_guestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_guests to fetch.\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_guests to fetch.\n     */\n    orderBy?: economic_political_discussion_board_guestOrderByWithRelationInput | economic_political_discussion_board_guestOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_guests.\n     */\n    cursor?: economic_political_discussion_board_guestWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_guests.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_guestScalarFieldEnum | Economic_political_discussion_board_guestScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_guest create\n   */\n  export type economic_political_discussion_board_guestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_guest.\n     */\n    data: XOR<economic_political_discussion_board_guestCreateInput, economic_political_discussion_board_guestUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_guest createMany\n   */\n  export type economic_political_discussion_board_guestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_guests.\n     */\n    data: economic_political_discussion_board_guestCreateManyInput | economic_political_discussion_board_guestCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_guest createManyAndReturn\n   */\n  export type economic_political_discussion_board_guestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_guests.\n     */\n    data: economic_political_discussion_board_guestCreateManyInput | economic_political_discussion_board_guestCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_guest update\n   */\n  export type economic_political_discussion_board_guestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_guest.\n     */\n    data: XOR<economic_political_discussion_board_guestUpdateInput, economic_political_discussion_board_guestUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_guest to update.\n     */\n    where: economic_political_discussion_board_guestWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_guest updateMany\n   */\n  export type economic_political_discussion_board_guestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_guests.\n     */\n    data: XOR<economic_political_discussion_board_guestUpdateManyMutationInput, economic_political_discussion_board_guestUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_guests to update\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_guest updateManyAndReturn\n   */\n  export type economic_political_discussion_board_guestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_guests.\n     */\n    data: XOR<economic_political_discussion_board_guestUpdateManyMutationInput, economic_political_discussion_board_guestUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_guests to update\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_guest upsert\n   */\n  export type economic_political_discussion_board_guestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_guest to update in case it exists.\n     */\n    where: economic_political_discussion_board_guestWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_guest found by the `where` argument doesn't exist, create a new economic_political_discussion_board_guest with this data.\n     */\n    create: XOR<economic_political_discussion_board_guestCreateInput, economic_political_discussion_board_guestUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_guest was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_guestUpdateInput, economic_political_discussion_board_guestUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_guest delete\n   */\n  export type economic_political_discussion_board_guestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_guest to delete.\n     */\n    where: economic_political_discussion_board_guestWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_guest deleteMany\n   */\n  export type economic_political_discussion_board_guestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_guests to delete\n     */\n    where?: economic_political_discussion_board_guestWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_guests to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_guest without action\n   */\n  export type economic_political_discussion_board_guestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_guest\n     */\n    select?: economic_political_discussion_board_guestSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_guest\n     */\n    omit?: economic_political_discussion_board_guestOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_member\n   */\n\n  export type AggregateEconomic_political_discussion_board_member = {\n    _count: Economic_political_discussion_board_memberCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_memberMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_memberMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_memberMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_memberMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_memberCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    username: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_memberMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_memberMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_memberCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_memberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_member to aggregate.\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_members to fetch.\n     */\n    orderBy?: economic_political_discussion_board_memberOrderByWithRelationInput | economic_political_discussion_board_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_members\n    **/\n    _count?: true | Economic_political_discussion_board_memberCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_memberMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_memberMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_memberAggregateType<T extends Economic_political_discussion_board_memberAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_member]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_member[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_member[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_memberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_memberWhereInput\n    orderBy?: economic_political_discussion_board_memberOrderByWithAggregationInput | economic_political_discussion_board_memberOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_memberScalarFieldEnum[] | Economic_political_discussion_board_memberScalarFieldEnum\n    having?: economic_political_discussion_board_memberScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_memberCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_memberMinAggregateInputType\n    _max?: Economic_political_discussion_board_memberMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_memberGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date\n    updated_at: Date\n    _count: Economic_political_discussion_board_memberCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_memberMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_memberMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_memberGroupByPayload<T extends economic_political_discussion_board_memberGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_memberGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_memberGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_memberGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_memberGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_memberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    economic_political_discussion_board_comments?: boolean | economic_political_discussion_board_member$economic_political_discussion_board_commentsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_member$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_memberCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_member\"]>\n\n  export type economic_political_discussion_board_memberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_member\"]>\n\n  export type economic_political_discussion_board_memberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_member\"]>\n\n  export type economic_political_discussion_board_memberSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type economic_political_discussion_board_memberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"username\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_member\"]>\n  export type economic_political_discussion_board_memberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_comments?: boolean | economic_political_discussion_board_member$economic_political_discussion_board_commentsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_member$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_memberCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_memberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type economic_political_discussion_board_memberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $economic_political_discussion_board_memberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_member\"\n    objects: {\n      economic_political_discussion_board_comments: Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>[]\n      economic_political_discussion_board_reports: Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Email address of the member.\n       */\n      email: string\n      /**\n       * Hashed password for authentication.\n       */\n      password_hash: string\n      /**\n       * Username of the member.\n       */\n      username: string\n      /**\n       * Timestamp when the member record was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the member record was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_member\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_memberGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_memberDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload, S>\n\n  type economic_political_discussion_board_memberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_memberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_memberCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_memberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_member'], meta: { name: 'economic_political_discussion_board_member' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_member that matches the filter.\n     * @param {economic_political_discussion_board_memberFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_member\n     * @example\n     * // Get one Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_memberFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_memberFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_member that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_memberFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_member\n     * @example\n     * // Get one Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_memberFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_memberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_member that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_member\n     * @example\n     * // Get one Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_memberFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_member that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_member\n     * @example\n     * // Get one Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_memberFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_members\n     * const economic_political_discussion_board_members = await prisma.economic_political_discussion_board_member.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_members\n     * const economic_political_discussion_board_members = await prisma.economic_political_discussion_board_member.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_memberWithIdOnly = await prisma.economic_political_discussion_board_member.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_memberFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_member.\n     * @param {economic_political_discussion_board_memberCreateArgs} args - Arguments to create a Economic_political_discussion_board_member.\n     * @example\n     * // Create one Economic_political_discussion_board_member\n     * const Economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_member\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_memberCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_memberCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_members.\n     * @param {economic_political_discussion_board_memberCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_members.\n     * @example\n     * // Create many Economic_political_discussion_board_members\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_memberCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_members and returns the data saved in the database.\n     * @param {economic_political_discussion_board_memberCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_members.\n     * @example\n     * // Create many Economic_political_discussion_board_members\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_members and only return the `id`\n     * const economic_political_discussion_board_memberWithIdOnly = await prisma.economic_political_discussion_board_member.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_memberCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_member.\n     * @param {economic_political_discussion_board_memberDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_member.\n     * @example\n     * // Delete one Economic_political_discussion_board_member\n     * const Economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_member\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_memberDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_memberDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_member.\n     * @param {economic_political_discussion_board_memberUpdateArgs} args - Arguments to update one Economic_political_discussion_board_member.\n     * @example\n     * // Update one Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_memberUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_memberUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_members.\n     * @param {economic_political_discussion_board_memberDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_members to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_members\n     * const { count } = await prisma.economic_political_discussion_board_member.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_memberDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_memberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_members\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_memberUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_memberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_members and returns the data updated in the database.\n     * @param {economic_political_discussion_board_memberUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_members.\n     * @example\n     * // Update many Economic_political_discussion_board_members\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_members and only return the `id`\n     * const economic_political_discussion_board_memberWithIdOnly = await prisma.economic_political_discussion_board_member.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_memberUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_memberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_member.\n     * @param {economic_political_discussion_board_memberUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_member.\n     * @example\n     * // Update or create a Economic_political_discussion_board_member\n     * const economic_political_discussion_board_member = await prisma.economic_political_discussion_board_member.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_member\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_member we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_memberUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_memberUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberCountArgs} args - Arguments to filter Economic_political_discussion_board_members to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_members\n     * const count = await prisma.economic_political_discussion_board_member.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_members we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_memberCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_memberCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_memberCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_member.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_memberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_memberAggregateArgs>(args: Subset<T, Economic_political_discussion_board_memberAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_memberAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_member.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_memberGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_memberGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_memberGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_memberGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_memberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_memberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_member model\n   */\n  readonly fields: economic_political_discussion_board_memberFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_member.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_memberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    economic_political_discussion_board_comments<T extends economic_political_discussion_board_member$economic_political_discussion_board_commentsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_member$economic_political_discussion_board_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    economic_political_discussion_board_reports<T extends economic_political_discussion_board_member$economic_political_discussion_board_reportsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_member$economic_political_discussion_board_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_member model\n   */\n  interface economic_political_discussion_board_memberFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_member\", 'String'>\n    readonly email: FieldRef<\"economic_political_discussion_board_member\", 'String'>\n    readonly password_hash: FieldRef<\"economic_political_discussion_board_member\", 'String'>\n    readonly username: FieldRef<\"economic_political_discussion_board_member\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_member\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_member\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_member findUnique\n   */\n  export type economic_political_discussion_board_memberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_member to fetch.\n     */\n    where: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_member findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_memberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_member to fetch.\n     */\n    where: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_member findFirst\n   */\n  export type economic_political_discussion_board_memberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_member to fetch.\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_members to fetch.\n     */\n    orderBy?: economic_political_discussion_board_memberOrderByWithRelationInput | economic_political_discussion_board_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_members.\n     */\n    cursor?: economic_political_discussion_board_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_members.\n     */\n    distinct?: Economic_political_discussion_board_memberScalarFieldEnum | Economic_political_discussion_board_memberScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_member findFirstOrThrow\n   */\n  export type economic_political_discussion_board_memberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_member to fetch.\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_members to fetch.\n     */\n    orderBy?: economic_political_discussion_board_memberOrderByWithRelationInput | economic_political_discussion_board_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_members.\n     */\n    cursor?: economic_political_discussion_board_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_members.\n     */\n    distinct?: Economic_political_discussion_board_memberScalarFieldEnum | Economic_political_discussion_board_memberScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_member findMany\n   */\n  export type economic_political_discussion_board_memberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_members to fetch.\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_members to fetch.\n     */\n    orderBy?: economic_political_discussion_board_memberOrderByWithRelationInput | economic_political_discussion_board_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_members.\n     */\n    cursor?: economic_political_discussion_board_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_members.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_memberScalarFieldEnum | Economic_political_discussion_board_memberScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_member create\n   */\n  export type economic_political_discussion_board_memberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_member.\n     */\n    data: XOR<economic_political_discussion_board_memberCreateInput, economic_political_discussion_board_memberUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_member createMany\n   */\n  export type economic_political_discussion_board_memberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_members.\n     */\n    data: economic_political_discussion_board_memberCreateManyInput | economic_political_discussion_board_memberCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_member createManyAndReturn\n   */\n  export type economic_political_discussion_board_memberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_members.\n     */\n    data: economic_political_discussion_board_memberCreateManyInput | economic_political_discussion_board_memberCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_member update\n   */\n  export type economic_political_discussion_board_memberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_member.\n     */\n    data: XOR<economic_political_discussion_board_memberUpdateInput, economic_political_discussion_board_memberUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_member to update.\n     */\n    where: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_member updateMany\n   */\n  export type economic_political_discussion_board_memberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_members.\n     */\n    data: XOR<economic_political_discussion_board_memberUpdateManyMutationInput, economic_political_discussion_board_memberUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_members to update\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_member updateManyAndReturn\n   */\n  export type economic_political_discussion_board_memberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_members.\n     */\n    data: XOR<economic_political_discussion_board_memberUpdateManyMutationInput, economic_political_discussion_board_memberUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_members to update\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_member upsert\n   */\n  export type economic_political_discussion_board_memberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_member to update in case it exists.\n     */\n    where: economic_political_discussion_board_memberWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_member found by the `where` argument doesn't exist, create a new economic_political_discussion_board_member with this data.\n     */\n    create: XOR<economic_political_discussion_board_memberCreateInput, economic_political_discussion_board_memberUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_member was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_memberUpdateInput, economic_political_discussion_board_memberUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_member delete\n   */\n  export type economic_political_discussion_board_memberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_member to delete.\n     */\n    where: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_member deleteMany\n   */\n  export type economic_political_discussion_board_memberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_members to delete\n     */\n    where?: economic_political_discussion_board_memberWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_members to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_member.economic_political_discussion_board_comments\n   */\n  export type economic_political_discussion_board_member$economic_political_discussion_board_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_commentsWhereInput\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_commentsScalarFieldEnum | Economic_political_discussion_board_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_member.economic_political_discussion_board_reports\n   */\n  export type economic_political_discussion_board_member$economic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_reportsWhereInput\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_member without action\n   */\n  export type economic_political_discussion_board_memberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_member\n     */\n    select?: economic_political_discussion_board_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_member\n     */\n    omit?: economic_political_discussion_board_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_memberInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_moderator\n   */\n\n  export type AggregateEconomic_political_discussion_board_moderator = {\n    _count: Economic_political_discussion_board_moderatorCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_moderatorMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_moderatorMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_moderatorMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_moderatorMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_moderatorCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    username: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_moderatorMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_moderatorMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_moderatorCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_moderatorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_moderator to aggregate.\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderators to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderatorOrderByWithRelationInput | economic_political_discussion_board_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_moderators\n    **/\n    _count?: true | Economic_political_discussion_board_moderatorCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_moderatorMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_moderatorMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_moderatorAggregateType<T extends Economic_political_discussion_board_moderatorAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_moderator]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_moderator[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_moderator[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_moderatorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_moderatorWhereInput\n    orderBy?: economic_political_discussion_board_moderatorOrderByWithAggregationInput | economic_political_discussion_board_moderatorOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_moderatorScalarFieldEnum[] | Economic_political_discussion_board_moderatorScalarFieldEnum\n    having?: economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_moderatorCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_moderatorMinAggregateInputType\n    _max?: Economic_political_discussion_board_moderatorMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_moderatorGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date\n    updated_at: Date\n    _count: Economic_political_discussion_board_moderatorCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_moderatorMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_moderatorMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_moderatorGroupByPayload<T extends economic_political_discussion_board_moderatorGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_moderatorGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_moderatorGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_moderatorGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_moderatorGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_moderatorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    economic_political_discussion_board_moderation_snapshots?: boolean | economic_political_discussion_board_moderator$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_moderatorCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderator\"]>\n\n  export type economic_political_discussion_board_moderatorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderator\"]>\n\n  export type economic_political_discussion_board_moderatorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderator\"]>\n\n  export type economic_political_discussion_board_moderatorSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type economic_political_discussion_board_moderatorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"username\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_moderator\"]>\n  export type economic_political_discussion_board_moderatorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    economic_political_discussion_board_moderation_snapshots?: boolean | economic_political_discussion_board_moderator$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_moderatorCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_moderatorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type economic_political_discussion_board_moderatorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $economic_political_discussion_board_moderatorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_moderator\"\n    objects: {\n      economic_political_discussion_board_moderation_snapshots: Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Email address of the moderator.\n       */\n      email: string\n      /**\n       * Hashed password for authentication.\n       */\n      password_hash: string\n      /**\n       * Username of the moderator.\n       */\n      username: string\n      /**\n       * Timestamp when the moderator record was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the moderator record was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderator\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_moderatorGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_moderatorDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload, S>\n\n  type economic_political_discussion_board_moderatorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_moderatorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_moderatorCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_moderatorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_moderator'], meta: { name: 'economic_political_discussion_board_moderator' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_moderator that matches the filter.\n     * @param {economic_political_discussion_board_moderatorFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_moderator\n     * @example\n     * // Get one Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_moderatorFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_moderator that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_moderatorFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_moderator\n     * @example\n     * // Get one Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_moderatorFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_moderator that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_moderator\n     * @example\n     * // Get one Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_moderatorFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_moderator that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_moderator\n     * @example\n     * // Get one Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_moderatorFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderators = await prisma.economic_political_discussion_board_moderator.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderators = await prisma.economic_political_discussion_board_moderator.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_moderatorWithIdOnly = await prisma.economic_political_discussion_board_moderator.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_moderatorFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_moderator.\n     * @param {economic_political_discussion_board_moderatorCreateArgs} args - Arguments to create a Economic_political_discussion_board_moderator.\n     * @example\n     * // Create one Economic_political_discussion_board_moderator\n     * const Economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_moderator\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_moderatorCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_moderators.\n     * @param {economic_political_discussion_board_moderatorCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_moderators.\n     * @example\n     * // Create many Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_moderatorCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_moderators and returns the data saved in the database.\n     * @param {economic_political_discussion_board_moderatorCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_moderators.\n     * @example\n     * // Create many Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_moderators and only return the `id`\n     * const economic_political_discussion_board_moderatorWithIdOnly = await prisma.economic_political_discussion_board_moderator.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_moderatorCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_moderator.\n     * @param {economic_political_discussion_board_moderatorDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_moderator.\n     * @example\n     * // Delete one Economic_political_discussion_board_moderator\n     * const Economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_moderator\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_moderatorDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_moderator.\n     * @param {economic_political_discussion_board_moderatorUpdateArgs} args - Arguments to update one Economic_political_discussion_board_moderator.\n     * @example\n     * // Update one Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_moderatorUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_moderators.\n     * @param {economic_political_discussion_board_moderatorDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_moderators to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_moderators\n     * const { count } = await prisma.economic_political_discussion_board_moderator.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_moderatorDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderatorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_moderatorUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_moderators and returns the data updated in the database.\n     * @param {economic_political_discussion_board_moderatorUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_moderators.\n     * @example\n     * // Update many Economic_political_discussion_board_moderators\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_moderators and only return the `id`\n     * const economic_political_discussion_board_moderatorWithIdOnly = await prisma.economic_political_discussion_board_moderator.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_moderatorUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_moderator.\n     * @param {economic_political_discussion_board_moderatorUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_moderator.\n     * @example\n     * // Update or create a Economic_political_discussion_board_moderator\n     * const economic_political_discussion_board_moderator = await prisma.economic_political_discussion_board_moderator.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_moderator\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_moderator we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_moderatorUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_moderatorUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorCountArgs} args - Arguments to filter Economic_political_discussion_board_moderators to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_moderators\n     * const count = await prisma.economic_political_discussion_board_moderator.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_moderators we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_moderatorCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_moderatorCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_moderatorCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_moderator.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_moderatorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_moderatorAggregateArgs>(args: Subset<T, Economic_political_discussion_board_moderatorAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_moderatorAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_moderator.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderatorGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_moderatorGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_moderatorGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_moderatorGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_moderatorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_moderatorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_moderator model\n   */\n  readonly fields: economic_political_discussion_board_moderatorFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_moderator.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_moderatorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    economic_political_discussion_board_moderation_snapshots<T extends economic_political_discussion_board_moderator$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_moderator$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_moderator model\n   */\n  interface economic_political_discussion_board_moderatorFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_moderator\", 'String'>\n    readonly email: FieldRef<\"economic_political_discussion_board_moderator\", 'String'>\n    readonly password_hash: FieldRef<\"economic_political_discussion_board_moderator\", 'String'>\n    readonly username: FieldRef<\"economic_political_discussion_board_moderator\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_moderator\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_moderator\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_moderator findUnique\n   */\n  export type economic_political_discussion_board_moderatorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderator to fetch.\n     */\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderator findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_moderatorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderator to fetch.\n     */\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderator findFirst\n   */\n  export type economic_political_discussion_board_moderatorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderator to fetch.\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderators to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderatorOrderByWithRelationInput | economic_political_discussion_board_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_moderators.\n     */\n    cursor?: economic_political_discussion_board_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_moderators.\n     */\n    distinct?: Economic_political_discussion_board_moderatorScalarFieldEnum | Economic_political_discussion_board_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderator findFirstOrThrow\n   */\n  export type economic_political_discussion_board_moderatorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderator to fetch.\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderators to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderatorOrderByWithRelationInput | economic_political_discussion_board_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_moderators.\n     */\n    cursor?: economic_political_discussion_board_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_moderators.\n     */\n    distinct?: Economic_political_discussion_board_moderatorScalarFieldEnum | Economic_political_discussion_board_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderator findMany\n   */\n  export type economic_political_discussion_board_moderatorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderators to fetch.\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderators to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderatorOrderByWithRelationInput | economic_political_discussion_board_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_moderators.\n     */\n    cursor?: economic_political_discussion_board_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderators.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_moderatorScalarFieldEnum | Economic_political_discussion_board_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderator create\n   */\n  export type economic_political_discussion_board_moderatorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_moderator.\n     */\n    data: XOR<economic_political_discussion_board_moderatorCreateInput, economic_political_discussion_board_moderatorUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_moderator createMany\n   */\n  export type economic_political_discussion_board_moderatorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_moderators.\n     */\n    data: economic_political_discussion_board_moderatorCreateManyInput | economic_political_discussion_board_moderatorCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_moderator createManyAndReturn\n   */\n  export type economic_political_discussion_board_moderatorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_moderators.\n     */\n    data: economic_political_discussion_board_moderatorCreateManyInput | economic_political_discussion_board_moderatorCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_moderator update\n   */\n  export type economic_political_discussion_board_moderatorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_moderator.\n     */\n    data: XOR<economic_political_discussion_board_moderatorUpdateInput, economic_political_discussion_board_moderatorUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_moderator to update.\n     */\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderator updateMany\n   */\n  export type economic_political_discussion_board_moderatorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_moderators.\n     */\n    data: XOR<economic_political_discussion_board_moderatorUpdateManyMutationInput, economic_political_discussion_board_moderatorUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_moderators to update\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_moderator updateManyAndReturn\n   */\n  export type economic_political_discussion_board_moderatorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_moderators.\n     */\n    data: XOR<economic_political_discussion_board_moderatorUpdateManyMutationInput, economic_political_discussion_board_moderatorUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_moderators to update\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_moderator upsert\n   */\n  export type economic_political_discussion_board_moderatorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_moderator to update in case it exists.\n     */\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_moderator found by the `where` argument doesn't exist, create a new economic_political_discussion_board_moderator with this data.\n     */\n    create: XOR<economic_political_discussion_board_moderatorCreateInput, economic_political_discussion_board_moderatorUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_moderator was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_moderatorUpdateInput, economic_political_discussion_board_moderatorUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_moderator delete\n   */\n  export type economic_political_discussion_board_moderatorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_moderator to delete.\n     */\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderator deleteMany\n   */\n  export type economic_political_discussion_board_moderatorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_moderators to delete\n     */\n    where?: economic_political_discussion_board_moderatorWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderators to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_moderator.economic_political_discussion_board_moderation_snapshots\n   */\n  export type economic_political_discussion_board_moderator$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderator without action\n   */\n  export type economic_political_discussion_board_moderatorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderator\n     */\n    select?: economic_political_discussion_board_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderator\n     */\n    omit?: economic_political_discussion_board_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderatorInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_admin\n   */\n\n  export type AggregateEconomic_political_discussion_board_admin = {\n    _count: Economic_political_discussion_board_adminCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_adminMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_adminMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_adminMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_adminMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    username: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_adminCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    username: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_adminMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_adminMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_adminCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    username?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_adminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_admin to aggregate.\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_admins to fetch.\n     */\n    orderBy?: economic_political_discussion_board_adminOrderByWithRelationInput | economic_political_discussion_board_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_admins\n    **/\n    _count?: true | Economic_political_discussion_board_adminCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_adminMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_adminMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_adminAggregateType<T extends Economic_political_discussion_board_adminAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_admin]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_admin[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_admin[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_adminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_adminWhereInput\n    orderBy?: economic_political_discussion_board_adminOrderByWithAggregationInput | economic_political_discussion_board_adminOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_adminScalarFieldEnum[] | Economic_political_discussion_board_adminScalarFieldEnum\n    having?: economic_political_discussion_board_adminScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_adminCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_adminMinAggregateInputType\n    _max?: Economic_political_discussion_board_adminMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_adminGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date\n    updated_at: Date\n    _count: Economic_political_discussion_board_adminCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_adminMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_adminMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_adminGroupByPayload<T extends economic_political_discussion_board_adminGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_adminGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_adminGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_adminGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_adminGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_adminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_admin\"]>\n\n  export type economic_political_discussion_board_adminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_admin\"]>\n\n  export type economic_political_discussion_board_adminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_admin\"]>\n\n  export type economic_political_discussion_board_adminSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    username?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type economic_political_discussion_board_adminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"username\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_admin\"]>\n\n  export type $economic_political_discussion_board_adminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_admin\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Email address of the admin.\n       */\n      email: string\n      /**\n       * Hashed password for authentication.\n       */\n      password_hash: string\n      /**\n       * Username of the admin.\n       */\n      username: string\n      /**\n       * Timestamp when the admin record was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the admin record was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_admin\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_adminGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_adminDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload, S>\n\n  type economic_political_discussion_board_adminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_adminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_adminCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_adminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_admin'], meta: { name: 'economic_political_discussion_board_admin' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_admin that matches the filter.\n     * @param {economic_political_discussion_board_adminFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_admin\n     * @example\n     * // Get one Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_adminFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_adminFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_admin that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_adminFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_admin\n     * @example\n     * // Get one Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_adminFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_adminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_admin that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_admin\n     * @example\n     * // Get one Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_adminFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_admin that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_admin\n     * @example\n     * // Get one Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_adminFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admins = await prisma.economic_political_discussion_board_admin.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admins = await prisma.economic_political_discussion_board_admin.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_adminWithIdOnly = await prisma.economic_political_discussion_board_admin.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_adminFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_admin.\n     * @param {economic_political_discussion_board_adminCreateArgs} args - Arguments to create a Economic_political_discussion_board_admin.\n     * @example\n     * // Create one Economic_political_discussion_board_admin\n     * const Economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_admin\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_adminCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_adminCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_admins.\n     * @param {economic_political_discussion_board_adminCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_admins.\n     * @example\n     * // Create many Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_adminCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_admins and returns the data saved in the database.\n     * @param {economic_political_discussion_board_adminCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_admins.\n     * @example\n     * // Create many Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_admins and only return the `id`\n     * const economic_political_discussion_board_adminWithIdOnly = await prisma.economic_political_discussion_board_admin.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_adminCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_admin.\n     * @param {economic_political_discussion_board_adminDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_admin.\n     * @example\n     * // Delete one Economic_political_discussion_board_admin\n     * const Economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_admin\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_adminDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_adminDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_admin.\n     * @param {economic_political_discussion_board_adminUpdateArgs} args - Arguments to update one Economic_political_discussion_board_admin.\n     * @example\n     * // Update one Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_adminUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_adminUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_admins.\n     * @param {economic_political_discussion_board_adminDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_admins to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_admins\n     * const { count } = await prisma.economic_political_discussion_board_admin.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_adminDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_adminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_adminUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_adminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_admins and returns the data updated in the database.\n     * @param {economic_political_discussion_board_adminUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_admins.\n     * @example\n     * // Update many Economic_political_discussion_board_admins\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_admins and only return the `id`\n     * const economic_political_discussion_board_adminWithIdOnly = await prisma.economic_political_discussion_board_admin.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_adminUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_adminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_admin.\n     * @param {economic_political_discussion_board_adminUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_admin.\n     * @example\n     * // Update or create a Economic_political_discussion_board_admin\n     * const economic_political_discussion_board_admin = await prisma.economic_political_discussion_board_admin.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_admin\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_admin we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_adminUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_adminUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_adminClient<$Result.GetResult<Prisma.$economic_political_discussion_board_adminPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminCountArgs} args - Arguments to filter Economic_political_discussion_board_admins to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_admins\n     * const count = await prisma.economic_political_discussion_board_admin.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_admins we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_adminCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_adminCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_adminCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_admin.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_adminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_adminAggregateArgs>(args: Subset<T, Economic_political_discussion_board_adminAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_adminAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_admin.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_adminGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_adminGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_adminGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_adminGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_adminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_adminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_admin model\n   */\n  readonly fields: economic_political_discussion_board_adminFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_admin.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_adminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_admin model\n   */\n  interface economic_political_discussion_board_adminFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_admin\", 'String'>\n    readonly email: FieldRef<\"economic_political_discussion_board_admin\", 'String'>\n    readonly password_hash: FieldRef<\"economic_political_discussion_board_admin\", 'String'>\n    readonly username: FieldRef<\"economic_political_discussion_board_admin\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_admin\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_admin\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_admin findUnique\n   */\n  export type economic_political_discussion_board_adminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_admin to fetch.\n     */\n    where: economic_political_discussion_board_adminWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_admin findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_adminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_admin to fetch.\n     */\n    where: economic_political_discussion_board_adminWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_admin findFirst\n   */\n  export type economic_political_discussion_board_adminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_admin to fetch.\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_admins to fetch.\n     */\n    orderBy?: economic_political_discussion_board_adminOrderByWithRelationInput | economic_political_discussion_board_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_admins.\n     */\n    cursor?: economic_political_discussion_board_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_admins.\n     */\n    distinct?: Economic_political_discussion_board_adminScalarFieldEnum | Economic_political_discussion_board_adminScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_admin findFirstOrThrow\n   */\n  export type economic_political_discussion_board_adminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_admin to fetch.\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_admins to fetch.\n     */\n    orderBy?: economic_political_discussion_board_adminOrderByWithRelationInput | economic_political_discussion_board_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_admins.\n     */\n    cursor?: economic_political_discussion_board_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_admins.\n     */\n    distinct?: Economic_political_discussion_board_adminScalarFieldEnum | Economic_political_discussion_board_adminScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_admin findMany\n   */\n  export type economic_political_discussion_board_adminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_admins to fetch.\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_admins to fetch.\n     */\n    orderBy?: economic_political_discussion_board_adminOrderByWithRelationInput | economic_political_discussion_board_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_admins.\n     */\n    cursor?: economic_political_discussion_board_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_admins.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_adminScalarFieldEnum | Economic_political_discussion_board_adminScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_admin create\n   */\n  export type economic_political_discussion_board_adminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_admin.\n     */\n    data: XOR<economic_political_discussion_board_adminCreateInput, economic_political_discussion_board_adminUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_admin createMany\n   */\n  export type economic_political_discussion_board_adminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_admins.\n     */\n    data: economic_political_discussion_board_adminCreateManyInput | economic_political_discussion_board_adminCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_admin createManyAndReturn\n   */\n  export type economic_political_discussion_board_adminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_admins.\n     */\n    data: economic_political_discussion_board_adminCreateManyInput | economic_political_discussion_board_adminCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_admin update\n   */\n  export type economic_political_discussion_board_adminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_admin.\n     */\n    data: XOR<economic_political_discussion_board_adminUpdateInput, economic_political_discussion_board_adminUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_admin to update.\n     */\n    where: economic_political_discussion_board_adminWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_admin updateMany\n   */\n  export type economic_political_discussion_board_adminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_admins.\n     */\n    data: XOR<economic_political_discussion_board_adminUpdateManyMutationInput, economic_political_discussion_board_adminUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_admins to update\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_admins to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_admin updateManyAndReturn\n   */\n  export type economic_political_discussion_board_adminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_admins.\n     */\n    data: XOR<economic_political_discussion_board_adminUpdateManyMutationInput, economic_political_discussion_board_adminUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_admins to update\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_admins to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_admin upsert\n   */\n  export type economic_political_discussion_board_adminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_admin to update in case it exists.\n     */\n    where: economic_political_discussion_board_adminWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_admin found by the `where` argument doesn't exist, create a new economic_political_discussion_board_admin with this data.\n     */\n    create: XOR<economic_political_discussion_board_adminCreateInput, economic_political_discussion_board_adminUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_admin was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_adminUpdateInput, economic_political_discussion_board_adminUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_admin delete\n   */\n  export type economic_political_discussion_board_adminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_admin to delete.\n     */\n    where: economic_political_discussion_board_adminWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_admin deleteMany\n   */\n  export type economic_political_discussion_board_adminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_admins to delete\n     */\n    where?: economic_political_discussion_board_adminWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_admins to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_admin without action\n   */\n  export type economic_political_discussion_board_adminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_admin\n     */\n    select?: economic_political_discussion_board_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_admin\n     */\n    omit?: economic_political_discussion_board_adminOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_threads\n   */\n\n  export type AggregateEconomic_political_discussion_board_threads = {\n    _count: Economic_political_discussion_board_threadsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_threadsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_threadsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_threadsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_channel_id: string | null\n    economic_political_discussion_board_category_id: string | null\n    title: string | null\n    content: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_threadsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_channel_id: string | null\n    economic_political_discussion_board_category_id: string | null\n    title: string | null\n    content: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_threadsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_channel_id: number\n    economic_political_discussion_board_category_id: number\n    title: number\n    content: number\n    status: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_threadsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    economic_political_discussion_board_category_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_threadsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    economic_political_discussion_board_category_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_threadsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_channel_id?: true\n    economic_political_discussion_board_category_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_threadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_threads to aggregate.\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_threads to fetch.\n     */\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_threads\n    **/\n    _count?: true | Economic_political_discussion_board_threadsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_threadsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_threadsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_threadsAggregateType<T extends Economic_political_discussion_board_threadsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_threads]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_threads[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_threads[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_threadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_threadsWhereInput\n    orderBy?: economic_political_discussion_board_threadsOrderByWithAggregationInput | economic_political_discussion_board_threadsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_threadsScalarFieldEnum[] | Economic_political_discussion_board_threadsScalarFieldEnum\n    having?: economic_political_discussion_board_threadsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_threadsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_threadsMinAggregateInputType\n    _max?: Economic_political_discussion_board_threadsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_threadsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_threadsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_threadsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_threadsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_threadsGroupByPayload<T extends economic_political_discussion_board_threadsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_threadsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_threadsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_threadsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_threadsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_threadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    economic_political_discussion_board_category_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n    economic_political_discussion_board_thread_snapshots?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_thread_snapshotsArgs<ExtArgs>\n    economic_political_discussion_board_comments?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_commentsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_threadsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_threads\"]>\n\n  export type economic_political_discussion_board_threadsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    economic_political_discussion_board_category_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_threads\"]>\n\n  export type economic_political_discussion_board_threadsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    economic_political_discussion_board_category_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_threads\"]>\n\n  export type economic_political_discussion_board_threadsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_channel_id?: boolean\n    economic_political_discussion_board_category_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_threadsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_channel_id\" | \"economic_political_discussion_board_category_id\" | \"title\" | \"content\" | \"status\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_threads\"]>\n  export type economic_political_discussion_board_threadsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n    economic_political_discussion_board_thread_snapshots?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_thread_snapshotsArgs<ExtArgs>\n    economic_political_discussion_board_comments?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_commentsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_threads$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_threadsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_threadsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_threadsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    channel?: boolean | economic_political_discussion_board_channelsDefaultArgs<ExtArgs>\n    category?: boolean | economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_threadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_threads\"\n    objects: {\n      channel: Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>\n      category: Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>\n      economic_political_discussion_board_thread_snapshots: Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>[]\n      economic_political_discussion_board_comments: Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>[]\n      economic_political_discussion_board_reports: Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The channel to which this thread belongs. {@link\n       * economic_political_discussion_board_channels.id}\n       */\n      economic_political_discussion_board_channel_id: string\n      /**\n       * The category to which this thread belongs. {@link\n       * economic_political_discussion_board_categories.id}\n       */\n      economic_political_discussion_board_category_id: string\n      /**\n       * The title of the thread.\n       */\n      title: string\n      /**\n       * The content of the thread.\n       */\n      content: string\n      /**\n       * The status of the thread (e.g., open, closed, locked).\n       */\n      status: string\n      /**\n       * The timestamp when the thread was created.\n       */\n      created_at: Date\n      /**\n       * The timestamp when the thread was last updated.\n       */\n      updated_at: Date\n      /**\n       * The timestamp when the thread was deleted (soft delete).\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_threads\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_threadsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_threadsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload, S>\n\n  type economic_political_discussion_board_threadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_threadsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_threadsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_threadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_threads'], meta: { name: 'economic_political_discussion_board_threads' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_threads that matches the filter.\n     * @param {economic_political_discussion_board_threadsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_threads\n     * @example\n     * // Get one Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_threadsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_threads that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_threadsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_threads\n     * @example\n     * // Get one Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_threadsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_threads that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_threads\n     * @example\n     * // Get one Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_threadsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_threads that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_threads\n     * @example\n     * // Get one Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_threadsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_threads that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_threadsWithIdOnly = await prisma.economic_political_discussion_board_threads.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_threadsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsCreateArgs} args - Arguments to create a Economic_political_discussion_board_threads.\n     * @example\n     * // Create one Economic_political_discussion_board_threads\n     * const Economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_threads\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_threadsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_threads.\n     * @example\n     * // Create many Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_threadsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_threads and returns the data saved in the database.\n     * @param {economic_political_discussion_board_threadsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_threads.\n     * @example\n     * // Create many Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_threads and only return the `id`\n     * const economic_political_discussion_board_threadsWithIdOnly = await prisma.economic_political_discussion_board_threads.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_threadsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_threads.\n     * @example\n     * // Delete one Economic_political_discussion_board_threads\n     * const Economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_threads\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_threadsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_threads.\n     * @example\n     * // Update one Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_threadsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_threads to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_threads\n     * const { count } = await prisma.economic_political_discussion_board_threads.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_threadsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_threadsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_threadsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_threads and returns the data updated in the database.\n     * @param {economic_political_discussion_board_threadsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_threads.\n     * @example\n     * // Update many Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_threads and only return the `id`\n     * const economic_political_discussion_board_threadsWithIdOnly = await prisma.economic_political_discussion_board_threads.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_threadsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_threads.\n     * @param {economic_political_discussion_board_threadsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_threads.\n     * @example\n     * // Update or create a Economic_political_discussion_board_threads\n     * const economic_political_discussion_board_threads = await prisma.economic_political_discussion_board_threads.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_threads\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_threads we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_threadsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_threadsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsCountArgs} args - Arguments to filter Economic_political_discussion_board_threads to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_threads\n     * const count = await prisma.economic_political_discussion_board_threads.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_threads we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_threadsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_threadsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_threadsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_threadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_threadsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_threadsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_threadsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_threadsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_threadsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_threadsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_threadsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_threadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_threadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_threads model\n   */\n  readonly fields: economic_political_discussion_board_threadsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_threads.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_threadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    channel<T extends economic_political_discussion_board_channelsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_channelsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_channelsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_channelsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    category<T extends economic_political_discussion_board_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_categoriesDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_categoriesClient<$Result.GetResult<Prisma.$economic_political_discussion_board_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    economic_political_discussion_board_thread_snapshots<T extends economic_political_discussion_board_threads$economic_political_discussion_board_thread_snapshotsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_threads$economic_political_discussion_board_thread_snapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    economic_political_discussion_board_comments<T extends economic_political_discussion_board_threads$economic_political_discussion_board_commentsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_threads$economic_political_discussion_board_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    economic_political_discussion_board_reports<T extends economic_political_discussion_board_threads$economic_political_discussion_board_reportsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_threads$economic_political_discussion_board_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_threads model\n   */\n  interface economic_political_discussion_board_threadsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly economic_political_discussion_board_channel_id: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly economic_political_discussion_board_category_id: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly title: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly content: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly status: FieldRef<\"economic_political_discussion_board_threads\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_threads\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_threads\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_threads\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_threads findUnique\n   */\n  export type economic_political_discussion_board_threadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_threads to fetch.\n     */\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_threads findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_threadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_threads to fetch.\n     */\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_threads findFirst\n   */\n  export type economic_political_discussion_board_threadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_threads to fetch.\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_threads to fetch.\n     */\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_threads.\n     */\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_threads.\n     */\n    distinct?: Economic_political_discussion_board_threadsScalarFieldEnum | Economic_political_discussion_board_threadsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads findFirstOrThrow\n   */\n  export type economic_political_discussion_board_threadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_threads to fetch.\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_threads to fetch.\n     */\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_threads.\n     */\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_threads.\n     */\n    distinct?: Economic_political_discussion_board_threadsScalarFieldEnum | Economic_political_discussion_board_threadsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads findMany\n   */\n  export type economic_political_discussion_board_threadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_threads to fetch.\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_threads to fetch.\n     */\n    orderBy?: economic_political_discussion_board_threadsOrderByWithRelationInput | economic_political_discussion_board_threadsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_threads.\n     */\n    cursor?: economic_political_discussion_board_threadsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_threads.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_threadsScalarFieldEnum | Economic_political_discussion_board_threadsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads create\n   */\n  export type economic_political_discussion_board_threadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_threads.\n     */\n    data: XOR<economic_political_discussion_board_threadsCreateInput, economic_political_discussion_board_threadsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_threads createMany\n   */\n  export type economic_political_discussion_board_threadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_threads.\n     */\n    data: economic_political_discussion_board_threadsCreateManyInput | economic_political_discussion_board_threadsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_threads createManyAndReturn\n   */\n  export type economic_political_discussion_board_threadsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_threads.\n     */\n    data: economic_political_discussion_board_threadsCreateManyInput | economic_political_discussion_board_threadsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_threads update\n   */\n  export type economic_political_discussion_board_threadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_threads.\n     */\n    data: XOR<economic_political_discussion_board_threadsUpdateInput, economic_political_discussion_board_threadsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_threads to update.\n     */\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_threads updateMany\n   */\n  export type economic_political_discussion_board_threadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_threads.\n     */\n    data: XOR<economic_political_discussion_board_threadsUpdateManyMutationInput, economic_political_discussion_board_threadsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_threads to update\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_threads to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_threads updateManyAndReturn\n   */\n  export type economic_political_discussion_board_threadsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_threads.\n     */\n    data: XOR<economic_political_discussion_board_threadsUpdateManyMutationInput, economic_political_discussion_board_threadsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_threads to update\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_threads to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_threads upsert\n   */\n  export type economic_political_discussion_board_threadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_threads to update in case it exists.\n     */\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_threads found by the `where` argument doesn't exist, create a new economic_political_discussion_board_threads with this data.\n     */\n    create: XOR<economic_political_discussion_board_threadsCreateInput, economic_political_discussion_board_threadsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_threads was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_threadsUpdateInput, economic_political_discussion_board_threadsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_threads delete\n   */\n  export type economic_political_discussion_board_threadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_threads to delete.\n     */\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_threads deleteMany\n   */\n  export type economic_political_discussion_board_threadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_threads to delete\n     */\n    where?: economic_political_discussion_board_threadsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_threads to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_threads.economic_political_discussion_board_thread_snapshots\n   */\n  export type economic_political_discussion_board_threads$economic_political_discussion_board_thread_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput | economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_thread_snapshotsScalarFieldEnum | Economic_political_discussion_board_thread_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads.economic_political_discussion_board_comments\n   */\n  export type economic_political_discussion_board_threads$economic_political_discussion_board_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_commentsWhereInput\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_commentsScalarFieldEnum | Economic_political_discussion_board_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads.economic_political_discussion_board_reports\n   */\n  export type economic_political_discussion_board_threads$economic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_reportsWhereInput\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_threads without action\n   */\n  export type economic_political_discussion_board_threadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_thread_snapshots\n   */\n\n  export type AggregateEconomic_political_discussion_board_thread_snapshots = {\n    _count: Economic_political_discussion_board_thread_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_thread_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_thread_snapshotsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    title: string | null\n    content: string | null\n    status: string | null\n    created_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    title: string | null\n    content: string | null\n    status: string | null\n    created_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_thread_id: number\n    title: number\n    content: number\n    status: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_thread_snapshotsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    title?: true\n    content?: true\n    status?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_thread_snapshots to aggregate.\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput | economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_thread_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_thread_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_thread_snapshots\n    **/\n    _count?: true | Economic_political_discussion_board_thread_snapshotsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_thread_snapshotsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_thread_snapshotsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_thread_snapshotsAggregateType<T extends Economic_political_discussion_board_thread_snapshotsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_thread_snapshots]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_thread_snapshots[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_thread_snapshots[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_thread_snapshotsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithAggregationInput | economic_political_discussion_board_thread_snapshotsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_thread_snapshotsScalarFieldEnum[] | Economic_political_discussion_board_thread_snapshotsScalarFieldEnum\n    having?: economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_thread_snapshotsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_thread_snapshotsMinAggregateInputType\n    _max?: Economic_political_discussion_board_thread_snapshotsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date\n    _count: Economic_political_discussion_board_thread_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_thread_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_thread_snapshotsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_thread_snapshotsGroupByPayload<T extends economic_political_discussion_board_thread_snapshotsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_thread_snapshotsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_thread_snapshotsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_thread_snapshotsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_thread_snapshotsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_thread_snapshotsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_thread_snapshots\"]>\n\n  export type economic_political_discussion_board_thread_snapshotsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_thread_snapshots\"]>\n\n  export type economic_political_discussion_board_thread_snapshotsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_thread_snapshots\"]>\n\n  export type economic_political_discussion_board_thread_snapshotsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    title?: boolean\n    content?: boolean\n    status?: boolean\n    created_at?: boolean\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_thread_id\" | \"title\" | \"content\" | \"status\" | \"created_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_thread_snapshots\"]>\n  export type economic_political_discussion_board_thread_snapshotsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_thread_snapshotsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_thread_snapshotsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_thread_snapshotsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_thread_snapshots\"\n    objects: {\n      thread: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The thread to which this snapshot belongs. {@link\n       * economic_political_discussion_board_threads.id}\n       */\n      economic_political_discussion_board_thread_id: string\n      /**\n       * The title of the thread at the time of the snapshot.\n       */\n      title: string\n      /**\n       * The content of the thread at the time of the snapshot.\n       */\n      content: string\n      /**\n       * The status of the thread at the time of the snapshot.\n       */\n      status: string\n      /**\n       * The timestamp when the snapshot was created.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_thread_snapshots\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_thread_snapshotsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_thread_snapshotsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload, S>\n\n  type economic_political_discussion_board_thread_snapshotsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_thread_snapshotsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_thread_snapshotsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_thread_snapshotsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_thread_snapshots'], meta: { name: 'economic_political_discussion_board_thread_snapshots' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_thread_snapshots that matches the filter.\n     * @param {economic_political_discussion_board_thread_snapshotsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_thread_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_thread_snapshotsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_thread_snapshots that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_thread_snapshotsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_thread_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_thread_snapshotsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_thread_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_thread_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_thread_snapshotsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_thread_snapshots that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_thread_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_thread_snapshotsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_thread_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_thread_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_thread_snapshots.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_thread_snapshotsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsCreateArgs} args - Arguments to create a Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Create one Economic_political_discussion_board_thread_snapshots\n     * const Economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_thread_snapshots\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_thread_snapshotsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_thread_snapshotsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_thread_snapshots and returns the data saved in the database.\n     * @param {economic_political_discussion_board_thread_snapshotsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_thread_snapshots and only return the `id`\n     * const economic_political_discussion_board_thread_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_thread_snapshots.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_thread_snapshotsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Delete one Economic_political_discussion_board_thread_snapshots\n     * const Economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_thread_snapshots\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_thread_snapshotsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Update one Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_thread_snapshotsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_thread_snapshots to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_thread_snapshots\n     * const { count } = await prisma.economic_political_discussion_board_thread_snapshots.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_thread_snapshotsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_thread_snapshotsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_thread_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_thread_snapshotsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_thread_snapshots and returns the data updated in the database.\n     * @param {economic_political_discussion_board_thread_snapshotsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Update many Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_thread_snapshots and only return the `id`\n     * const economic_political_discussion_board_thread_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_thread_snapshots.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_thread_snapshotsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_thread_snapshots.\n     * @param {economic_political_discussion_board_thread_snapshotsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_thread_snapshots.\n     * @example\n     * // Update or create a Economic_political_discussion_board_thread_snapshots\n     * const economic_political_discussion_board_thread_snapshots = await prisma.economic_political_discussion_board_thread_snapshots.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_thread_snapshots\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_thread_snapshots we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_thread_snapshotsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_thread_snapshotsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_thread_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_thread_snapshotsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_thread_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsCountArgs} args - Arguments to filter Economic_political_discussion_board_thread_snapshots to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_thread_snapshots\n     * const count = await prisma.economic_political_discussion_board_thread_snapshots.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_thread_snapshots we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_thread_snapshotsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_thread_snapshotsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_thread_snapshotsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_thread_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_thread_snapshotsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_thread_snapshotsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_thread_snapshotsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_thread_snapshotsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_thread_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_thread_snapshotsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_thread_snapshotsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_thread_snapshotsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_thread_snapshotsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_thread_snapshotsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_thread_snapshotsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_thread_snapshots model\n   */\n  readonly fields: economic_political_discussion_board_thread_snapshotsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_thread_snapshots.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_thread_snapshotsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    thread<T extends economic_political_discussion_board_threadsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_threadsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_thread_snapshots model\n   */\n  interface economic_political_discussion_board_thread_snapshotsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'String'>\n    readonly economic_political_discussion_board_thread_id: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'String'>\n    readonly title: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'String'>\n    readonly content: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'String'>\n    readonly status: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_thread_snapshots\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_thread_snapshots findUnique\n   */\n  export type economic_political_discussion_board_thread_snapshotsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_thread_snapshotsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots findFirst\n   */\n  export type economic_political_discussion_board_thread_snapshotsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput | economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_thread_snapshots.\n     */\n    cursor?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_thread_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_thread_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_thread_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_thread_snapshotsScalarFieldEnum | Economic_political_discussion_board_thread_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots findFirstOrThrow\n   */\n  export type economic_political_discussion_board_thread_snapshotsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput | economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_thread_snapshots.\n     */\n    cursor?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_thread_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_thread_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_thread_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_thread_snapshotsScalarFieldEnum | Economic_political_discussion_board_thread_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots findMany\n   */\n  export type economic_political_discussion_board_thread_snapshotsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_thread_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput | economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_thread_snapshots.\n     */\n    cursor?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_thread_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_thread_snapshots.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_thread_snapshotsScalarFieldEnum | Economic_political_discussion_board_thread_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots create\n   */\n  export type economic_political_discussion_board_thread_snapshotsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_thread_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_thread_snapshotsCreateInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots createMany\n   */\n  export type economic_political_discussion_board_thread_snapshotsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_thread_snapshots.\n     */\n    data: economic_political_discussion_board_thread_snapshotsCreateManyInput | economic_political_discussion_board_thread_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots createManyAndReturn\n   */\n  export type economic_political_discussion_board_thread_snapshotsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_thread_snapshots.\n     */\n    data: economic_political_discussion_board_thread_snapshotsCreateManyInput | economic_political_discussion_board_thread_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots update\n   */\n  export type economic_political_discussion_board_thread_snapshotsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_thread_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_thread_snapshotsUpdateInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_thread_snapshots to update.\n     */\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots updateMany\n   */\n  export type economic_political_discussion_board_thread_snapshotsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_thread_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_thread_snapshotsUpdateManyMutationInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_thread_snapshots to update\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_thread_snapshots to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots updateManyAndReturn\n   */\n  export type economic_political_discussion_board_thread_snapshotsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_thread_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_thread_snapshotsUpdateManyMutationInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_thread_snapshots to update\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_thread_snapshots to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots upsert\n   */\n  export type economic_political_discussion_board_thread_snapshotsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_thread_snapshots to update in case it exists.\n     */\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_thread_snapshots found by the `where` argument doesn't exist, create a new economic_political_discussion_board_thread_snapshots with this data.\n     */\n    create: XOR<economic_political_discussion_board_thread_snapshotsCreateInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_thread_snapshots was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_thread_snapshotsUpdateInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots delete\n   */\n  export type economic_political_discussion_board_thread_snapshotsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_thread_snapshots to delete.\n     */\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots deleteMany\n   */\n  export type economic_political_discussion_board_thread_snapshotsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_thread_snapshots to delete\n     */\n    where?: economic_political_discussion_board_thread_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_thread_snapshots to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_thread_snapshots without action\n   */\n  export type economic_political_discussion_board_thread_snapshotsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_thread_snapshots\n     */\n    select?: economic_political_discussion_board_thread_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_thread_snapshots\n     */\n    omit?: economic_political_discussion_board_thread_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_thread_snapshotsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_comments\n   */\n\n  export type AggregateEconomic_political_discussion_board_comments = {\n    _count: Economic_political_discussion_board_commentsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_commentsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_commentsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_commentsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    economic_political_discussion_board_member_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_commentsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    economic_political_discussion_board_member_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_commentsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_thread_id: number\n    economic_political_discussion_board_member_id: number\n    content: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_commentsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_member_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_commentsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_member_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_commentsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_member_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_comments to aggregate.\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comments to fetch.\n     */\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_comments\n    **/\n    _count?: true | Economic_political_discussion_board_commentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_commentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_commentsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_commentsAggregateType<T extends Economic_political_discussion_board_commentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_comments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_comments[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_comments[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_commentsWhereInput\n    orderBy?: economic_political_discussion_board_commentsOrderByWithAggregationInput | economic_political_discussion_board_commentsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_commentsScalarFieldEnum[] | Economic_political_discussion_board_commentsScalarFieldEnum\n    having?: economic_political_discussion_board_commentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_commentsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_commentsMinAggregateInputType\n    _max?: Economic_political_discussion_board_commentsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_commentsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_commentsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_commentsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_commentsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_commentsGroupByPayload<T extends economic_political_discussion_board_commentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_commentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_commentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_commentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_commentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    economic_political_discussion_board_comment_snapshots?: boolean | economic_political_discussion_board_comments$economic_political_discussion_board_comment_snapshotsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_comments$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comments\"]>\n\n  export type economic_political_discussion_board_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comments\"]>\n\n  export type economic_political_discussion_board_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comments\"]>\n\n  export type economic_political_discussion_board_commentsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_thread_id\" | \"economic_political_discussion_board_member_id\" | \"content\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_comments\"]>\n  export type economic_political_discussion_board_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    economic_political_discussion_board_comment_snapshots?: boolean | economic_political_discussion_board_comments$economic_political_discussion_board_comment_snapshotsArgs<ExtArgs>\n    economic_political_discussion_board_reports?: boolean | economic_political_discussion_board_comments$economic_political_discussion_board_reportsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | economic_political_discussion_board_threadsDefaultArgs<ExtArgs>\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_comments\"\n    objects: {\n      thread: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>\n      member: Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>\n      economic_political_discussion_board_comment_snapshots: Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>[]\n      economic_political_discussion_board_reports: Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The thread this comment belongs to. {@link\n       * economic_political_discussion_board_threads.id}.\n       */\n      economic_political_discussion_board_thread_id: string\n      /**\n       * The member who created this comment. {@link\n       * economic_political_discussion_board_member.id}.\n       */\n      economic_political_discussion_board_member_id: string\n      /**\n       * The text content of the comment.\n       */\n      content: string\n      /**\n       * When the comment was created.\n       */\n      created_at: Date\n      /**\n       * When the comment was last updated.\n       */\n      updated_at: Date\n      /**\n       * When the comment was deleted (soft delete).\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_comments\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_commentsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_commentsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload, S>\n\n  type economic_political_discussion_board_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_commentsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_comments'], meta: { name: 'economic_political_discussion_board_comments' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_comments that matches the filter.\n     * @param {economic_political_discussion_board_commentsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_comments\n     * @example\n     * // Get one Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_commentsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_comments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_commentsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_comments\n     * @example\n     * // Get one Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_comments\n     * @example\n     * // Get one Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_commentsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_comments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_comments\n     * @example\n     * // Get one Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_commentsWithIdOnly = await prisma.economic_political_discussion_board_comments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_commentsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsCreateArgs} args - Arguments to create a Economic_political_discussion_board_comments.\n     * @example\n     * // Create one Economic_political_discussion_board_comments\n     * const Economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_comments\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_commentsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_comments.\n     * @example\n     * // Create many Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_commentsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_comments and returns the data saved in the database.\n     * @param {economic_political_discussion_board_commentsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_comments.\n     * @example\n     * // Create many Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_comments and only return the `id`\n     * const economic_political_discussion_board_commentsWithIdOnly = await prisma.economic_political_discussion_board_comments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_comments.\n     * @example\n     * // Delete one Economic_political_discussion_board_comments\n     * const Economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_comments\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_commentsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_comments.\n     * @example\n     * // Update one Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_commentsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_comments to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_comments\n     * const { count } = await prisma.economic_political_discussion_board_comments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_commentsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_commentsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_comments and returns the data updated in the database.\n     * @param {economic_political_discussion_board_commentsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_comments.\n     * @example\n     * // Update many Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_comments and only return the `id`\n     * const economic_political_discussion_board_commentsWithIdOnly = await prisma.economic_political_discussion_board_comments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_comments.\n     * @param {economic_political_discussion_board_commentsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_comments.\n     * @example\n     * // Update or create a Economic_political_discussion_board_comments\n     * const economic_political_discussion_board_comments = await prisma.economic_political_discussion_board_comments.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_comments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_comments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_commentsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_commentsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsCountArgs} args - Arguments to filter Economic_political_discussion_board_comments to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_comments\n     * const count = await prisma.economic_political_discussion_board_comments.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_comments we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_commentsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_commentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_commentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_commentsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_commentsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_commentsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_commentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_commentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_commentsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_commentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_comments model\n   */\n  readonly fields: economic_political_discussion_board_commentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_comments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    thread<T extends economic_political_discussion_board_threadsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_threadsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    member<T extends economic_political_discussion_board_memberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_memberDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    economic_political_discussion_board_comment_snapshots<T extends economic_political_discussion_board_comments$economic_political_discussion_board_comment_snapshotsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_comments$economic_political_discussion_board_comment_snapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    economic_political_discussion_board_reports<T extends economic_political_discussion_board_comments$economic_political_discussion_board_reportsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_comments$economic_political_discussion_board_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_comments model\n   */\n  interface economic_political_discussion_board_commentsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_comments\", 'String'>\n    readonly economic_political_discussion_board_thread_id: FieldRef<\"economic_political_discussion_board_comments\", 'String'>\n    readonly economic_political_discussion_board_member_id: FieldRef<\"economic_political_discussion_board_comments\", 'String'>\n    readonly content: FieldRef<\"economic_political_discussion_board_comments\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_comments\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_comments\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_comments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_comments findUnique\n   */\n  export type economic_political_discussion_board_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comments to fetch.\n     */\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comments findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comments to fetch.\n     */\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comments findFirst\n   */\n  export type economic_political_discussion_board_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comments to fetch.\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comments to fetch.\n     */\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_comments.\n     */\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_comments.\n     */\n    distinct?: Economic_political_discussion_board_commentsScalarFieldEnum | Economic_political_discussion_board_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comments findFirstOrThrow\n   */\n  export type economic_political_discussion_board_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comments to fetch.\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comments to fetch.\n     */\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_comments.\n     */\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_comments.\n     */\n    distinct?: Economic_political_discussion_board_commentsScalarFieldEnum | Economic_political_discussion_board_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comments findMany\n   */\n  export type economic_political_discussion_board_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comments to fetch.\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comments to fetch.\n     */\n    orderBy?: economic_political_discussion_board_commentsOrderByWithRelationInput | economic_political_discussion_board_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_comments.\n     */\n    cursor?: economic_political_discussion_board_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comments.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_commentsScalarFieldEnum | Economic_political_discussion_board_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comments create\n   */\n  export type economic_political_discussion_board_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_comments.\n     */\n    data: XOR<economic_political_discussion_board_commentsCreateInput, economic_political_discussion_board_commentsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_comments createMany\n   */\n  export type economic_political_discussion_board_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_comments.\n     */\n    data: economic_political_discussion_board_commentsCreateManyInput | economic_political_discussion_board_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_comments createManyAndReturn\n   */\n  export type economic_political_discussion_board_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_comments.\n     */\n    data: economic_political_discussion_board_commentsCreateManyInput | economic_political_discussion_board_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_comments update\n   */\n  export type economic_political_discussion_board_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_comments.\n     */\n    data: XOR<economic_political_discussion_board_commentsUpdateInput, economic_political_discussion_board_commentsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_comments to update.\n     */\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comments updateMany\n   */\n  export type economic_political_discussion_board_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_comments.\n     */\n    data: XOR<economic_political_discussion_board_commentsUpdateManyMutationInput, economic_political_discussion_board_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_comments to update\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_comments updateManyAndReturn\n   */\n  export type economic_political_discussion_board_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_comments.\n     */\n    data: XOR<economic_political_discussion_board_commentsUpdateManyMutationInput, economic_political_discussion_board_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_comments to update\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_comments upsert\n   */\n  export type economic_political_discussion_board_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_comments to update in case it exists.\n     */\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_comments found by the `where` argument doesn't exist, create a new economic_political_discussion_board_comments with this data.\n     */\n    create: XOR<economic_political_discussion_board_commentsCreateInput, economic_political_discussion_board_commentsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_comments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_commentsUpdateInput, economic_political_discussion_board_commentsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_comments delete\n   */\n  export type economic_political_discussion_board_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_comments to delete.\n     */\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comments deleteMany\n   */\n  export type economic_political_discussion_board_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_comments to delete\n     */\n    where?: economic_political_discussion_board_commentsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_comments.economic_political_discussion_board_comment_snapshots\n   */\n  export type economic_political_discussion_board_comments$economic_political_discussion_board_comment_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput | economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_comment_snapshotsScalarFieldEnum | Economic_political_discussion_board_comment_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comments.economic_political_discussion_board_reports\n   */\n  export type economic_political_discussion_board_comments$economic_political_discussion_board_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_reportsWhereInput\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comments without action\n   */\n  export type economic_political_discussion_board_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_comment_snapshots\n   */\n\n  export type AggregateEconomic_political_discussion_board_comment_snapshots = {\n    _count: Economic_political_discussion_board_comment_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_comment_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_comment_snapshotsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_comment_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_comment_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_comment_id: number\n    content: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_comment_snapshotsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_comment_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_comment_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_comment_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_comment_snapshots to aggregate.\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput | economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comment_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comment_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_comment_snapshots\n    **/\n    _count?: true | Economic_political_discussion_board_comment_snapshotsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_comment_snapshotsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_comment_snapshotsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_comment_snapshotsAggregateType<T extends Economic_political_discussion_board_comment_snapshotsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_comment_snapshots]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_comment_snapshots[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_comment_snapshots[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_comment_snapshotsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithAggregationInput | economic_political_discussion_board_comment_snapshotsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_comment_snapshotsScalarFieldEnum[] | Economic_political_discussion_board_comment_snapshotsScalarFieldEnum\n    having?: economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_comment_snapshotsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_comment_snapshotsMinAggregateInputType\n    _max?: Economic_political_discussion_board_comment_snapshotsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_comment_id: string\n    content: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Economic_political_discussion_board_comment_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_comment_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_comment_snapshotsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_comment_snapshotsGroupByPayload<T extends economic_political_discussion_board_comment_snapshotsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_comment_snapshotsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_comment_snapshotsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_comment_snapshotsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_comment_snapshotsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_comment_snapshotsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comment_snapshots\"]>\n\n  export type economic_political_discussion_board_comment_snapshotsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comment_snapshots\"]>\n\n  export type economic_political_discussion_board_comment_snapshotsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_comment_snapshots\"]>\n\n  export type economic_political_discussion_board_comment_snapshotsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_comment_id\" | \"content\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_comment_snapshots\"]>\n  export type economic_political_discussion_board_comment_snapshotsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_comment_snapshotsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_comment_snapshotsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | economic_political_discussion_board_commentsDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_comment_snapshotsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_comment_snapshots\"\n    objects: {\n      comment: Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The comment this snapshot belongs to. {@link\n       * economic_political_discussion_board_comments.id}.\n       */\n      economic_political_discussion_board_comment_id: string\n      /**\n       * The text content of the comment at this snapshot.\n       */\n      content: string\n      /**\n       * When this snapshot was created.\n       */\n      created_at: Date\n      /**\n       * When the comment was last updated at this snapshot.\n       */\n      updated_at: Date\n      /**\n       * When the comment was deleted at this snapshot (soft delete).\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_comment_snapshots\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_comment_snapshotsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_comment_snapshotsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload, S>\n\n  type economic_political_discussion_board_comment_snapshotsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_comment_snapshotsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_comment_snapshotsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_comment_snapshotsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_comment_snapshots'], meta: { name: 'economic_political_discussion_board_comment_snapshots' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_comment_snapshots that matches the filter.\n     * @param {economic_political_discussion_board_comment_snapshotsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_comment_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_comment_snapshotsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_comment_snapshots that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_comment_snapshotsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_comment_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_comment_snapshotsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_comment_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_comment_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_comment_snapshotsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_comment_snapshots that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_comment_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_comment_snapshotsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_comment_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_comment_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_comment_snapshots.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_comment_snapshotsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsCreateArgs} args - Arguments to create a Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Create one Economic_political_discussion_board_comment_snapshots\n     * const Economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_comment_snapshots\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_comment_snapshotsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_comment_snapshotsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_comment_snapshots and returns the data saved in the database.\n     * @param {economic_political_discussion_board_comment_snapshotsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_comment_snapshots and only return the `id`\n     * const economic_political_discussion_board_comment_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_comment_snapshots.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_comment_snapshotsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Delete one Economic_political_discussion_board_comment_snapshots\n     * const Economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_comment_snapshots\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_comment_snapshotsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Update one Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_comment_snapshotsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_comment_snapshots to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_comment_snapshots\n     * const { count } = await prisma.economic_political_discussion_board_comment_snapshots.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_comment_snapshotsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_comment_snapshotsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_comment_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_comment_snapshotsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_comment_snapshots and returns the data updated in the database.\n     * @param {economic_political_discussion_board_comment_snapshotsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Update many Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_comment_snapshots and only return the `id`\n     * const economic_political_discussion_board_comment_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_comment_snapshots.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_comment_snapshotsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_comment_snapshots.\n     * @param {economic_political_discussion_board_comment_snapshotsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_comment_snapshots.\n     * @example\n     * // Update or create a Economic_political_discussion_board_comment_snapshots\n     * const economic_political_discussion_board_comment_snapshots = await prisma.economic_political_discussion_board_comment_snapshots.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_comment_snapshots\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_comment_snapshots we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_comment_snapshotsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_comment_snapshotsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_comment_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_comment_snapshotsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_comment_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsCountArgs} args - Arguments to filter Economic_political_discussion_board_comment_snapshots to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_comment_snapshots\n     * const count = await prisma.economic_political_discussion_board_comment_snapshots.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_comment_snapshots we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_comment_snapshotsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_comment_snapshotsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_comment_snapshotsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_comment_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_comment_snapshotsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_comment_snapshotsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_comment_snapshotsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_comment_snapshotsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_comment_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_comment_snapshotsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_comment_snapshotsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_comment_snapshotsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_comment_snapshotsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_comment_snapshotsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_comment_snapshotsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_comment_snapshots model\n   */\n  readonly fields: economic_political_discussion_board_comment_snapshotsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_comment_snapshots.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_comment_snapshotsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    comment<T extends economic_political_discussion_board_commentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_commentsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_comment_snapshots model\n   */\n  interface economic_political_discussion_board_comment_snapshotsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'String'>\n    readonly economic_political_discussion_board_comment_id: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'String'>\n    readonly content: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"economic_political_discussion_board_comment_snapshots\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_comment_snapshots findUnique\n   */\n  export type economic_political_discussion_board_comment_snapshotsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_comment_snapshotsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots findFirst\n   */\n  export type economic_political_discussion_board_comment_snapshotsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput | economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_comment_snapshots.\n     */\n    cursor?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comment_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comment_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_comment_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_comment_snapshotsScalarFieldEnum | Economic_political_discussion_board_comment_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots findFirstOrThrow\n   */\n  export type economic_political_discussion_board_comment_snapshotsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput | economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_comment_snapshots.\n     */\n    cursor?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comment_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comment_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_comment_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_comment_snapshotsScalarFieldEnum | Economic_political_discussion_board_comment_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots findMany\n   */\n  export type economic_political_discussion_board_comment_snapshotsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_comment_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput | economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_comment_snapshots.\n     */\n    cursor?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_comment_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_comment_snapshots.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_comment_snapshotsScalarFieldEnum | Economic_political_discussion_board_comment_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots create\n   */\n  export type economic_political_discussion_board_comment_snapshotsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_comment_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_comment_snapshotsCreateInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots createMany\n   */\n  export type economic_political_discussion_board_comment_snapshotsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_comment_snapshots.\n     */\n    data: economic_political_discussion_board_comment_snapshotsCreateManyInput | economic_political_discussion_board_comment_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots createManyAndReturn\n   */\n  export type economic_political_discussion_board_comment_snapshotsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_comment_snapshots.\n     */\n    data: economic_political_discussion_board_comment_snapshotsCreateManyInput | economic_political_discussion_board_comment_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots update\n   */\n  export type economic_political_discussion_board_comment_snapshotsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_comment_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_comment_snapshotsUpdateInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_comment_snapshots to update.\n     */\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots updateMany\n   */\n  export type economic_political_discussion_board_comment_snapshotsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_comment_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_comment_snapshotsUpdateManyMutationInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_comment_snapshots to update\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comment_snapshots to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots updateManyAndReturn\n   */\n  export type economic_political_discussion_board_comment_snapshotsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_comment_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_comment_snapshotsUpdateManyMutationInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_comment_snapshots to update\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comment_snapshots to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots upsert\n   */\n  export type economic_political_discussion_board_comment_snapshotsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_comment_snapshots to update in case it exists.\n     */\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_comment_snapshots found by the `where` argument doesn't exist, create a new economic_political_discussion_board_comment_snapshots with this data.\n     */\n    create: XOR<economic_political_discussion_board_comment_snapshotsCreateInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_comment_snapshots was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_comment_snapshotsUpdateInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots delete\n   */\n  export type economic_political_discussion_board_comment_snapshotsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_comment_snapshots to delete.\n     */\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots deleteMany\n   */\n  export type economic_political_discussion_board_comment_snapshotsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_comment_snapshots to delete\n     */\n    where?: economic_political_discussion_board_comment_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_comment_snapshots to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_comment_snapshots without action\n   */\n  export type economic_political_discussion_board_comment_snapshotsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comment_snapshots\n     */\n    select?: economic_political_discussion_board_comment_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comment_snapshots\n     */\n    omit?: economic_political_discussion_board_comment_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_comment_snapshotsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_reports\n   */\n\n  export type AggregateEconomic_political_discussion_board_reports = {\n    _count: Economic_political_discussion_board_reportsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_reportsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_reportsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_reportsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_member_id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    economic_political_discussion_board_comment_id: string | null\n    reason: string | null\n    description: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_reportsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_member_id: string | null\n    economic_political_discussion_board_thread_id: string | null\n    economic_political_discussion_board_comment_id: string | null\n    reason: string | null\n    description: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_reportsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_member_id: number\n    economic_political_discussion_board_thread_id: number\n    economic_political_discussion_board_comment_id: number\n    reason: number\n    description: number\n    status: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_reportsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_member_id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_comment_id?: true\n    reason?: true\n    description?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_reportsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_member_id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_comment_id?: true\n    reason?: true\n    description?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Economic_political_discussion_board_reportsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_member_id?: true\n    economic_political_discussion_board_thread_id?: true\n    economic_political_discussion_board_comment_id?: true\n    reason?: true\n    description?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_reports to aggregate.\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_reports to fetch.\n     */\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_reports\n    **/\n    _count?: true | Economic_political_discussion_board_reportsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_reportsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_reportsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_reportsAggregateType<T extends Economic_political_discussion_board_reportsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_reports]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_reports[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_reports[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_reportsWhereInput\n    orderBy?: economic_political_discussion_board_reportsOrderByWithAggregationInput | economic_political_discussion_board_reportsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_reportsScalarFieldEnum[] | Economic_political_discussion_board_reportsScalarFieldEnum\n    having?: economic_political_discussion_board_reportsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_reportsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_reportsMinAggregateInputType\n    _max?: Economic_political_discussion_board_reportsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_reportsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id: string | null\n    economic_political_discussion_board_comment_id: string | null\n    reason: string\n    description: string | null\n    status: string\n    created_at: Date\n    updated_at: Date\n    _count: Economic_political_discussion_board_reportsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_reportsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_reportsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_reportsGroupByPayload<T extends economic_political_discussion_board_reportsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_reportsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_reportsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_reportsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_reportsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    reason?: boolean\n    description?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n    economic_political_discussion_board_moderation_snapshots?: boolean | economic_political_discussion_board_reports$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_reports\"]>\n\n  export type economic_political_discussion_board_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    reason?: boolean\n    description?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_reports\"]>\n\n  export type economic_political_discussion_board_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    reason?: boolean\n    description?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_reports\"]>\n\n  export type economic_political_discussion_board_reportsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_member_id?: boolean\n    economic_political_discussion_board_thread_id?: boolean\n    economic_political_discussion_board_comment_id?: boolean\n    reason?: boolean\n    description?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type economic_political_discussion_board_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_member_id\" | \"economic_political_discussion_board_thread_id\" | \"economic_political_discussion_board_comment_id\" | \"reason\" | \"description\" | \"status\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_reports\"]>\n  export type economic_political_discussion_board_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n    economic_political_discussion_board_moderation_snapshots?: boolean | economic_political_discussion_board_reports$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>\n    _count?: boolean | Economic_political_discussion_board_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | economic_political_discussion_board_memberDefaultArgs<ExtArgs>\n    thread?: boolean | economic_political_discussion_board_reports$threadArgs<ExtArgs>\n    comment?: boolean | economic_political_discussion_board_reports$commentArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_reports\"\n    objects: {\n      member: Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>\n      thread: Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs> | null\n      comment: Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs> | null\n      economic_political_discussion_board_moderation_snapshots: Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The member who submitted the report. {@link\n       * economic_political_discussion_board_member.id}\n       */\n      economic_political_discussion_board_member_id: string\n      /**\n       * The thread that was reported. {@link\n       * economic_political_discussion_board_threads.id}\n       */\n      economic_political_discussion_board_thread_id: string | null\n      /**\n       * The comment that was reported. {@link\n       * economic_political_discussion_board_comments.id}\n       */\n      economic_political_discussion_board_comment_id: string | null\n      /**\n       * The reason for the report.\n       */\n      reason: string\n      /**\n       * Additional details about the report.\n       */\n      description: string | null\n      /**\n       * The current status of the report (e.g., pending, reviewed, resolved).\n       */\n      status: string\n      /**\n       * The timestamp when the report was created.\n       */\n      created_at: Date\n      /**\n       * The timestamp when the report was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_reports\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_reportsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_reportsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload, S>\n\n  type economic_political_discussion_board_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_reportsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_reports'], meta: { name: 'economic_political_discussion_board_reports' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_reports that matches the filter.\n     * @param {economic_political_discussion_board_reportsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_reports\n     * @example\n     * // Get one Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_reportsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_reports that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_reportsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_reports\n     * @example\n     * // Get one Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_reports\n     * @example\n     * // Get one Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_reportsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_reports that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_reports\n     * @example\n     * // Get one Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_reportsWithIdOnly = await prisma.economic_political_discussion_board_reports.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_reportsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsCreateArgs} args - Arguments to create a Economic_political_discussion_board_reports.\n     * @example\n     * // Create one Economic_political_discussion_board_reports\n     * const Economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_reports\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_reportsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_reports.\n     * @example\n     * // Create many Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_reportsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_reports and returns the data saved in the database.\n     * @param {economic_political_discussion_board_reportsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_reports.\n     * @example\n     * // Create many Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_reports and only return the `id`\n     * const economic_political_discussion_board_reportsWithIdOnly = await prisma.economic_political_discussion_board_reports.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_reports.\n     * @example\n     * // Delete one Economic_political_discussion_board_reports\n     * const Economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_reports\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_reportsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_reports.\n     * @example\n     * // Update one Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_reportsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_reports to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_reports\n     * const { count } = await prisma.economic_political_discussion_board_reports.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_reportsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_reportsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_reports and returns the data updated in the database.\n     * @param {economic_political_discussion_board_reportsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_reports.\n     * @example\n     * // Update many Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_reports and only return the `id`\n     * const economic_political_discussion_board_reportsWithIdOnly = await prisma.economic_political_discussion_board_reports.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_reports.\n     * @param {economic_political_discussion_board_reportsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_reports.\n     * @example\n     * // Update or create a Economic_political_discussion_board_reports\n     * const economic_political_discussion_board_reports = await prisma.economic_political_discussion_board_reports.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_reports\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_reports we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_reportsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_reportsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsCountArgs} args - Arguments to filter Economic_political_discussion_board_reports to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_reports\n     * const count = await prisma.economic_political_discussion_board_reports.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_reports we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_reportsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_reportsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_reportsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_reportsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_reportsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_reportsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_reportsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_reportsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_reportsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_reportsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_reports model\n   */\n  readonly fields: economic_political_discussion_board_reportsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_reports.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member<T extends economic_political_discussion_board_memberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_memberDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_memberClient<$Result.GetResult<Prisma.$economic_political_discussion_board_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends economic_political_discussion_board_reports$threadArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_reports$threadArgs<ExtArgs>>): Prisma__economic_political_discussion_board_threadsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_threadsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends economic_political_discussion_board_reports$commentArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_reports$commentArgs<ExtArgs>>): Prisma__economic_political_discussion_board_commentsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    economic_political_discussion_board_moderation_snapshots<T extends economic_political_discussion_board_reports$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_reports$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_reports model\n   */\n  interface economic_political_discussion_board_reportsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly economic_political_discussion_board_member_id: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly economic_political_discussion_board_thread_id: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly economic_political_discussion_board_comment_id: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly reason: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly description: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly status: FieldRef<\"economic_political_discussion_board_reports\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_reports\", 'DateTime'>\n    readonly updated_at: FieldRef<\"economic_political_discussion_board_reports\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_reports findUnique\n   */\n  export type economic_political_discussion_board_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_reports to fetch.\n     */\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_reports to fetch.\n     */\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports findFirst\n   */\n  export type economic_political_discussion_board_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_reports to fetch.\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_reports to fetch.\n     */\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_reports.\n     */\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_reports.\n     */\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_reports findFirstOrThrow\n   */\n  export type economic_political_discussion_board_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_reports to fetch.\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_reports to fetch.\n     */\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_reports.\n     */\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_reports.\n     */\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_reports findMany\n   */\n  export type economic_political_discussion_board_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_reports to fetch.\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_reports to fetch.\n     */\n    orderBy?: economic_political_discussion_board_reportsOrderByWithRelationInput | economic_political_discussion_board_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_reports.\n     */\n    cursor?: economic_political_discussion_board_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_reports.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_reportsScalarFieldEnum | Economic_political_discussion_board_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_reports create\n   */\n  export type economic_political_discussion_board_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_reports.\n     */\n    data: XOR<economic_political_discussion_board_reportsCreateInput, economic_political_discussion_board_reportsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_reports createMany\n   */\n  export type economic_political_discussion_board_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_reports.\n     */\n    data: economic_political_discussion_board_reportsCreateManyInput | economic_political_discussion_board_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_reports createManyAndReturn\n   */\n  export type economic_political_discussion_board_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_reports.\n     */\n    data: economic_political_discussion_board_reportsCreateManyInput | economic_political_discussion_board_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_reports update\n   */\n  export type economic_political_discussion_board_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_reports.\n     */\n    data: XOR<economic_political_discussion_board_reportsUpdateInput, economic_political_discussion_board_reportsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_reports to update.\n     */\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports updateMany\n   */\n  export type economic_political_discussion_board_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_reports.\n     */\n    data: XOR<economic_political_discussion_board_reportsUpdateManyMutationInput, economic_political_discussion_board_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_reports to update\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_reports to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_reports updateManyAndReturn\n   */\n  export type economic_political_discussion_board_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_reports.\n     */\n    data: XOR<economic_political_discussion_board_reportsUpdateManyMutationInput, economic_political_discussion_board_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_reports to update\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_reports to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_reports upsert\n   */\n  export type economic_political_discussion_board_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_reports to update in case it exists.\n     */\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_reports found by the `where` argument doesn't exist, create a new economic_political_discussion_board_reports with this data.\n     */\n    create: XOR<economic_political_discussion_board_reportsCreateInput, economic_political_discussion_board_reportsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_reports was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_reportsUpdateInput, economic_political_discussion_board_reportsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_reports delete\n   */\n  export type economic_political_discussion_board_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_reports to delete.\n     */\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports deleteMany\n   */\n  export type economic_political_discussion_board_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_reports to delete\n     */\n    where?: economic_political_discussion_board_reportsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_reports to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_reports.thread\n   */\n  export type economic_political_discussion_board_reports$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_threads\n     */\n    select?: economic_political_discussion_board_threadsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_threads\n     */\n    omit?: economic_political_discussion_board_threadsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_threadsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports.comment\n   */\n  export type economic_political_discussion_board_reports$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_comments\n     */\n    select?: economic_political_discussion_board_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_comments\n     */\n    omit?: economic_political_discussion_board_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_commentsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  /**\n   * economic_political_discussion_board_reports.economic_political_discussion_board_moderation_snapshots\n   */\n  export type economic_political_discussion_board_reports$economic_political_discussion_board_moderation_snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_reports without action\n   */\n  export type economic_political_discussion_board_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_reports\n     */\n    select?: economic_political_discussion_board_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_reports\n     */\n    omit?: economic_political_discussion_board_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_reportsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model economic_political_discussion_board_moderation_snapshots\n   */\n\n  export type AggregateEconomic_political_discussion_board_moderation_snapshots = {\n    _count: Economic_political_discussion_board_moderation_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_moderation_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_moderation_snapshotsMaxAggregateOutputType | null\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsMinAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_report_id: string | null\n    economic_political_discussion_board_moderator_id: string | null\n    action: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsMaxAggregateOutputType = {\n    id: string | null\n    economic_political_discussion_board_report_id: string | null\n    economic_political_discussion_board_moderator_id: string | null\n    action: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsCountAggregateOutputType = {\n    id: number\n    economic_political_discussion_board_report_id: number\n    economic_political_discussion_board_moderator_id: number\n    action: number\n    reason: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Economic_political_discussion_board_moderation_snapshotsMinAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_report_id?: true\n    economic_political_discussion_board_moderator_id?: true\n    action?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsMaxAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_report_id?: true\n    economic_political_discussion_board_moderator_id?: true\n    action?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsCountAggregateInputType = {\n    id?: true\n    economic_political_discussion_board_report_id?: true\n    economic_political_discussion_board_moderator_id?: true\n    action?: true\n    reason?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_moderation_snapshots to aggregate.\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderation_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderation_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned economic_political_discussion_board_moderation_snapshots\n    **/\n    _count?: true | Economic_political_discussion_board_moderation_snapshotsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Economic_political_discussion_board_moderation_snapshotsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Economic_political_discussion_board_moderation_snapshotsMaxAggregateInputType\n  }\n\n  export type GetEconomic_political_discussion_board_moderation_snapshotsAggregateType<T extends Economic_political_discussion_board_moderation_snapshotsAggregateArgs> = {\n        [P in keyof T & keyof AggregateEconomic_political_discussion_board_moderation_snapshots]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateEconomic_political_discussion_board_moderation_snapshots[P]>\n      : GetScalarType<T[P], AggregateEconomic_political_discussion_board_moderation_snapshots[P]>\n  }\n\n\n\n\n  export type economic_political_discussion_board_moderation_snapshotsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithAggregationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithAggregationInput[]\n    by: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[] | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum\n    having?: economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Economic_political_discussion_board_moderation_snapshotsCountAggregateInputType | true\n    _min?: Economic_political_discussion_board_moderation_snapshotsMinAggregateInputType\n    _max?: Economic_political_discussion_board_moderation_snapshotsMaxAggregateInputType\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsGroupByOutputType = {\n    id: string\n    economic_political_discussion_board_report_id: string\n    economic_political_discussion_board_moderator_id: string\n    action: string\n    reason: string\n    created_at: Date\n    _count: Economic_political_discussion_board_moderation_snapshotsCountAggregateOutputType | null\n    _min: Economic_political_discussion_board_moderation_snapshotsMinAggregateOutputType | null\n    _max: Economic_political_discussion_board_moderation_snapshotsMaxAggregateOutputType | null\n  }\n\n  type GetEconomic_political_discussion_board_moderation_snapshotsGroupByPayload<T extends economic_political_discussion_board_moderation_snapshotsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Economic_political_discussion_board_moderation_snapshotsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Economic_political_discussion_board_moderation_snapshotsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Economic_political_discussion_board_moderation_snapshotsGroupByOutputType[P]>\n            : GetScalarType<T[P], Economic_political_discussion_board_moderation_snapshotsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_report_id?: boolean\n    economic_political_discussion_board_moderator_id?: boolean\n    action?: boolean\n    reason?: boolean\n    created_at?: boolean\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderation_snapshots\"]>\n\n  export type economic_political_discussion_board_moderation_snapshotsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_report_id?: boolean\n    economic_political_discussion_board_moderator_id?: boolean\n    action?: boolean\n    reason?: boolean\n    created_at?: boolean\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderation_snapshots\"]>\n\n  export type economic_political_discussion_board_moderation_snapshotsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    economic_political_discussion_board_report_id?: boolean\n    economic_political_discussion_board_moderator_id?: boolean\n    action?: boolean\n    reason?: boolean\n    created_at?: boolean\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderation_snapshots\"]>\n\n  export type economic_political_discussion_board_moderation_snapshotsSelectScalar = {\n    id?: boolean\n    economic_political_discussion_board_report_id?: boolean\n    economic_political_discussion_board_moderator_id?: boolean\n    action?: boolean\n    reason?: boolean\n    created_at?: boolean\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"economic_political_discussion_board_report_id\" | \"economic_political_discussion_board_moderator_id\" | \"action\" | \"reason\" | \"created_at\", ExtArgs[\"result\"][\"economic_political_discussion_board_moderation_snapshots\"]>\n  export type economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_moderation_snapshotsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }\n  export type economic_political_discussion_board_moderation_snapshotsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | economic_political_discussion_board_reportsDefaultArgs<ExtArgs>\n    moderator?: boolean | economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>\n  }\n\n  export type $economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"economic_political_discussion_board_moderation_snapshots\"\n    objects: {\n      report: Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>\n      moderator: Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The report that was moderated. {@link\n       * economic_political_discussion_board_reports.id}\n       */\n      economic_political_discussion_board_report_id: string\n      /**\n       * The moderator who took the action. {@link\n       * economic_political_discussion_board_moderator.id}\n       */\n      economic_political_discussion_board_moderator_id: string\n      /**\n       * The action taken by the moderator (e.g., delete, warn, ban).\n       */\n      action: string\n      /**\n       * The reason for the moderation action.\n       */\n      reason: string\n      /**\n       * The timestamp when the moderation action was taken.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"economic_political_discussion_board_moderation_snapshots\"]>\n    composites: {}\n  }\n\n  type economic_political_discussion_board_moderation_snapshotsGetPayload<S extends boolean | null | undefined | economic_political_discussion_board_moderation_snapshotsDefaultArgs> = $Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload, S>\n\n  type economic_political_discussion_board_moderation_snapshotsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<economic_political_discussion_board_moderation_snapshotsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Economic_political_discussion_board_moderation_snapshotsCountAggregateInputType | true\n    }\n\n  export interface economic_political_discussion_board_moderation_snapshotsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['economic_political_discussion_board_moderation_snapshots'], meta: { name: 'economic_political_discussion_board_moderation_snapshots' } }\n    /**\n     * Find zero or one Economic_political_discussion_board_moderation_snapshots that matches the filter.\n     * @param {economic_political_discussion_board_moderation_snapshotsFindUniqueArgs} args - Arguments to find a Economic_political_discussion_board_moderation_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends economic_political_discussion_board_moderation_snapshotsFindUniqueArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsFindUniqueArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Economic_political_discussion_board_moderation_snapshots that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {economic_political_discussion_board_moderation_snapshotsFindUniqueOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_moderation_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends economic_political_discussion_board_moderation_snapshotsFindUniqueOrThrowArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_moderation_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsFindFirstArgs} args - Arguments to find a Economic_political_discussion_board_moderation_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends economic_political_discussion_board_moderation_snapshotsFindFirstArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsFindFirstArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Economic_political_discussion_board_moderation_snapshots that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsFindFirstOrThrowArgs} args - Arguments to find a Economic_political_discussion_board_moderation_snapshots\n     * @example\n     * // Get one Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends economic_political_discussion_board_moderation_snapshotsFindFirstOrThrowArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsFindFirstOrThrowArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Economic_political_discussion_board_moderation_snapshots that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findMany()\n     * \n     * // Get first 10 Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const economic_political_discussion_board_moderation_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_moderation_snapshots.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends economic_political_discussion_board_moderation_snapshotsFindManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsCreateArgs} args - Arguments to create a Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Create one Economic_political_discussion_board_moderation_snapshots\n     * const Economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.create({\n     *   data: {\n     *     // ... data to create a Economic_political_discussion_board_moderation_snapshots\n     *   }\n     * })\n     * \n     */\n    create<T extends economic_political_discussion_board_moderation_snapshotsCreateArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsCreateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsCreateManyArgs} args - Arguments to create many Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends economic_political_discussion_board_moderation_snapshotsCreateManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Economic_political_discussion_board_moderation_snapshots and returns the data saved in the database.\n     * @param {economic_political_discussion_board_moderation_snapshotsCreateManyAndReturnArgs} args - Arguments to create many Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Create many Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Economic_political_discussion_board_moderation_snapshots and only return the `id`\n     * const economic_political_discussion_board_moderation_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_moderation_snapshots.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends economic_political_discussion_board_moderation_snapshotsCreateManyAndReturnArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsDeleteArgs} args - Arguments to delete one Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Delete one Economic_political_discussion_board_moderation_snapshots\n     * const Economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.delete({\n     *   where: {\n     *     // ... filter to delete one Economic_political_discussion_board_moderation_snapshots\n     *   }\n     * })\n     * \n     */\n    delete<T extends economic_political_discussion_board_moderation_snapshotsDeleteArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsDeleteArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsUpdateArgs} args - Arguments to update one Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Update one Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends economic_political_discussion_board_moderation_snapshotsUpdateArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsUpdateArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsDeleteManyArgs} args - Arguments to filter Economic_political_discussion_board_moderation_snapshots to delete.\n     * @example\n     * // Delete a few Economic_political_discussion_board_moderation_snapshots\n     * const { count } = await prisma.economic_political_discussion_board_moderation_snapshots.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends economic_political_discussion_board_moderation_snapshotsDeleteManyArgs>(args?: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_moderation_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends economic_political_discussion_board_moderation_snapshotsUpdateManyArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Economic_political_discussion_board_moderation_snapshots and returns the data updated in the database.\n     * @param {economic_political_discussion_board_moderation_snapshotsUpdateManyAndReturnArgs} args - Arguments to update many Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Update many Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Economic_political_discussion_board_moderation_snapshots and only return the `id`\n     * const economic_political_discussion_board_moderation_snapshotsWithIdOnly = await prisma.economic_political_discussion_board_moderation_snapshots.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends economic_political_discussion_board_moderation_snapshotsUpdateManyAndReturnArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Economic_political_discussion_board_moderation_snapshots.\n     * @param {economic_political_discussion_board_moderation_snapshotsUpsertArgs} args - Arguments to update or create a Economic_political_discussion_board_moderation_snapshots.\n     * @example\n     * // Update or create a Economic_political_discussion_board_moderation_snapshots\n     * const economic_political_discussion_board_moderation_snapshots = await prisma.economic_political_discussion_board_moderation_snapshots.upsert({\n     *   create: {\n     *     // ... data to create a Economic_political_discussion_board_moderation_snapshots\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_moderation_snapshots we want to update\n     *   }\n     * })\n     */\n    upsert<T extends economic_political_discussion_board_moderation_snapshotsUpsertArgs>(args: SelectSubset<T, economic_political_discussion_board_moderation_snapshotsUpsertArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderation_snapshotsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderation_snapshotsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Economic_political_discussion_board_moderation_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsCountArgs} args - Arguments to filter Economic_political_discussion_board_moderation_snapshots to count.\n     * @example\n     * // Count the number of Economic_political_discussion_board_moderation_snapshots\n     * const count = await prisma.economic_political_discussion_board_moderation_snapshots.count({\n     *   where: {\n     *     // ... the filter for the Economic_political_discussion_board_moderation_snapshots we want to count\n     *   }\n     * })\n    **/\n    count<T extends economic_political_discussion_board_moderation_snapshotsCountArgs>(\n      args?: Subset<T, economic_political_discussion_board_moderation_snapshotsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Economic_political_discussion_board_moderation_snapshotsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Economic_political_discussion_board_moderation_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Economic_political_discussion_board_moderation_snapshotsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Economic_political_discussion_board_moderation_snapshotsAggregateArgs>(args: Subset<T, Economic_political_discussion_board_moderation_snapshotsAggregateArgs>): Prisma.PrismaPromise<GetEconomic_political_discussion_board_moderation_snapshotsAggregateType<T>>\n\n    /**\n     * Group by Economic_political_discussion_board_moderation_snapshots.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {economic_political_discussion_board_moderation_snapshotsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends economic_political_discussion_board_moderation_snapshotsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: economic_political_discussion_board_moderation_snapshotsGroupByArgs['orderBy'] }\n        : { orderBy?: economic_political_discussion_board_moderation_snapshotsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, economic_political_discussion_board_moderation_snapshotsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEconomic_political_discussion_board_moderation_snapshotsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the economic_political_discussion_board_moderation_snapshots model\n   */\n  readonly fields: economic_political_discussion_board_moderation_snapshotsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for economic_political_discussion_board_moderation_snapshots.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__economic_political_discussion_board_moderation_snapshotsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    report<T extends economic_political_discussion_board_reportsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_reportsDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_reportsClient<$Result.GetResult<Prisma.$economic_political_discussion_board_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    moderator<T extends economic_political_discussion_board_moderatorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, economic_political_discussion_board_moderatorDefaultArgs<ExtArgs>>): Prisma__economic_political_discussion_board_moderatorClient<$Result.GetResult<Prisma.$economic_political_discussion_board_moderatorPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the economic_political_discussion_board_moderation_snapshots model\n   */\n  interface economic_political_discussion_board_moderation_snapshotsFieldRefs {\n    readonly id: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'String'>\n    readonly economic_political_discussion_board_report_id: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'String'>\n    readonly economic_political_discussion_board_moderator_id: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'String'>\n    readonly action: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'String'>\n    readonly reason: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'String'>\n    readonly created_at: FieldRef<\"economic_political_discussion_board_moderation_snapshots\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * economic_political_discussion_board_moderation_snapshots findUnique\n   */\n  export type economic_political_discussion_board_moderation_snapshotsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots findUniqueOrThrow\n   */\n  export type economic_political_discussion_board_moderation_snapshotsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots findFirst\n   */\n  export type economic_political_discussion_board_moderation_snapshotsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_moderation_snapshots.\n     */\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderation_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderation_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_moderation_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots findFirstOrThrow\n   */\n  export type economic_political_discussion_board_moderation_snapshotsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for economic_political_discussion_board_moderation_snapshots.\n     */\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderation_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderation_snapshots.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of economic_political_discussion_board_moderation_snapshots.\n     */\n    distinct?: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots findMany\n   */\n  export type economic_political_discussion_board_moderation_snapshotsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter, which economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of economic_political_discussion_board_moderation_snapshots to fetch.\n     */\n    orderBy?: economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput | economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing economic_political_discussion_board_moderation_snapshots.\n     */\n    cursor?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` economic_political_discussion_board_moderation_snapshots from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` economic_political_discussion_board_moderation_snapshots.\n     */\n    skip?: number\n    distinct?: Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum | Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum[]\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots create\n   */\n  export type economic_political_discussion_board_moderation_snapshotsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a economic_political_discussion_board_moderation_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_moderation_snapshotsCreateInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots createMany\n   */\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many economic_political_discussion_board_moderation_snapshots.\n     */\n    data: economic_political_discussion_board_moderation_snapshotsCreateManyInput | economic_political_discussion_board_moderation_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots createManyAndReturn\n   */\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to create many economic_political_discussion_board_moderation_snapshots.\n     */\n    data: economic_political_discussion_board_moderation_snapshotsCreateManyInput | economic_political_discussion_board_moderation_snapshotsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots update\n   */\n  export type economic_political_discussion_board_moderation_snapshotsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a economic_political_discussion_board_moderation_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateInput>\n    /**\n     * Choose, which economic_political_discussion_board_moderation_snapshots to update.\n     */\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots updateMany\n   */\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update economic_political_discussion_board_moderation_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateManyMutationInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_moderation_snapshots to update\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderation_snapshots to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots updateManyAndReturn\n   */\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * The data used to update economic_political_discussion_board_moderation_snapshots.\n     */\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateManyMutationInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyInput>\n    /**\n     * Filter which economic_political_discussion_board_moderation_snapshots to update\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderation_snapshots to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots upsert\n   */\n  export type economic_political_discussion_board_moderation_snapshotsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the economic_political_discussion_board_moderation_snapshots to update in case it exists.\n     */\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    /**\n     * In case the economic_political_discussion_board_moderation_snapshots found by the `where` argument doesn't exist, create a new economic_political_discussion_board_moderation_snapshots with this data.\n     */\n    create: XOR<economic_political_discussion_board_moderation_snapshotsCreateInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateInput>\n    /**\n     * In case the economic_political_discussion_board_moderation_snapshots was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<economic_political_discussion_board_moderation_snapshotsUpdateInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateInput>\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots delete\n   */\n  export type economic_political_discussion_board_moderation_snapshotsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n    /**\n     * Filter which economic_political_discussion_board_moderation_snapshots to delete.\n     */\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots deleteMany\n   */\n  export type economic_political_discussion_board_moderation_snapshotsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which economic_political_discussion_board_moderation_snapshots to delete\n     */\n    where?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    /**\n     * Limit how many economic_political_discussion_board_moderation_snapshots to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * economic_political_discussion_board_moderation_snapshots without action\n   */\n  export type economic_political_discussion_board_moderation_snapshotsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the economic_political_discussion_board_moderation_snapshots\n     */\n    select?: economic_political_discussion_board_moderation_snapshotsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the economic_political_discussion_board_moderation_snapshots\n     */\n    omit?: economic_political_discussion_board_moderation_snapshotsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: economic_political_discussion_board_moderation_snapshotsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Economic_political_discussion_board_channelsScalarFieldEnum: {\n    id: 'id',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_channelsScalarFieldEnum = (typeof Economic_political_discussion_board_channelsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_channelsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_sectionsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_channel_id: 'economic_political_discussion_board_channel_id',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_sectionsScalarFieldEnum = (typeof Economic_political_discussion_board_sectionsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_sectionsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_categoriesScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_section_id: 'economic_political_discussion_board_section_id',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_categoriesScalarFieldEnum = (typeof Economic_political_discussion_board_categoriesScalarFieldEnum)[keyof typeof Economic_political_discussion_board_categoriesScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_guestScalarFieldEnum: {\n    id: 'id',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Economic_political_discussion_board_guestScalarFieldEnum = (typeof Economic_political_discussion_board_guestScalarFieldEnum)[keyof typeof Economic_political_discussion_board_guestScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_memberScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    username: 'username',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Economic_political_discussion_board_memberScalarFieldEnum = (typeof Economic_political_discussion_board_memberScalarFieldEnum)[keyof typeof Economic_political_discussion_board_memberScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_moderatorScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    username: 'username',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Economic_political_discussion_board_moderatorScalarFieldEnum = (typeof Economic_political_discussion_board_moderatorScalarFieldEnum)[keyof typeof Economic_political_discussion_board_moderatorScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_adminScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    username: 'username',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Economic_political_discussion_board_adminScalarFieldEnum = (typeof Economic_political_discussion_board_adminScalarFieldEnum)[keyof typeof Economic_political_discussion_board_adminScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_threadsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_channel_id: 'economic_political_discussion_board_channel_id',\n    economic_political_discussion_board_category_id: 'economic_political_discussion_board_category_id',\n    title: 'title',\n    content: 'content',\n    status: 'status',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_threadsScalarFieldEnum = (typeof Economic_political_discussion_board_threadsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_threadsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_thread_snapshotsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_thread_id: 'economic_political_discussion_board_thread_id',\n    title: 'title',\n    content: 'content',\n    status: 'status',\n    created_at: 'created_at'\n  };\n\n  export type Economic_political_discussion_board_thread_snapshotsScalarFieldEnum = (typeof Economic_political_discussion_board_thread_snapshotsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_thread_snapshotsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_commentsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_thread_id: 'economic_political_discussion_board_thread_id',\n    economic_political_discussion_board_member_id: 'economic_political_discussion_board_member_id',\n    content: 'content',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_commentsScalarFieldEnum = (typeof Economic_political_discussion_board_commentsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_commentsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_comment_snapshotsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_comment_id: 'economic_political_discussion_board_comment_id',\n    content: 'content',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Economic_political_discussion_board_comment_snapshotsScalarFieldEnum = (typeof Economic_political_discussion_board_comment_snapshotsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_comment_snapshotsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_reportsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_member_id: 'economic_political_discussion_board_member_id',\n    economic_political_discussion_board_thread_id: 'economic_political_discussion_board_thread_id',\n    economic_political_discussion_board_comment_id: 'economic_political_discussion_board_comment_id',\n    reason: 'reason',\n    description: 'description',\n    status: 'status',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Economic_political_discussion_board_reportsScalarFieldEnum = (typeof Economic_political_discussion_board_reportsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_reportsScalarFieldEnum]\n\n\n  export const Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum: {\n    id: 'id',\n    economic_political_discussion_board_report_id: 'economic_political_discussion_board_report_id',\n    economic_political_discussion_board_moderator_id: 'economic_political_discussion_board_moderator_id',\n    action: 'action',\n    reason: 'reason',\n    created_at: 'created_at'\n  };\n\n  export type Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum = (typeof Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum)[keyof typeof Economic_political_discussion_board_moderation_snapshotsScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type economic_political_discussion_board_channelsWhereInput = {\n    AND?: economic_political_discussion_board_channelsWhereInput | economic_political_discussion_board_channelsWhereInput[]\n    OR?: economic_political_discussion_board_channelsWhereInput[]\n    NOT?: economic_political_discussion_board_channelsWhereInput | economic_political_discussion_board_channelsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_channels\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_channels\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_channels\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_channels\"> | Date | string | null\n    economic_political_discussion_board_sections?: Economic_political_discussion_board_sectionsListRelationFilter\n    economic_political_discussion_board_threads?: Economic_political_discussion_board_threadsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_channelsOrderByWithRelationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsOrderByRelationAggregateInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_channelsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: economic_political_discussion_board_channelsWhereInput | economic_political_discussion_board_channelsWhereInput[]\n    OR?: economic_political_discussion_board_channelsWhereInput[]\n    NOT?: economic_political_discussion_board_channelsWhereInput | economic_political_discussion_board_channelsWhereInput[]\n    description?: StringNullableFilter<\"economic_political_discussion_board_channels\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_channels\"> | Date | string | null\n    economic_political_discussion_board_sections?: Economic_political_discussion_board_sectionsListRelationFilter\n    economic_political_discussion_board_threads?: Economic_political_discussion_board_threadsListRelationFilter\n  }, \"id\" | \"name\">\n\n  export type economic_political_discussion_board_channelsOrderByWithAggregationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_channelsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_channelsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_channelsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_channelsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_channelsScalarWhereWithAggregatesInput | economic_political_discussion_board_channelsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_channelsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_channelsScalarWhereWithAggregatesInput | economic_political_discussion_board_channelsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | string\n    name?: StringWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | string\n    description?: StringNullableWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_channels\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsWhereInput = {\n    AND?: economic_political_discussion_board_sectionsWhereInput | economic_political_discussion_board_sectionsWhereInput[]\n    OR?: economic_political_discussion_board_sectionsWhereInput[]\n    NOT?: economic_political_discussion_board_sectionsWhereInput | economic_political_discussion_board_sectionsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_sections\"> | string\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_sections\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_sections\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_sections\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_sections\"> | Date | string | null\n    channel?: XOR<Economic_political_discussion_board_channelsScalarRelationFilter, economic_political_discussion_board_channelsWhereInput>\n    economic_political_discussion_board_categories?: Economic_political_discussion_board_categoriesListRelationFilter\n  }\n\n  export type economic_political_discussion_board_sectionsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    channel?: economic_political_discussion_board_channelsOrderByWithRelationInput\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_sectionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    economic_political_discussion_board_channel_id_name?: economic_political_discussion_board_sectionsEconomic_political_discussion_board_channel_idNameCompoundUniqueInput\n    AND?: economic_political_discussion_board_sectionsWhereInput | economic_political_discussion_board_sectionsWhereInput[]\n    OR?: economic_political_discussion_board_sectionsWhereInput[]\n    NOT?: economic_political_discussion_board_sectionsWhereInput | economic_political_discussion_board_sectionsWhereInput[]\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_sections\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_sections\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_sections\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_sections\"> | Date | string | null\n    channel?: XOR<Economic_political_discussion_board_channelsScalarRelationFilter, economic_political_discussion_board_channelsWhereInput>\n    economic_political_discussion_board_categories?: Economic_political_discussion_board_categoriesListRelationFilter\n  }, \"id\" | \"economic_political_discussion_board_channel_id_name\">\n\n  export type economic_political_discussion_board_sectionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_sectionsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_sectionsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_sectionsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput | economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput | economic_political_discussion_board_sectionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | string\n    economic_political_discussion_board_channel_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | string\n    name?: StringWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | string\n    description?: StringNullableWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_sections\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesWhereInput = {\n    AND?: economic_political_discussion_board_categoriesWhereInput | economic_political_discussion_board_categoriesWhereInput[]\n    OR?: economic_political_discussion_board_categoriesWhereInput[]\n    NOT?: economic_political_discussion_board_categoriesWhereInput | economic_political_discussion_board_categoriesWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_categories\"> | string\n    economic_political_discussion_board_section_id?: UuidFilter<\"economic_political_discussion_board_categories\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_categories\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_categories\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_categories\"> | Date | string | null\n    section?: XOR<Economic_political_discussion_board_sectionsScalarRelationFilter, economic_political_discussion_board_sectionsWhereInput>\n    economic_political_discussion_board_threads?: Economic_political_discussion_board_threadsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_categoriesOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    section?: economic_political_discussion_board_sectionsOrderByWithRelationInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_categoriesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    economic_political_discussion_board_section_id_name?: economic_political_discussion_board_categoriesEconomic_political_discussion_board_section_idNameCompoundUniqueInput\n    AND?: economic_political_discussion_board_categoriesWhereInput | economic_political_discussion_board_categoriesWhereInput[]\n    OR?: economic_political_discussion_board_categoriesWhereInput[]\n    NOT?: economic_political_discussion_board_categoriesWhereInput | economic_political_discussion_board_categoriesWhereInput[]\n    economic_political_discussion_board_section_id?: UuidFilter<\"economic_political_discussion_board_categories\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_categories\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_categories\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_categories\"> | Date | string | null\n    section?: XOR<Economic_political_discussion_board_sectionsScalarRelationFilter, economic_political_discussion_board_sectionsWhereInput>\n    economic_political_discussion_board_threads?: Economic_political_discussion_board_threadsListRelationFilter\n  }, \"id\" | \"economic_political_discussion_board_section_id_name\">\n\n  export type economic_political_discussion_board_categoriesOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_categoriesCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_categoriesMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_categoriesMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput | economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput | economic_political_discussion_board_categoriesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | string\n    economic_political_discussion_board_section_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | string\n    name?: StringWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | string\n    description?: StringNullableWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_categories\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_guestWhereInput = {\n    AND?: economic_political_discussion_board_guestWhereInput | economic_political_discussion_board_guestWhereInput[]\n    OR?: economic_political_discussion_board_guestWhereInput[]\n    NOT?: economic_political_discussion_board_guestWhereInput | economic_political_discussion_board_guestWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_guest\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_guest\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_guest\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_guestOrderByWithRelationInput = {\n    id?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_guestWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_guestWhereInput | economic_political_discussion_board_guestWhereInput[]\n    OR?: economic_political_discussion_board_guestWhereInput[]\n    NOT?: economic_political_discussion_board_guestWhereInput | economic_political_discussion_board_guestWhereInput[]\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_guest\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_guest\"> | Date | string\n  }, \"id\">\n\n  export type economic_political_discussion_board_guestOrderByWithAggregationInput = {\n    id?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: economic_political_discussion_board_guestCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_guestMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_guestMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_guestScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_guestScalarWhereWithAggregatesInput | economic_political_discussion_board_guestScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_guestScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_guestScalarWhereWithAggregatesInput | economic_political_discussion_board_guestScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_guest\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_guest\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_guest\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_memberWhereInput = {\n    AND?: economic_political_discussion_board_memberWhereInput | economic_political_discussion_board_memberWhereInput[]\n    OR?: economic_political_discussion_board_memberWhereInput[]\n    NOT?: economic_political_discussion_board_memberWhereInput | economic_political_discussion_board_memberWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_member\"> | string\n    email?: StringFilter<\"economic_political_discussion_board_member\"> | string\n    password_hash?: StringFilter<\"economic_political_discussion_board_member\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_member\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_member\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_member\"> | Date | string\n    economic_political_discussion_board_comments?: Economic_political_discussion_board_commentsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_memberOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsOrderByRelationAggregateInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_memberWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: economic_political_discussion_board_memberWhereInput | economic_political_discussion_board_memberWhereInput[]\n    OR?: economic_political_discussion_board_memberWhereInput[]\n    NOT?: economic_political_discussion_board_memberWhereInput | economic_political_discussion_board_memberWhereInput[]\n    password_hash?: StringFilter<\"economic_political_discussion_board_member\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_member\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_member\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_member\"> | Date | string\n    economic_political_discussion_board_comments?: Economic_political_discussion_board_commentsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }, \"id\" | \"email\">\n\n  export type economic_political_discussion_board_memberOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: economic_political_discussion_board_memberCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_memberMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_memberMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_memberScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_memberScalarWhereWithAggregatesInput | economic_political_discussion_board_memberScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_memberScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_memberScalarWhereWithAggregatesInput | economic_political_discussion_board_memberScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_member\"> | string\n    email?: StringWithAggregatesFilter<\"economic_political_discussion_board_member\"> | string\n    password_hash?: StringWithAggregatesFilter<\"economic_political_discussion_board_member\"> | string\n    username?: StringWithAggregatesFilter<\"economic_political_discussion_board_member\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_member\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_member\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorWhereInput = {\n    AND?: economic_political_discussion_board_moderatorWhereInput | economic_political_discussion_board_moderatorWhereInput[]\n    OR?: economic_political_discussion_board_moderatorWhereInput[]\n    NOT?: economic_political_discussion_board_moderatorWhereInput | economic_political_discussion_board_moderatorWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_moderator\"> | string\n    email?: StringFilter<\"economic_political_discussion_board_moderator\"> | string\n    password_hash?: StringFilter<\"economic_political_discussion_board_moderator\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_moderator\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n    economic_political_discussion_board_moderation_snapshots?: Economic_political_discussion_board_moderation_snapshotsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_moderatorOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_moderatorWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: economic_political_discussion_board_moderatorWhereInput | economic_political_discussion_board_moderatorWhereInput[]\n    OR?: economic_political_discussion_board_moderatorWhereInput[]\n    NOT?: economic_political_discussion_board_moderatorWhereInput | economic_political_discussion_board_moderatorWhereInput[]\n    password_hash?: StringFilter<\"economic_political_discussion_board_moderator\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_moderator\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n    economic_political_discussion_board_moderation_snapshots?: Economic_political_discussion_board_moderation_snapshotsListRelationFilter\n  }, \"id\" | \"email\">\n\n  export type economic_political_discussion_board_moderatorOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: economic_political_discussion_board_moderatorCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_moderatorMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_moderatorMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput | economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput | economic_political_discussion_board_moderatorScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | string\n    email?: StringWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | string\n    password_hash?: StringWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | string\n    username?: StringWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_moderator\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_adminWhereInput = {\n    AND?: economic_political_discussion_board_adminWhereInput | economic_political_discussion_board_adminWhereInput[]\n    OR?: economic_political_discussion_board_adminWhereInput[]\n    NOT?: economic_political_discussion_board_adminWhereInput | economic_political_discussion_board_adminWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_admin\"> | string\n    email?: StringFilter<\"economic_political_discussion_board_admin\"> | string\n    password_hash?: StringFilter<\"economic_political_discussion_board_admin\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_admin\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_admin\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_admin\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_adminOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_adminWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: economic_political_discussion_board_adminWhereInput | economic_political_discussion_board_adminWhereInput[]\n    OR?: economic_political_discussion_board_adminWhereInput[]\n    NOT?: economic_political_discussion_board_adminWhereInput | economic_political_discussion_board_adminWhereInput[]\n    password_hash?: StringFilter<\"economic_political_discussion_board_admin\"> | string\n    username?: StringFilter<\"economic_political_discussion_board_admin\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_admin\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_admin\"> | Date | string\n  }, \"id\" | \"email\">\n\n  export type economic_political_discussion_board_adminOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: economic_political_discussion_board_adminCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_adminMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_adminMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_adminScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_adminScalarWhereWithAggregatesInput | economic_political_discussion_board_adminScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_adminScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_adminScalarWhereWithAggregatesInput | economic_political_discussion_board_adminScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | string\n    email?: StringWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | string\n    password_hash?: StringWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | string\n    username?: StringWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_admin\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_threadsWhereInput = {\n    AND?: economic_political_discussion_board_threadsWhereInput | economic_political_discussion_board_threadsWhereInput[]\n    OR?: economic_political_discussion_board_threadsWhereInput[]\n    NOT?: economic_political_discussion_board_threadsWhereInput | economic_political_discussion_board_threadsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_category_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_threads\"> | Date | string | null\n    channel?: XOR<Economic_political_discussion_board_channelsScalarRelationFilter, economic_political_discussion_board_channelsWhereInput>\n    category?: XOR<Economic_political_discussion_board_categoriesScalarRelationFilter, economic_political_discussion_board_categoriesWhereInput>\n    economic_political_discussion_board_thread_snapshots?: Economic_political_discussion_board_thread_snapshotsListRelationFilter\n    economic_political_discussion_board_comments?: Economic_political_discussion_board_commentsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_threadsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    economic_political_discussion_board_category_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    channel?: economic_political_discussion_board_channelsOrderByWithRelationInput\n    category?: economic_political_discussion_board_categoriesOrderByWithRelationInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsOrderByRelationAggregateInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsOrderByRelationAggregateInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_threadsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_threadsWhereInput | economic_political_discussion_board_threadsWhereInput[]\n    OR?: economic_political_discussion_board_threadsWhereInput[]\n    NOT?: economic_political_discussion_board_threadsWhereInput | economic_political_discussion_board_threadsWhereInput[]\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_category_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_threads\"> | Date | string | null\n    channel?: XOR<Economic_political_discussion_board_channelsScalarRelationFilter, economic_political_discussion_board_channelsWhereInput>\n    category?: XOR<Economic_political_discussion_board_categoriesScalarRelationFilter, economic_political_discussion_board_categoriesWhereInput>\n    economic_political_discussion_board_thread_snapshots?: Economic_political_discussion_board_thread_snapshotsListRelationFilter\n    economic_political_discussion_board_comments?: Economic_political_discussion_board_commentsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }, \"id\">\n\n  export type economic_political_discussion_board_threadsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    economic_political_discussion_board_category_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_threadsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_threadsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_threadsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_threadsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_threadsScalarWhereWithAggregatesInput | economic_political_discussion_board_threadsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_threadsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_threadsScalarWhereWithAggregatesInput | economic_political_discussion_board_threadsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_channel_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_category_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    title?: StringWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    content?: StringWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    status?: StringWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_threads\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsWhereInput = {\n    AND?: economic_political_discussion_board_thread_snapshotsWhereInput | economic_political_discussion_board_thread_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_thread_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_thread_snapshotsWhereInput | economic_political_discussion_board_thread_snapshotsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_thread_snapshots\"> | Date | string\n    thread?: XOR<Economic_political_discussion_board_threadsScalarRelationFilter, economic_political_discussion_board_threadsWhereInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    thread?: economic_political_discussion_board_threadsOrderByWithRelationInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_thread_snapshotsWhereInput | economic_political_discussion_board_thread_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_thread_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_thread_snapshotsWhereInput | economic_political_discussion_board_thread_snapshotsWhereInput[]\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_thread_snapshots\"> | Date | string\n    thread?: XOR<Economic_political_discussion_board_threadsScalarRelationFilter, economic_political_discussion_board_threadsWhereInput>\n  }, \"id\">\n\n  export type economic_political_discussion_board_thread_snapshotsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    _count?: economic_political_discussion_board_thread_snapshotsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_thread_snapshotsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_thread_snapshotsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_thread_snapshotsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    economic_political_discussion_board_thread_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    title?: StringWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    content?: StringWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    status?: StringWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_thread_snapshots\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_commentsWhereInput = {\n    AND?: economic_political_discussion_board_commentsWhereInput | economic_political_discussion_board_commentsWhereInput[]\n    OR?: economic_political_discussion_board_commentsWhereInput[]\n    NOT?: economic_political_discussion_board_commentsWhereInput | economic_political_discussion_board_commentsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comments\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comments\"> | Date | string | null\n    thread?: XOR<Economic_political_discussion_board_threadsScalarRelationFilter, economic_political_discussion_board_threadsWhereInput>\n    member?: XOR<Economic_political_discussion_board_memberScalarRelationFilter, economic_political_discussion_board_memberWhereInput>\n    economic_political_discussion_board_comment_snapshots?: Economic_political_discussion_board_comment_snapshotsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_commentsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    thread?: economic_political_discussion_board_threadsOrderByWithRelationInput\n    member?: economic_political_discussion_board_memberOrderByWithRelationInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsOrderByRelationAggregateInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_commentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_commentsWhereInput | economic_political_discussion_board_commentsWhereInput[]\n    OR?: economic_political_discussion_board_commentsWhereInput[]\n    NOT?: economic_political_discussion_board_commentsWhereInput | economic_political_discussion_board_commentsWhereInput[]\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comments\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comments\"> | Date | string | null\n    thread?: XOR<Economic_political_discussion_board_threadsScalarRelationFilter, economic_political_discussion_board_threadsWhereInput>\n    member?: XOR<Economic_political_discussion_board_memberScalarRelationFilter, economic_political_discussion_board_memberWhereInput>\n    economic_political_discussion_board_comment_snapshots?: Economic_political_discussion_board_comment_snapshotsListRelationFilter\n    economic_political_discussion_board_reports?: Economic_political_discussion_board_reportsListRelationFilter\n  }, \"id\">\n\n  export type economic_political_discussion_board_commentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_commentsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_commentsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_commentsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_commentsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_commentsScalarWhereWithAggregatesInput | economic_political_discussion_board_commentsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_commentsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_commentsScalarWhereWithAggregatesInput | economic_political_discussion_board_commentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_thread_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_member_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | string\n    content?: StringWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_comments\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsWhereInput = {\n    AND?: economic_political_discussion_board_comment_snapshotsWhereInput | economic_political_discussion_board_comment_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_comment_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_comment_snapshotsWhereInput | economic_political_discussion_board_comment_snapshotsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    economic_political_discussion_board_comment_id?: UuidFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string | null\n    comment?: XOR<Economic_political_discussion_board_commentsScalarRelationFilter, economic_political_discussion_board_commentsWhereInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    comment?: economic_political_discussion_board_commentsOrderByWithRelationInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_comment_snapshotsWhereInput | economic_political_discussion_board_comment_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_comment_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_comment_snapshotsWhereInput | economic_political_discussion_board_comment_snapshotsWhereInput[]\n    economic_political_discussion_board_comment_id?: UuidFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string | null\n    comment?: XOR<Economic_political_discussion_board_commentsScalarRelationFilter, economic_political_discussion_board_commentsWhereInput>\n  }, \"id\">\n\n  export type economic_political_discussion_board_comment_snapshotsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: economic_political_discussion_board_comment_snapshotsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_comment_snapshotsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_comment_snapshotsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_comment_snapshotsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    economic_political_discussion_board_comment_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    content?: StringWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsWhereInput = {\n    AND?: economic_political_discussion_board_reportsWhereInput | economic_political_discussion_board_reportsWhereInput[]\n    OR?: economic_political_discussion_board_reportsWhereInput[]\n    NOT?: economic_political_discussion_board_reportsWhereInput | economic_political_discussion_board_reportsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_thread_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    economic_political_discussion_board_comment_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    reason?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    status?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    member?: XOR<Economic_political_discussion_board_memberScalarRelationFilter, economic_political_discussion_board_memberWhereInput>\n    thread?: XOR<Economic_political_discussion_board_threadsNullableScalarRelationFilter, economic_political_discussion_board_threadsWhereInput> | null\n    comment?: XOR<Economic_political_discussion_board_commentsNullableScalarRelationFilter, economic_political_discussion_board_commentsWhereInput> | null\n    economic_political_discussion_board_moderation_snapshots?: Economic_political_discussion_board_moderation_snapshotsListRelationFilter\n  }\n\n  export type economic_political_discussion_board_reportsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrderInput | SortOrder\n    economic_political_discussion_board_comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    description?: SortOrderInput | SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    member?: economic_political_discussion_board_memberOrderByWithRelationInput\n    thread?: economic_political_discussion_board_threadsOrderByWithRelationInput\n    comment?: economic_political_discussion_board_commentsOrderByWithRelationInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsOrderByRelationAggregateInput\n  }\n\n  export type economic_political_discussion_board_reportsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_reportsWhereInput | economic_political_discussion_board_reportsWhereInput[]\n    OR?: economic_political_discussion_board_reportsWhereInput[]\n    NOT?: economic_political_discussion_board_reportsWhereInput | economic_political_discussion_board_reportsWhereInput[]\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_thread_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    economic_political_discussion_board_comment_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    reason?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    status?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    member?: XOR<Economic_political_discussion_board_memberScalarRelationFilter, economic_political_discussion_board_memberWhereInput>\n    thread?: XOR<Economic_political_discussion_board_threadsNullableScalarRelationFilter, economic_political_discussion_board_threadsWhereInput> | null\n    comment?: XOR<Economic_political_discussion_board_commentsNullableScalarRelationFilter, economic_political_discussion_board_commentsWhereInput> | null\n    economic_political_discussion_board_moderation_snapshots?: Economic_political_discussion_board_moderation_snapshotsListRelationFilter\n  }, \"id\">\n\n  export type economic_political_discussion_board_reportsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrderInput | SortOrder\n    economic_political_discussion_board_comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    description?: SortOrderInput | SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: economic_political_discussion_board_reportsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_reportsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_reportsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_reportsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_reportsScalarWhereWithAggregatesInput | economic_political_discussion_board_reportsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_reportsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_reportsScalarWhereWithAggregatesInput | economic_political_discussion_board_reportsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_member_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_thread_id?: UuidNullableWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string | null\n    economic_political_discussion_board_comment_id?: UuidNullableWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string | null\n    reason?: StringWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string\n    description?: StringNullableWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string | null\n    status?: StringWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_reports\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsWhereInput = {\n    AND?: economic_political_discussion_board_moderation_snapshotsWhereInput | economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_moderation_snapshotsWhereInput | economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_report_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_moderator_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    action?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    reason?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_moderation_snapshots\"> | Date | string\n    report?: XOR<Economic_political_discussion_board_reportsScalarRelationFilter, economic_political_discussion_board_reportsWhereInput>\n    moderator?: XOR<Economic_political_discussion_board_moderatorScalarRelationFilter, economic_political_discussion_board_moderatorWhereInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsOrderByWithRelationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_report_id?: SortOrder\n    economic_political_discussion_board_moderator_id?: SortOrder\n    action?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    report?: economic_political_discussion_board_reportsOrderByWithRelationInput\n    moderator?: economic_political_discussion_board_moderatorOrderByWithRelationInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: economic_political_discussion_board_moderation_snapshotsWhereInput | economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    OR?: economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    NOT?: economic_political_discussion_board_moderation_snapshotsWhereInput | economic_political_discussion_board_moderation_snapshotsWhereInput[]\n    economic_political_discussion_board_report_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_moderator_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    action?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    reason?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_moderation_snapshots\"> | Date | string\n    report?: XOR<Economic_political_discussion_board_reportsScalarRelationFilter, economic_political_discussion_board_reportsWhereInput>\n    moderator?: XOR<Economic_political_discussion_board_moderatorScalarRelationFilter, economic_political_discussion_board_moderatorWhereInput>\n  }, \"id\">\n\n  export type economic_political_discussion_board_moderation_snapshotsOrderByWithAggregationInput = {\n    id?: SortOrder\n    economic_political_discussion_board_report_id?: SortOrder\n    economic_political_discussion_board_moderator_id?: SortOrder\n    action?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    _count?: economic_political_discussion_board_moderation_snapshotsCountOrderByAggregateInput\n    _max?: economic_political_discussion_board_moderation_snapshotsMaxOrderByAggregateInput\n    _min?: economic_political_discussion_board_moderation_snapshotsMinOrderByAggregateInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput = {\n    AND?: economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput[]\n    OR?: economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput[]\n    NOT?: economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput | economic_political_discussion_board_moderation_snapshotsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_report_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_moderator_id?: UuidWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    action?: StringWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    reason?: StringWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"economic_political_discussion_board_moderation_snapshots\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_channelsCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsCreateNestedManyWithoutChannelInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUncheckedCreateNestedManyWithoutChannelInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUpdateManyWithoutChannelNestedInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUncheckedUpdateManyWithoutChannelNestedInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_channelsCreateManyInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_channelsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_sectionsInput\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesCreateNestedManyWithoutSectionInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUncheckedCreateNestedManyWithoutSectionInput\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_sectionsNestedInput\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUpdateManyWithoutSectionNestedInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUncheckedUpdateManyWithoutSectionNestedInput\n  }\n\n  export type economic_political_discussion_board_sectionsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    section: economic_political_discussion_board_sectionsCreateNestedOneWithoutEconomic_political_discussion_board_categoriesInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsCreateNestedManyWithoutCategoryInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_section_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutCategoryInput\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    section?: economic_political_discussion_board_sectionsUpdateOneRequiredWithoutEconomic_political_discussion_board_categoriesNestedInput\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesCreateManyInput = {\n    id: string\n    economic_political_discussion_board_section_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_guestCreateInput = {\n    id: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_guestUncheckedCreateInput = {\n    id: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_guestUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_guestUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_guestCreateManyInput = {\n    id: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_guestUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_guestUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_memberCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutMemberInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutMemberInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutMemberNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutMemberNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_memberCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_memberUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_memberUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutModeratorInput\n  }\n\n  export type economic_political_discussion_board_moderatorUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutModeratorInput\n  }\n\n  export type economic_political_discussion_board_moderatorUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutModeratorNestedInput\n  }\n\n  export type economic_political_discussion_board_moderatorUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutModeratorNestedInput\n  }\n\n  export type economic_political_discussion_board_moderatorCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_adminCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_adminUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_adminUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_adminUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_adminCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_adminUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_adminUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_threadsCreateInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    category: economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    category?: economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    thread: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_thread_snapshotsInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_thread_snapshotsNestedInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_commentsCreateInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_commentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    comment: economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_comment_snapshotsInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_comment_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    comment?: economic_political_discussion_board_commentsUpdateOneRequiredWithoutEconomic_political_discussion_board_comment_snapshotsNestedInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_comment_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_comment_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_comment_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsCreateInput = {\n    id: string\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    thread?: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    comment?: economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id?: string | null\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_reportsNestedInput\n    thread?: economic_political_discussion_board_threadsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    comment?: economic_political_discussion_board_commentsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id?: string | null\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateInput = {\n    id: string\n    action: string\n    reason: string\n    created_at: Date | string\n    report: economic_political_discussion_board_reportsCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    moderator: economic_political_discussion_board_moderatorCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedCreateInput = {\n    id: string\n    economic_political_discussion_board_report_id: string\n    economic_political_discussion_board_moderator_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: economic_political_discussion_board_reportsUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput\n    moderator?: economic_political_discussion_board_moderatorUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_report_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_moderator_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyInput = {\n    id: string\n    economic_political_discussion_board_report_id: string\n    economic_political_discussion_board_moderator_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_report_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_moderator_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Economic_political_discussion_board_sectionsListRelationFilter = {\n    every?: economic_political_discussion_board_sectionsWhereInput\n    some?: economic_political_discussion_board_sectionsWhereInput\n    none?: economic_political_discussion_board_sectionsWhereInput\n  }\n\n  export type Economic_political_discussion_board_threadsListRelationFilter = {\n    every?: economic_political_discussion_board_threadsWhereInput\n    some?: economic_political_discussion_board_threadsWhereInput\n    none?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type economic_political_discussion_board_sectionsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_threadsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_channelsCountOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_channelsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_channelsMinOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type Economic_political_discussion_board_channelsScalarRelationFilter = {\n    is?: economic_political_discussion_board_channelsWhereInput\n    isNot?: economic_political_discussion_board_channelsWhereInput\n  }\n\n  export type Economic_political_discussion_board_categoriesListRelationFilter = {\n    every?: economic_political_discussion_board_categoriesWhereInput\n    some?: economic_political_discussion_board_categoriesWhereInput\n    none?: economic_political_discussion_board_categoriesWhereInput\n  }\n\n  export type economic_political_discussion_board_categoriesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_sectionsEconomic_political_discussion_board_channel_idNameCompoundUniqueInput = {\n    economic_political_discussion_board_channel_id: string\n    name: string\n  }\n\n  export type economic_political_discussion_board_sectionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_sectionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_sectionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_sectionsScalarRelationFilter = {\n    is?: economic_political_discussion_board_sectionsWhereInput\n    isNot?: economic_political_discussion_board_sectionsWhereInput\n  }\n\n  export type economic_political_discussion_board_categoriesEconomic_political_discussion_board_section_idNameCompoundUniqueInput = {\n    economic_political_discussion_board_section_id: string\n    name: string\n  }\n\n  export type economic_political_discussion_board_categoriesCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_categoriesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_categoriesMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_guestCountOrderByAggregateInput = {\n    id?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_guestMaxOrderByAggregateInput = {\n    id?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_guestMinOrderByAggregateInput = {\n    id?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_commentsListRelationFilter = {\n    every?: economic_political_discussion_board_commentsWhereInput\n    some?: economic_political_discussion_board_commentsWhereInput\n    none?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  export type Economic_political_discussion_board_reportsListRelationFilter = {\n    every?: economic_political_discussion_board_reportsWhereInput\n    some?: economic_political_discussion_board_reportsWhereInput\n    none?: economic_political_discussion_board_reportsWhereInput\n  }\n\n  export type economic_political_discussion_board_commentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_reportsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_memberCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_memberMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_memberMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_moderation_snapshotsListRelationFilter = {\n    every?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    some?: economic_political_discussion_board_moderation_snapshotsWhereInput\n    none?: economic_political_discussion_board_moderation_snapshotsWhereInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_moderatorCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_moderatorMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_moderatorMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_adminCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_adminMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_adminMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    username?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_categoriesScalarRelationFilter = {\n    is?: economic_political_discussion_board_categoriesWhereInput\n    isNot?: economic_political_discussion_board_categoriesWhereInput\n  }\n\n  export type Economic_political_discussion_board_thread_snapshotsListRelationFilter = {\n    every?: economic_political_discussion_board_thread_snapshotsWhereInput\n    some?: economic_political_discussion_board_thread_snapshotsWhereInput\n    none?: economic_political_discussion_board_thread_snapshotsWhereInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_threadsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    economic_political_discussion_board_category_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_threadsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    economic_political_discussion_board_category_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_threadsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_channel_id?: SortOrder\n    economic_political_discussion_board_category_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_threadsScalarRelationFilter = {\n    is?: economic_political_discussion_board_threadsWhereInput\n    isNot?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    title?: SortOrder\n    content?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_memberScalarRelationFilter = {\n    is?: economic_political_discussion_board_memberWhereInput\n    isNot?: economic_political_discussion_board_memberWhereInput\n  }\n\n  export type Economic_political_discussion_board_comment_snapshotsListRelationFilter = {\n    every?: economic_political_discussion_board_comment_snapshotsWhereInput\n    some?: economic_political_discussion_board_comment_snapshotsWhereInput\n    none?: economic_political_discussion_board_comment_snapshotsWhereInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type economic_political_discussion_board_commentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_commentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_commentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Economic_political_discussion_board_commentsScalarRelationFilter = {\n    is?: economic_political_discussion_board_commentsWhereInput\n    isNot?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Economic_political_discussion_board_threadsNullableScalarRelationFilter = {\n    is?: economic_political_discussion_board_threadsWhereInput | null\n    isNot?: economic_political_discussion_board_threadsWhereInput | null\n  }\n\n  export type Economic_political_discussion_board_commentsNullableScalarRelationFilter = {\n    is?: economic_political_discussion_board_commentsWhereInput | null\n    isNot?: economic_political_discussion_board_commentsWhereInput | null\n  }\n\n  export type economic_political_discussion_board_reportsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    reason?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_reportsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    reason?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_reportsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_member_id?: SortOrder\n    economic_political_discussion_board_thread_id?: SortOrder\n    economic_political_discussion_board_comment_id?: SortOrder\n    reason?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Economic_political_discussion_board_reportsScalarRelationFilter = {\n    is?: economic_political_discussion_board_reportsWhereInput\n    isNot?: economic_political_discussion_board_reportsWhereInput\n  }\n\n  export type Economic_political_discussion_board_moderatorScalarRelationFilter = {\n    is?: economic_political_discussion_board_moderatorWhereInput\n    isNot?: economic_political_discussion_board_moderatorWhereInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCountOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_report_id?: SortOrder\n    economic_political_discussion_board_moderator_id?: SortOrder\n    action?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_report_id?: SortOrder\n    economic_political_discussion_board_moderator_id?: SortOrder\n    action?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsMinOrderByAggregateInput = {\n    id?: SortOrder\n    economic_political_discussion_board_report_id?: SortOrder\n    economic_political_discussion_board_moderator_id?: SortOrder\n    action?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type economic_political_discussion_board_sectionsCreateNestedManyWithoutChannelInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_sectionsCreateWithoutChannelInput[] | economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_sectionsCreateManyChannelInputEnvelope\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_threadsCreateNestedManyWithoutChannelInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_threadsCreateWithoutChannelInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyChannelInputEnvelope\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedCreateNestedManyWithoutChannelInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_sectionsCreateWithoutChannelInput[] | economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_sectionsCreateManyChannelInputEnvelope\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutChannelInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_threadsCreateWithoutChannelInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyChannelInputEnvelope\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateManyWithoutChannelNestedInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_sectionsCreateWithoutChannelInput[] | economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput[]\n    upsert?: economic_political_discussion_board_sectionsUpsertWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_sectionsUpsertWithWhereUniqueWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_sectionsCreateManyChannelInputEnvelope\n    set?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    update?: economic_political_discussion_board_sectionsUpdateWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_sectionsUpdateWithWhereUniqueWithoutChannelInput[]\n    updateMany?: economic_political_discussion_board_sectionsUpdateManyWithWhereWithoutChannelInput | economic_political_discussion_board_sectionsUpdateManyWithWhereWithoutChannelInput[]\n    deleteMany?: economic_political_discussion_board_sectionsScalarWhereInput | economic_political_discussion_board_sectionsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUpdateManyWithoutChannelNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_threadsCreateWithoutChannelInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput[]\n    upsert?: economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyChannelInputEnvelope\n    set?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    update?: economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutChannelInput[]\n    updateMany?: economic_political_discussion_board_threadsUpdateManyWithWhereWithoutChannelInput | economic_political_discussion_board_threadsUpdateManyWithWhereWithoutChannelInput[]\n    deleteMany?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateManyWithoutChannelNestedInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_sectionsCreateWithoutChannelInput[] | economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput[]\n    upsert?: economic_political_discussion_board_sectionsUpsertWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_sectionsUpsertWithWhereUniqueWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_sectionsCreateManyChannelInputEnvelope\n    set?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput | economic_political_discussion_board_sectionsWhereUniqueInput[]\n    update?: economic_political_discussion_board_sectionsUpdateWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_sectionsUpdateWithWhereUniqueWithoutChannelInput[]\n    updateMany?: economic_political_discussion_board_sectionsUpdateManyWithWhereWithoutChannelInput | economic_political_discussion_board_sectionsUpdateManyWithWhereWithoutChannelInput[]\n    deleteMany?: economic_political_discussion_board_sectionsScalarWhereInput | economic_political_discussion_board_sectionsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateManyWithoutChannelNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput> | economic_political_discussion_board_threadsCreateWithoutChannelInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput | economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput[]\n    upsert?: economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutChannelInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyChannelInputEnvelope\n    set?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    update?: economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutChannelInput | economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutChannelInput[]\n    updateMany?: economic_political_discussion_board_threadsUpdateManyWithWhereWithoutChannelInput | economic_political_discussion_board_threadsUpdateManyWithWhereWithoutChannelInput[]\n    deleteMany?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_sectionsInput = {\n    create?: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_sectionsInput>\n    connectOrCreate?: economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_sectionsInput\n    connect?: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_categoriesCreateNestedManyWithoutSectionInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput> | economic_political_discussion_board_categoriesCreateWithoutSectionInput[] | economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput[]\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput | economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput[]\n    createMany?: economic_political_discussion_board_categoriesCreateManySectionInputEnvelope\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedCreateNestedManyWithoutSectionInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput> | economic_political_discussion_board_categoriesCreateWithoutSectionInput[] | economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput[]\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput | economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput[]\n    createMany?: economic_political_discussion_board_categoriesCreateManySectionInputEnvelope\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_sectionsNestedInput = {\n    create?: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_sectionsInput>\n    connectOrCreate?: economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_sectionsInput\n    upsert?: economic_political_discussion_board_channelsUpsertWithoutEconomic_political_discussion_board_sectionsInput\n    connect?: economic_political_discussion_board_channelsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_channelsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_sectionsInput>, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_sectionsInput>\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateManyWithoutSectionNestedInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput> | economic_political_discussion_board_categoriesCreateWithoutSectionInput[] | economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput[]\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput | economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput[]\n    upsert?: economic_political_discussion_board_categoriesUpsertWithWhereUniqueWithoutSectionInput | economic_political_discussion_board_categoriesUpsertWithWhereUniqueWithoutSectionInput[]\n    createMany?: economic_political_discussion_board_categoriesCreateManySectionInputEnvelope\n    set?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    delete?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    update?: economic_political_discussion_board_categoriesUpdateWithWhereUniqueWithoutSectionInput | economic_political_discussion_board_categoriesUpdateWithWhereUniqueWithoutSectionInput[]\n    updateMany?: economic_political_discussion_board_categoriesUpdateManyWithWhereWithoutSectionInput | economic_political_discussion_board_categoriesUpdateManyWithWhereWithoutSectionInput[]\n    deleteMany?: economic_political_discussion_board_categoriesScalarWhereInput | economic_political_discussion_board_categoriesScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateManyWithoutSectionNestedInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput> | economic_political_discussion_board_categoriesCreateWithoutSectionInput[] | economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput[]\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput | economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput[]\n    upsert?: economic_political_discussion_board_categoriesUpsertWithWhereUniqueWithoutSectionInput | economic_political_discussion_board_categoriesUpsertWithWhereUniqueWithoutSectionInput[]\n    createMany?: economic_political_discussion_board_categoriesCreateManySectionInputEnvelope\n    set?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    delete?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput | economic_political_discussion_board_categoriesWhereUniqueInput[]\n    update?: economic_political_discussion_board_categoriesUpdateWithWhereUniqueWithoutSectionInput | economic_political_discussion_board_categoriesUpdateWithWhereUniqueWithoutSectionInput[]\n    updateMany?: economic_political_discussion_board_categoriesUpdateManyWithWhereWithoutSectionInput | economic_political_discussion_board_categoriesUpdateManyWithWhereWithoutSectionInput[]\n    deleteMany?: economic_political_discussion_board_categoriesScalarWhereInput | economic_political_discussion_board_categoriesScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_sectionsCreateNestedOneWithoutEconomic_political_discussion_board_categoriesInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutEconomic_political_discussion_board_categoriesInput>\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutEconomic_political_discussion_board_categoriesInput\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput> | economic_political_discussion_board_threadsCreateWithoutCategoryInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput | economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyCategoryInputEnvelope\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput> | economic_political_discussion_board_threadsCreateWithoutCategoryInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput | economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyCategoryInputEnvelope\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateOneRequiredWithoutEconomic_political_discussion_board_categoriesNestedInput = {\n    create?: XOR<economic_political_discussion_board_sectionsCreateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutEconomic_political_discussion_board_categoriesInput>\n    connectOrCreate?: economic_political_discussion_board_sectionsCreateOrConnectWithoutEconomic_political_discussion_board_categoriesInput\n    upsert?: economic_political_discussion_board_sectionsUpsertWithoutEconomic_political_discussion_board_categoriesInput\n    connect?: economic_political_discussion_board_sectionsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_sectionsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUpdateWithoutEconomic_political_discussion_board_categoriesInput>, economic_political_discussion_board_sectionsUncheckedUpdateWithoutEconomic_political_discussion_board_categoriesInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput> | economic_political_discussion_board_threadsCreateWithoutCategoryInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput | economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput[]\n    upsert?: economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutCategoryInput | economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyCategoryInputEnvelope\n    set?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    update?: economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutCategoryInput | economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: economic_political_discussion_board_threadsUpdateManyWithWhereWithoutCategoryInput | economic_political_discussion_board_threadsUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput> | economic_political_discussion_board_threadsCreateWithoutCategoryInput[] | economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput | economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput[]\n    upsert?: economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutCategoryInput | economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: economic_political_discussion_board_threadsCreateManyCategoryInputEnvelope\n    set?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput | economic_political_discussion_board_threadsWhereUniqueInput[]\n    update?: economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutCategoryInput | economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: economic_political_discussion_board_threadsUpdateManyWithWhereWithoutCategoryInput | economic_political_discussion_board_threadsUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_commentsCreateNestedManyWithoutMemberInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_commentsCreateWithoutMemberInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyMemberInputEnvelope\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsCreateNestedManyWithoutMemberInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_reportsCreateWithoutMemberInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyMemberInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_commentsCreateWithoutMemberInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyMemberInputEnvelope\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_reportsCreateWithoutMemberInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyMemberInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_commentsCreateWithoutMemberInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput[]\n    upsert?: economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyMemberInputEnvelope\n    set?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    update?: economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: economic_political_discussion_board_commentsUpdateManyWithWhereWithoutMemberInput | economic_political_discussion_board_commentsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_reportsCreateWithoutMemberInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyMemberInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutMemberInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_commentsCreateWithoutMemberInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput[]\n    upsert?: economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyMemberInputEnvelope\n    set?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    update?: economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: economic_political_discussion_board_commentsUpdateManyWithWhereWithoutMemberInput | economic_political_discussion_board_commentsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput> | economic_political_discussion_board_reportsCreateWithoutMemberInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput | economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyMemberInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutMemberInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutMemberInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInputEnvelope\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInputEnvelope\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput[]\n    upsert?: economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInputEnvelope\n    set?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput[]\n    upsert?: economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInputEnvelope\n    set?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutModeratorInput | economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput = {\n    create?: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    connectOrCreate?: economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput\n    connect?: economic_political_discussion_board_channelsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput[] | economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_thread_snapshotsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_commentsCreateWithoutThreadInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_reportsCreateWithoutThreadInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput[] | economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_thread_snapshotsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_commentsCreateWithoutThreadInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_reportsCreateWithoutThreadInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyThreadInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput = {\n    create?: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    connectOrCreate?: economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput\n    upsert?: economic_political_discussion_board_channelsUpsertWithoutEconomic_political_discussion_board_threadsInput\n    connect?: economic_political_discussion_board_channelsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_channelsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_threadsInput>, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput = {\n    create?: XOR<economic_political_discussion_board_categoriesCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    connectOrCreate?: economic_political_discussion_board_categoriesCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput\n    upsert?: economic_political_discussion_board_categoriesUpsertWithoutEconomic_political_discussion_board_threadsInput\n    connect?: economic_political_discussion_board_categoriesWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_categoriesUpdateToOneWithWhereWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUpdateWithoutEconomic_political_discussion_board_threadsInput>, economic_political_discussion_board_categoriesUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput[] | economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_thread_snapshotsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_thread_snapshotsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_thread_snapshotsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_thread_snapshotsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_thread_snapshotsScalarWhereInput | economic_political_discussion_board_thread_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_commentsCreateWithoutThreadInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    update?: economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_commentsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_commentsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_reportsCreateWithoutThreadInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput[] | economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_thread_snapshotsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_thread_snapshotsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_thread_snapshotsWhereUniqueInput | economic_political_discussion_board_thread_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_thread_snapshotsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_thread_snapshotsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_thread_snapshotsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_thread_snapshotsScalarWhereInput | economic_political_discussion_board_thread_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_commentsCreateWithoutThreadInput[] | economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_commentsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput | economic_political_discussion_board_commentsWhereUniqueInput[]\n    update?: economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_commentsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_commentsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput> | economic_political_discussion_board_reportsCreateWithoutThreadInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput | economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyThreadInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutThreadInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutThreadInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_thread_snapshotsInput\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_thread_snapshotsNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_thread_snapshotsInput\n    upsert?: economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_thread_snapshotsInput\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput>, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput = {\n    create?: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    connectOrCreate?: economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput\n    connect?: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateNestedManyWithoutCommentInput = {\n    create?: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput[] | economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_comment_snapshotsCreateManyCommentInputEnvelope\n    connect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsCreateNestedManyWithoutCommentInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_reportsCreateWithoutCommentInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyCommentInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput[] | economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_comment_snapshotsCreateManyCommentInputEnvelope\n    connect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_reportsCreateWithoutCommentInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyCommentInputEnvelope\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput\n    upsert?: economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_commentsInput\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_commentsInput>, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput = {\n    create?: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    connectOrCreate?: economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput\n    upsert?: economic_political_discussion_board_memberUpsertWithoutEconomic_political_discussion_board_commentsInput\n    connect?: economic_political_discussion_board_memberWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_memberUpdateToOneWithWhereWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_commentsInput>, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput[] | economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput[]\n    upsert?: economic_political_discussion_board_comment_snapshotsUpsertWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_comment_snapshotsCreateManyCommentInputEnvelope\n    set?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_comment_snapshotsUpdateWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: economic_political_discussion_board_comment_snapshotsUpdateManyWithWhereWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: economic_political_discussion_board_comment_snapshotsScalarWhereInput | economic_political_discussion_board_comment_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_reportsCreateWithoutCommentInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyCommentInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutCommentInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput[] | economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput[]\n    upsert?: economic_political_discussion_board_comment_snapshotsUpsertWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_comment_snapshotsCreateManyCommentInputEnvelope\n    set?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_comment_snapshotsWhereUniqueInput | economic_political_discussion_board_comment_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_comment_snapshotsUpdateWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: economic_political_discussion_board_comment_snapshotsUpdateManyWithWhereWithoutCommentInput | economic_political_discussion_board_comment_snapshotsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: economic_political_discussion_board_comment_snapshotsScalarWhereInput | economic_political_discussion_board_comment_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput> | economic_political_discussion_board_reportsCreateWithoutCommentInput[] | economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput | economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput[]\n    upsert?: economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: economic_political_discussion_board_reportsCreateManyCommentInputEnvelope\n    set?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput | economic_political_discussion_board_reportsWhereUniqueInput[]\n    update?: economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutCommentInput | economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: economic_political_discussion_board_reportsUpdateManyWithWhereWithoutCommentInput | economic_political_discussion_board_reportsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_comment_snapshotsInput\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_commentsUpdateOneRequiredWithoutEconomic_political_discussion_board_comment_snapshotsNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_comment_snapshotsInput\n    upsert?: economic_political_discussion_board_commentsUpsertWithoutEconomic_political_discussion_board_comment_snapshotsInput\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_commentsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput>, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput = {\n    create?: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    connect?: economic_political_discussion_board_memberWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutReportInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyReportInputEnvelope\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutReportInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyReportInputEnvelope\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n  }\n\n  export type economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_reportsNestedInput = {\n    create?: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    upsert?: economic_political_discussion_board_memberUpsertWithoutEconomic_political_discussion_board_reportsInput\n    connect?: economic_political_discussion_board_memberWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_memberUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_reportsInput>, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput = {\n    create?: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    upsert?: economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_reportsInput\n    disconnect?: economic_political_discussion_board_threadsWhereInput | boolean\n    delete?: economic_political_discussion_board_threadsWhereInput | boolean\n    connect?: economic_political_discussion_board_threadsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_reportsInput>, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput = {\n    create?: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    connectOrCreate?: economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput\n    upsert?: economic_political_discussion_board_commentsUpsertWithoutEconomic_political_discussion_board_reportsInput\n    disconnect?: economic_political_discussion_board_commentsWhereInput | boolean\n    delete?: economic_political_discussion_board_commentsWhereInput | boolean\n    connect?: economic_political_discussion_board_commentsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_commentsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_reportsInput>, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutReportNestedInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput[]\n    upsert?: economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyReportInputEnvelope\n    set?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportNestedInput = {\n    create?: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput> | economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput[] | economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput | economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput[]\n    upsert?: economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: economic_political_discussion_board_moderation_snapshotsCreateManyReportInputEnvelope\n    set?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    disconnect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    delete?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    connect?: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput | economic_political_discussion_board_moderation_snapshotsWhereUniqueInput[]\n    update?: economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutReportInput | economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n  }\n\n  export type economic_political_discussion_board_reportsCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_moderatorCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    create?: XOR<economic_political_discussion_board_moderatorCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_moderatorCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    connect?: economic_political_discussion_board_moderatorWhereUniqueInput\n  }\n\n  export type economic_political_discussion_board_reportsUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput = {\n    create?: XOR<economic_political_discussion_board_reportsCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_reportsCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    upsert?: economic_political_discussion_board_reportsUpsertWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    connect?: economic_political_discussion_board_reportsWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_reportsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>, economic_political_discussion_board_reportsUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_moderatorUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput = {\n    create?: XOR<economic_political_discussion_board_moderatorCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    connectOrCreate?: economic_political_discussion_board_moderatorCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    upsert?: economic_political_discussion_board_moderatorUpsertWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n    connect?: economic_political_discussion_board_moderatorWhereUniqueInput\n    update?: XOR<XOR<economic_political_discussion_board_moderatorUpdateToOneWithWhereWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>, economic_political_discussion_board_moderatorUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type economic_political_discussion_board_sectionsCreateWithoutChannelInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesCreateNestedManyWithoutSectionInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUncheckedCreateNestedManyWithoutSectionInput\n  }\n\n  export type economic_political_discussion_board_sectionsCreateOrConnectWithoutChannelInput = {\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_sectionsCreateManyChannelInputEnvelope = {\n    data: economic_political_discussion_board_sectionsCreateManyChannelInput | economic_political_discussion_board_sectionsCreateManyChannelInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_threadsCreateWithoutChannelInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    category: economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput = {\n    id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateOrConnectWithoutChannelInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateManyChannelInputEnvelope = {\n    data: economic_political_discussion_board_threadsCreateManyChannelInput | economic_political_discussion_board_threadsCreateManyChannelInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_sectionsUpsertWithWhereUniqueWithoutChannelInput = {\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_sectionsUpdateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedUpdateWithoutChannelInput>\n    create: XOR<economic_political_discussion_board_sectionsCreateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateWithWhereUniqueWithoutChannelInput = {\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_sectionsUpdateWithoutChannelInput, economic_political_discussion_board_sectionsUncheckedUpdateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateManyWithWhereWithoutChannelInput = {\n    where: economic_political_discussion_board_sectionsScalarWhereInput\n    data: XOR<economic_political_discussion_board_sectionsUpdateManyMutationInput, economic_political_discussion_board_sectionsUncheckedUpdateManyWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_sectionsScalarWhereInput = {\n    AND?: economic_political_discussion_board_sectionsScalarWhereInput | economic_political_discussion_board_sectionsScalarWhereInput[]\n    OR?: economic_political_discussion_board_sectionsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_sectionsScalarWhereInput | economic_political_discussion_board_sectionsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_sections\"> | string\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_sections\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_sections\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_sections\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_sections\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_sections\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutChannelInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_threadsUpdateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutChannelInput>\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedCreateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutChannelInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_threadsUpdateWithoutChannelInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateManyWithWhereWithoutChannelInput = {\n    where: economic_political_discussion_board_threadsScalarWhereInput\n    data: XOR<economic_political_discussion_board_threadsUpdateManyMutationInput, economic_political_discussion_board_threadsUncheckedUpdateManyWithoutChannelInput>\n  }\n\n  export type economic_political_discussion_board_threadsScalarWhereInput = {\n    AND?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n    OR?: economic_political_discussion_board_threadsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_threadsScalarWhereInput | economic_political_discussion_board_threadsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_channel_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    economic_political_discussion_board_category_id?: UuidFilter<\"economic_political_discussion_board_threads\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_threads\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_threads\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_threads\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_sectionsInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_sectionsInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_sectionsInput = {\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_sectionsInput>\n  }\n\n  export type economic_political_discussion_board_categoriesCreateWithoutSectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsCreateNestedManyWithoutCategoryInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedCreateNestedManyWithoutCategoryInput\n  }\n\n  export type economic_political_discussion_board_categoriesCreateOrConnectWithoutSectionInput = {\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n    create: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput>\n  }\n\n  export type economic_political_discussion_board_categoriesCreateManySectionInputEnvelope = {\n    data: economic_political_discussion_board_categoriesCreateManySectionInput | economic_political_discussion_board_categoriesCreateManySectionInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_channelsUpsertWithoutEconomic_political_discussion_board_sectionsInput = {\n    update: XOR<economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_sectionsInput>\n    create: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_sectionsInput>\n    where?: economic_political_discussion_board_channelsWhereInput\n  }\n\n  export type economic_political_discussion_board_channelsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_sectionsInput = {\n    where?: economic_political_discussion_board_channelsWhereInput\n    data: XOR<economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_sectionsInput, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_sectionsInput>\n  }\n\n  export type economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_sectionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_sectionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUpsertWithWhereUniqueWithoutSectionInput = {\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n    update: XOR<economic_political_discussion_board_categoriesUpdateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedUpdateWithoutSectionInput>\n    create: XOR<economic_political_discussion_board_categoriesCreateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutSectionInput>\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateWithWhereUniqueWithoutSectionInput = {\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n    data: XOR<economic_political_discussion_board_categoriesUpdateWithoutSectionInput, economic_political_discussion_board_categoriesUncheckedUpdateWithoutSectionInput>\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateManyWithWhereWithoutSectionInput = {\n    where: economic_political_discussion_board_categoriesScalarWhereInput\n    data: XOR<economic_political_discussion_board_categoriesUpdateManyMutationInput, economic_political_discussion_board_categoriesUncheckedUpdateManyWithoutSectionInput>\n  }\n\n  export type economic_political_discussion_board_categoriesScalarWhereInput = {\n    AND?: economic_political_discussion_board_categoriesScalarWhereInput | economic_political_discussion_board_categoriesScalarWhereInput[]\n    OR?: economic_political_discussion_board_categoriesScalarWhereInput[]\n    NOT?: economic_political_discussion_board_categoriesScalarWhereInput | economic_political_discussion_board_categoriesScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_categories\"> | string\n    economic_political_discussion_board_section_id?: UuidFilter<\"economic_political_discussion_board_categories\"> | string\n    name?: StringFilter<\"economic_political_discussion_board_categories\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_categories\"> | string | null\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_categories\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_categories\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsCreateWithoutEconomic_political_discussion_board_categoriesInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_sectionsInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedCreateWithoutEconomic_political_discussion_board_categoriesInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsCreateOrConnectWithoutEconomic_political_discussion_board_categoriesInput = {\n    where: economic_political_discussion_board_sectionsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_sectionsCreateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutEconomic_political_discussion_board_categoriesInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateWithoutCategoryInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateOrConnectWithoutCategoryInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateManyCategoryInputEnvelope = {\n    data: economic_political_discussion_board_threadsCreateManyCategoryInput | economic_political_discussion_board_threadsCreateManyCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_sectionsUpsertWithoutEconomic_political_discussion_board_categoriesInput = {\n    update: XOR<economic_political_discussion_board_sectionsUpdateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedUpdateWithoutEconomic_political_discussion_board_categoriesInput>\n    create: XOR<economic_political_discussion_board_sectionsCreateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedCreateWithoutEconomic_political_discussion_board_categoriesInput>\n    where?: economic_political_discussion_board_sectionsWhereInput\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_categoriesInput = {\n    where?: economic_political_discussion_board_sectionsWhereInput\n    data: XOR<economic_political_discussion_board_sectionsUpdateWithoutEconomic_political_discussion_board_categoriesInput, economic_political_discussion_board_sectionsUncheckedUpdateWithoutEconomic_political_discussion_board_categoriesInput>\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateWithoutEconomic_political_discussion_board_categoriesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_sectionsNestedInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateWithoutEconomic_political_discussion_board_categoriesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUpsertWithWhereUniqueWithoutCategoryInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_threadsUpdateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutCategoryInput>\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithWhereUniqueWithoutCategoryInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_threadsUpdateWithoutCategoryInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutCategoryInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateManyWithWhereWithoutCategoryInput = {\n    where: economic_political_discussion_board_threadsScalarWhereInput\n    data: XOR<economic_political_discussion_board_threadsUpdateManyMutationInput, economic_political_discussion_board_threadsUncheckedUpdateManyWithoutCategoryInput>\n  }\n\n  export type economic_political_discussion_board_commentsCreateWithoutMemberInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateOrConnectWithoutMemberInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_commentsCreateManyMemberInputEnvelope = {\n    data: economic_political_discussion_board_commentsCreateManyMemberInput | economic_political_discussion_board_commentsCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_reportsCreateWithoutMemberInput = {\n    id: string\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    thread?: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    comment?: economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput = {\n    id: string\n    economic_political_discussion_board_thread_id?: string | null\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsCreateOrConnectWithoutMemberInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyMemberInputEnvelope = {\n    data: economic_political_discussion_board_reportsCreateManyMemberInput | economic_political_discussion_board_reportsCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutMemberInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_commentsUpdateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutMemberInput>\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutMemberInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_commentsUpdateWithoutMemberInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateManyWithWhereWithoutMemberInput = {\n    where: economic_political_discussion_board_commentsScalarWhereInput\n    data: XOR<economic_political_discussion_board_commentsUpdateManyMutationInput, economic_political_discussion_board_commentsUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_commentsScalarWhereInput = {\n    AND?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n    OR?: economic_political_discussion_board_commentsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_commentsScalarWhereInput | economic_political_discussion_board_commentsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_comments\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comments\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comments\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutMemberInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_reportsUpdateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutMemberInput>\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutMemberInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_reportsUpdateWithoutMemberInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithWhereWithoutMemberInput = {\n    where: economic_political_discussion_board_reportsScalarWhereInput\n    data: XOR<economic_political_discussion_board_reportsUpdateManyMutationInput, economic_political_discussion_board_reportsUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type economic_political_discussion_board_reportsScalarWhereInput = {\n    AND?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n    OR?: economic_political_discussion_board_reportsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_reportsScalarWhereInput | economic_political_discussion_board_reportsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_member_id?: UuidFilter<\"economic_political_discussion_board_reports\"> | string\n    economic_political_discussion_board_thread_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    economic_political_discussion_board_comment_id?: UuidNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    reason?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    description?: StringNullableFilter<\"economic_political_discussion_board_reports\"> | string | null\n    status?: StringFilter<\"economic_political_discussion_board_reports\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_reports\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput = {\n    id: string\n    action: string\n    reason: string\n    created_at: Date | string\n    report: economic_political_discussion_board_reportsCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput = {\n    id: string\n    economic_political_discussion_board_report_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutModeratorInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInputEnvelope = {\n    data: economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInput | economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutModeratorInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_moderation_snapshotsUpdateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutModeratorInput>\n    create: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutModeratorInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateWithoutModeratorInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutModeratorInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutModeratorInput = {\n    where: economic_political_discussion_board_moderation_snapshotsScalarWhereInput\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateManyMutationInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutModeratorInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsScalarWhereInput = {\n    AND?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n    OR?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_moderation_snapshotsScalarWhereInput | economic_political_discussion_board_moderation_snapshotsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_report_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    economic_political_discussion_board_moderator_id?: UuidFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    action?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    reason?: StringFilter<\"economic_political_discussion_board_moderation_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_moderation_snapshots\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_threadsInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUncheckedCreateNestedManyWithoutChannelInput\n  }\n\n  export type economic_political_discussion_board_channelsCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput = {\n    where: economic_political_discussion_board_channelsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_categoriesCreateWithoutEconomic_political_discussion_board_threadsInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    section: economic_political_discussion_board_sectionsCreateNestedOneWithoutEconomic_political_discussion_board_categoriesInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput = {\n    id: string\n    economic_political_discussion_board_section_id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesCreateOrConnectWithoutEconomic_political_discussion_board_threadsInput = {\n    where: economic_political_discussion_board_categoriesWhereUniqueInput\n    create: XOR<economic_political_discussion_board_categoriesCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateOrConnectWithoutThreadInput = {\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateManyThreadInputEnvelope = {\n    data: economic_political_discussion_board_thread_snapshotsCreateManyThreadInput | economic_political_discussion_board_thread_snapshotsCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_commentsCreateWithoutThreadInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedCreateNestedManyWithoutCommentInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateOrConnectWithoutThreadInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_commentsCreateManyThreadInputEnvelope = {\n    data: economic_political_discussion_board_commentsCreateManyThreadInput | economic_political_discussion_board_commentsCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_reportsCreateWithoutThreadInput = {\n    id: string\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    comment?: economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsCreateOrConnectWithoutThreadInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyThreadInputEnvelope = {\n    data: economic_political_discussion_board_reportsCreateManyThreadInput | economic_political_discussion_board_reportsCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_channelsUpsertWithoutEconomic_political_discussion_board_threadsInput = {\n    update: XOR<economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n    create: XOR<economic_political_discussion_board_channelsCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    where?: economic_political_discussion_board_channelsWhereInput\n  }\n\n  export type economic_political_discussion_board_channelsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_threadsInput = {\n    where?: economic_political_discussion_board_channelsWhereInput\n    data: XOR<economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_channelsUpdateWithoutEconomic_political_discussion_board_threadsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_channelsUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_sections?: economic_political_discussion_board_sectionsUncheckedUpdateManyWithoutChannelNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUpsertWithoutEconomic_political_discussion_board_threadsInput = {\n    update: XOR<economic_political_discussion_board_categoriesUpdateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n    create: XOR<economic_political_discussion_board_categoriesCreateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedCreateWithoutEconomic_political_discussion_board_threadsInput>\n    where?: economic_political_discussion_board_categoriesWhereInput\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateToOneWithWhereWithoutEconomic_political_discussion_board_threadsInput = {\n    where?: economic_political_discussion_board_categoriesWhereInput\n    data: XOR<economic_political_discussion_board_categoriesUpdateWithoutEconomic_political_discussion_board_threadsInput, economic_political_discussion_board_categoriesUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput>\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateWithoutEconomic_political_discussion_board_threadsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    section?: economic_political_discussion_board_sectionsUpdateOneRequiredWithoutEconomic_political_discussion_board_categoriesNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateWithoutEconomic_political_discussion_board_threadsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpsertWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_thread_snapshotsUpdateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateWithoutThreadInput>\n    create: XOR<economic_political_discussion_board_thread_snapshotsCreateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_thread_snapshotsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_thread_snapshotsUpdateWithoutThreadInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateManyWithWhereWithoutThreadInput = {\n    where: economic_political_discussion_board_thread_snapshotsScalarWhereInput\n    data: XOR<economic_political_discussion_board_thread_snapshotsUpdateManyMutationInput, economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsScalarWhereInput = {\n    AND?: economic_political_discussion_board_thread_snapshotsScalarWhereInput | economic_political_discussion_board_thread_snapshotsScalarWhereInput[]\n    OR?: economic_political_discussion_board_thread_snapshotsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_thread_snapshotsScalarWhereInput | economic_political_discussion_board_thread_snapshotsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    economic_political_discussion_board_thread_id?: UuidFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    title?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    status?: StringFilter<\"economic_political_discussion_board_thread_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_thread_snapshots\"> | Date | string\n  }\n\n  export type economic_political_discussion_board_commentsUpsertWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_commentsUpdateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutThreadInput>\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_commentsUpdateWithoutThreadInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateManyWithWhereWithoutThreadInput = {\n    where: economic_political_discussion_board_commentsScalarWhereInput\n    data: XOR<economic_political_discussion_board_commentsUpdateManyMutationInput, economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_reportsUpdateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutThreadInput>\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedCreateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutThreadInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_reportsUpdateWithoutThreadInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithWhereWithoutThreadInput = {\n    where: economic_political_discussion_board_reportsScalarWhereInput\n    data: XOR<economic_political_discussion_board_reportsUpdateManyMutationInput, economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    category: economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    update: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  export type economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    where?: economic_political_discussion_board_threadsWhereInput\n    data: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    category?: economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_thread_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_commentsInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    category: economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_commentsInput = {\n    where: economic_political_discussion_board_memberWhereUniqueInput\n    create: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateOrConnectWithoutCommentInput = {\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateManyCommentInputEnvelope = {\n    data: economic_political_discussion_board_comment_snapshotsCreateManyCommentInput | economic_political_discussion_board_comment_snapshotsCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_reportsCreateWithoutCommentInput = {\n    id: string\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    thread?: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type economic_political_discussion_board_reportsCreateOrConnectWithoutCommentInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyCommentInputEnvelope = {\n    data: economic_political_discussion_board_reportsCreateManyCommentInput | economic_political_discussion_board_reportsCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_commentsInput = {\n    update: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  export type economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_commentsInput = {\n    where?: economic_political_discussion_board_threadsWhereInput\n    data: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    category?: economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_memberUpsertWithoutEconomic_political_discussion_board_commentsInput = {\n    update: XOR<economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n    create: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_commentsInput>\n    where?: economic_political_discussion_board_memberWhereInput\n  }\n\n  export type economic_political_discussion_board_memberUpdateToOneWithWhereWithoutEconomic_political_discussion_board_commentsInput = {\n    where?: economic_political_discussion_board_memberWhereInput\n    data: XOR<economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_commentsInput, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput>\n  }\n\n  export type economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpsertWithWhereUniqueWithoutCommentInput = {\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_comment_snapshotsUpdateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateWithoutCommentInput>\n    create: XOR<economic_political_discussion_board_comment_snapshotsCreateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateWithWhereUniqueWithoutCommentInput = {\n    where: economic_political_discussion_board_comment_snapshotsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_comment_snapshotsUpdateWithoutCommentInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateManyWithWhereWithoutCommentInput = {\n    where: economic_political_discussion_board_comment_snapshotsScalarWhereInput\n    data: XOR<economic_political_discussion_board_comment_snapshotsUpdateManyMutationInput, economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsScalarWhereInput = {\n    AND?: economic_political_discussion_board_comment_snapshotsScalarWhereInput | economic_political_discussion_board_comment_snapshotsScalarWhereInput[]\n    OR?: economic_political_discussion_board_comment_snapshotsScalarWhereInput[]\n    NOT?: economic_political_discussion_board_comment_snapshotsScalarWhereInput | economic_political_discussion_board_comment_snapshotsScalarWhereInput[]\n    id?: UuidFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    economic_political_discussion_board_comment_id?: UuidFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    content?: StringFilter<\"economic_political_discussion_board_comment_snapshots\"> | string\n    created_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    updated_at?: DateTimeFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"economic_political_discussion_board_comment_snapshots\"> | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsUpsertWithWhereUniqueWithoutCommentInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_reportsUpdateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutCommentInput>\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithWhereUniqueWithoutCommentInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_reportsUpdateWithoutCommentInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateManyWithWhereWithoutCommentInput = {\n    where: economic_political_discussion_board_reportsScalarWhereInput\n    data: XOR<economic_political_discussion_board_reportsUpdateManyMutationInput, economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpsertWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    update: XOR<economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n    where?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  export type economic_political_discussion_board_commentsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    where?: economic_political_discussion_board_commentsWhereInput\n    data: XOR<economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_comment_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type economic_political_discussion_board_memberCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput = {\n    where: economic_political_discussion_board_memberWhereUniqueInput\n    create: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    channel: economic_political_discussion_board_channelsCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    category: economic_political_discussion_board_categoriesCreateNestedOneWithoutEconomic_political_discussion_board_threadsInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedCreateNestedManyWithoutThreadInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type economic_political_discussion_board_threadsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput = {\n    where: economic_political_discussion_board_threadsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_commentsInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type economic_political_discussion_board_commentsCreateOrConnectWithoutEconomic_political_discussion_board_reportsInput = {\n    where: economic_political_discussion_board_commentsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput = {\n    id: string\n    action: string\n    reason: string\n    created_at: Date | string\n    moderator: economic_political_discussion_board_moderatorCreateNestedOneWithoutEconomic_political_discussion_board_moderation_snapshotsInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput = {\n    id: string\n    economic_political_discussion_board_moderator_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateOrConnectWithoutReportInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyReportInputEnvelope = {\n    data: economic_political_discussion_board_moderation_snapshotsCreateManyReportInput | economic_political_discussion_board_moderation_snapshotsCreateManyReportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type economic_political_discussion_board_memberUpsertWithoutEconomic_political_discussion_board_reportsInput = {\n    update: XOR<economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n    create: XOR<economic_political_discussion_board_memberCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    where?: economic_political_discussion_board_memberWhereInput\n  }\n\n  export type economic_political_discussion_board_memberUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput = {\n    where?: economic_political_discussion_board_memberWhereInput\n    data: XOR<economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_memberUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_memberUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUpsertWithoutEconomic_political_discussion_board_reportsInput = {\n    update: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n    create: XOR<economic_political_discussion_board_threadsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    where?: economic_political_discussion_board_threadsWhereInput\n  }\n\n  export type economic_political_discussion_board_threadsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput = {\n    where?: economic_political_discussion_board_threadsWhereInput\n    data: XOR<economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    category?: economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUpsertWithoutEconomic_political_discussion_board_reportsInput = {\n    update: XOR<economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n    create: XOR<economic_political_discussion_board_commentsCreateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedCreateWithoutEconomic_political_discussion_board_reportsInput>\n    where?: economic_political_discussion_board_commentsWhereInput\n  }\n\n  export type economic_political_discussion_board_commentsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_reportsInput = {\n    where?: economic_political_discussion_board_commentsWhereInput\n    data: XOR<economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_reportsInput, economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput>\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateWithoutEconomic_political_discussion_board_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpsertWithWhereUniqueWithoutReportInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    update: XOR<economic_political_discussion_board_moderation_snapshotsUpdateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutReportInput>\n    create: XOR<economic_political_discussion_board_moderation_snapshotsCreateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedCreateWithoutReportInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateWithWhereUniqueWithoutReportInput = {\n    where: economic_political_discussion_board_moderation_snapshotsWhereUniqueInput\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateWithoutReportInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutReportInput>\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateManyWithWhereWithoutReportInput = {\n    where: economic_political_discussion_board_moderation_snapshotsScalarWhereInput\n    data: XOR<economic_political_discussion_board_moderation_snapshotsUpdateManyMutationInput, economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportInput>\n  }\n\n  export type economic_political_discussion_board_reportsCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id: string\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    member: economic_political_discussion_board_memberCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    thread?: economic_political_discussion_board_threadsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n    comment?: economic_political_discussion_board_commentsCreateNestedOneWithoutEconomic_political_discussion_board_reportsInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id?: string | null\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_reportsCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    where: economic_political_discussion_board_reportsWhereUniqueInput\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_moderatorCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id: string\n    email: string\n    password_hash: string\n    username: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorCreateOrConnectWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    where: economic_political_discussion_board_moderatorWhereUniqueInput\n    create: XOR<economic_political_discussion_board_moderatorCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpsertWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    update: XOR<economic_political_discussion_board_reportsUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    create: XOR<economic_political_discussion_board_reportsCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    where?: economic_political_discussion_board_reportsWhereInput\n  }\n\n  export type economic_political_discussion_board_reportsUpdateToOneWithWhereWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    where?: economic_political_discussion_board_reportsWhereInput\n    data: XOR<economic_political_discussion_board_reportsUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_reportsUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_reportsNestedInput\n    thread?: economic_political_discussion_board_threadsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    comment?: economic_political_discussion_board_commentsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorUpsertWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    update: XOR<economic_political_discussion_board_moderatorUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    create: XOR<economic_political_discussion_board_moderatorCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedCreateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n    where?: economic_political_discussion_board_moderatorWhereInput\n  }\n\n  export type economic_political_discussion_board_moderatorUpdateToOneWithWhereWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    where?: economic_political_discussion_board_moderatorWhereInput\n    data: XOR<economic_political_discussion_board_moderatorUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput, economic_political_discussion_board_moderatorUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput>\n  }\n\n  export type economic_political_discussion_board_moderatorUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderatorUncheckedUpdateWithoutEconomic_political_discussion_board_moderation_snapshotsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_sectionsCreateManyChannelInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsCreateManyChannelInput = {\n    id: string\n    economic_political_discussion_board_category_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_sectionsUpdateWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUpdateManyWithoutSectionNestedInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_categories?: economic_political_discussion_board_categoriesUncheckedUpdateManyWithoutSectionNestedInput\n  }\n\n  export type economic_political_discussion_board_sectionsUncheckedUpdateManyWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    category?: economic_political_discussion_board_categoriesUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateManyWithoutChannelInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesCreateManySectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_categoriesUpdateWithoutSectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateWithoutSectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_threads?: economic_political_discussion_board_threadsUncheckedUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type economic_political_discussion_board_categoriesUncheckedUpdateManyWithoutSectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsCreateManyCategoryInput = {\n    id: string\n    economic_political_discussion_board_channel_id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_threadsUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    channel?: economic_political_discussion_board_channelsUpdateOneRequiredWithoutEconomic_political_discussion_board_threadsNestedInput\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_thread_snapshots?: economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_comments?: economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type economic_political_discussion_board_threadsUncheckedUpdateManyWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_channel_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_commentsCreateManyMemberInput = {\n    id: string\n    economic_political_discussion_board_thread_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyMemberInput = {\n    id: string\n    economic_political_discussion_board_thread_id?: string | null\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: economic_political_discussion_board_threadsUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: economic_political_discussion_board_threadsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    comment?: economic_political_discussion_board_commentsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyModeratorInput = {\n    id: string\n    economic_political_discussion_board_report_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: economic_political_discussion_board_reportsUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_report_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_report_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsCreateManyThreadInput = {\n    id: string\n    title: string\n    content: string\n    status: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_commentsCreateManyThreadInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyThreadInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_comment_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_thread_snapshotsUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_commentsUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_commentsNestedInput\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    economic_political_discussion_board_comment_snapshots?: economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentNestedInput\n    economic_political_discussion_board_reports?: economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type economic_political_discussion_board_commentsUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_reportsNestedInput\n    comment?: economic_political_discussion_board_commentsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsCreateManyCommentInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsCreateManyCommentInput = {\n    id: string\n    economic_political_discussion_board_member_id: string\n    economic_political_discussion_board_thread_id?: string | null\n    reason: string\n    description?: string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_comment_snapshotsUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type economic_political_discussion_board_reportsUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: economic_political_discussion_board_memberUpdateOneRequiredWithoutEconomic_political_discussion_board_reportsNestedInput\n    thread?: economic_political_discussion_board_threadsUpdateOneWithoutEconomic_political_discussion_board_reportsNestedInput\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    economic_political_discussion_board_moderation_snapshots?: economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type economic_political_discussion_board_reportsUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_member_id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsCreateManyReportInput = {\n    id: string\n    economic_political_discussion_board_moderator_id: string\n    action: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: economic_political_discussion_board_moderatorUpdateOneRequiredWithoutEconomic_political_discussion_board_moderation_snapshotsNestedInput\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_moderator_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type economic_political_discussion_board_moderation_snapshotsUncheckedUpdateManyWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    economic_political_discussion_board_moderator_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}","node_modules/.prisma/client/runtime/client.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/index-browser.d.ts":"declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/library.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/wasm.d.ts":"export * from \"./default\"","node_modules/@prisma/client/index.d.ts":"export * from '.prisma/client/default'"},"document":"# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Systematic](#systematic)\n- [Actors](#actors)\n- [Threads](#threads)\n- [Comments](#comments)\n- [Moderation](#moderation)\n\n## Systematic\n\n```mermaid\nerDiagram\n\"economic_political_discussion_board_channels\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_sections\" {\n  String id PK\n  String economic_political_discussion_board_channel_id FK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_categories\" {\n  String id PK\n  String economic_political_discussion_board_section_id FK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_sections\" }o--|| \"economic_political_discussion_board_channels\" : channel\n\"economic_political_discussion_board_categories\" }o--|| \"economic_political_discussion_board_sections\" : section\n```\n\n### `economic_political_discussion_board_channels`\n\nRepresents the main channels or sections of the discussion board where\nusers can engage in conversations. Each channel has a unique identifier,\nname, and description. Channels are organized into sections and can\ncontain multiple categories. This table serves as the top-level\norganizational structure for the discussion board.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `name`: The name of the channel.\n- `description`: A brief description of the channel's purpose and content.\n- `created_at`: The timestamp when the channel was created.\n- `updated_at`: The timestamp when the channel was last updated.\n- `deleted_at`: The timestamp when the channel was deleted, if applicable.\n\n### `economic_political_discussion_board_sections`\n\nRepresents the sections within a channel of the discussion board. Each\nsection has a unique identifier, name, and description. Sections are used\nto further organize content within a channel and can contain multiple\ncategories. This table provides a mid-level organizational structure for\nthe discussion board.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_channel_id`\n  > The ID of the channel that this section belongs to. {@link\n  > economic_political_discussion_board_channels.id}\n- `name`: The name of the section.\n- `description`: A brief description of the section's purpose and content.\n- `created_at`: The timestamp when the section was created.\n- `updated_at`: The timestamp when the section was last updated.\n- `deleted_at`: The timestamp when the section was deleted, if applicable.\n\n### `economic_political_discussion_board_categories`\n\nRepresents the categories within a section of the discussion board. Each\ncategory has a unique identifier, name, and description. Categories are\nused to further organize content within a section and can contain\nmultiple discussion threads. This table provides a detailed\norganizational structure for the discussion board.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_section_id`\n  > The ID of the section that this category belongs to. {@link\n  > economic_political_discussion_board_sections.id}\n- `name`: The name of the category.\n- `description`: A brief description of the category's purpose and content.\n- `created_at`: The timestamp when the category was created.\n- `updated_at`: The timestamp when the category was last updated.\n- `deleted_at`: The timestamp when the category was deleted, if applicable.\n\n## Actors\n\n```mermaid\nerDiagram\n\"economic_political_discussion_board_guest\" {\n  String id PK\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_member\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_moderator\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_admin\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n```\n\n### `economic_political_discussion_board_guest`\n\nRepresents unauthenticated users who can only view public content.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `created_at`: Timestamp when the guest record was created.\n- `updated_at`: Timestamp when the guest record was last updated.\n\n### `economic_political_discussion_board_member`\n\nRepresents authenticated users who can create and comment on discussion\nthreads.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Email address of the member.\n- `password_hash`: Hashed password for authentication.\n- `username`: Username of the member.\n- `created_at`: Timestamp when the member record was created.\n- `updated_at`: Timestamp when the member record was last updated.\n\n### `economic_political_discussion_board_moderator`\n\nRepresents users with elevated permissions who can manage content and\nenforce community guidelines.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Email address of the moderator.\n- `password_hash`: Hashed password for authentication.\n- `username`: Username of the moderator.\n- `created_at`: Timestamp when the moderator record was created.\n- `updated_at`: Timestamp when the moderator record was last updated.\n\n### `economic_political_discussion_board_admin`\n\nRepresents system administrators with full access to manage users,\ncontent, and system settings.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Email address of the admin.\n- `password_hash`: Hashed password for authentication.\n- `username`: Username of the admin.\n- `created_at`: Timestamp when the admin record was created.\n- `updated_at`: Timestamp when the admin record was last updated.\n\n## Threads\n\n```mermaid\nerDiagram\n\"economic_political_discussion_board_threads\" {\n  String id PK\n  String economic_political_discussion_board_channel_id FK\n  String economic_political_discussion_board_category_id FK\n  String title\n  String content\n  String status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_thread_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_thread_id FK\n  String title\n  String content\n  String status\n  DateTime created_at\n}\n\"economic_political_discussion_board_thread_snapshots\" }o--|| \"economic_political_discussion_board_threads\" : thread\n```\n\n### `economic_political_discussion_board_threads`\n\nRepresents a discussion thread in the economic/political discussion\nboard. This table captures the essential information for a thread,\nincluding its title, content, and status. It serves as the primary entity\nfor user interactions and content management.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_channel_id`\n  > The channel to which this thread belongs. {@link\n  > economic_political_discussion_board_channels.id}\n- `economic_political_discussion_board_category_id`\n  > The category to which this thread belongs. {@link\n  > economic_political_discussion_board_categories.id}\n- `title`: The title of the thread.\n- `content`: The content of the thread.\n- `status`: The status of the thread (e.g., open, closed, locked).\n- `created_at`: The timestamp when the thread was created.\n- `updated_at`: The timestamp when the thread was last updated.\n- `deleted_at`: The timestamp when the thread was deleted (soft delete).\n\n### `economic_political_discussion_board_thread_snapshots`\n\nRepresents a snapshot of a discussion thread at a specific point in time.\nThis table captures the historical states of threads, allowing for audit\ntrails and change tracking. It is used for historical data access and\naudit trail queries.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_thread_id`\n  > The thread to which this snapshot belongs. {@link\n  > economic_political_discussion_board_threads.id}\n- `title`: The title of the thread at the time of the snapshot.\n- `content`: The content of the thread at the time of the snapshot.\n- `status`: The status of the thread at the time of the snapshot.\n- `created_at`: The timestamp when the snapshot was created.\n\n## Comments\n\n```mermaid\nerDiagram\n\"economic_political_discussion_board_comments\" {\n  String id PK\n  String economic_political_discussion_board_thread_id FK\n  String economic_political_discussion_board_member_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_comment_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_comment_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_comment_snapshots\" }o--|| \"economic_political_discussion_board_comments\" : comment\n```\n\n### `economic_political_discussion_board_comments`\n\nRepresents user comments on discussion threads in the economic/political\ndiscussion board. Each comment is associated with a specific thread and\nmember, and maintains a complete history of changes through related\nsnapshots.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_thread_id`\n  > The thread this comment belongs to. {@link\n  > economic_political_discussion_board_threads.id}.\n- `economic_political_discussion_board_member_id`\n  > The member who created this comment. {@link\n  > economic_political_discussion_board_member.id}.\n- `content`: The text content of the comment.\n- `created_at`: When the comment was created.\n- `updated_at`: When the comment was last updated.\n- `deleted_at`: When the comment was deleted (soft delete).\n\n### `economic_political_discussion_board_comment_snapshots`\n\nHistorical snapshots of economic_political_discussion_board_comments for\naudit trails and change tracking. Each snapshot captures the complete\nstate of a comment at a specific point in time.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_comment_id`\n  > The comment this snapshot belongs to. {@link\n  > economic_political_discussion_board_comments.id}.\n- `content`: The text content of the comment at this snapshot.\n- `created_at`: When this snapshot was created.\n- `updated_at`: When the comment was last updated at this snapshot.\n- `deleted_at`: When the comment was deleted at this snapshot (soft delete).\n\n## Moderation\n\n```mermaid\nerDiagram\n\"economic_political_discussion_board_reports\" {\n  String id PK\n  String economic_political_discussion_board_member_id FK\n  String economic_political_discussion_board_thread_id FK \"nullable\"\n  String economic_political_discussion_board_comment_id FK \"nullable\"\n  String reason\n  String description \"nullable\"\n  String status\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_moderation_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_report_id FK\n  String economic_political_discussion_board_moderator_id FK\n  String action\n  String reason\n  DateTime created_at\n}\n\"economic_political_discussion_board_moderation_snapshots\" }o--|| \"economic_political_discussion_board_reports\" : report\n```\n\n### `economic_political_discussion_board_reports`\n\nTable for storing reports of inappropriate content in the\neconomic/political discussion board. This table captures user reports of\ncontent violations, including the reason for reporting and the status of\nthe report. It establishes relationships with user tables and content\ntables to maintain a complete record of reported content.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_member_id`\n  > The member who submitted the report. {@link\n  > economic_political_discussion_board_member.id}\n- `economic_political_discussion_board_thread_id`\n  > The thread that was reported. {@link\n  > economic_political_discussion_board_threads.id}\n- `economic_political_discussion_board_comment_id`\n  > The comment that was reported. {@link\n  > economic_political_discussion_board_comments.id}\n- `reason`: The reason for the report.\n- `description`: Additional details about the report.\n- `status`: The current status of the report (e.g., pending, reviewed, resolved).\n- `created_at`: The timestamp when the report was created.\n- `updated_at`: The timestamp when the report was last updated.\n\n### `economic_political_discussion_board_moderation_snapshots`\n\nTable for storing snapshots of moderation actions taken on reported\ncontent. This table captures the details of moderation actions, including\nthe action taken, the reason, and the moderator who took the action. It\nestablishes relationships with user tables and content tables to maintain\na complete audit trail of moderation actions.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `economic_political_discussion_board_report_id`\n  > The report that was moderated. {@link\n  > economic_political_discussion_board_reports.id}\n- `economic_political_discussion_board_moderator_id`\n  > The moderator who took the action. {@link\n  > economic_political_discussion_board_moderator.id}\n- `action`: The action taken by the moderator (e.g., delete, warn, ban).\n- `reason`: The reason for the moderation action.\n- `created_at`: The timestamp when the moderation action was taken.\n","diagrams":{"Systematic":"```mermaid\nerDiagram\n\"economic_political_discussion_board_channels\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_sections\" {\n  String id PK\n  String economic_political_discussion_board_channel_id FK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_categories\" {\n  String id PK\n  String economic_political_discussion_board_section_id FK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_sections\" }o--|| \"economic_political_discussion_board_channels\" : channel\n\"economic_political_discussion_board_categories\" }o--|| \"economic_political_discussion_board_sections\" : section\n```","Actors":"```mermaid\nerDiagram\n\"economic_political_discussion_board_guest\" {\n  String id PK\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_member\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_moderator\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_admin\" {\n  String id PK\n  String email UK\n  String password_hash\n  String username\n  DateTime created_at\n  DateTime updated_at\n}\n```","Threads":"```mermaid\nerDiagram\n\"economic_political_discussion_board_threads\" {\n  String id PK\n  String economic_political_discussion_board_channel_id FK\n  String economic_political_discussion_board_category_id FK\n  String title\n  String content\n  String status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_thread_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_thread_id FK\n  String title\n  String content\n  String status\n  DateTime created_at\n}\n\"economic_political_discussion_board_thread_snapshots\" }o--|| \"economic_political_discussion_board_threads\" : thread\n```","Comments":"```mermaid\nerDiagram\n\"economic_political_discussion_board_comments\" {\n  String id PK\n  String economic_political_discussion_board_thread_id FK\n  String economic_political_discussion_board_member_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_comment_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_comment_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"economic_political_discussion_board_comment_snapshots\" }o--|| \"economic_political_discussion_board_comments\" : comment\n```","Moderation":"```mermaid\nerDiagram\n\"economic_political_discussion_board_reports\" {\n  String id PK\n  String economic_political_discussion_board_member_id FK\n  String economic_political_discussion_board_thread_id FK \"nullable\"\n  String economic_political_discussion_board_comment_id FK \"nullable\"\n  String reason\n  String description \"nullable\"\n  String status\n  DateTime created_at\n  DateTime updated_at\n}\n\"economic_political_discussion_board_moderation_snapshots\" {\n  String id PK\n  String economic_political_discussion_board_report_id FK\n  String economic_political_discussion_board_moderator_id FK\n  String action\n  String reason\n  DateTime created_at\n}\n\"economic_political_discussion_board_moderation_snapshots\" }o--|| \"economic_political_discussion_board_reports\" : report\n```"}},"created_at":"2025-10-14T15:05:31.931Z","completed_at":"2025-10-14T15:06:08.981Z","step":0}]