{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"reddit_like_community_channels","description":"Represents the channels within the community platform. Each channel serves as a container for sections and configurations, enabling organized content management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"The name of the channel, which must be unique across the platform.","nullable":false},{"name":"description","type":"string","description":"A detailed description of the channel's purpose and content.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the channel was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the channel was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the channel was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_like_community_sections","description":"Represents the sections within a channel. Each section organizes content into specific topics or categories, enhancing user navigation and content discovery.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_channel_id","type":"uuid","description":"The channel to which this section belongs. {@link reddit_like_community_channels.id}","relation":{"name":"channel","targetModel":"reddit_like_community_channels"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"The name of the section, which must be unique within the channel.","nullable":false},{"name":"description","type":"string","description":"A detailed description of the section's purpose and content.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the section was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the section was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the section was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["reddit_like_community_channel_id","name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"reddit_like_community_configurations","description":"Stores configuration settings for the community platform. These settings define the behavior and appearance of the platform, ensuring a consistent user experience.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"The unique key identifying the configuration setting.","nullable":false},{"name":"value","type":"string","description":"The value of the configuration setting.","nullable":false},{"name":"description","type":"string","description":"A detailed description of the configuration setting and its purpose.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the configuration was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the configuration was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the configuration was deleted, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"reddit_like_community_guest","description":"Guest users who can view public content but cannot interact with the platform. This table represents unauthenticated users who have limited access to the community platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_user_profile_id","type":"uuid","description":"Associated user profile. {@link reddit_like_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_like_community_user_profiles"},"unique":true,"nullable":true}],"plainFields":[{"name":"created_at","type":"datetime","description":"When the guest record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the guest record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_user_profile_id"]}],"ginIndexes":[]},{"name":"reddit_like_community_member","description":"Authenticated users who can create posts, comment, vote, and subscribe to communities. This table represents regular members of the community platform with full interaction capabilities.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_user_profile_id","type":"uuid","description":"Associated user profile. {@link reddit_like_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_like_community_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"karma_score","type":"int","description":"Current karma score of the member.","nullable":false},{"name":"created_at","type":"datetime","description":"When the member account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the member account was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_user_profile_id"]}],"ginIndexes":[]},{"name":"reddit_like_community_moderator","description":"Community managers who can manage posts, comments, and enforce community rules. This table represents users with elevated privileges for specific communities.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_user_profile_id","type":"uuid","description":"Associated user profile. {@link reddit_like_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_like_community_user_profiles"},"unique":true,"nullable":false},{"name":"reddit_like_community_community_id","type":"uuid","description":"Community this moderator manages. {@link reddit_like_community_communities.id}","relation":{"name":"community","targetModel":"reddit_like_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"permissions","type":"string","description":"JSON string representing moderator permissions.","nullable":false},{"name":"created_at","type":"datetime","description":"When the moderator role was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the moderator role was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_user_profile_id"]},{"fieldNames":["reddit_like_community_community_id"]}],"ginIndexes":[]},{"name":"reddit_like_community_admin","description":"Platform administrators with full access to manage the platform, including user accounts and community settings. This table represents users with the highest level of privileges on the platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_user_profile_id","type":"uuid","description":"Associated user profile. {@link reddit_like_community_user_profiles.id}","relation":{"name":"userProfile","targetModel":"reddit_like_community_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"super_admin","type":"boolean","description":"Whether this admin has super admin privileges.","nullable":false},{"name":"created_at","type":"datetime","description":"When the admin account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the admin account was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_user_profile_id"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"reddit_like_community_communities","description":"Represents communities (subreddits) in the platform. Each community has a unique name and description, and can have rules and guidelines set by moderators. This table serves as the central entity for community management and interaction.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique name of the community.","nullable":false},{"name":"description","type":"string","description":"Description of the community.","nullable":false},{"name":"rules","type":"string","description":"Rules and guidelines for the community.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the community was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the community was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the community was deleted (soft delete).","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[],"ginIndexes":[{"fieldName":"description"}]},{"name":"reddit_like_community_subscriptions","description":"Represents the subscription relationship between users and communities. This table tracks which users are subscribed to which communities and when the subscription was created. It establishes a many-to-many relationship between users and communities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_member_id","type":"uuid","description":"Reference to the user who subscribed to the community. {@link reddit_like_community_member.id}","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false},{"name":"reddit_like_community_community_id","type":"uuid","description":"Reference to the community that the user subscribed to. {@link reddit_like_community_communities.id}","relation":{"name":"community","targetModel":"reddit_like_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the subscription was created.","nullable":false}],"uniqueIndexes":[{"fieldNames":["reddit_like_community_member_id","reddit_like_community_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["reddit_like_community_member_id"]},{"fieldNames":["reddit_like_community_community_id"]}],"ginIndexes":[]}]},{"filename":"schema-04-content.prisma","namespace":"Content","models":[{"name":"reddit_like_community_posts","description":"Represents posts created by community members. This model captures the core content of the platform, including text, links, and images. It establishes relationships with communities, users, and snapshots for comprehensive content management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_community_id","type":"uuid","description":"The community to which this post belongs. {@link reddit_like_community_communities.id}","relation":{"name":"community","targetModel":"reddit_like_community_communities"},"unique":false,"nullable":false},{"name":"reddit_like_community_member_id","type":"uuid","description":"The member who created this post. {@link reddit_like_community_member.id}","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the post.","nullable":false},{"name":"content","type":"string","description":"The content of the post, which can be text, a link, or an image.","nullable":false},{"name":"post_type","type":"string","description":"The type of the post (text, link, image).","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the post was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the post was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the post was deleted (soft delete).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_community_id","created_at"]},{"fieldNames":["reddit_like_community_member_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"reddit_like_community_comments","description":"Represents comments created by community members on posts. This model captures user interactions and discussions, establishing relationships with posts, users, and snapshots for comprehensive comment management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_post_id","type":"uuid","description":"The post to which this comment belongs. {@link reddit_like_community_posts.id}","relation":{"name":"post","targetModel":"reddit_like_community_posts"},"unique":false,"nullable":false},{"name":"reddit_like_community_member_id","type":"uuid","description":"The member who created this comment. {@link reddit_like_community_member.id}","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"The content of the comment.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the comment was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the comment was deleted (soft delete).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_post_id","created_at"]},{"fieldNames":["reddit_like_community_member_id","created_at"]}],"ginIndexes":[{"fieldName":"content"}]}]},{"filename":"schema-05-voting.prisma","namespace":"Voting","models":[{"name":"reddit_like_community_post_votes","description":"Tracks user votes on community posts. Represents the voting behavior of members on posts within communities. {@link reddit_like_community_posts.id} {@link reddit_like_community_member.id}","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_post_id","type":"uuid","description":"Target post's {@link reddit_like_community_posts.id}.","relation":{"name":"post","targetModel":"reddit_like_community_posts"},"unique":false,"nullable":false},{"name":"reddit_like_community_member_id","type":"uuid","description":"Voting member's {@link reddit_like_community_member.id}.","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote: 'upvote' or 'downvote'.","nullable":false},{"name":"created_at","type":"datetime","description":"When the vote was cast.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the vote was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["reddit_like_community_post_id","reddit_like_community_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["vote_type"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_like_community_comment_votes","description":"Tracks user votes on community comments. Represents the voting behavior of members on comments within communities. {@link reddit_like_community_comments.id} {@link reddit_like_community_member.id}","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_comment_id","type":"uuid","description":"Target comment's {@link reddit_like_community_comments.id}.","relation":{"name":"comment","targetModel":"reddit_like_community_comments"},"unique":false,"nullable":false},{"name":"reddit_like_community_member_id","type":"uuid","description":"Voting member's {@link reddit_like_community_member.id}.","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote: 'upvote' or 'downvote'.","nullable":false},{"name":"created_at","type":"datetime","description":"When the vote was cast.","nullable":false},{"name":"updated_at","type":"datetime","description":"When the vote was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["reddit_like_community_comment_id","reddit_like_community_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["vote_type"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-karma.prisma","namespace":"Karma","models":[{"name":"reddit_like_community_karma","description":"Tracks user karma scores across the platform. This model represents the core business entity for user reputation management, allowing users to view and understand their standing within communities. It serves as a reference point for other tables and requires comprehensive API operations for user interaction.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_member_id","type":"uuid","description":"Reference to the member's {@link reddit_like_community_member.id}.","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"score","type":"int","description":"Current karma score of the user.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the karma record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the karma record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["reddit_like_community_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["score"]}],"ginIndexes":[]}]},{"filename":"schema-07-sorting.prisma","namespace":"Sorting","models":[{"name":"reddit_like_community_post_sorting","description":"Manages the sorting preferences for posts within communities. This table allows users to customize how posts are displayed, such as by hot, new, top, or controversial criteria. Each sorting configuration is associated with a specific community and includes timestamps for tracking creation and updates.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_community_id","type":"uuid","description":"The community to which this sorting configuration belongs. {@link reddit_like_community_communities.id}","relation":{"name":"community","targetModel":"reddit_like_community_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"hot","type":"boolean","description":"Whether the community uses hot sorting for posts.","nullable":false},{"name":"new","type":"boolean","description":"Whether the community uses new sorting for posts.","nullable":false},{"name":"top","type":"boolean","description":"Whether the community uses top sorting for posts.","nullable":false},{"name":"controversial","type":"boolean","description":"Whether the community uses controversial sorting for posts.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the sorting configuration was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the sorting configuration was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reddit_like_community_community_id"]}],"ginIndexes":[]}]},{"filename":"schema-08-profiles.prisma","namespace":"Profiles","models":[{"name":"reddit_like_community_user_profiles","description":"User profile information including karma score and personal details. Central to the platform as it connects users to their activities and communities.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","nullable":false,"description":"Unique username for the user."},{"name":"email","type":"string","nullable":false,"description":"User's email address for notifications."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for user authentication."},{"name":"profile_picture","type":"uri","nullable":true,"description":"URL to the user's profile picture."},{"name":"bio","type":"string","nullable":true,"description":"User's personal biography."},{"name":"karma_score","type":"int","nullable":false,"description":"User's karma score based on voting activity."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the user profile was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the user profile was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the user profile was deleted (soft delete)."}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["karma_score"]}],"ginIndexes":[{"fieldName":"bio"}]}]},{"filename":"schema-09-reporting.prisma","namespace":"Reporting","models":[{"name":"reddit_like_community_content_reports","description":"Tracks reported content within the community platform for moderation and review. This table captures details about reported posts, comments, and other content, including the reporter, the content being reported, and the reason for the report. It serves as the central repository for content moderation activities and provides the necessary information for moderators to take appropriate actions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_id","type":"uuid","description":"The user who reported the content. {@link reddit_like_community_member.id}","relation":{"name":"reporter","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false},{"name":"content_id","type":"uuid","description":"The content being reported. {@link reddit_like_community_posts.id} or {@link reddit_like_community_comments.id}","relation":{"name":"content","targetModel":"reddit_like_community_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"report_reason","type":"string","description":"The reason provided by the reporter for reporting the content.","nullable":false},{"name":"report_status","type":"string","description":"The current status of the report (e.g., pending, reviewed, resolved).","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the report was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the report was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["reporter_id"]},{"fieldNames":["content_id"]},{"fieldNames":["report_status"]}],"ginIndexes":[{"fieldName":"report_reason"}]}]},{"filename":"schema-10-authentication.prisma","namespace":"Authentication","models":[{"name":"reddit_like_community_authentication_tokens","description":"Stores authentication tokens for secure user access to the platform. Each token is associated with a specific user and has an expiration time to ensure security. The table supports token management and validation for authentication processes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reddit_like_community_member_id","type":"uuid","description":"The member associated with this authentication token. {@link reddit_like_community_member.id}","relation":{"name":"member","targetModel":"reddit_like_community_member"},"unique":false,"nullable":false}],"plainFields":[{"name":"token","type":"string","description":"The authentication token value used for secure access.","nullable":false},{"name":"expires_at","type":"datetime","description":"The expiration time of the authentication token.","nullable":false},{"name":"created_at","type":"datetime","description":"The creation time of the authentication token.","nullable":false},{"name":"updated_at","type":"datetime","description":"The last update time of the authentication token.","nullable":false}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["reddit_like_community_member_id"]},{"fieldNames":["expires_at"]}],"ginIndexes":[]}]}]}