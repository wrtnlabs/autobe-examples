[{"id":"0199e5a5-65c4-717f-aecd-907501f781a6","type":"userMessage","contents":[{"type":"text","text":"I want to create a Reddit-like community platform.\r\n\r\nSince I'm not familiar with programming, please write a requirements analysis report as you see fit.\r\n\r\nHere are the key features I want:\r\n- User registration and login\r\n- Create communities (subreddits)\r\n- Post text, links, or images in communities\r\n- Upvote/downvote posts and comments\r\n- Comment on posts with nested replies\r\n- User karma system\r\n- Sort posts by hot, new, top, controversial\r\n- Subscribe to communities\r\n- User profiles showing their posts and comments\r\n- Report inappropriate content"}],"created_at":"2025-10-15T02:14:06.020Z"},{"id":"0199e5a5-7402-71cb-a880-9ee49622e70e","type":"assistantMessage","text":"Based on your description of wanting a Reddit-like community platform, I've extracted the key requirements from what you've shared. To ensure everything is clear and complete, I'll summarize my understanding here before proceeding with an automated requirements analysis. Since you've asked me to handle the planning as I see fit (given your note about not being familiar with programming), this seems like a good starting point.\n\n### Key Features You've Outlined:\n1. **User registration and login** – Users can sign up and authenticate.\n2. **Create communities (subreddits)** – Users can make new communities for discussion.\n3. **Post text, links, or images in communities** – Posts can be in different formats, associated with specific communities.\n4. **Upvote/downvote posts and comments** – Voting system to rank content.\n5. **Comment on posts with nested replies** – Hierarchical commenting tree.\n6. **User karma system** – Reputation tracking based on interactions.\n7. **Sort posts by hot, new, top, controversial** – Different algorithms or filters for displaying posts.\n8. **Subscribe to communities** – Users can follow communities for personalized feeds.\n9. **User profiles showing their posts and comments** – Public profiles to view user activity.\n10. **Report inappropriate content** – Flagging system for moderation.\n\nIf I've missed anything or misinterpreted any features, let me know for clarification. Otherwise, these seem sufficient for basic backend planning. I'll proceed by running a requirements analysis to structure this into a detailed report. This will help outline the system's purpose, data models, APIs, and more in a clear, organized way.\n\n","created_at":"2025-10-15T02:14:09.666Z","completed_at":"2025-10-15T02:14:12.183Z"},{"type":"analyze","id":"0199e5a8-9262-74ea-bd5f-7c36fdefe7a9","instruction":"Create a Reddit-like community platform with user registration and login, community creation, posting text/links/images, upvoting/downvoting posts and comments, nested commenting, karma system, sorting posts by hot/new/top/controversial, subscribing to communities, user profiles, and reporting inappropriate content.","prefix":"communityPlatform","roles":[{"name":"guest","description":"Unauthenticated users who can view public content, register for an account, and access basic features like browsing posts and comments without voting or posting capabilities.","kind":"guest"},{"name":"member","description":"Authenticated users who can post content (text, links, images), vote on posts and comments, comment with nested replies, subscribe to communities, manage their profile, and report inappropriate content.","kind":"member"},{"name":"moderator","description":"Privileged users responsible for managing communities, moderating content, handling reports, and maintaining platform integrity with elevated permissions over content management.","kind":"admin"}],"files":[{"reason":"Establish the table of contents for easy navigation through the requirements documents.","filename":"00-toc.md","documentType":"service-overview","outline":["Project Documents Table of Contents"],"audience":"general","keyQuestions":[],"detailLevel":"minor","relatedDocuments":[],"constraints":[],"content":"# Requirements Analysis Table of Contents\n\nThis document serves as the central navigation guide for the requirements analysis of the community platform project. It provides an organized overview of all documentation related to building a Reddit-like community platform with features such as user registration, community creation, posting capabilities, voting systems, commenting, karma tracking, content sorting, subscriptions, user profiles, and content moderation. WHEN users need to navigate the requirements documentation, THE table of contents SHALL provide clear, descriptive links to each requirement document.\n\nWHEN stakeholders or developers need to find specific requirement information, THE table of contents SHALL list each document with descriptive explanations of its scope and purpose. THE table of contents SHALL contain links to all 11 requirement documents in logical order, from high-level vision through detailed implementation requirements.\n\n## Project Documents Table of Contents\n\n1. **[Requirements Analysis Table of Contents](./00-toc.md)**  \n   Current document - Provides navigation and overview of all requirements documentation for the community platform project. WHEN users first access the requirements, THE table of contents SHALL serve as the starting point for understanding document organization and selection guide for specific requirement types.\n\n2. **[Service Vision Document](./01-service-vision.md)**  \n   Defines the overall purpose, target market, and high-level goals of the community platform, including executive summary, target audience, core problems solved, and platform objectives. WHEN stakeholders need to understand the business justification and strategic direction, THE service vision document SHALL establish the foundation for all other requirements and outline success metrics for platform growth and user engagement.\n\n3. **[User Personas Documentation](./02-user-personas.md)**  \n   Details the key user personas, their needs, behavior patterns, user journey examples, key user needs, and usage scenarios within the community platform. WHEN product managers and designers need to understand user motivations and behaviors, THE user personas documentation SHALL provide comprehensive profiles of guest, member, and moderator roles with specific behavior patterns and validation requirements for each user interaction.\n\n4. **[Authentication Requirements Document](./03-authentication-requirements.md)**  \n   Specifies the complete user authentication system including registration process, login flow, password management, role assignment, session management, and security validations. WHEN backend developers need to implement secure user access mechanisms, THE authentication requirements SHALL define complete JWT token handling, password complexity rules, and role-based permission assignments for member, moderator, and guest access levels.\n\n5. **[Content Management Requirements](./04-content-management.md)**  \n   Describes the core content creation and management features including post creation with text, links, and images, community association, content moderation integration, and edit/delete permissions. WHEN developers need to build content submission systems, THE content management requirements SHALL specify media upload validations, automated content filtering, and role-based access controls for posts, images, and community-specific content placement.\n\n6. **[Voting and Comments System Requirements](./05-voting-comments-system.md)**  \n   Specifies the voting and engagement systems including upvote/downvote mechanics, comment threading with nested replies up to unlimited levels, karma calculation algorithms based on post and comment votes, and engagement tracking metrics. WHEN implementing user interaction features, THE voting and comments requirements SHALL define real-time vote updates, karma-based reputation systems, and complete business rules for engagement tracking and content visibility algorithms.\n\n7. **[Sorting and Subscriptions Requirements](./06-sorting-subscriptions.md)**  \n   Defines post sorting algorithms for hot, new, top, and controversial content organization, community subscription mechanisms with personalized feeds, and algorithm inputs based on vote counts and time decay. WHEN building content discovery features, THE sorting and subscriptions requirements SHALL specify subscription workflow validations, personalized feed generation logic, and ranking algorithms based on user engagement and content popularity metrics.\n\n8. **[User Profiles Requirements](./07-user-profiles.md)**  \n   Specifies user profile features and public display of activity, including profile display customization, activity history showing posts and comments, privacy settings management, and profile information controls. WHEN creating user account management systems, THE user profiles requirements SHALL define public information display rules, activity visibility controls, profile customization options, and privacy validation workflows for personal data protection.\n\n9. **[Moderation and Reporting Requirements](./08-moderation-reporting.md)**  \n   Details the reporting system for inappropriate content including spam, harassment, and hate speech categories, moderation workflow from report submission through resolution, and appeals process for content restoration. WHEN implementing platform safety mechanisms, THE moderation and reporting requirements SHALL define automated content filtering, moderator queue management, report categorization rules, and resolution workflows with notification systems.\n\n10. **[Business Logic and Validation Requirements](./09-business-logic-validation.md)**    \n    Documents user interaction flows and business logic validations, including input validation rules with specific error messages, business rule definitions for all platform features, workflow validations for critical processes, error handling conditions with user feedback, and success criteria measurements. WHEN establishing system consistency, THE business logic requirements SHALL outline complete input sanitization processes, role-based access validations, and comprehensive error recovery mechanisms for reliable platform operation.\n\n11. **[Performance and Scalability Requirements](./10-performance-scalability.md)**    \n    Defines performance expectations with specific response time targets, concurrency requirements for simultaneous users, scalability metrics for growing user bases, database performance optimization guidelines, and caching strategies for efficient content delivery. WHEN architecting high-performance systems, THE performance and scalability requirements SHALL establish measurable benchmarks for load handling, user concurrency limits, and system growth capacity planning to ensure consistent user experiences under varying traffic conditions.\n\nThese documents collectively provide a comprehensive requirements analysis for building a robust community platform that includes all requested features: user registration and login, community creation, multi-format posting (text, links, images), voting systems, nested commenting, karma tracking, advanced sorting algorithms, subscription management, detailed user profiles, and content moderation through reporting.\n\nThe documentation follows a logical progression from high-level vision through detailed implementation requirements, ensuring that stakeholders at all levels can understand both the business objectives and technical specifications needed to successfully develop the platform. WHEN implementing different platform components, THE requirement documents SHALL provide independent but interconnected specifications that developers can follow without requiring cross-document navigation.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n*Developer Note: This document serves as an organizational index for the complete requirements package, ensuring proper document sequencing and coverage of all platform features in the requirements analysis phase.*"},{"reason":"Define the overall purpose, target market, and high-level goals of the community platform.","filename":"01-service-vision.md","documentType":"service-overview","outline":["Executive Summary","Target Audience","Core Problems Solved","Platform Objectives"],"audience":"business stakeholders","keyQuestions":["What is the primary purpose of this community platform?","Who are the main users?","What makes this platform unique compared to existing solutions?"],"detailLevel":"high-level overview","relatedDocuments":["00-toc.md"],"constraints":[],"content":"# Requirements Analysis Report for Reddit-like Community Platform\n\n## Executive Summary\n\nThis requirements analysis report outlines the business logic, user workflows, and functional specifications for a Reddit-like community platform. The platform enables authenticated users to create and manage communities, post various types of content, engage through voting and nested comments, and participate in a karma-based reputation system. Key features include content sorting algorithms, community subscriptions, user profiles, and a moderation system for handling inappropriate content.\n\nThe platform exists to provide a collaborative online space where users can share information, discuss topics of interest, and build communities around shared passions. The system emphasizes user engagement through voting mechanics and karma tracking, while maintaining platform integrity through community-driven moderation and reporting features.\n\nAll requirements are specified in business terms, focusing on what the system should accomplish rather than how to implement it technically. This document serves as the foundation for backend development, ensuring developers understand the complete business context and user expectations.\n\n## Business Model\n\n### Why This Platform Exists\n\nTHE community platform SHALL provide a structured environment for users to create topic-specific communities and share content. THE system SHALL foster user engagement through voting mechanisms and reputation systems. THE platform SHALL maintain content quality through user-driven moderation and reporting capabilities.\n\nThe platform addresses the need for decentralized online discussion spaces where users can organize themselves around interests rather than relying on centralized content curation. In an era where social media algorithms often prioritize engagement over quality, this platform gives users control over their information ecosystem.\n\n### Revenue Strategy\n\nTHE platform SHALL support advertisement display within communities. THE system SHALL offer premium features for moderators and power users. THE platform SHALL implement a subscription model for advanced community management tools. THE system SHALL enable donations and crowdfunding for community projects.\n\nInitial revenue will focus on user growth metrics, with monetization scaling as the user base increases. Advertising will be contextual to community themes, and premium features will enhance community management capabilities.\n\n### Growth Plan\n\nTHE system SHALL prioritize organic user growth through viral community creation. THE platform SHALL implement referral programs rewarding users for bringing new members. THE system SHALL develop mobile applications to increase accessibility. THE platform SHALL establish partnerships with educational institutions and organizations.\n\nGrowth will focus on network effects: more users in communities attract more content, which attracts more users. The platform will start with niche communities before expanding to broader topics.\n\n### Success Metrics\n\nTHE platform SHALL track monthly active users across all communities. THE system SHALL monitor engagement through posts per user and comment interactions. THE platform SHALL measure community retention rates. THE system SHALL evaluate content quality through reporting and moderation metrics.\n\nSuccess will be measured by: 100,000 monthly active users within 12 months, average of 10 posts per active user monthly, retention rate above 70% for established communities.\n\n## Target Market and User Roles\n\n### Primary User Types\n\nThe platform caters to three main user roles with distinct permissions and responsibilities:\n\n#### Guest Users\nGuest users can browse public content without authentication requirements. THE guest users SHALL view public posts and comments without creating an account. WHEN a guest attempts to vote or post, THE system SHALL display a registration prompt. THE guests SHALL access public community pages and read-only content.\n\n#### Member Users\nAuthenticated members represent the core user base. THE members SHALL create and manage their own content including text posts, links, and images. WHEN a member votes on a post, THE system SHALL update karma scores and display changes in real-time. THE members SHALL subscribe to communities for personalized feeds. IF a member reports inappropriate content, THE system SHALL process the report for moderation review.\n\n#### Moderator Users  \nModerator users handle community management and content oversight. THE moderators SHALL approve or remove content in their assigned communities. WHEN moderators receive reports, THE system SHALL present a moderation queue with context and timestamps. THE moderators SHALL temporarily suspend users for policy violations. THE system SHALL grant moderators elevated permissions for content management within their communities.\n\n### Complete Authentication System\n\n#### Registration Process\nTHE system SHALL allow new users to register with email and password. WHEN a user submits registration information, THE system SHALL validate email format and password strength. THE platform SHALL require email verification before account activation. IF registration fails validation, THE system SHALL display specific error messages for correction.\n\n#### Login Flow\nWHEN a user provides credentials, THE system SHALL authenticate against stored information. THE platform SHALL issue JWT access and refresh tokens upon successful login. THE access tokens SHALL expire after 15 minutes to maintain security. THE refresh tokens SHALL be valid for 7 days and allow seamless token renewal.\n\n#### Password Management\nWHEN a user requests password reset, THE system SHALL send a secure reset link to their email. THE reset link SHALL expire after 10 minutes for security. THE platform SHALL enforce password complexity requirements during changes. IF the current password is incorrect during change, THE system SHALL display an error message.\n\n#### Role Assignment\nTHE system SHALL assign guest role to unregistered users. WHEN a user completes registration, THE system SHALL assign member role. THE platform SHALL provide promotion to moderator role through community election or admin selection. THE roles SHALL persist across login sessions and define user permissions.\n\n#### Session Management\nWHEN a user logs in to the system, THE session SHALL remain active unless explicitly terminated. THE platform SHALL track active sessions across devices. WHEN a user logs out, THE system SHALL invalidate all tokens and clear client-side storage. THE sessions SHALL automatically expire after 30 days of inactivity.\n\n### Permission Matrix\n\n| Feature | Guest | Member | Moderator |\n|---------|--------|--------|-----------|\n| View posts and comments | ✅ | ✅ | ✅ |\n| Register account | ✅ | N/A | N/A |\n| Create posts | ❌ | ✅ | ✅ |\n| Vote on posts | ❌ | ✅ | ✅ |\n| Comment on posts | ❌ | ✅ | ✅ |\n| Reply to comments | ❌ | ✅ | ✅ |\n| Subscribe to communities | ❌ | ✅ | ✅ |\n| View user profiles | ❌ | ✅ | ✅ |\n| Report content | ❌ | ✅ | ✅ |\n| Create communities | ❌ | ❌ | ✅ |\n| Moderate content | ❌ | ❌ | ✅ |\n| Manage users | ❌ | ❌ | ✅ |\n| Access moderation tools | ❌ | ❌ | ✅ |\n\n## Functional Requirements\n\n### Content Creation and Management\n\nTHE users SHALL create communities with unique names and descriptions. WHEN a community is created, THE system SHALL validate the name format and prevent duplicates. THE communities SHALL require moderator approval for initial creation.\n\nWHEN a member creates a post, THE system SHALL associate it with a specific community. THE posts SHALL support three content types: text, links, and images. THE system SHALL validate image uploads for size and format restrictions. WHEN text posts are created, THE system SHALL support rich formatting options.\n\nTHE platform SHALL allow post authors and moderators to edit content. WHEN posts are edited, THE system SHALL display edit timestamps. THE users SHALL delete their own posts within 24 hours of creation. IF moderators delete posts, THE system SHALL provide deletion reasons.\n\n### Voting and Engagement System\n\nWHEN a user votes on a post, THE system SHALL increment or decrement the post score. THE votes SHALL be either upvotes or downvotes. THE system SHALL prevent users from voting on their own content. WHEN votes are cast, THE system SHALL update karma scores in real-time.\n\nTHE karma system SHALL calculate total user reputation from post and comment votes. THE post karma SHALL count upvotes minus downvotes on submissions. THE comment karma SHALL count upvotes minus downvotes on comments. THE system SHALL display karma changes publicly on user profiles.\n\n### Commenting and Discussion\n\nWHEN users comment on posts, THE system SHALL support unlimited nested replies. THE comments SHALL display in threaded view showing parent-child relationships. THE system SHALL limit comment length to 10,000 characters. WHEN comments receive votes, THE platform SHALL update visibility rankings.\n\nTHE users SHALL edit their comments within 10 minutes of posting. THE moderators SHALL remove inappropriate comments with replacement text. THE system SHALL track comment threads for notification purposes. WHEN replies are posted, THE parent authors SHALL receive notification options.\n\n### Content Sorting Algorithms\n\nTHE platform SHALL support four primary sorting options: hot, new, top, controversial. WHEN users select hot sorting, THE system SHALL use time-decay algorithm weighing recent popularity. WHEN new sorting is selected, THE system SHALL display posts by chronological order newest first.\n\nWHEN top sorting displays posts, THE system SHALL rank by total upvotes minus downvotes. WHEN controversial sorting is active, THE system SHALL highlight content with mixed voting patterns. THE sorting SHALL recalculate automatically without user intervention.\n\n### Community Subscriptions\n\nWHEN a member subscribes to a community, THE system SHALL add it to their personalized feed. THE subscription SHALL enable automatic post delivery in home view. THE users SHALL unsubscribe at any time without moderator notification. THE system SHALL display subscription counts publicly on community pages.\n\n### User Profiles and Activity\n\nTHE user profiles SHALL display public activity including posts and comments. THE profiles SHALL show karma scores and account creation dates. THE members SHALL customize profile information within privacy settings. THE system SHALL protect personal information from public viewing.\n\nWHEN viewing a user's profile, THE system SHALL paginate activity chronologically. THE profiles SHALL link to all user-generated content. THE members SHALL view their own private activity history. THE platform SHALL allow profile picture and username changes.\n\n### Reporting and Moderation System\n\nWHEN users report content, THE system SHALL categorize reports by violation type. THE report categories SHALL include spam, harassment, inappropriate content, and rule violations. THE moderators SHALL receive notifications for new reports in their communities.\n\nWHEN moderators review reports, THE system SHALL display the reported content with full context. THE moderators SHALL take actions including content removal, user warnings, temporary suspensions, or permanent bans. THE system SHALL track moderation history for transparency.\n\nIF content is removed, THE system SHALL display removal explanations to affected users. THE users SHALL appeal moderator decisions through a documented process. THE platform SHALL log all moderation actions for audit purposes.\n\n## User Scenarios and Workflows\n\n### New User Registration Journey\n\n1. A visitor discovers the platform and clicks \"Register\"\n2. The system displays a registration form requesting email and password\n3. User enters information and submits the form\n4. The system validates email format and password strength\n5. If validation fails, specific error messages guide corrections\n6. If successful, email verification link is sent\n7. User clicks verification link in email\n8. Account is activated and user is logged in automatically\n9. User is directed to community discovery page\n\n### Content Creation Process\n\n1. Authenticated user navigates to a community page\n2. User clicks \"Create Post\" button\n3. System displays content type selection (text, link, image)\n4. User selects content type and fills required fields\n5. For image posts, user uploads file\n6. System validates file size and format (max 10MB, common image types)\n7. User adds optional tags or flair\n8. User clicks \"Submit\" button\n9. System creates post and displays confirmation\n10. Post immediately appears in community feed\n\n### Voting Interaction Flow\n\n1. User views a post in their feed\n2. User clicks upvote or downvote button\n3. System immediately updates post score display\n4. System increments user's karma (for others voting on their content)\n5. Vote is recorded to prevent duplicate voting\n6. If reversing vote, score adjusts accordingly\n7. Changes reflect in real-time for all viewers\n8. Karma updates appear on user's profile\n\n### Community Subscription Process\n\n1. User browses available communities\n2. User clicks \"Subscribe\" button on community page\n3. System adds community to user's subscription list\n4. Community appears in user's personalized feed\n5. User receives notifications for new content (if enabled)\n6. Content from subscribed communities prioritized in algorithms\n7. User can manage subscriptions from profile settings\n8. Unsubscribe removes community from feed immediately\n\n### Moderation Workflow\n\n1. Moderator logs into moderation dashboard\n2. System displays pending reports queue with timestamps\n3. Moderator reviews each report with full context\n4. For each report, moderator selects appropriate action\n5. If removing content, moderator adds removal reason\n6. System applies action and notifies affected users\n7. Report is marked as resolved in moderation system\n8. Actions are logged for future reference\n9. System updates content visibility instantly\n\n## Business Rules and Validation\n\n### Input Validation Rules\n\nTHE system SHALL validate email addresses using standard format requirements. THE passwords SHALL require minimum 8 characters with mixed case and numbers. THE community names SHALL consist of alphanumeric characters and underscores only. THE usernames SHALL be unique across the platform and contain no special characters.\n\nTHE post titles SHALL not exceed 300 characters. THE post content SHALL support unlimited text for text posts but warn at 10,000 characters. THE comment text SHALL limit to 10,000 characters in total length. THE uploaded images SHALL restrict to 10MB maximum file size.\n\n### Business Process Validations\n\nWHEN a user attempts to vote on their own content, THE system SHALL reject the vote with an error message. WHEN submitting duplicate content, THE system SHALL warn users but allow submission. WHEN moderators try to delete content outside their communities, THE system SHALL deny access.\n\nTHE platform SHALL prevent users from commenting on deleted posts. THE system SHALL block posts to communities where users have been banned. WHEN users exceed posting limits, THE system SHALL temporarily restrict new submissions.\n\n### Error Handling Scenarios\n\nIF a post submission fails due to network issues, THE system SHALL save draft content for recovery. WHEN email verification links expire, THE system SHALL allow users to request new ones. IF image uploads fail, THE system SHALL provide specific error messages about size or format issues.\n\nWHEN users violate posting frequency limits, THE system SHALL display countdown timers. IF moderators make incorrect decisions, THE system SHALL support action reversals with audit trails. WHEN server errors occur, THE system SHALL display user-friendly messages with retry options.\n\n## Performance Requirements\n\nTHE system SHALL load community pages within 2 seconds for most requests. WHEN users submit posts, THE system SHALL process and display them within 1 second. THE voting interactions SHALL update in real-time within 500 milliseconds. THE search functionality SHALL return results within 3 seconds for common queries.\n\nTHE platform SHALL support 1,000 concurrent active users without performance degradation. THE image upload process SHALL complete within 10 seconds for typical file sizes. THE notification delivery SHALL occur within 5 seconds of relevant actions. THE moderation queue SHALL load with reports within 3 seconds.\n\n## Success Criteria and Future Considerations\n\n### Implementation Priorities\n\nTHE core platform SHALL launch with essential features: user registration, post creation, voting, commenting, basic sorting. THE moderation system SHALL deploy simultaneously to handle content issues. THE karma system SHALL be implemented to drive user engagement.\n\n### Future Enhancements\n\nTHE platform SHALL consider implementing mobile applications for increased accessibility. THE system SHALL explore advanced sorting algorithms with machine learning components. THE platform SHALL develop API endpoints for third-party integrations. THE system SHALL consider internationalization support for global expansion.\n\nTHE community monetization features SHALL be added after initial user growth targets are met. THE premium subscription models SHALL evolve based on user feedback and market analysis.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"Detail the key personas, their needs, and behavior patterns within the community platform.","filename":"02-user-personas.md","documentType":"user-story","outline":["Primary User Types","User Journey Examples","Key User Needs","Usage Scenarios"],"audience":"product managers","keyQuestions":["What are the main user roles on the platform?","How do users typically interact with the system?","What motivates users to participate?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","01-service-vision.md"],"constraints":[],"content":"## Executive Summary\n\nThis requirements analysis report outlines the business logic, user workflows, and functional specifications for a Reddit-like community platform. The platform enables authenticated users to create and manage communities, post various types of content, engage through voting and nested comments, and participate in a karma-based reputation system. Key features include content sorting algorithms, community subscriptions, user profiles, and a moderation system for handling inappropriate content.\n\nThe platform exists to provide a collaborative online space where users can share information, discuss topics of interest, and build communities around shared passions. The system emphasizes user engagement through voting mechanics and karma tracking, while maintaining platform integrity through community-driven moderation and reporting features.\n\nAll requirements are specified in business terms, focusing on what the system should accomplish rather than how to implement it technically. This document serves as the foundation for backend development, ensuring developers understand the complete business context and user expectations.\n\n## Business Model\n\n### Why This Platform Exists\n\nTHE community platform SHALL provide a structured environment for users to create topic-specific communities and share content. THE system SHALL foster user engagement through voting mechanisms and reputation systems. THE platform SHALL maintain content quality through user-driven moderation and reporting capabilities.\n\nThe platform addresses the need for decentralized online discussion spaces where users can organize themselves around interests rather than relying on centralized content curation. In an era where social media algorithms often prioritize engagement over quality, this platform gives users control over their information ecosystem.\n\n### Revenue Strategy\n\nTHE platform SHALL support advertisement display within communities. THE system SHALL offer premium features for moderators and power users. THE platform SHALL implement a subscription model for advanced community management tools. THE system SHALL enable donations and crowdfunding for community projects.\n\nInitial revenue will focus on user growth metrics, with monetization scaling as the user base increases. Advertising will be contextual to community themes, and premium features will enhance community management capabilities.\n\n### Growth Plan\n\nTHE system SHALL prioritize organic user growth through viral community creation. THE platform SHALL implement referral programs rewarding users for bringing new members. THE system SHALL develop mobile applications to increase accessibility. THE platform SHALL establish partnerships with educational institutions and organizations.\n\nGrowth will focus on network effects: more users in communities attract more content, which attracts more users. The platform will start with niche communities before expanding to broader topics.\n\n### Success Metrics\n\nTHE platform SHALL track monthly active users across all communities. THE system SHALL monitor engagement through posts per user and comment interactions. THE platform SHALL measure community retention rates. THE system SHALL evaluate content quality through reporting and moderation metrics.\n\nSuccess will be measured by: 100,000 monthly active users within 12 months, average of 10 posts per active user monthly, retention rate above 70% for established communities.\n\n## Target Market and User Roles\n\n### Primary User Types\n\nThe platform caters to three main user roles with distinct permissions and responsibilities:\n\n#### Guest Users\nGuest users can browse public content without authentication requirements. THE guest users SHALL view public posts and comments without creating an account. WHEN a guest attempts to vote or post, THE system SHALL display a registration prompt. THE guests SHALL access public community pages and read-only content.\n\n#### Member Users\nAuthenticated members represent the core user base. THE members SHALL create and manage their own content including text posts, links, and images. WHEN a member votes on content, THE system SHALL update karma scores and display changes in real-time. THE members SHALL subscribe to communities for personalized feeds. IF a member reports inappropriate content, THE system SHALL process the report for moderation review.\n\n#### Moderator Users  \nModerator users handle community management and content oversight. THE moderators SHALL approve or remove content in their assigned communities. WHEN moderators receive reports, THE system SHALL present a moderation queue with context and timestamps. THE moderators SHALL temporarily suspend users for policy violations. THE system SHALL grant moderators elevated permissions for content management within their communities.\n\n### Complete Authentication System\n\n#### Registration Process\nTHE system SHALL allow new users to register with email and password. WHEN a user submits registration information, THE system SHALL validate email format and password strength. THE platform SHALL require email verification before account activation. IF registration fails validation, THE system SHALL display specific error messages for correction.\n\n#### Login Flow\nWHEN a user provides credentials, THE system SHALL authenticate against stored information. THE platform SHALL issue JWT access and refresh tokens upon successful login. THE access tokens SHALL expire after 15 minutes to maintain security. THE refresh tokens SHALL be valid for 7 days and allow seamless token renewal.\n\n#### Password Management\nWHEN a user requests password reset, THE system SHALL send a secure reset link to their email. THE reset link SHALL expire after 10 minutes for security. THE platform SHALL enforce password complexity requirements during changes. IF the current password is incorrect during change, THE system SHALL display an error message.\n\n#### Role Assignment\nTHE system SHALL assign guest role to unregistered users. WHEN a user completes registration, THE system SHALL assign member role. THE platform SHALL provide promotion to moderator role through community election or admin selection. THE roles SHALL persist across login sessions and define user permissions.\n\n#### Session Management\nWHEN a user logs in to the system, THE session SHALL remain active unless explicitly terminated. THE platform SHALL track active sessions across devices. WHEN a user logs out, THE system SHALL invalidate all tokens and clear client-side storage. THE sessions SHALL automatically expire after 30 days of inactivity.\n\n### Permission Matrix\n\n| Feature | Guest | Member | Moderator |\n|---------|--------|--------|-----------|\n| View posts and comments | ✅ | ✅ | ✅ |\n| Register account | ✅ | N/A | N/A |\n| Create posts | ❌ | ✅ | ✅ |\n| Vote on posts | ❌ | ✅ | ✅ |\n| Comment on posts | ❌ | ✅ | ✅ |\n| Reply to comments | ❌ | ✅ | ✅ |\n| Subscribe to communities | ❌ | ✅ | ✅ |\n| View user profiles | ❌ | ✅ | ✅ |\n| Report content | ❌ | ✅ | ✅ |\n| Create communities | ❌ | ❌ | ✅ |\n| Moderate content | ❌ | ❌ | ✅ |\n| Manage users | ❌ | ❌ | ✅ |\n| Access moderation tools | ❌ | ❌ | ✅ |\n\n## Functional Requirements\n\n### Content Creation and Management\n\nTHE users SHALL create communities with unique names and descriptions. WHEN a community is created, THE system SHALL validate the name format and prevent duplicates. THE communities SHALL require moderator approval for initial creation.\n\nWHEN a member creates a post, THE system SHALL associate it with a specific community. THE posts SHALL support three content types: text, links, and images. THE system SHALL validate image uploads for size and format restrictions. WHEN text posts are created, THE system SHALL support rich formatting options.\n\nTHE platform SHALL allow post authors and moderators to edit content. WHEN posts are edited, THE system SHALL display edit timestamps. THE users SHALL delete their own posts within 24 hours of creation. IF moderators delete posts, THE system SHALL provide deletion reasons.\n\n### Voting and Engagement System\n\nWHEN a user votes on a post, THE system SHALL increment or decrement the post score. THE votes SHALL be either upvotes or downvotes. THE system SHALL prevent users from voting on their own content. WHEN votes are cast, THE system SHALL update karma scores in real-time.\n\nTHE karma system SHALL calculate total user reputation from post and comment votes. THE post karma SHALL count upvotes minus downvotes on submissions. THE comment karma SHALL count upvotes minus downvotes on comments. THE system SHALL display karma changes publicly on user profiles.\n\n### Commenting and Discussion\n\nWHEN users comment on posts, THE system SHALL support unlimited nested replies. THE comments SHALL display in threaded view showing parent-child relationships. THE system SHALL limit comment length to 10,000 characters. WHEN comments receive votes, THE platform SHALL update visibility rankings.\n\nTHE users SHALL edit their comments within 10 minutes of posting. THE moderators SHALL remove inappropriate comments with replacement text. THE system SHALL track comment threads for notification purposes. WHEN replies are posted, THE parent authors SHALL receive notification options.\n\n### Content Sorting Algorithms\n\nTHE platform SHALL support four primary sorting options: hot, new, top, controversial. WHEN users select hot sorting, THE system SHALL use time-decay algorithm weighing recent popularity. WHEN new sorting is selected, THE system SHALL display posts by chronological order newest first.\n\nWHEN top sorting displays posts, THE system SHALL rank by total upvotes minus downvotes. WHEN controversial sorting is active, THE system SHALL highlight content with mixed voting patterns. THE sorting SHALL recalculate automatically without user intervention.\n\n### Community Subscriptions\n\nWHEN a member subscribes to a community, THE system SHALL add it to their personalized feed. THE subscription SHALL enable automatic post delivery in home view. THE users SHALL unsubscribe at any time without moderator notification. THE system SHALL display subscription counts publicly on community pages.\n\n### User Profiles and Activity\n\nTHE user profiles SHALL display public activity including posts and comments. THE profiles SHALL show karma scores and account creation dates. THE members SHALL customize profile information within privacy settings. THE system SHALL protect personal information from public viewing.\n\nWHEN viewing a user's profile, THE system SHALL paginate activity chronologically. THE profiles SHALL link to all user-generated content. THE members SHALL view their own private activity history. THE platform SHALL allow profile picture and username changes.\n\n### Reporting and Moderation System\n\nWHEN users report content, THE system SHALL categorize reports by violation type. THE report categories SHALL include spam, harassment, inappropriate content, and rule violations. THE moderators SHALL receive notifications for new reports in their communities.\n\nWHEN moderators review reports, THE system SHALL display the reported content with full context. THE moderators SHALL take actions including content removal, user warnings, temporary suspensions, or permanent bans. THE system SHALL track moderation history for transparency.\n\nIF content is removed, THE system SHALL display removal explanations to affected users. THE users SHALL appeal moderator decisions through a documented process. THE platform SHALL log all moderation actions for audit purposes.\n\n## User Scenarios and Workflows\n\n### New User Registration Journey\n\n1. A visitor discovers the platform and clicks \"Register\"\n2. The system displays a registration form requesting email and password\n3. User enters information and submits the form\n4. The system validates email format and password strength\n5. If validation fails, specific error messages guide corrections\n6. If successful, email verification link is sent\n7. User clicks verification link in email\n8. Account is activated and user is logged in automatically\n9. User is directed to community discovery page\n\n### Content Creation Process\n\n1. Authenticated user navigates to a community page\n2. User clicks \"Create Post\" button\n3. System displays content type selection (text, link, image)\n4. User selects content type and fills required fields\n5. For image posts, user uploads file\n6. System validates file size and format (max 10MB, common image types)\n7. User adds optional tags or flair\n8. User clicks \"Submit\" button\n9. System creates post and displays confirmation\n10. Post immediately appears in community feed\n\n### Voting Interaction Flow\n\n1. User views a post in their feed\n2. User clicks upvote or downvote button\n3. System immediately updates post score display\n4. System increments user's karma (for others voting on their content)\n5. Vote is recorded to prevent duplicate voting\n6. If reversing vote, score adjusts accordingly\n7. Changes reflect in real-time for all viewers\n8. Karma updates appear on user's profile\n\n### Community Subscription Process\n\n1. User browses available communities\n2. User clicks \"Subscribe\" button on community page\n3. System adds community to user's subscription list\n4. Community appears in user's personalized feed\n5. User receives notifications for new content (if enabled)\n6. Content from subscribed communities prioritized in algorithms\n7. User can manage subscriptions from profile settings\n8. Unsubscribe removes community from feed immediately\n\n### Moderation Workflow\n\n1. Moderator logs into moderation dashboard\n2. System displays pending reports queue with timestamps\n3. Moderator reviews each report with full context\n4. For each report, moderator selects appropriate action\n5. If removing content, moderator adds removal reason\n6. System applies action and notifies affected users\n7. Report is marked as resolved in moderation system\n8. Actions are logged for future reference\n9. System updates content visibility instantly\n\n## Business Rules and Validation\n\n### Input Validation Rules\n\nTHE system SHALL validate email addresses using standard format requirements. THE passwords SHALL require minimum 8 characters with mixed case and numbers. THE community names SHALL consist of alphanumeric characters and underscores only. THE usernames SHALL be unique across the platform and contain no special characters.\n\nTHE post titles SHALL not exceed 300 characters. THE post content SHALL support unlimited text for text posts but warn at 10,000 characters. THE comment text SHALL limit to 10,000 characters in total length. THE uploaded images SHALL restrict to 10MB maximum file size.\n\n### Business Process Validations\n\nWHEN a user attempts to vote on their own content, THE system SHALL reject the vote with an error message. WHEN submitting duplicate content, THE system SHALL warn users but allow submission. WHEN moderators try to delete content outside their communities, THE system SHALL deny access.\n\nTHE platform SHALL prevent users from commenting on deleted posts. THE system SHALL block posts to communities where users have been banned. WHEN users exceed posting limits, THE system SHALL temporarily restrict new submissions.\n\n### Error Handling Scenarios\n\nIF a post submission fails due to network issues, THE system SHALL save draft content for recovery. WHEN email verification links expire, THE system SHALL allow users to request new ones. IF image uploads fail, THE system SHALL provide specific error messages about size or format issues.\n\nWHEN users violate posting frequency limits, THE system SHALL display countdown timers. IF moderators make incorrect decisions, THE system SHALL support action reversals with audit trails. WHEN server errors occur, THE system SHALL display user-friendly messages with retry options.\n\n## Performance Requirements\n\nTHE system SHALL load community pages within 2 seconds for most requests. WHEN users submit posts, THE system SHALL process and display them within 1 second. THE voting interactions SHALL update in real-time within 500 milliseconds. THE search functionality SHALL return results within 3 seconds for common queries.\n\nTHE platform SHALL support 1,000 concurrent active users without performance degradation. THE image upload process SHALL complete within 10 seconds for typical file sizes. THE notification delivery SHALL occur within 5 seconds of relevant actions. THE moderation queue SHALL load with reports within 3 seconds.\n\n## Success Criteria and Future Considerations\n\n### Implementation Priorities\n\nTHE core platform SHALL launch with essential features: user registration, post creation, voting, commenting, basic sorting. THE moderation system SHALL deploy simultaneously to handle content issues. THE karma system SHALL be implemented to drive user engagement.\n\n### Future Enhancements\n\nTHE platform SHALL consider implementing mobile applications for increased accessibility. THE system SHALL explore advanced sorting algorithms with machine learning components. THE platform SHALL develop API endpoints for third-party integrations. THE system SHALL consider internationalization support for global expansion.\n\nTHE community monetization features SHALL be added after initial user growth targets are met. THE premium subscription models SHALL evolve based on user feedback and market analysis.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"Specify the complete user authentication system including registration, login, and role management.","filename":"03-authentication-requirements.md","documentType":"requirement","outline":["Registration Process","Login Flow","Password Management","Role Assignment","Session Management"],"audience":"development team","keyQuestions":["How do users create accounts?","What authentication mechanisms are required?","How are user roles determined?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","02-user-personas.md"],"constraints":[],"content":"# Authentication Requirements\n\n## Overview\n\nThis document specifies the comprehensive business requirements for the authentication system in the Reddit-like community platform. The authentication system serves as the primary gateway for user access, ensuring secure identity verification, role-based permissions, and session management across all platform features. All requirements are defined in natural language, focusing on user workflows and business outcomes rather than technical implementation details. The development team will use these specifications to design secure, efficient authentication mechanisms that support both user experience and platform integrity.\n\nWHEN any user attempts to access protected features, THE platform SHALL verify their authenticated status and role permissions through the authentication system. THE authentication implementation SHALL balance user ease of access with comprehensive security measures to protect community trust and user privacy.\n\n### Business Justification\nThe authentication system enables meaningful community participation by verifying user identities, managing access permissions, and maintaining session security. Without robust authentication, users cannot safely contribute content, vote on posts, or participate in moderated communities.\n\n## Core Authentication Functions\n\n### Registration Requirements\nWHEN a guest user chooses to create an account, THE system SHALL require submission of an email address and password.\nWHEN a guest submits registration details, THE system SHALL validate the email format and ensure it contains \"@\" symbol and a valid domain.\nWHEN a user creates an account, THE system SHALL allow selection of a unique username with alphanumeric characters and underscores.\nWHEN duplicate email address or username is detected during registration, THE system SHALL reject the registration attempt and display specific error messages.\nWHEN a user creates an account, THE system SHALL enforce password complexity requirements of minimum 8 characters with mixed case and numbers.\nWHEN registration form is submitted with incomplete information, THE system SHALL validate all required fields and display specific error messages for correction.\nWHEN a user successfully registers, THE system SHALL send an email verification link and require confirmation before account activation.\nWHEN email verification is not completed within 24 hours, THE system SHALL display a prompt to resend verification link during login attempts.\n\n### Login Mechanisms\nWHEN a member user attempts to log in, THE system SHALL accept email address and password as primary authentication method.\nWHEN correct credentials are provided, THE system SHALL establish a user session within 2 seconds.\nWHEN incorrect credentials are provided, THE system SHALL return appropriate error messages without revealing if email or password was wrong.\nWHEN too many failed login attempts occur within 15 minutes, THE system SHALL temporarily lock the account for 30 minutes to prevent automated attacks.\nWHEN a locked account attempts access, THE system SHALL display clear messaging about remaining lockout time.\nWHEN account credentials are compromised, THE system SHALL allow immediate password reset without requiring current password knowledge.\n\n### Password Management\nWHEN a user requests password reset, THE system SHALL send a secure reset link to their registered email address within 5 minutes.\nWHEN the reset link is accessed, THE system SHALL require the new password to meet complexity requirements.\nWHEN password change is requested while logged in, THE system SHALL require verification of current password before acceptance.\nWHEN password reset link expires, THE system SHALL require a new reset request and show clear expiration notice.\nWHEN a user changes their password, THE system SHALL invalidate all existing login sessions for security.\nWHEN password does not meet complexity requirements, THE system SHALL provide specific feedback on missing criteria (uppercase, lowercase, numbers, symbols).\n\n### Session Handling\nWHEN a member successfully logs in, THE system SHALL establish a secure session with access and refresh tokens.\nWHEN an access token expires during active use, THE system SHALL automatically attempt seamless token renewal.\nWHEN refresh token expires, THE system SHALL require full re-authentication for security.\nWHEN user explicitly logs out, THE system SHALL immediately invalidate all active tokens and clear client-side storage.\nWHEN session is inactive for 30 days, THE system SHALL automatically expire the session and require re-login.\n\n## User Role Management\n\n### Role Definitions\nTHE system SHALL support three user roles with distinct permissions and responsibilities:\n- Guest users: Can browse public posts and comments without authentication\n- Member users: Can create content, vote, comment, and subscribe to communities\n- Moderator users: Can manage assigned communities and enforce platform rules\n\nWHEN a user completes registration, THE system SHALL assign member role by default.\nWHEN a moderator designates another user as moderator, THE system SHALL update their role permissions.\nWHEN a moderator role is revoked, THE system SHALL automatically downgrade to member role.\n\n### Role Assignment Logic\nWHEN a user first completes registration verification, THE system SHALL assign member role with full content creation and interaction permissions.\nWHEN community leaders elect a new moderator through community governance, THE system SHALL promote the selected user to moderator role.\nWHEN moderator violations occur, THE system SHALL allow administrators to revoke moderator privileges and downgrade to member role.\n\n### Permission Matrices\n\n| Feature | Guest | Member | Moderator |\n|---------|-------|--------|-----------|\n| Browse posts | ✓ | ✓ | ✓ |\n| Register account | ✓ | ✗ | ✗ |\n| Create posts | ✗ | ✓ | ✓ |\n| Vote on content | ✗ | ✓ | ✓ |\n| Comment on posts | ✗ | ✓ | ✓ |\n| Subscribe to communities | ✗ | ✓ | ✓ |\n| Report inappropriate content | ✗ | ✓ | ✓ |\n| Delete own content | ✗ | ✓ (within 24 hours) | ✓ |\n| Create communities | ✗ | ✗ | ✓ |\n| Moderate content | ✗ | ✗ | ✓ |\n\nWHEN a user's role changes, THE system SHALL immediately update their available actions and display appropriate interface elements.\nWHEN permissions are insufficient for an action, THE system SHALL show clear error messages and suggest appropriate alternatives.\n\n## Authentication Workflows\n\n### Registration Process Flow\n\n```mermaid\ngraph LR\n  A[\"User enters registration details\"] --> B{\"Validate email format\"}\n  B -->|\"Invalid\"| C[\"Show email error\"]\n  B -->|\"Valid\"| D{\"Check if email exists\"}\n  D -->|\"Exists\"| E[\"Show duplicate email error\"]\n  D -->|\"New\"| F{\"Validate password strength\"}\n  F -->|\"Weak\"| G[\"Show password requirements\"]\n  F -->|\"Strong\"| H{\"Validate username uniqueness\"}\n  H -->|\"Exists\"| I[\"Show username taken error\"]\n  H -->|\"Available\"| J[\"Create account\"]\n  J --> K[\"Send verification email\"]\n  K --> L[\"Account created successfully\"]\n  L --> M[\"User redirected to email verification prompt\"]\n  C --> A\n  E --> A\n  G --> A\n  I --> A\n```\n\nWHEN a user follows the registration workflow, THE system SHALL maintain input data across validation failures to minimize user effort.\nWHEN registration succeeds, THE system SHALL provide clear next steps for email verification.\nWHEN verification email fails to send, THE system SHALL offer alternative verification methods.\n\n### Login Process Flow\n\n```mermaid\ngraph LR\n  A[\"User enters login credentials\"] --> B{\"Validate input format\"}\n  B -->|\"Invalid\"| C[\"Show field validation errors\"]\n  B -->|\"Valid\"| D{\"Authenticate credentials\"}\n  D -->|\"Invalid\"| E{\"Check attempt count\"}\n  E -->|\"Under limit\"| F[\"Show generic auth error\"]\n  E -->|\"Over limit\"| G[\"Show account locked message\"]\n  G --> H[\"Start lockout timer\"]\n  D -->|\"Valid\"| I{\"Check account status\"}\n  I -->|\"Active\"| J[\"Generate JWT tokens\"]\n  J --> K[\"Return access token\"]\n  K --> L[\"Establish authenticated session\"]\n  I -->|\"Inactive\"| M[\"Show account deactivated message\"]\n  C --> A\n  F --> A\n  H --> A\n  M --> A\n```\n\nWHEN the login flow encounters validation errors, THE system SHALL preserve user input for correction.\nWHEN authentication succeeds, THE system SHALL redirect to user's previous location or personalized feed.\nWHEN account is locked, THE system SHALL clearly explain the unlock time and provide support contact options.\n\n### Password Reset Flow\n\n```mermaid\ngraph LR\n  A[\"User requests password reset\"] --> B{\"Validate email format\"}\n  B -->|\"Invalid\"| C[\"Show email format error\"]\n  B -->|\"Valid\"| D{\"Check if account exists\"}\n  D -->|\"Not found\"| E[\"Show account not found message\"]\n  D -->|\"Exists\"| F[\"Generate secure reset token\"]\n  F --> G[\"Send reset email with link\"]\n  G --> H[\"Reset email sent message\"]\n  H --> I[\"User clicks reset link\"]\n  I --> J{\"Validate reset token\"}\n  J -->|\"Invalid/expired\"| K[\"Show invalid link message\"]\n  K --> L[\"Redirect to reset request\"]\n  L --> M[\"Request new reset\"]\n  J -->|\"Valid\"| N[\"Show new password form\"]\n  N --> O[\"User enters new password\"]\n  O --> P{\"Validate password strength\"}\n  P -->|\"Weak\"| Q[\"Show password requirements\"]\n  Q --> O\n  P -->|\"Strong\"| R[\"Update password in database\"]\n  R --> S[\"Invalidate reset token\"]\n  S --> T[\"Redirect to login with success message\"]\n  C --> A\n  E --> A\n  M --> A\n```\n\nWHEN password reset is initiated successfully, THE system SHALL confirm email delivery.\nWHEN reset token expires, THE system SHALL guide user back to reset request process.\nWHEN new password is accepted, THE system SHALL notify user of successful password change via email.\n\n## Security and Validation Rules\n\n### Business Rules for Security\nTHE system SHALL enforce secure password requirements while balancing user convenience.\nTHE system SHALL implement progressive backoff periods for repeated failed login attempts.\nTHE system SHALL log all authentication failures for security monitoring and threat detection.\nTHE system SHALL require email verification to prevent spam accounts and ensure communication capabilities.\nTHE system SHALL prevent password reuse of recent passwords to maintain credential strength.\nTHE system SHALL implement session timeouts based on user activity patterns.\n\n### Validation Requirements\nWHEN processing user input during registration, THE system SHALL sanitize all input to prevent malicious data injection.\nWHEN validating email addresses, THE system SHALL confirm proper domain structure without excessive validation delays.\nWHEN enforcing passwords, THE system SHALL provide clear, actionable feedback on requirements without revealing exact system limits.\nWHEN managing account sessions, THE system SHALL securely rotate tokens and validate expiration times.\n\n### Error Handling and User Feedback\nWHEN authentication fails due to network connectivity issues, THE system SHALL provide retry mechanisms with clear messaging.\nWHEN account is temporarily locked, THE system SHALL display comprehensive information about unlock timing and appeal processes.\nWHEN password reset encounters system errors, THE system SHALL offer retry options without data loss.\nWHEN session renewal fails unexpectedly, THE system SHALL gracefully redirect to fresh authentication.\n\n## User Scenarios and Workflows\n\n### New User Onboarding Journey\nWHEN a visitor decides to join the community, THE user SHALL experience a streamlined registration process:\n- User identifies registration form on homepage or community page\n- User enters email address and desired username\n- System provides real-time validation feedback as user types\n- User creates password meeting system requirements\n- User receives immediate feedback on password strength\n- User submits registration and receives confirmation\n- User checks email for verification link\n- User clicks link and completes account activation\n- User is automatically logged in and directed to community discovery\n- User receives welcome message with next steps for community engagement\n\nWHEN the onboarding flow encounters issues, THE system SHALL provide contextually appropriate help and alternative completion paths.\n\n### Daily Authentication Experience\nWHEN an established member returns to the platform, THE user SHALL seamlessly resume participation:\n- User arrives at platform through direct URL or bookmark\n- System detects previous authenticated state (if within session)\n- User is directly shown personalized community feed\n- System verifies permissions for viewed content\n- User can immediately participate in discussions and content creation\n- System maintains login state across browser sessions\n- User experiences consistent authentication across devices\n- Platform remembers user preferences and community subscriptions\n\nWHEN authentication state becomes invalid during use, THE system SHALL preserve user context and facilitate quick re-authentication.\n\n### Moderator Authentication Requirements\nWHEN a moderator accesses the platform, THE system SHALL provide enhanced authentication features:\n- Additional verification steps for moderator-sensitive actions\n- Separate session management for moderation activities\n- Clear visual indicators of moderator status and responsibilities\n- Access to moderation tools and community management features\n- Separate logout required for moderator session termination\n\nWHEN moderator authentication fails, THE system SHALL log the security event for audit purposes.\n\n## Success Criteria and Business Outcomes\n\n### Implementation Success Metrics\nWHEN the authentication system is implemented, THE platform SHALL achieve:\n- Account registration completion rate above 75%\n- Failed login attempt rate below 5%\n- Password reset completion rate above 85%\n- User session continuity across platform navigation\n- Clear security incident detection and response\n- Seamless integration with all platform features\n\n### User Experience Goals\nWHEN users interact with authentication features, THE system SHALL provide:\n- Intuitive registration forms with progressive disclosure\n- Immediate feedback on password strength and requirements\n- Clear error messages with actionable correction steps\n- Fast loading times for all authentication operations\n- Consistent authentication state across platform features\n- Helpful guidance for password management and security\n\n### Security Effectiveness Measures\nWHEN the authentication system protects the platform, THE effectiveness SHALL be measured by:\n- Prevention of unauthorized account access attempts\n- Detection and blocking of suspicious authentication patterns\n- Protection of user personal information across all operations\n- Maintenance of platform trust through secure user experiences\n- Compliance with security best practices and user expectations\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team and should align with modern security standards and user experience best practices.*\n\n## Related Documents\nFor foundational platform objectives and user roles, refer to the [Service Vision Document](./01-service-vision.md).\nFor integration with content creation features, see the [Content Management Requirements](./04-content-management.md)."},{"reason":"Describe the core content creation and management features including posts and media handling.","filename":"04-content-management.md","documentType":"requirement","outline":["Post Creation","Media Upload","Community Association","Content Moderation","Delete/Edit Functions"],"audience":"development team","keyQuestions":["What types of content can users create?","How are posts linked to communities?","What controls exist for inappropriate content?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","03-authentication-requirements.md"],"constraints":[],"content":"# Content Management Requirements for Community Platform\n\n## Overview\n\nThis document specifies the comprehensive content management requirements for the Reddit-like community platform. It defines how posts (text, links, images) are created, managed, associated with communities, moderated, and modified within the platform's business logic.\n\nWHEN users participate in the community platform, THE system SHALL support a complete content lifecycle from creation through moderation and maintenance in accordance with defined business rules.\n\n## Business Context\n\nContent management forms the core of the community platform, enabling members to share information and engage in discussions within specific communities. Users can create various types of content, associate it with relevant communities, and interact through voting and commenting systems. The platform includes moderation capabilities to maintain content quality and enforce community standards through role-based permissions.\n\nTHE system SHALL support multiple content types including text posts, link posts, and image posts as the primary content creation modes.\n\nThe platform's moderation system SHALL allow moderators to review and remove inappropriate content while maintaining transparency in the moderation process. User roles SHALL include guest, member, and moderator permissions to ensure appropriate access control throughout the content management lifecycle.\n\n## Post Creation Requirements\n\n### Text Post Creation\n\nWHEN a member initiates post creation, THE system SHALL provide options to create text-based posts with titles and body content.\n\nWHEN a member submits a text post, THE system SHALL validate the submission includes a non-empty title and optional body text.\n\nIF a member attempts to submit a text post without a title, THEN THE system SHALL prevent submission and display an error message indicating \"Post title is required\".\n\n### Link Post Creation\n\nWHEN a member selects link posting, THE system SHALL allow submission of URLs with optional text descriptions.\n\nWHEN a member submits a link post, THE system SHALL validate the provided URL format is syntactically valid.\n\nIF a member submits an invalid URL format, THEN THE system SHALL prevent submission and display an error message indicating \"Please enter a valid URL\".\n\n### Content Validation Rules\n\nTHE system SHALL limit post titles to a maximum of 300 characters and post body text to 40,000 characters.\n\nWHILE processing post creation, THE system SHALL sanitize all user-input content to prevent malicious script execution.\n\nTHE system SHALL store post metadata including creation timestamp, author information, and initial content state.\n\n## Media Upload Requirements\n\n### Image Upload Process\n\nWHEN a member selects image posting option, THE system SHALL allow upload of image files (JPEG, PNG, GIF formats).\n\nWHILE processing image uploads, THE system SHALL enforce file size limits of maximum 10MB per image.\n\nWHEN an image upload completes successfully, THE system SHALL generate thumbnail versions for display optimization.\n\n### Upload Validation\n\nIF a member attempts to upload a file exceeding size limits, THEN THE system SHALL prevent upload and display an error message indicating \"Image file must be smaller than 10MB\".\n\nIF a member attempts to upload an unsupported file type, THEN THE system SHALL prevent upload and display an error message indicating \"Please upload only JPEG, PNG, or GIF images\".\n\n### Processing Workflow\n\nWHEN image upload completes, THE system SHALL process the image within 5 seconds and provide immediate feedback to the user.\n\nTHE system SHALL store original and processed versions of uploaded images for different display contexts.\n\n## Community Association Requirements\n\n### Community Linking\n\nWHEN a member creates a post, THE system SHALL require association with exactly one community.\n\nWHILE displaying post creation interface, THE system SHALL list available communities where the member can post.\n\nTHE system SHALL verify the member has permission to post in the selected community before allowing submission.\n\n### Community Permissions\n\nIF a member attempts to post in a community where they lack posting permissions, THEN THE system SHALL prevent submission and display an error message indicating \"You do not have permission to post in this community\".\n\n### Cross-Community Display\n\nTHE system SHALL support posts being discoverable across communities through platform-wide feeds and search functions.\n\n## Content Moderation Requirements\n\n### Moderator Controls\n\nWHEN a moderator reviews content, THE system SHALL provide tools to approve or remove posts from communities.\n\nWHILE content is awaiting moderation in restricted communities, THE system SHALL hide the content from public feeds until approved.\n\nTHE system SHALL log all moderation actions including moderator identity, timestamp, and action type for audit purposes.\n\n### Automatic Filtering\n\nTHE system SHALL implement basic content filtering for prohibited terms and spam patterns.\n\nWHEN potentially inappropriate content is detected, THE system SHALL flag posts for moderator review.\n\n### Escalate to Moderator\n\nWHEN a member reports content, THE system SHALL queue the reported item for moderator attention with priority based on report frequency.\n\nWHILE processing reports, THE system SHALL notify moderators of new reports in their platform's moderation interface.\n\n## Delete/Edit Functions Requirements\n\n### Post Editing\n\nWHEN a post author requests editing their own post, THE system SHALL allow modification within a 24-hour window from creation.\n\nWHILE editing a post, THE system SHALL preserve the original creation timestamp and append edit history metadata.\n\nIF a post exceeds the 24-hour edit window, THEN THE system SHALL deny edit requests and display an error message indicating \"Posts can only be edited within 24 hours of creation\".\n\n### Post Deletion\n\nWHEN a post author or moderator initiates deletion, THE system SHALL mark the content as deleted rather than permanently removing it.\n\nWHILE displaying deleted posts, THE system SHALL show placeholder text (\"deleted\") for regular users and full content for moderators.\n\nTHE system SHALL preserve deletion metadata including who deleted the item and when for audit purposes.\n\n### Moderator Deletion Rights\n\nWHILE moderators delete content, THE system SHALL not enforce time limits but SHALL log the action as a moderation event.\n\n## User Role Permissions\n\n### Guest Permissions\n\nWHEN a guest user attempts to access content creation, THE system SHALL display login prompts and prevent anonymous posting.\n\n### Member Permissions\n\nWHEN a member creates posts, THE system SHALL allow full content creation capabilities in authorized communities.\n\nWHILE members edit their own content, THE system SHALL enforce ownership validation to prevent unauthorized modifications.\n\n### Moderator Permissions\n\nWHEN moderators access content management, THE system SHALL provide elevated deletion and moderation capabilities across community content.\n\nIF moderators attempt to delete posts older than 24 hours, THEN THE system SHALL allow the action without restrictions.\n\n### Permission Validation Workflow\n\nTHE system SHALL validate user roles and community permissions before executing any content modification actions.\n\nIF permission checks fail, THEN THE system SHALL return appropriate error responses without performing the requested action.\n\n## Business Rules\n\n### Content Uniqueness\n\nTHE system SHALL allow duplicate content across different communities but SHALL encourage unique contributions through UI design.\n\n### Community Ownership\n\nTHE system SHALL enforce that content belongs to specific communities and MAY appear in cross-community aggregations subject to business rules.\n\n### Spam Prevention\n\nWHILE processing content creation, THE system SHALL implement rate limiting at 10 posts per hour per user.\n\nIF a user exceeds posting rate limits, THEN THE system SHALL temporarily block new submissions and display an error message indicating \"Posting limit exceeded. Please try again later\".\n\n### Content Age Validation\n\nTHE system SHALL validate that editing actions occur within defined time windows and enforce business rules accordingly.\n\n## Error Handling\n\n### Submission Errors\n\nWHEN post submission fails due to server issues, THE system SHALL save draft content on the client and provide retry mechanisms.\n\nWHILE displaying error conditions, THE system SHALL show clear, actionable error messages to guide user recovery.\n\n### Media Processing Errors\n\nIF image processing fails, THEN THE system SHALL notify the user with specific error details and allow alternative text-based submission.\n\nWHEN network connectivity issues occur during upload, THE system SHALL provide resumable upload capabilities where technically feasible.\n\n### Validation Error Recovery\n\nTHE system SHALL support user correction of validation failures through form preservation and clear error indication.\n\n## Performance Requirements\n\nTHE system SHALL process and display post creation results within 3 seconds of submission.\n\nWHILE users browse content, THE system SHALL load post lists within 2 seconds for typical community feeds.\n\nWHEN image thumbnails are requested, THE system SHALL serve cached versions immediately or within 1 second.\n\nTHE system SHALL handle simultaneous content creation from multiple users without degradation in response times.\n\n## Business Process Flows\n\n```mermaid\ngraph LR\n  A[\"User Initiates Content Creation\"] --> B{\"Content Type Selection\"}\n  B -->|Text Post| C[\"Enter Title and Body\"]\n  B -->|Link Post| D[\"Enter URL and Description\"]\n  B -->|Image Post| E[\"Select Image File\"]\n  C --> F{\"Validation Check\"}\n  D --> F\n  E --> G[\"File Upload Process\"]\n  G --> H{\"File Size/Type Check\"}\n  H -->|Valid| I[\"Generate Thumbnails\"]\n  H -->|Invalid| J[\"Show Upload Error\"]\n  F -->|Valid| K[\"Community Association\"]\n  F -->|Invalid| L[\"Show Validation Error\"]\n  K --> M{\"Community Permission Check\"}\n  M -->|Authorized| N[\"Process and Save Content\"]\n  M -->|Unauthorized| O[\"Show Permission Error\"]\n  N --> P[\"Display Success Message\"]\n  I --> N\n```\n\n```mermaid\ngraph LR\n  A[\"Content Submission Attempt\"] --> B{\"User Role Check\"}\n  B -->|Guest| C[\"Require Authentication\"]\n  B -->|Member| D{\"Community Membership\"}\n  B -->|Moderator| E[\"Elevated Permissions\"]\n  D -->|Member of Community| F[\"Allow Posting\"]\n  D -->|Not Member| G[\"Display Join Prompt\"]\n  E --> F\n  F --> H{\"Content Validation\"}\n  H -->|Valid| I[\"Process Submission\"]\n  H -->|Invalid| J[\"Show Validation Error\"]\n  I --> K[\"Content Moderation Queue\"]\n  K --> M[\"Public Display Scored on Karma\"]\n```\n\n```mermaid\ngraph LR\n  A[\"Moderator Dashboard\"] --> B[\"Content Report Queue\"]\n  B --> C[\"Review Reported Content\"]\n  C --> D{\"Moderation Decision\"}\n  D -->|Approve| E[\"Publish Content\"]\n  D -->|Remove| F[\"Mark as Removed\"]\n  D -->|Edit| G[\"Modify Content\"]\n  E --> H[\"Update Content Status\"]\n  F --> H\n  G --> H\n  H --> I[\"Notify Content Author\"]\n  H --> J[\"Log Moderation Action\"]\n```\n\n*Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"Specify the voting and engagement systems including karma calculations and nested commenting.","filename":"05-voting-comments-system.md","documentType":"requirement","outline":["Upvote/Downvote Mechanics","Comment Structure","Nested Reply System","Karma Calculation","Engagement Metrics"],"audience":"development team","keyQuestions":["How are votes counted and displayed?","What is the comment hierarchy structure?","How is user karma calculated?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","04-content-management.md"],"constraints":[],"content":"# Requirements Analysis Report: Voting and Comments System\n\n## Executive Summary\n\nThis requirements analysis document outlines the business and functional requirements for implementing a comprehensive voting and commenting system in the Reddit-like community platform. The system is designed to facilitate user engagement, content quality control, and community interaction through voting mechanics, nested commenting, and karma-based reputation tracking.\n\nAll requirements are specified in business terms, focusing on what the system should accomplish rather than how to implement it technically. This document serves as the foundation for backend development, ensuring developers understand the complete business context and user expectations.\n\n## Business Context and Objectives\n\n### Business Model Alignment\nThe voting and comments system directly supports the platform's business model by:\n- Creating viral content discovery through community-driven ranking algorithms\n- Building user retention through meaningful interactions and reputation-building\n- Generating engagement metrics for monetization strategies (advertising, premium features)\n- Establishing community trust through transparent moderation and voting transparency\n\n### Platform Objectives Supported\n1. Foster active community participation through easy-to-use interaction tools\n2. Ensure content quality through democratic voting mechanisms  \n3. Provide engaging discussion threads that encourage return visits\n4. Build user loyalty through karma rewards and reputation systems\n5. Maintain platform integrity through comment moderation and reporting integration\n\n## User Roles and Permissions Matrix\n\n### Guest Users\n- CAN view public comments and vote counts on posts\n- CANNOT vote on posts or comments\n- CANNOT submit comments or replies\n\n### Member Users  \n- CAN upvote or downvote posts and comments\n- CAN submit comments on posts\n- CAN reply to existing comments (creating nested threads)\n- CAN view their own voting history in profiles\n- CAN track their karma score and changes\n\n### Moderator Users\n- HAVE all member permissions\n- CAN moderate comments within their managed communities\n- CAN hide or remove inappropriate comments\n- CAN view detailed voting analytics for moderation purposes\n\n## Functional Requirements: Voting System\n\n### Core Voting Mechanics\n\nWHEN a member user encounters a post or comment, THE system SHALL present clear upvote and downvote buttons.\n\nWHEN a user clicks the upvote button on a post, THE system SHALL increment the post's upvote count by 1.\n\nWHEN a user clicks the downvote button on a post, THE system SHALL increment the post's downvote count by 1.\n\nWHEN a user changes their vote from upvote to downvote (or vice versa), THE system SHALL adjust both upvote and downvote counts accordingly.\n\nWHEN a user clicks the vote button again on the same item they previously voted on, THE system SHALL remove their vote and decrement the appropriate count.\n\n### Vote Display and Transparency\n\nTHE system SHALL display the net vote score (upvotes minus downvotes) prominently on each post and comment.\n\nTHE system SHALL show the vote counts separately (upvotes and downvotes) in detailed views.\n\nIF a user has already voted on an item, THE system SHALL highlight which button they selected.\n\nTHE system SHALL update vote counts in real-time for all users viewing the content.\n\n### Vote Business Rules\n\nWHEN a user attempts to vote on their own content, THE system SHALL prevent the vote and display an appropriate message.\n\nWHEN a guest user attempts to vote, THE system SHALL prompt them to register or log in.\n\nWHILE a user account is suspended, THE system SHALL disable their voting capabilities and display suspension status.\n\n### Vote History Tracking\n\nTHE system SHALL maintain a record of all user votes for their personal history.\n\nWHERE user privacy settings allow, THE system SHALL display vote history on user profiles.\n\nWHEN users request to see their voting activity, THE system SHALL present it chronologically with content context.\n\n## Functional Requirements: Comment System\n\n### Comment Creation and Submission\n\nWHEN a member user clicks to comment on a post, THE system SHALL present a comment composition interface.\n\nWHEN a user submits a comment, THE system SHALL validate the content length (minimum 1 character, maximum 10,000 characters).\n\nWHEN comment validation passes, THE system SHALL save the comment and display it immediately in the comment thread.\n\nWHEN comment validation fails, THE system SHALL display specific error messages and allow the user to correct and resubmit.\n\n### Nested Reply Structure\n\nTHE system SHALL support unlimited nesting levels for comment replies.\n\nWHEN a user replies to a comment, THE system SHALL create a nested relationship where the reply appears indented under the parent comment.\n\nTHE system SHALL display comment threads with visual indentation to show hierarchy levels.\n\nWHEN displaying nested comments, THE system SHALL limit initial display depth but provide \"load more replies\" functionality.\n\n### Comment Display and Navigation\n\nTHE system SHALL sort comments by chronological order with newest replies appearing at the bottom of each thread.\n\nTHE system SHALL show the total number of replies for each comment thread.\n\nWHEN a comment thread becomes very deep, THE system SHALL provide \"collapse thread\" functionality to improve readability.\n\nWHEN users navigate deep comment threads, THE system SHALL maintain context and provide navigation aids.\n\n## Functional Requirements: Karma System\n\n### Karma Calculation Logic\n\nWHEN a post receives an upvote, THE system SHALL add 1 point to the post author's karma score.\n\nWHEN a post receives a downvote, THE system SHALL subtract 1 point from the post author's karma score.\n\nWHEN a comment receives an upvote, THE system SHALL add 0.5 points to the comment author's karma score.\n\nWHEN a comment receives a downvote, THE system SHALL subtract 0.5 points from the comment author's karma score.\n\nWHEN a user's karma reaches new milestone thresholds (100, 500, 1000, etc.), THE system SHALL award special badges or recognition.\n\n### Karma Display and History\n\nTHE system SHALL display each user's current karma score prominently on their profile.\n\nTHE system SHALL show karma breakdown (post karma vs comment karma) in detailed profile views.\n\nWHEN users view their karma over time, THE system SHALL provide graphical representation of karma growth.\n\nTHE system SHALL send notifications when users reach karma milestones.\n\n### Karma-Based Features\n\nIF a user's karma score exceeds 100 points, THE system SHALL grant access to advanced formatting options in posts and comments.\n\nIF a user's karma score exceeds 500 points, THE system SHALL enable community creation capabilities.\n\nWHERE karma requirements are met, THE system SHALL unlock special user titles or profile customizations.\n\n## Engagement Metrics and Analytics\n\n### Post Engagement Tracking\n\nTHE system SHALL calculate engagement rate as (upvotes + comments) / total views for each post.\n\nTHE system SHALL track comment-to-view ratios to measure discussion quality.\n\nTHE system SHALL identify trending posts based on vote velocity over time periods.\n\n### User Engagement Analysis\n\nTHE system SHALL track each user's daily/weekly/monthly voting and commenting activity.\n\nTHE system SHALL calculate user engagement scores based on interaction frequency and quality.\n\nWHEN moderators review community health, THE system SHALL provide engagement dashboards showing participation trends.\n\n### Community-Level Metrics\n\nTHE system SHALL aggregate karma and engagement data by community for community leaders.\n\nTHE system SHALL compare engagement across different communities for platform analytics.\n\nWHEN analyzing content performance, THE system SHALL correlate votes with content types and posting times.\n\n## Business Rules and Validation\n\n### Content Quality Controls\n\nWHEN comments contain excessive profanity, THE system SHALL automatically flag them for moderator review.\n\nIF a post receives multiple downvotes within a short time period, THE system SHALL highlight it for community attention.\n\nWHEN users accumulate multiple downvoted comments, THE system SHALL implement temporary commenting restrictions.\n\n### Community Standards Enforcement\n\nWHILE comments violate community rules, THE system SHALL allow moderators to hide or remove them.\n\nWHEN inappropriate content receives votes, THE system SHALL provide voting analytics to support moderation decisions.\n\nIF voting patterns indicate coordinated manipulation, THE system SHALL implement anti-manipulation safeguards.\n\n### User Behavior Monitoring\n\nWHEN users exhibit suspicious voting patterns (mass downvoting), THE system SHALL log and monitor their activity.\n\nIF users attempt to game the karma system through artificial means, THE system SHALL implement rate limiting and detection algorithms.\n\nWHERE user behavior violates platform terms, THE system SHALL integrate with the moderation system for appropriate actions.\n\n## User Scenarios and Workflows\n\n### Basic Community Participation Flow\n\n```mermaid\ngraph LR\n  A[\"User discovers interesting post\"] --> B{\"Check if logged in\"}\n  B -->|\"No\"| C[\"Prompt to register/login\"]\n  B -->|\"Yes\"| D[\"Read post content\"]\n  D --> E[\"Vote on post (up/down/neutral)\"]\n  E --> F[\"Read existing comments\"]\n  F --> G[\"Add comment or reply\"]\n  G --> H[\"View karma impact\"]\n  H --> I[\"Continue browsing community\"]\n```\n\n### Deep Engagement Scenario\n\n```mermaid\ngraph LR\n  A[\"Active member joins discussion\"] --> B[\"Upvote valuable comment\"]\n  B --> C[\"Reply with additional insight\"]\n  C --> D[\"Reply receives upvotes\"]\n  D --> E[\"Karma score increases\"]\n  E --> F[\"Earn engagement recognition\"]\n  F --> G[\"Access advanced features\"]\n  G --> H[\"Become community contributor\"]\n```\n\n### Content Moderation Interaction\n\n```mermaid\ngraph LR\n  A[\"Post receives many downvotes\"] --> B[\"Moderator reviews voting patterns\"]\n  B --> C{\"Content violates rules?\"}\n  C -->|\"Yes\"| D[\"Remove content\"]\n  C -->|\"No\"| E[\"Investigate vote manipulation\"]\n  E --> F{\"Coordinated voting?\"}\n  F -->|\"Yes\"| G[\"Implement voting restrictions\"]\n  F -->|\"No\"| H[\"Monitor voting trends\"]\n  D --> I[\"Notify parties\"]\n```\n\n## Error Handling and Edge Cases\n\n### Voting Error Scenarios\n\nIF network connectivity fails during voting, THE system SHALL queue the vote for submission when connection returns.\n\nWHEN vote submission conflicts with another user's change, THE system SHALL resolve based on timestamp and display updated counts.\n\nIF a vote attempt violates business rules, THE system SHALL display clear error messages and prevent the action.\n\nIF a user attempts multiple rapid votes on the same content, THE system SHALL implement rate limiting to prevent abuse.\n\n### Comment System Errors\n\nWHEN comment submission fails due to server issues, THE system SHALL save draft content on the client and allow retry.\n\nIF duplicate comments are detected, THE system SHALL prevent submission and inform the user.\n\nWHEN nested reply depth exceeds reasonable limits, THE system SHALL flatten the display and provide alternative navigation.\n\n### Karma Calculation Issues\n\nIF karma calculations become desynchronized, THE system SHALL provide manual recalculation procedures for administrators.\n\nWHEN karma awards fail to apply due to system errors, THE system SHALL queue awards for later processing.\n\nIF user accounts are merged or split, THE system SHALL correctly transfer or redistribute karma scores.\n\n## Integration Requirements\n\n### Content Management Integration\n\nTHE voting system SHALL integrate with post creation to immediately enable voting upon publication.\n\nWHEN posts are deleted, THE system SHALL adjust all associated votes and karma calculations.\n\nTHE comment system SHALL reference the content management system for permission checking and community association.\n\n### User Profile Integration\n\nTHE system SHALL sync karma changes with user profile displays in real-time.\n\nWHEN users view their activity history, THE system SHALL include voting and commenting activity from this system.\n\nTHE karma system SHALL provide data to the user profiles system for reputation displays and achievement tracking.\n\n### Moderation System Integration\n\nWHEN inappropriate content receives votes, THE system SHALL notify moderators of voting patterns.\n\nTHE comment moderation tools SHALL sync with voting data to show content engagement metrics.\n\nWHERE community moderators take action, THE system SHALL adjust karma and vote counts accordingly.\n\n## Non-Functional Requirements\n\n### Performance Expectations\n\nWHEN users vote on content, THE system SHALL process votes within 2 seconds.\n\nTHE system SHALL support simultaneous voting on thousands of pieces of content during peak traffic.\n\nWHEN displaying comment threads with hundreds of replies, THE system SHALL load content progressively to maintain response times under 3 seconds.\n\n### Scalability Requirements\n\nTHE system SHALL maintain voting performance as user base grows to millions of active users.\n\nWHEN comment threads become very large (thousands of replies), THE system SHALL efficiently store and retrieve nested relationships.\n\nTHE karma calculation system SHALL handle real-time updates across distributed systems.\n\n### Reliability Standards\n\nTHE system SHALL ensure vote data integrity even during system outages.\n\nWHEN vote conflicts occur, THE system SHALL provide automatic reconciliation procedures.\n\nTHE comment system SHALL maintain thread integrity during high-concurrency reply scenarios.\n\n### User Experience Standards\n\nTHE voting interface SHALL feel immediate and responsive without page reloads.\n\nWHEN users navigate deep comment threads, THE system SHALL provide clear navigation aids and context preservation.\n\nTHE karma display SHALL update seamlessly as actions earn or lose reputation points.\n\nThis comprehensive requirements specification provides the foundation for implementing a robust voting and commenting system that will drive user engagement and content quality in the community platform. The business-focused requirements ensure that technical implementations will support the platform's goals of fostering active communities and quality content discovery.\n\nFor detailed business logic validations, refer to the Business Logic Validation Document. The overall service vision is outlined in the Service Vision Document."},{"reason":"Define post sorting algorithms and community subscription mechanisms.","filename":"06-sorting-subscriptions.md","documentType":"requirement","outline":["Sorting Algorithms","Hot/New/Top/Controversial Logic","Subscription Flow","Personalized Feeds","Algorithm Inputs"],"audience":"development team","keyQuestions":["How are different sorting options implemented?","What happens when users subscribe?","How are algorithms weighted?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","05-voting-comments-system.md"],"constraints":[],"content":"# Post Sorting and Community Subscriptions\n\n## Introduction\n\nThis document defines the business requirements for post sorting algorithms and community subscription mechanisms in the communityPlatform. It provides detailed specifications for how posts are ordered and displayed to users, and how the subscription system enables personalized content feeds. These requirements are written in natural language, focusing on business logic and user experience, while leaving technical implementation details to the development team.\n\nThe sorting system supports multiple algorithms (hot, new, top, controversial) that determine post order within communities. The subscription system allows members to follow communities they are interested in, creating personalized feeds from their subscribed communities.\n\nAll requirements use the EARS format where applicable to ensure clarity and testability.\n\n## Sorting Algorithms\n\n### Hot Sorting Logic\n\nHot sorting prioritizes recently active posts and those with high engagement. The algorithm balances recency and popularity to surface content that is both timely and popular.\n\n**Functional Requirements:**\n\nWHEN a user visits a community sorted by hot, THE communityPlatform SHALL order posts by calculating a \"hot\" score for each post.\n\nTHE communityPlatform SHALL calculate hot score using the following formula: score = upvotes - downvotes + (comment_count * 1.5) - ((current_time - post_time) / 3600) * decay_factor.\n\nTHE communityPlatform SHALL use a decay_factor of 0.8 for posts older than 12 hours.\n\nWHEN posts have identical hot scores, THE communityPlatform SHALL order them by creation time descending (newest first).\n\nTHE communityPlatform SHALL recalculate hot scores every 10 minutes to reflect current engagement.\n\n### New Sorting Logic\n\nNew sorting displays posts in chronological order, focusing on the most recent content first.\n\n**Functional Requirements:**\n\nWHEN a user selects new sorting on a community page, THE communityPlatform SHALL order posts by creation timestamp descending.\n\nTHE communityPlatform SHALL display posts in real-time order as they are created.\n\nWHERE a post is edited after initial creation, THE communityPlatform SHALL maintain its position based on original creation time.\n\nIF multiple posts have the same timestamp, THE communityPlatform SHALL order them alphabetically by title.\n\n### Top Sorting Logic\n\nTop sorting ranks posts by overall popularity, measured by net upvotes regardless of time.\n\n**Functional Requirements:**\n\nWHEN a user selects top sorting, THE communityPlatform SHALL order posts by net upvotes (upvotes minus downvotes) descending.\n\nTHE communityPlatform SHALL ignore downvotes that exceed upvotes, but never allow scores below zero.\n\nTHE communityPlatform SHALL exclude posts with net negative score (more downvotes than upvotes) from top sorting display.\n\nWHEN posts have identical net upvotes, THE communityPlatform SHALL order them by creation time descending.\n\nTHE communityPlatform SHALL hide posts from top sorting if they have been deleted by moderators or authors.\n\n### Controversial Sorting Logic\n\nControversial sorting highlights posts that generate debate, measured by the ratio of upvotes to total votes and absolute vote volume.\n\n**Functional Requirements:**\n\nWHEN a user selects controversial sorting, THE communityPlatform SHALL calculate controversy score as (upvotes + downvotes) / (max(upvotes, downvotes) + 1).\n\nTHE communityPlatform SHALL order posts by controversy score descending.\n\nTHE communityPlatform SHALL exclude posts with fewer than 5 total votes from controversial sorting.\n\nWHEN posts have identical controversy scores, THE communityPlatform SHALL order them by total vote count descending.\n\nIF a post has zero controversy (no votes), THE communityPlatform SHALL sort it by creation time descending and place it at the bottom.\n\n### Sorting Display Requirements\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL provide sorting controls on every community page with options: hot, new, top, controversial.\n\nWHEN a user changes sorting method, THE communityPlatform SHALL remember their preference for that community.\n\nTHE communityPlatform SHALL display post scores next to each sorting option (e.g., \"Hot (1,245 points)\").\n\nWHEN no posts exist in a community, THE communityPlatform SHALL display an empty state with suggestion to create first post.\n\nTHE communityPlatform SHALL limit initial display to 20 posts per page with pagination.\n\n## Community Subscription Mechanisms\n\n### Subscription Flow\n\nThe subscription system allows members to follow communities for personalized content delivery. Subscriptions create a curated feed of content from multiple communities.\n\n**Functional Requirements:**\n\nWHEN a member clicks the subscribe button on a community page, THE communityPlatform SHALL add that community to their subscriptions.\n\nWHEN a member is already subscribed to a community, THE communityPlatform SHALL display \"unsubscribe\" button instead.\n\nWHEN a member unsubscribes from a community, THE communityPlatform SHALL immediately remove it from their personalized feed.\n\nTHE communityPlatform SHALL send confirmation message when subscription changes are successful.\n\n### Subscription Management\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL provide a subscription management page accessible from user profile.\n\nWHEN a member visits subscription management, THE communityPlatform SHALL display list of subscribed communities with creation dates.\n\nTHE communityPlatform SHALL allow bulk unsubscribe functionality with checkbox selection.\n\nWHEN a community is deleted by moderators, THE communityPlatform SHALL automatically unsubscribe all members.\n\nIF a community becomes private, THE communityPlatform SHALL remove it from non-member subscriptions but maintain for existing members.\n\n### Subscription Permissions\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL restrict subscription to member role only - guests cannot subscribe.\n\nWHEN a guest attempts to subscribe, THE communityPlatform SHALL prompt them to create account or login.\n\nWHERE a community has subscription limits (future feature), THE communityPlatform SHALL enforce maximum subscriber count.\n\nTHE communityPlatform SHALL allow members to subscribe to unlimited communities.\n\n## Personalized Feeds\n\n### Feed Population Logic\n\nPersonalized feeds aggregate content from subscribed communities using the member's preferred sorting methods.\n\n**Functional Requirements:**\n\nWHEN a member visits their home feed, THE communityPlatform SHALL aggregate posts from all subscribed communities.\n\nTHE communityPlatform SHALL apply the member's default sorting preference (saved in profile) to the aggregated posts.\n\nWHEN a member specifies sorting on home feed, THE communityPlatform SHALL ignore individual community sorting preferences.\n\nTHE communityPlatform SHALL deduplicate posts if a post appears in multiple subscribed communities.\n\n### Feed Ordering and Display\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL order home feed posts using modified sorting algorithms that consider subscription weight.\n\nTHE communityPlatform SHALL prioritize posts from communities with higher engagement rates for hot feed sorting.\n\nWHEN generating home feed, THE communityPlatform SHALL include maximum 200 posts as initial page load.\n\nTHE communityPlatform SHALL group home feed by community with community name displayed for each post.\n\n### Feed Customization\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL allow members to customize default feed sorting per community.\n\nWHEN a member sets custom sorting for a community, THE communityPlatform SHALL save this preference in their profile.\n\nTHE communityPlatform SHALL provide \"all\" feed option showing posts from all communities regardless of subscription status.\n\nIF a member has no subscriptions, THE communityPlatform SHALL display suggested communities to subscribe to.\n\n## Algorithm Inputs\n\n### Post Data Elements\n\nThe sorting algorithms require comprehensive post metadata to function properly.\n\n**Business Rules:**\n\n- Creation timestamp (ISO 8601 format)\n- Upvote count (positive integer)\n- Downvote count (positive integer)\n- Comment count (including nested replies)\n- Author karma (influences initial visibility but not sorting)\n- Community subscriber count (affects reach but not direct sorting)\n- Post type (text/link/image affects display but not sorting score)\n- Moderator actions (removal/flags affect inclusion but not score calculation)\n\n**Functional Requirements:**\n\nWHEN calculating any sorting score, THE communityPlatform SHALL use current vote counts collected in real-time.\n\nTHE communityPlatform SHALL use UTC timestamp for all creation time calculations to ensure consistency across global users.\n\nWHEN a post is edited, THE communityPlatform SHALL not reset its creation timestamp for sorting purposes.\n\n### User Interaction Data\n\nUser engagement metrics that influence algorithm performance.\n\n**Business Rules:**\n\n- Member session duration affects feed freshness\n- Previous interaction history (viewed, voted, commented)\n- Member community affinity scores\n- Global platform activity levels\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL track anonymous view counts for hot score calculations.\n\nTHE communityPlatform SHALL measure time since last member activity to adjust feed freshness parameters.\n\nWHEN a member votes multiple times on same post, THE communityPlatform SHALL ignore duplicate votes in scoring.\n\n### System Parameters\n\nConfigurable constants that tune algorithm behavior.\n\n**Business Rules:**\n\n- Hot decay rate: default 0.8 per hour\n- Comment weight multiplier: default 1.5\n- Minimum controversy threshold: 5 votes\n- Feed refresh interval: 10 minutes\n- Pagination size: 20 posts\n\n**Functional Requirements:**\n\nTHE communityPlatform SHALL allow moderator role to adjust algorithm parameters through admin controls.\n\nWHEN system parameters change, THE communityPlatform SHALL apply changes immediately to new calculations.\n\nTHE communityPlatform SHALL log parameter changes for auditing purposes.\n\nWHEN parameters are reset to defaults, THE communityPlatform SHALL provide rollback functionality.\n\n### Validation and Error Handling\n\nEnsuring algorithm integrity and handling edge cases.\n\n**Functional Requirements:**\n\nIF post data is corrupted or missing required fields, THE communityPlatform SHALL exclude the post from sorting calculations.\n\nWHEN vote counts become inconsistent, THE communityPlatform SHALL trigger audit and recalculate all scores for affected posts.\n\nTHE communityPlatform SHALL handle division by zero in controversy calculations by adding minimum value of 1.\n\nIF algorithm calculations exceed timeout thresholds, THE communityPlatform SHALL fall back to new sorting with warning message.\n\n### Performance Requirements\n\n**User Experience Expectations:**\n\n- Sorting calculations SHALL complete within 1 second for communities with up to 10,000 posts\n- Feed aggregation SHALL load within 2 seconds for members with 50 subscriptions\n- Score updates SHALL reflect within 30 seconds after vote submission\n- Page loads SHALL feel instant with cached sorting results\n- Database queries for sorting SHALL be optimized for concurrent users up to 100,000\n\n### Business Process Flows\n\nThe following diagram illustrates the sorting selection and feed generation process:\n\n```mermaid\ngraph LR\n  A[\"Member Selects Sorting Method\"] --> B{\"Sorting Type?\"}\n  B -->|Hot| C[\"Calculate Hot Scores with Decay\"]\n  B -->|New| D[\"Order by Creation Time DESC\"]\n  B -->|Top| E[\"Order by Net Upvotes DESC\"]\n  B -->|Controversial| F[\"Calculate Controversy Ratio\"]\n  C --> G[\"Apply to Community Posts\"]\n  D --> G\n  E --> G\n  F --> G\n  G --> H[\"Display Top 20 Posts\"]\n  H --> I[\"Load More on Scroll\"]\n```\n\nThe subscription process follows this workflow:\n\n```mermaid\ngraph LR\n  A[\"Member Clicks Subscribe Button\"] --> B{\"Already Subscribed?\"}\n  B -->|Yes| C[\"Remove from Subscriptions\"]\n  B -->|No| D[\"Add to Subscriptions\"]\n  C --> E[\"Remove Community Content from Feed\"]\n  D --> E[\"Add Community Content to Feed\"]\n  E --> F[\"Update Personalized Feed Algorithm\"]\n  F --> G[\"Send Confirmation Notification\"]\n  G --> H[\"Log Subscription Change\"]\n```\n\n### Algorithm Testing Criteria\n\n**Functional Requirements:**\n\nWHEN testing sorting algorithms, THE communityPlatform SHALL verify that posts with higher calculated scores appear before lower scores.\n\nTHE communityPlatform SHALL confirm that score calculations use correct mathematical formulas with test datasets.\n\nWHEN validating subscription flows, THE communityPlatform SHALL test membership role restrictions and duplicate prevention.\n\nTHE communityPlatform SHALL measure actual computation times against performance requirements under load conditions.\n\nThis document provides comprehensive business requirements for the post sorting and subscription systems. The development team has full authority over technical implementation while maintaining these business rules and user experience expectations."},{"reason":"Specify user profile features and public display of activity.","filename":"07-user-profiles.md","documentType":"requirement","outline":["Profile Display","Activity History","Public Information","Privacy Settings","Profile Customization"],"audience":"development team","keyQuestions":["What information is shown on user profiles?","Which activities are publicly visible?","How can users control their privacy?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","06-sorting-subscriptions.md"],"constraints":[],"content":"# User Profiles Requirements for Community Platform\n\n## Overview of User Profile System\n\nUser profiles in the Reddit-like community platform serve as public-facing representations of authenticated users, displaying their activity, reputation, and contributions to build community trust and accountability. WHEN users visit a profile page, THE platform SHALL provide a transparent view of member contributions while respecting privacy controls established by profile owners. THE system SHALL integrate profiles with authentication, content management, voting, commenting, karma calculation, community subscriptions, and moderation systems to create a cohesive user experience.\n\n### Core Purpose of User Profiles\n\nUser profiles fulfill three essential business objectives for the platform:\n1. **Community Transparency**: WHEN users view profiles, THE system SHALL display contributions and reputation to foster trust through visible participation history and karma scores.\n2. **Personal Branding**: WHEN members customize their profiles, THE system SHALL allow personalization that establishes expertise and community presence.\n3. **Moderation Support**: WHEN moderators review user behavior, THE system SHALL provide complete activity history to assess compliance and enforce platform rules.\n\nTHE platform SHALL implement profile features that balance transparency with user privacy to support organic community growth through verified participation tracking.\n\n## Profile Display Requirements\n\n### Basic Profile Information Display\n\nWHEN any user (authenticated or guest) accesses a profile page, THE system SHALL display the following core information in a prominent header section:\n- User's unique username as registered during authentication\n- User's account creation date in readable format such as \"Member since December 2023\"\n- User's total karma score calculated as net upvotes minus downvotes across all posts and comments\n- User's avatar image, either user-selected or system-generated default based on username\n- User's current role designation (member, moderator, or admin) with visual indicators\n\nTHE system SHALL ensure all basic profile information updates in real-time when changes occur, with karma scores reflecting voting activity within 1 second of vote submissions.\n\n### Profile Layout Structure  \n\nTHE profile page SHALL be organized into logically separated sections for improved user experience and information hierarchy:\n- Header section containing avatar, username, karma score, and join date with prominent placement\n- Activity summary section displaying total post count, total comment count, and engagement metrics\n- Recent activity feed showing the latest 10 user actions with timestamps\n- Full activity history accessible through infinite scroll or pagination controls\n- Community affiliations section listing subscribed communities with subscription dates and activity levels\n\nTHE system SHALL use responsive design that adapts profile layout for mobile and desktop viewing, ensuring all sections remain accessible on screens as small as 320 pixels wide.\n\n### Default Profile View\n\nWHEN a guest or authenticated user first visits any profile page, THE system SHALL display the default public view with controlled information exposure:\n- Complete visibility of all basic profile information including karma and role\n- Summary statistics showing total posts, total comments, and communities joined\n- Most recent 10 posts and comments from the past 30 days, sorted by creation timestamp\n- Up to 5 most active subscribed communities ranked by user's posting frequency\n\nTHE system SHALL load the default profile view within 2 seconds for optimal user engagement, preventing abandonment due to slow performance.\n\n## Activity History Management  \n\n### Activity Tracking Scope\n\nTHE system SHALL maintain comprehensive tracking of all user activities for profile display purposes:\n- Original posts created, including text posts, link posts, and image posts with full content and metadata\n- Comments made on posts, including nested replies with parent relationships preserved\n- Votes cast on posts and comments (upvotes and downvotes) with timestamps\n- Communities joined through subscription actions with subscription and last activity dates\n- Karma points earned or lost from voting interactions with calculation details\n- Reports submitted on inappropriate content with anonymized reporting information\n- Account creation milestone and role changes with historical timestamps\n\nWHEN recording activities, THE system SHALL capture precise UTC timestamps and maintain activity logs for at least 7 years unless legally required to delete specific information.\n\n### Activity Visibility Rules\n\nWHEN displaying user activity history on profiles, THE system SHALL organize content with clear temporal and categorization structure:\n- Default chronological sorting showing most recent activities first\n- Date range groupings such as \"This Week\", \"This Month\", \"This Year\", and \"All Time\" for easy navigation\n- Timestamps displayed in user's local timezone based on their browser settings\n- Clear activity type labels including \"Posted in Community Name\", \"Commented on Post Title\", \"Voted up/down\", and \"Joined Community Name\"\n\nTHE system SHALL filter activity display based on privacy settings, showing only activities the profile owner has authorized for public viewing.\n\n### Activity History Persistence\n\nTHE system SHALL maintain activity history indefinitely for active accounts unless specific business conditions apply:\n- User explicitly requests data deletion through account deactivation process\n- Legal requirements necessitate data removal per court orders or data protection regulations\n- Platform content policies require archiving or deletion of specific violation-related activities\n\nWHEN users request account deactivation, THE system SHALL provide options to anonymize historical activities rather than complete deletion to maintain platform integrity.\n\n### Recent Activity Feed\n\nTHE profile activity feed SHALL provide a dynamic overview of recent user engagement:\n- Display of the most recent 50 activities in reverse chronological order with automatic refresh\n- Content previews limited to first 100 characters for posts and comments with \"read more\" links\n- Direct links to full activity content within the platform for detailed viewing\n- Engagement metrics showing vote counts for posts, reply counts for comments, and karma impact\n\nWHEN new activities occur, THE system SHALL update the feed in real-time for viewers currently on the profile page, excluding guest users.\n\n## Public Information Rules\n\n### Default Public Information\n\nTHE following information SHALL be publicly visible on all user profiles by default without requiring authentication:\n- Username displayed prominently in profile header\n- Join date formatted as \"Member since Month Year\"\n- Current avatar image with fallback to system default\n- Total karma score with breakdown showing post karma vs comment karma if configured\n- Basic activity counts including total posts, total comments, and joined communities\n- Recent activity feed with community-attributed content\n- Subscribed communities list with subscription durations\n\nTHE system SHALL enforce public visibility for these elements while allowing granular privacy controls for other information.\n\n### Community-Specific Visibility\n\nTHE system SHALL implement community-level privacy controls that override default public settings:\n- Community moderators SHALL have authority to set community-specific visibility rules for member activities\n- Users SHALL have the option to opt-out of activity display within specific communities they join\n- Global privacy settings SHALL serve as defaults while community-specific rules take precedence when stricter\n\nWHEN conflicts occur between global and community privacy settings, THE system SHALL apply the most restrictive setting to protect user preferences.\n\n### Content Attribution Display\n\nWHEN displaying user-generated content in activity history, THE system SHALL maintain content integrity and context:\n- Full text display for original posts including embedded links and images\n- Comment previews limited to first 200 characters with expandable view for full content\n- Preservation of original formatting, links, and media references\n- Explicit community attribution for each activity (e.g., \"Posted in r/technology\", \"Commented in r/programming\")\n\nWHEN content has been moderated or removed, THE system SHALL display removal notices with explanation while maintaining activity history structure.\n\n## Privacy Settings and Controls\n\n### Privacy Control Interface\n\nTHE system SHALL provide authenticated users with a dedicated privacy management interface accessible from profile settings where they can control:\n- Selection of profile visibility levels including public, community-only, or private options\n- Granular control over which specific activity types appear in public view\n- Community-specific visibility preferences for joined communities\n- Management of public information display with opt-in/opt-out controls\n- Data retention settings that determine how long activities remain in feed displays\n\nWHEN users access privacy settings, THE system SHALL display current settings with clear explanations of each option's impact on profile visibility.\n\n### Activity Visibility Controls\n\nUsers SHALL configure selective hiding of specific activity categories from public profile views:\n- Hide individual vote activity while maintaining karma score visibility\n- Restrict comment history display to time periods set by the user\n- Exclude post history from specific communities\n- Limit activity feed to recent time frames only\n\nTHE system SHALL apply visibility controls immediately upon saving, with changes reflected in public views within 5 minutes.\n\n### Privacy Level Definitions\n\nTHE platform SHALL support three distinct privacy levels with graduated information exposure:\n\n**Public (Default)**\n- Complete profile information visible to all users\n- Full activity history accessible through pagination\n- Community affiliations and subscription details public\n- All posts and comments visible in activity feeds\n\n**Community-Only**  \n- Profile information visible only to members of the same communities\n- Activity history restricted to shared community content\n- Guest users see limited placeholder with basic join information\n- Subscribed community list hidden from non-members\n\n**Private**\n- Only username and join date visible to non-community users\n- Activity history and detailed statistics completely hidden\n- Community affiliations removed from profile display\n- All activity feeds show generic 'private user' message\n\n### Privacy Setting Changes\n\nWHEN users modify their privacy preferences, THE system SHALL apply changes systematically:\n- Immediate effect on current and future profile views without requiring page refresh\n- Retention of previous settings for debugging and audit purposes\n- Invalidation of cached profile data within 5 minutes across all platform instances\n- Automatic notification sent to user confirming privacy setting application\n\nTHE system SHALL log all privacy setting changes with timestamps for user protection and support purposes.\n\n## Profile Customization Features\n\n### Avatar Management\n\nTHE system SHALL enable comprehensive avatar customization to support personal branding:\n- Direct upload of personal images with restrictions of maximum 5MB file size\n- Support for standard image formats including JPEG, PNG, and GIF\n- Predefined avatar options selected by system administrators for default themes\n- Automatic generation of geometric avatars based on username when custom uploads unavailable\n- Full change history allowing users to revert to previous avatar selections\n\nWHEN validating avatar uploads, THE system SHALL enforce security measures including file type verification and automatic malware scanning.\n\n### User Identification Display\n\nUsers SHALL customize core identification elements within specified limits:\n- Display name customization between 3-25 characters with uniqueness checks\n- Profile description/bio limited to maximum 200 characters with appropriate content validation\n- Optional location information with user-controlled visibility toggles\n- Up to 3 external website or social media links with automatic URL format validation\n\nTHE system SHALL validate custom display names for inappropriate language and ensure descriptions comply with platform content policies.\n\n### Username Change Policy\n\nTHE system SHALL implement restrictive username change policies to maintain platform integrity:\n- Limit of maximum 2 username changes per calendar year per account\n- Mandatory 30-day waiting period between successive username modifications\n- Permanent maintenance of username change history for attribution and moderation\n- Automatic notification to moderators for all username change requests\n\nWHEN processing username changes, THE system SHALL verify all platform rules compliance and prevent abuse patterns.\n\n### Profile Theming Options\n\nTHE platform SHALL provide basic visual customization for improved user experience:\n- Selection among predefined color schemes optimized for accessibility\n- Custom header images for profile pages with size and format restrictions\n- Profile accent colors that enhance user preference representation\n- Accessibility features including high contrast mode and text scaling options\n\nTHE system SHALL ensure all theme customizations maintain readability and platform usability standards.\n\n## Business Rules and Validation\n\n### Profile Information Validation\n\nWHEN validating profile updates, THE system SHALL apply comprehensive business rules:\n- Username uniqueness verification across all active and deactivated accounts\n- Display name content moderation checking for prohibited language\n- Avatar file validation ensuring size limits and supported formats\n- External link format verification using standard URL parsing\n- Profile description compliance with community content standards through automated filtering\n\nTHE system SHALL reject invalid updates and provide specific feedback messages for each validation failure.\n\n### Business Logic for Profile Access\n\nTHE system SHALL enforce graduated access controls based on user roles and privacy settings:\n\n**Announcement for All Users**\n```\nWHEN any user accesses a profile page,\nTHE system SHALL display information according to the target user's current privacy level settings,\nand SHALL load appropriate content within 3 seconds regardless of complexity.\n```\n\n**Announcement for Member Users**\n```\nWHEN a member user accesses another member's profile,\nTHE system SHALL provide expanded viewing capabilities including:\nfull activity history when privacy allows,\ncontact options if the profile owner enables messaging,\nand user reporting functions for inappropriate profile content.\n```\n\n**Announcement for Moderator Users**\n```\nWHEN a moderator accesses any user's profile for moderation purposes,\nTHE system SHALL display complete activity history bypassing privacy restrictions,\nSHALL log the access event with timestamp and reason for accountability,\nand SHALL provide additional moderation tools within the profile interface.\n```\n\n### Error Handling for Profile Operations\n\nWHEN profile update operations encounter failures, THE system SHALL provide user-friendly recovery mechanisms:\n- Clear error messages specifying validation failure reasons with actionable guidance\n- Preservation of user input across page reloads to prevent data loss\n- Suggested alternatives for common resolution scenarios\n- Rate limiting for repeated failed attempts to prevent system abuse\n\nTHE system SHALL maintain operation logs for troubleshooting profile errors while protecting sensitive user information.\n\n### Profile Data Consistency\n\nTHE system SHALL ensure data integrity through automated synchronization processes:\n- Real-time karma score updates triggered by voting activity completion\n- Automatic recalculation of activity count statistics during periodic maintenance\n- Immediate cache invalidation when profile data changes are detected\n- Regular backup procedures with point-in-time recovery capabilities for profile information\n\nWHEN inconsistencies are detected, THE system SHALL automatically correct data through background processes without user intervention.\n\n## Integration with Related Platform Features\n\n### Content Management Integration\n\nUser profiles SHALL integrate seamlessly with content management systems to provide comprehensive activity display:\n- Complete listing of all user-created posts sorted chronologically with creation dates\n- Performance metrics display including post upvotes, total comments, and comment engagement\n- Direct community linking with contextual community information for each post\n- Ownership attribution maintenance preventing content misappropriation\n\nWHEN posts are deleted or moderated, THE system SHALL reflect status changes in profile activity feeds with appropriate notations.\n\n### Voting and Comments System Integration\n\nTHE system SHALL integrate with voting mechanisms to provide transparent reputation tracking:\n- Automatic karma calculations based on net upvotes minus downvotes across all user content\n- Display of voting patterns and engagement metrics when privacy settings permit\n- Detailed comment thread relationships including nested reply hierarchies\n- User vote totals tracking while maintaining vote anonymity for individual actions\n\nWHEN karma calculations become inconsistent, THE system SHALL trigger automatic recalculation within 1 hour.\n\n### Community Subscription Feeds\n\nUser profiles SHALL display community membership information with activity context:\n- Comprehensive list of subscribed communities ranked by user activity frequency\n- Subscription dates and durations for relationship longevity indication\n- Community-specific karma scores calculated from posts within that community\n- Moderator role displays within communities where user holds elevated permissions\n\nTHE system SHALL update subscription information in real-time as users join or leave communities.\n\n### Sorting and Subscription System Support\n\nTHE profile system SHALL support advanced personalization through integrated sorting capabilities:\n- Default activity feed sorting by most recent with user-configurable options\n- Integration with global sorting algorithms (hot, new, top) for activity display\n- Personalized feed algorithms that prioritize subscribed communities in activity lists\n- Suggested community integrations based on user activity patterns\n\nWHEN users modify sorting preferences, THE system SHALL apply changes immediately to profile displays.\n\n### Moderation and Reporting System Integration\n\nTHE system SHALL support moderation functions through profile transparency features:\n- Display of user moderation history visible to moderators only\n- Behavior analytics generation for moderator decision-making support\n- Integration with moderator note systems for private profile annotations\n- Complete moderation activity logging with timestamp and reason tracking\n\nWHEN content violates platform rules, THE system SHALL integrate moderation actions with profile displays for consistent enforcement.\n\n## Business Process Flows\n\n```mermaid\ngraph LR\n  A[\"User Views Profile\"] --> B{\"Check Privacy Settings\"}\n  B -->|Public| C[\"Display Full Information\"]\n  B -->|Community-Only| D[\"Check Shared Communities\"]\n  B -->|Private| E[\"Display Limited Info\"]\n  D -->|Shared| C\n  D -->|No Shared| E\n  C --> F[\"Show Activity Feeds\"]\n  E --> G[\"Show Basic Info Only\"]\n  F --> H[\"Load Activity Details\"]\n  G --> I[\"Prevent Data Access\"]\n  H --> J[\"Apply Sorting Filters\"]\n  J --> K[\"Render Profile Page\"]\n```\n\n```mermaid\ngraph LR\n  A[\"User Updates Profile\"] --> B{\"Validate Input Data\"}\n  B -->|Valid| C[\"Update Profile Information\"]\n  B -->|Invalid| D[\"Display Error Messages\"]\n  C --> E[\"Invalidate Cache\"]\n  E --> F[\"Update Display\"]\n  F --> G[\"Send Notification\"]\n  D --> H[\"Preserve User Input\"]\n  H --> I[\"Allow Retry\"]\n```\n\n## User Scenarios and Workflows\n\n### Profile Viewing Scenario: Guest Exploration\n\nWHEN a guest user discovers an interesting profile through community activity, THE system SHALL:\n- Display the profile according to the owner's privacy settings without requiring authentication\n- Show basic information including username, join date, and karma score for credibility assessment\n- Provide limited activity preview encouraging account creation for full access\n- Load the profile page within 3 seconds to maintain user engagement during exploration\n\n### Profile Customization Workflow: New Member Setup\n\nWHEN a newly registered member customizes their profile, THE system SHALL:\n- Guide them through avatar selection and basic information setup\n- Validate all inputs according to platform rules and provide immediate feedback\n- Save profile changes immediately and reflect updates in real-time\n- Send confirmation notification that profile is ready for community interaction\n- Update community feeds to show new member presence within profile views\n\n### Privacy Management Example: Reducing Visibility\n\nWHEN an established member adjusts privacy settings to reduce public exposure, THE system SHALL:\n- Present clear toggle options for each information category\n- Show preview of how profile will appear under different privacy levels\n- Apply changes instantly with visual confirmation\n- Update all cached profile data across platform servers within 5 minutes\n- Log the privacy change for user account history and support purposes\n\n### Moderator Profile Review: Community Safety\n\nWHEN a moderator investigates suspicious activity through profiles, THE system SHALL:\n- Provide privileged access to complete activity history bypassing privacy restrictions\n- Display all user actions chronologically with context and community attribution\n- Show moderation history and previous violations if any exist\n- Generate behavior analytics and patterns for moderator decision support\n- Log the moderator access for transparency and accountability requirements\n\n## Performance Requirements\n\nWHEN loading user profiles, THE system SHALL:\n- Display basic profile information within 2 seconds for optimal user experience\n- Load activity feeds within 3 seconds for pages with up to 100 activities\n- Update profile information changes within 1 second after user actions\n- Support 500 concurrent profile views without performance degradation\n\nTHE system SHALL maintain profile loading performance during peak traffic periods and implement caching strategies for frequently accessed profiles to reduce database load by 70%.\n\n## Error Handling and Validation\n\nWHEN profile operations fail, THE system SHALL:\n- Display specific error messages explaining validation failures for user correction\n- Preserve user input during failed submissions to prevent frustration\n- Suggest appropriate fixes for common validation issues\n- Limit rapid retry attempts to prevent system abuse\n\nIF critical profile data becomes corrupted, THE system SHALL automatically restore from backup within 30 minutes while maintaining user access to basic functions.\n\n---\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n## Document Cross-References\n\nFor foundational authentication requirements that establish user identity, refer to the [Authentication Requirements Document](./03-authentication-requirements.md).\n\nIntegration details with content creation are outlined in the [Content Management Requirements](./04-content-management.md).\n\nVoting and commenting system interactions are specified in the [Voting and Comments System Requirements](./05-voting-comments-system.md).\n\nUser personalization through subscriptions is detailed in the [Sorting and Subscriptions Requirements](./06-sorting-subscriptions.md).\n\nFor moderation capabilities related to user profiles, review the [Moderation and Reporting Requirements](./08-moderation-reporting.md)."},{"reason":"Detail the reporting system for inappropriate content and moderation workflow.","filename":"08-moderation-reporting.md","documentType":"requirement","outline":["Report Types","Reporting Process","Moderation Queue","Resolution Workflow","Appeals Process"],"audience":"development team","keyQuestions":["What constitutes reportable content?","Who can submit reports?","How are reports processed?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","07-user-profiles.md"],"constraints":[],"content":"# Moderation and Reporting System Requirements\n\n## Overview\n\nThis document specifies the business requirements for the moderation and reporting system in the Reddit-like community platform. The system enables users to report inappropriate content and provides moderators with tools to review and resolve these reports. All requirements follow business logic focused on maintaining platform integrity while supporting user engagement.\n\n## Report Types\n\nReportable content categories include:\n\n- **Spam**: Unsolicited promotional content or repetitive posts designed to manipulate engagement\n- **Harassment**: Content that threatens, insults, or intimidates users\n- **Hate Speech**: Content promoting discrimination or violence based on protected characteristics\n- **Adult Content**: Explicit material posted in inappropriate communities\n- **Misinformation**: Deliberately false information that could harm users or society\n- **Copyright Infringement**: Content that violates intellectual property rights\n- **Other**: Content that doesn't fit other categories but violates platform rules\n\nWHEN a user submits a report, THE system SHALL validate that the selected report type is valid and matches the reported content.\n\nWHEN a report type is \"Other\", THE system SHALL require a mandatory description from the reporter.\n\n## Reporting Process\n\n### Report Submission\n\nWHEN a member or moderator views a post or comment, THE system SHALL display a \"Report\" button next to the content.\n\nWHEN a user clicks the Report button and is not authenticated as a member, THE system SHALL redirect them to the login page and return to the report form after authentication.\n\nWHEN an authenticated member submits a report, THE system SHALL require selection of a report type and allow optional additional details up to 500 characters.\n\nWHEN a report is submitted, THE system SHALL immediately hide the reported content from the reporter's view only.\n\nWHEN a moderator submits a report, THE system SHALL assign it to their own moderation queue automatically.\n\nWHEN a report is created, THE system SHALL log the reporter's user ID, reported content ID, timestamp, report type, and optional description.\n\n### Duplicate Report Handling\n\nWHEN a report is submitted for content that already has a pending report of the same type, THE system SHALL add the reporter to the list of supporters but not create a duplicate report.\n\nWHEN multiple users report the same content for different reasons, THE system SHALL create separate report records for each unique report type.\n\nWHEN a user attempts to report content they already reported, THE system SHALL show a message indicating \"You have already reported this content\" without creating a new report.\n\n## Moderation Queue\n\n### Queue Access\n\nWHEN a moderator logs in, THE system SHALL display their moderation queue showing all assigned pending reports.\n\nWHEN a moderator views the queue, THE system SHALL show reports sorted by priority: new reports first, then by report type severity, then by timestamp.\n\nWHEN a report is created, THE system SHALL assign it to moderators of the community where the content was posted.\n\nWHEN no specific community moderators exist, THE system SHALL assign reports to general platform moderators.\n\n### Report Details Display\n\nWHEN a moderator opens a report, THE system SHALL display:\n- Full reported content (post or comment)\n- Reporter's username (anonymized if requested)\n- Report timestamp\n- Report type and description\n- Additional reporter notes\n- Community context\n- Previous moderation history for the content\n- List of all users who reported this content\n\nWHEN viewing reported content, THE system SHALL allow moderators to navigate to the full thread context without leaving the moderation interface.\n\n## Resolution Workflow\n\n### Review and Decision Process\n\nWHEN a moderator reviews a report, THE system SHALL provide decision options:\n- Dismiss (no action required)\n- Remove (delete content)\n- Approve (content is appropriate)\n\nWHEN a moderator chooses to remove content, THE system SHALL require a mandatory reason selected from: inappropriate content, spam, rule violation, or custom explanation.\n\nWHEN a moderator selects \"custom explanation\", THE system SHALL require a text reason between 10-200 characters.\n\nWHEN a decision is made, THE system SHALL update the report status and record the moderator's user ID, decision, reason, timestamp.\n\nWHEN content is removed, THE system SHALL replace it with a notice stating \"This content has been removed for violating community rules\" visible to all users except the content author.\n\nWHEN content is removed, THE system SHALL prevent the original author from seeing their removed content in their profile.\n\nWHEN a report is dismissed, THE system SHALL restore any temporary hiding of content from the reporter.\n\nWHEN a report is resolved, THE system SHALL notify the reporter of the outcome via platform notification.\n\nWHEN a report results in content removal, THE system SHALL notify the content author of the removal and reason.\n\n### Automated Actions\n\nWHEN content receives multiple reports of the same type within 24 hours, THE system SHALL automatically increase the report's priority level.\n\nWHEN a user's posting restriction expires, THE system SHALL restore full posting capabilities.\n\nWHEN a user accumulates 3 content removals within 30 days, THE system SHALL automatically apply a temporary posting restriction for 7 days.\n\nWHEN a user accumulates 3 content removals within 30 days, THE system SHALL automatically apply a temporary posting restriction for 7 days.\n\nWHEN a user accumulates 3 content removals within 30 days, THE system SHALL automatically apply a temporary posting restriction for 7 days.\n\nWHEN a user accumulates 3 content removals within 30 days, THE system SHALL automatically apply a temporary posting restriction for 7 days.\n\n## Appeals Process\n\n### Appeal Submission\n\nWHEN a content author receives a removal notification, THE system SHALL provide an \"Appeal\" button in the notification.\n\nWHEN a user clicks Appeal, THE system SHALL display a form requiring explanation of why the content should be restored, up to 1000 characters.\n\nWHEN an appeal is submitted, THE system SHALL limit users to maximum 2 pending appeals at any time.\n\nWHEN an appeal is submitted, THE system SHALL assign it to a different moderator than the one who made the original decision when possible.\n\n### Appeal Review\n\nWHEN assigned, THE system SHALL add the appeal to the moderator's queue marked as \"appeal\" priority.\n\nWHEN reviewing an appeal, THE system SHALL display:\n- Original content (redacted if sensitive)\n- Original report details\n- Removal reason\n- Author's appeal explanation\n- Moderation history\n- Community rules reference\n\nWHEN a moderator reviews the appeal, THE system SHALL provide options:\n- Uphold removal\n- Restore content\n- Escalate to senior moderator\n\nWHEN restoring content via appeal, THE system SHALL require the moderator to provide a reason for reversal.\n\nWHEN an appeal decision is made, THE system SHALL notify the appellant of the outcome within 24 hours.\n\nWHEN content is restored via appeal, THE system SHALL immediately make it visible again and remove any posting restrictions caused by the original infraction.\n\nWHEN an appeal is denied, THE system SHALL provide the appellant an additional appeal option that routes directly to senior moderation staff.\n\nWHEN a user appeals the same content multiple times, THE system SHALL notify senior staff automatically if the user accumulates 3 failed appeals.\n\nWHEN an appeal decision is made, THE system SHALL notify the appellant of the outcome within 24 hours.\n\n## Business Rules and Validation\n\nTHE system SHALL prohibit moderators from moderating content in communities they created except as emergency measures.\n\nTHE system SHALL prohibit users from reporting their own content.\n\nTHE system SHALL prohibit guests from submitting reports.\n\nTHE system SHALL limit report submissions to maximum 10 reports per user per day.\n\nTHE system SHALL prohibit members from reporting content in communities they are banned from.\n\nTHE system SHALL automatically escalate reports that remain unresolved for 48 hours to senior moderators.\n\nTHE system SHALL maintain complete audit trails of all moderation actions including timestamps, user IDs, and reasons.\n\nTHE system SHALL implement cooldown periods of 5 minutes between multiple reports from the same user to prevent rapid-fire submissions.\n\nTHE system SHALL maintain complete audit trails of all moderation actions including timestamps, user IDs, and reasons.\n\n## User Permissions Matrix\n\n| Action | Guest | Member | Moderator |\n|--------|--------|--------|-----------|\n| Submit Report | ❌ | ✅ | ✅ |\n| View Own Reports | ❌ | ✅ | ✅ |\n| View Moderation Queue | ❌ | ❌ | ✅ |\n| Review Reports | ❌ | ❌ | ✅ |\n| Remove Content | ❌ | ❌ | ✅ |\n| Submit Appeal | ❌ | ✅ (for own content) | ✅ |\n| Review Appeals | ❌ | ❌ | ✅ |\n\nWHEN a user's role changes, THE system SHALL immediately update their available moderation and reporting actions.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\nWHEN a moderator is demoted, THE system SHALL retain existing report histories for audit purposes but remove active queue access.\n\n## Error Handling Scenarios\n\nIF a user attempts to report the same content twice, THEN THE system SHALL return \"Report already exists. You can add additional details if needed.\"\n\nIF a report submission fails due to network issues, THEN THE system SHALL allow users to retry submission or save draft for later.\n\nIF a moderator attempts to review a report outside their jurisdiction, THEN THE system SHALL deny access with \"Insufficient permissions for this operation.\"\n\nIF content being reported has already been removed, THEN THE system SHALL cancel the report submission and notify the reporter.\n\nIF a community is deleted while reports are pending, THEN THE system SHALL migrate unresolved reports to general moderation queue.\n\nIF database unavailability occurs during report submission, THEN THE system SHALL queue submissions and process them when service resumes.\n\nIF simultaneous moderation actions conflict, THEN THE system SHALL process decisions in chronological order and alert moderators of conflicts.\n\nIF simultaneous moderation actions conflict, THEN THE system SHALL process decisions in chronological order and alert moderators of conflicts.\n\nIF simultaneous moderation actions conflict, THEN THE system SHALL process decisions in chronological order and alert moderators of conflicts.\n\nIF simultaneous moderation actions conflict, THEN THE system SHALL process decisions in chronological order and alert moderators of conflicts.\n\n## Performance Requirements\n\nWHEN a report is submitted, THE system SHALL confirm receipt within 2 seconds.\n\nWHEN moderators access their queue, THE system SHALL load and display reports within 3 seconds for queues up to 100 items.\n\nWHEN processing moderation decisions, THE system SHALL complete actions within 5 seconds for standard content operations.\n\nWHEN searching moderation history, THE system SHALL return results within 2 seconds for queries up to 1000 results.\n\nWHEN multiple users submit reports simultaneously, THE system SHALL handle up to 100 concurrent report submissions without performance degradation.\n\nWHEN appeals are submitted in high volume, THE system SHALL maintain response times under 10 seconds for processing.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds.\n\nWHEN generating moderation statistics, THE system SHALL provide daily reports within 30 seconds."},{"reason":"Document user interaction flows and business logic validations.","filename":"09-business-logic-validation.md","documentType":"requirement","outline":["Input Validation Rules","Business Rule Definitions","Workflow Validations","Error Conditions","Success Criteria"],"audience":"development team","keyQuestions":["What business rules govern user actions?","When are actions blocked?","How are errors communicated?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","08-moderation-reporting.md"],"constraints":[],"content":"# Business Logic and Validation Requirements\n\n## Overview\nThis document specifies the business logic validations, input rules, and user interaction workflows for the Reddit-like community platform. It defines the core business rules that govern system behavior, ensuring consistent and expected user experiences across all platform features. All requirements are presented in natural language with EARS format for clarity, focusing on business outcomes rather than technical implementation.\n\nKey focus areas include validation of user inputs, enforcement of business rules, error condition handling, and success criteria for interactions. These requirements ensure the platform maintains integrity, fairness, and usability while supporting all user roles: guest, member, and moderator.\n\n## Input Validation Rules\n\n### Registration Input Validation\nWHEN a user submits registration credentials, THE system SHALL validate that the email address follows proper email format with domain validation.  \nWHEN a user submits registration credentials, THE system SHALL validate that the password meets minimum complexity requirements of 8 characters with mix of letters and numbers.  \nWHEN a user submits registration credentials, THE system SHALL validate that the username is between 3-20 characters and contains only alphanumeric characters and underscores.  \nIF an email address is already registered, THEN THE system SHALL reject the registration attempt and display a clear message about email availability.  \nIF a username violates character constraints, THEN THE system SHALL reject the registration and suggest valid username formats.\n\n### Login Input Validation\nWHEN a user submits login credentials, THE system SHALL validate that the provided email or username exists in the system.  \nWHEN a user submits login credentials, THE system SHALL validate that the provided password matches the stored password.  \nWHEN a user submits login credentials with invalid format, THEN THE system SHALL return appropriate validation messages without revealing account existence.\n\n### Community Creation Input Validation\nWHEN a moderator creates a community, THE system SHALL validate that the community name is unique and between 3-21 characters.  \nWHEN a moderator creates a community, THE system SHALL validate that the description is less than 500 characters and appropriate for public display.  \nWHEN a community name contains special characters beyond allowed formats, THEN THE system SHALL reject creation and provide examples of valid names.\n\n### Post Creation Input Validation\nWHEN a member posts content, THE system SHALL validate that text posts are not empty and under 40,000 characters.  \nWHEN a member posts content, THE system SHALL validate that links are valid URLs with proper protocols (http/https).  \nWHEN a member uploads an image, THE system SHALL validate that the file size is under 10MB and format is one of: JPEG, PNG, GIF.  \nWHEN a member posts an image without caption, THEN THE system SHALL allow the post but flag it for potential moderation review.  \nIF a post violates length or format constraints, THEN THE system SHALL prevent submission and display specific validation errors.\n\n### Comment Input Validation\nWHEN a member posts a comment, THE system SHALL validate that the comment is not empty and under 10,000 characters.  \nWHEN a member posts a nested reply, THE system SHALL validate that the parent comment exists and allows replies.  \nWHEN a comment contains inappropriate content patterns, THEN THE system SHALL flag it automatically for moderator review before approval.  \nANNOTATION: All comments must adhere to community content standards regardless of nesting level.\n\n### Voting Input Validation\nWHEN a user attempts to vote on a post or comment, THE system SHALL validate that the user is authenticated as member or higher role.  \nWHEN a user attempts to vote, THE system SHALL validate that the targeted content exists and is votable.  \nWHEN a user attempts multiple rapid votes, THEN THE system SHALL implement rate limiting and warn the user.  \nIF a user tries to vote on their own content, THEN THE system SHALL allow the vote but not count it toward karma calculations.\n\n### Subscription Input Validation\nWHEN a user subscribes to a community, THE system SHALL validate that the community exists and is accessible.  \nWHEN a user unsubscribes, THE system SHALL validate that the subscription exists to prevent duplicate actions.  \nWHEN a guest attempts to subscribe, THEN THE system SHALL deny the action and prompt for registration.\n\n### Profile Update Input Validation\nWHEN a user updates their profile, THE system SHALL validate that display names are 3-25 characters and appropriate.  \nWHEN a user updates bio information, THE system SHALL validate content under 200 characters and screen for prohibited terms.  \nWHEN a user changes email, THE system SHALL validate the new email format and uniqueness.  \nIF profile updates violate validation rules, THEN THE system SHALL revert changes and show specific error messages.\n\n## Business Rule Definitions\n\n### Authentication and Role Management Rules\nTHE system SHALL maintain separate rule sets for guest, member, and moderator roles.  \nTHE system SHALL automatically assign member role upon successful registration.  \nTHE system SHALL require moderator role for community management actions.  \nTHE system SHALL prevent role escalation through user interfaces.  \nTHE system SHALL validate role permissions before allowing any privileged action.\n\n### Content Publishing Rules\nTHE system SHALL require member role for posting any content type.  \nTHE system SHALL allow members to edit posts and comments within 24 hours of creation.  \nTHE system SHALL enable moderator deletion of inappropriate content immediately.  \nTHE system SHALL maintain post visibility to community subscribers only.  \nTHE system SHALL apply karma penalties for users who consistently receive downvotes.\n\n### Voting System Rules\nTHE system SHALL allow one vote per content per user.  \nTHE system SHALL calculate karma as net upvotes on user's posts and comments.  \nTHE system SHALL adjust vote weights based on user karma level.  \nTHE system SHALL prevent vote manipulation through account farming.  \nTHE system SHALL display karma scores publicly on user profiles.\n\n### Karma Calculation Rules\nWHEN a member's post receives an upvote, THE system SHALL add one point to their karma.  \nWHEN a member's post receives a downvote, THE system SHALL subtract one point from their karma.  \nWHEN a member's comment is upvoted, THE system SHALL add half point to their karma.  \nTHE system SHALL update karma displays in real-time after voting actions.  \nTHE system SHALL reset user karma to zero if suspicious voting patterns are detected.\n\n### Community Management Rules\nTHE system SHALL allow moderators to set community-specific rules.  \nTHE system SHALL require moderator approval for new community creation.  \nTHE system SHALL enable community banning by moderators.  \nTHE system SHALL maintain moderator transparency logs for accountability.  \nTHE system SHALL allow community ownership transfer with approval.\n\n### Content Moderation Rules\nTHE system SHALL enable reporting by all authenticated users.  \nTHE system SHALL prioritize reports based on severity and volume.  \nTHE system SHALL require moderator review of all auto-flagged content.  \nTHE system SHALL maintain moderation decisions with timestamps and reasons.  \nTHE system SHALL provide appeal processes for moderated content.\n\n### User Profile and Privacy Rules\nTHE system SHALL display user activity history to authenticated users only.  \nTHE system SHALL redact sensitive information in public views.  \nTHE system SHALL respect global content standards regardless of location.  \nTHE system SHALL log all profile changes for security auditing.  \nTHE system SHALL enable users to remove their content without permanency.\n\n## Workflow Validations\n\n### User Registration Workflow\nWHEN a guest initiates registration, THE system SHALL validate input and create account.  \nWHEN registration succeeds, THE system SHALL send verification email.  \nWHEN user verifies email, THE system SHALL activate account with member role.  \nWHEN registration fails validation, THE system SHALL return specific error messages.  \nTHE system SHALL maintain registration attempts logs for security monitoring.\n\n### Authentication Workflow\nWHEN user provides credentials, THE system SHALL validate against stored data.  \nWHEN authentication succeeds, THE system SHALL establish session with role-based access.  \nWHEN authentication fails, THE system SHALL increment failure counters.  \nWHEN failure threshold exceeded, THE system SHALL implement temporary lockout.  \nTHE system SHALL rotate session tokens regularly for security.\n\n### Posting Workflow\nWHEN member submits post, THE system SHALL validate content and associate with community.  \nWHEN validation succeeds, THE system SHALL publish post immediately.  \nWHEN content triggers auto-mod flags, THE system SHALL hold post for review.  \nWHEN moderator approves held post, THE system SHALL publish with timestamp.  \nTHE system SHALL generate post statistics after each publication.\n\n### Commenting Workflow\nWHEN member submits comment, THE system SHALL validate against rules and nest appropriately.  \nWHEN comment is appropriate, THE system SHALL publish and notify parent owner.  \nWHEN comment violates rules, THE system SHALL hold for moderation.  \nWHEN nested reply exceeds depth limits, THE system SHALL shorten the threading hierarchy.  \nTHE system SHALL maintain chronological comment order within parent threads.\n\n### Voting and Ranking Workflow\nWHEN user votes, THE system SHALL validate eligibility and apply to content score.  \nWHEN vote is applied, THE system SHALL recalculate post rankings for all algorithms.  \nWHEN algorithmic rankings change, THE system SHALL update sorting displays.  \nWHEN mass voting detected, THE system SHALL investigate and apply penalties.  \nTHE system SHALL maintain voting transparency for moderation purposes.\n\n### Moderation Workflow\nWHEN content is reported, THE system SHALL categorize by severity and queue for moderators.  \nWHEN moderator reviews report, THE system SHALL present full context and decision options.  \nWHEN moderator makes decision, THE system SHALL apply ruling and notify parties.  \nWHEN moderator actions need oversight, THE system SHALL escalate to higher moderation levels.  \nTHE system SHALL maintain complete audit trails for all moderation activities.\n\n### Community Subscription Workflow\nWHEN user subscribes to a community, THE system SHALL add to personal feed preferences.  \nWHEN subscription toggles, THE system SHALL update all relevant user lists.  \nWHEN community content changes, THE system SHALL include subscribers in notification pools.  \nWHEN mass subscription detected, THE system SHALL verify intent and capacity.  \nTHE system SHALL provide subscription management tools for users.\n\n### User Profile Workflow\nWHEN user updates profile, THE system SHALL validate and apply changes immediately.  \nWHEN privacy settings change, THE system SHALL update visibility rules.  \nWHEN user activity occurs, THE system SHALL aggregate into profile displays.  \nWHEN public elements requested, THE system SHALL redact sensitive information.  \nTHE system SHALL enable export capabilities for user data portability.\n\n## Error Conditions\n\n### Authentication Failures\nIF login credentials are invalid three consecutive times, THEN THE system SHALL temporarily lock the account.  \nIF password reset requested with invalid email, THEN THE system SHALL respond without indicating email existence.  \nIF session expires unexpectedly, THEN THE system SHALL redirect to login with session restoration.  \nIF role permissions violated, THEN THE system SHALL log security event and display access denied.  \nIF guest attempts member-only action, THEN THE system SHALL prompt for authentication.\n\n### Content Submission Errors\nIF post exceeds character limits, THEN THE system SHALL prevent submission and display specific limits.  \nIF image upload fails technical validation, THEN THE system SHALL provide supported formats and sizes.  \nIF link unfurls to restricted content, THEN THE system SHALL prevent posting and explain restriction.  \nIF community does not exist or is inaccessible, THEN THE system SHALL return appropriate error messages.  \nIF user is banned from community, THEN THE system SHALL prevent interactions and show ban message.\n\n### Voting System Errors\nIF user attempts to vote on deleted content, THEN THE system SHALL return content not found error.  \nIF voting rate limit exceeded, THEN THE system SHALL prevent vote and show cooldown period.  \nIF vote application fails technical issues, THEN THE system SHALL retry automatically and notify user.  \nIF karma calculation becomes inconsistent, THEN THE system SHALL trigger audit and correction.  \nIF self-voting attempted, THEN THE system SHALL allow but exclude from karma updates.\n\n### Moderation Errors\nIF report submission fails, THEN THE system SHALL retry automatically or notify user of failure.  \nIF moderator action conflicts with existing rules, THEN THE system SHALL warn and require confirmation.  \nIF moderation queue becomes overloaded, THEN THE system SHALL implement automatic triage.  \nIF appeal process violates workflow, THEN THE system SHALL deny and explain correctly.  \nIF automated moderation misses violations, THEN THE system SHALL accept manual reports.\n\n### System Capacity Errors\nIF database operations timeout, THEN THE system SHALL implement graceful degradation.  \nIF concurrent users exceed thresholds, THEN THE system SHALL provide wait messaging.  \nIF content generation exceeds limits, THEN THE system SHALL implement queuing.  \nIF integration endpoints fail, THEN THE system SHALL continue with cached data.  \nIF critical services become unresponsive, THEN THE system SHALL display maintenance messages.\n\n### Data Integrity Errors\nIF duplicate content detected, THEN THE system SHALL prevent creation and show similar posts.  \nIF user data becomes corrupted, THEN THE system SHALL restore from backup or regenerate.  \nIF community data inconsistency occurs, THEN THE system SHALL audit and correct ownership.  \nIF transaction fails partially, THEN THE system SHALL rollback and rollback complete operation.  \nIF validation rules become outdated, THEN THE system SHALL alert administrators for updates.\n\n## Success Criteria\n\n### User Registration Success\nWHEN registration completes successfully, THE system SHALL redirect to email verification page.  \nWHEN verification email sent, THE system SHALL display success message with next steps.  \nWHEN user successfully joins platform, THE system SHALL initialize member profile and karma.  \nTHE registration process SHALL complete within 3 seconds under normal load.  \nTHE system SHALL achieve 95% successful registration completion rate.\n\n### Authentication Success\nWHEN login succeeds, THE system SHALL redirect to user's previous page or home feed.  \nWHEN session established, THE system SHALL display personalized greeting and role indicators.  \nWHEN role-based access granted, THE system SHALL unlock appropriate feature interfaces.  \nTHE authentication process SHALL complete within 2 seconds.  \nTHE system SHALL maintain zero false positive authentications.\n\n### Content Publication Success\nWHEN post published, THE system SHALL show in community feed immediately.  \nWHEN comment posted successfully, THE system SHALL display in correct thread position.  \nTHE content publication SHALL complete within 5 seconds.  \nAll published content SHALL be immediately accessible to authorized viewers.\n\n### Voting Success\nWHEN vote recorded, THE system SHALL update content scores and user interfaces instantly.  \nWHEN karma calculated, THE system SHALL reflect changes in all relevant displays.  \nWHEN ranking algorithms run, THE system SHALL provide consistent sorting results.  \nVote processing SHALL complete within 1 second.  \nVote feedback SHALL be provided immediately to users.\n\n### Moderation Success\nWHEN report submitted successfully, THE system SHALL confirm receipt and queue status.  \nWHEN moderator action applied, THE system SHALL update content status and notify involved users.  \nWHEN community rules enforced, THE system SHALL maintain platform standards.  \nModeration actions SHALL be logged and auditable.  \nModeration efficiency SHALL meet 24-hour resolution targets for critical reports.\n\n### Subscription Success\nWHEN subscription activated, THE system SHALL immediately update user's community list.  \nWHEN content delivery begins, THE system SHALL include new posts in personal feeds.  \nWhen preference saved successfully, THE system SHALL display confirmation and examples.  \nSubscription management SHALL complete within 2 seconds.  \nFeed personalization SHALL achieve 98% accuracy for subscribed content.\n\n### Performance Success\nTHE system SHALL respond to all user actions within acceptable time limits.  \nTHE system SHALL maintain data consistency across all operations.  \nTHE system SHALL provide seamless user experiences during peak usage.  \nBusiness logic validations SHALL execute with 100% reliability.  \nSystem SHALL handle 1,000+ concurrent users without functional degradation.\n\n### Security Success\nWHEN security validations pass, THE system SHALL allow intended actions without unnecessary barriers.  \nWHEN threat patterns detected, THE system SHALL respond with appropriate protective measures.  \nWHEN data integrity maintained, THE system SHALL preserve business rules compliance.  \nSecurity controls SHALL prevent unauthorized access while enabling legitimate use.  \nUser data SHALL remain protected throughout all business workflows.\n\n## Diagrams\n\n### User Registration and Authentication Flow\n```mermaid\ngraph LR\n  A[\\\"User Initiates Registration\\\"] --> B{\\\"Validate Input\\\"}\n  B -->|\\\"Valid\\\"| C[\\\"Create Account\\\"]\n  B -->|\\\"Invalid\\\"| D[\\\"Show Error\\\"]\n  C --> E[\\\"Send Verification\\\"]\n  E --> F[\\\"Account Created Successfully\\\"]\n  A[\\\"User Logs In\\\"] --> G{\\\"Validate Credentials\\\"}\n  G -->|\\\"Valid\\\"| H[\\\"Establish Session\\\"]\n  G -->|\\\"Invalid\\\"| I[\\\"Show Login Error\\\"]\n  H --> J[\\\"Access Granted\\\"]\n```\n\n### Post Creation and Moderation Flow\n```mermaid\ngraph LR\n  A[\\\"Member Submits Post\\\"] --> B{\\\"Content Valid?\\\"}\n  B -->|\\\"Yes\\\"| C{\\\"Auto-Mod Check\\\"}\n  C -->|\\\"Clean\\\"| D[\\\"Publish Immediately\\\"]\n  C -->|\\\"Flagged\\\"| E[\\\"Hold for Review\\\"]\n  E --> F{\\\"Moderator Review\\\"}\n  F -->|\\\"Approve\\\"| D\n  F -->|\\\"Reject\\\"| G[\\\"Return to Author\\\"]\n  B -->|\\\"No\\\"| H[\\\"Show Validation Error\\\"]\n```\n\n### Voting and Karma Calculation Flow\n```mermaid\ngraph LR\n  A[\\\"User Votes\\\"] --> B{\\\"Validate Eligibility\\\"}\n  B -->|\\\"Yes\\\"| C[\\\"Apply Vote\\\"]\n  C --> D[\\\"Update Scores\\\"]\n  D --> E[\\\"Calculate Karma\\\"]\n  E --> F[\\\"Update Displays\\\"]\n  B -->|\\\"No\\\"| G[\\\"Deny Vote\\\"]\n  G --> H[\\\"Show Reason\\\"]\n```\n\n### Moderation and Reporting Flow  \n```mermaid\ngraph LR\n  A[\\\"Content Reported\\\"] --> B[\\\"Categorize Severity\\\"]\n  B --> C[\\\"Queue for Moderator\\\"]\n  C --> D{\\\"Moderator Review\\\"}\n  D -->|\\\"Action\\\"| E[\\\"Apply Ruling\\\"]\n  D -->|\\\"No Action\\\"| F[\\\"Disregard Report\\\"]\n  E --> G[\\\"Notify Parties\\\"]\n  E --> H[\\\"Update Content Status\\\"]\n```\n\n## Related Documents\nFor authentication mechanisms, refer to the [Authentication Requirements Document](./03-authentication-requirements.md).  \nFor content management workflows, see the [Content Management Requirements](./04-content-management.md).  \nFor voting algorithms, consult the [Voting Comments System](./05-voting-comments-system.md).  \nFor moderation processes, review the [Moderation and Reporting](./08-moderation-reporting.md).\n\n## Data Integrity Errors (continued)\nIF transaction fails partially, THEN THE system SHALL rollback and rollback complete operation."},{"reason":"Define performance expectations and scalability requirements.","filename":"10-performance-scalability.md","documentType":"requirement","outline":["Response Time Expectations","Concurrency Requirements","Scalability Metrics","Database Performance","Caching Strategies"],"audience":"development team","keyQuestions":["What are acceptable response times?","How many concurrent users must be supported?","What are the database scaling requirements?"],"detailLevel":"detailed specification","relatedDocuments":["00-toc.md","09-business-logic-validation.md"],"constraints":[],"content":"# Performance and Scalability Requirements for Reddit-like Community Platform\n\n## Introduction\n\nThis document specifies the performance and scalability requirements for the Reddit-like community platform. Performance directly impacts user satisfaction, with slow-loading pages or frequent interruptions causing users to abandon the platform. Scalability ensures the system can handle growth from initial users to millions of daily active users while maintaining consistent performance.\n\nThe platform's growth model assumes:\n- Starting with 1,000-5,000 daily active users\n- Scaling to 50,000-100,000 daily active users within 2 years\n- Potential for viral growth reaching 500,000+ users during peak periods\n\nPerformance requirements are specified in terms of user-perceived response times and system reliability. All requirements use EARS format for clarity and testability.\n\nWHEN users experience page load times exceeding 3 seconds during normal usage, THE platform SHALL display a loading indicator to manage user expectations.\nTHE platform SHALL monitor and log performance metrics continuously to identify bottlenecks early.\nIF response times degrade below specified thresholds, THE system SHALL alert administrators for immediate investigation.\n\n## Response Time Expectations\n\n### Core Requirements\n\nWHEN a user requests the main page, THE system SHALL render the complete page content within 2 seconds under typical network conditions.\nWHEN a user submits a post creation request, THE system SHALL process the submission and display confirmation within 3 seconds.\nWHEN a user casts a vote on content, THE system SHALL update the vote display and karma calculation within 1 second.\nWHEN a user loads a community page containing 50 posts, THE system SHALL deliver fully rendered content within 3 seconds.\nWHEN a user initiates a search query, THE system SHALL return initial matching results within 2 seconds.\n\n### Error Response Times\n\nIF a user action requires processing exceeding 10 seconds, THEN THE system SHALL show a progress indicator and gracefully timeout at 30 seconds with clear error messaging.\nWHEN database queries exceed 5 seconds execution time, THE system SHALL automatically optimize queries or implement additional caching layers.\nWHEN system overload occurs, THE platform SHALL prioritize critical user actions (posting, voting, commenting) over background maintenance tasks.\n\n### User Experience Expectations\n\nWHEN the platform serves 10,000 concurrent users during peak hours, THE system SHALL maintain average response times under 2 seconds.\nIF temporary slowdowns occur, THEN THE platform SHALL implement graceful degradation while maintaining service availability.\nWHEN traffic spikes cause delays, THE system SHALL provide clear communication about expected resolution times.\n\n## Concurrency Requirements\n\n### Basic Concurrency\n\nWHEN 100 users perform simultaneous read operations (browsing posts, viewing profiles), THE system SHALL maintain consistent response times without errors.\nWHEN 50 users execute simultaneous write operations (creating posts, submitting comments), THE system SHALL handle all transactions successfully.\nWHEN 200 concurrent users access the platform during peak business hours, THE system SHALL continue normal operations without service interruption.\n\n### Peak Load Handling\n\nWHEN sudden traffic spikes reach 500 concurrent users during viral events, THE system SHALL scale resources automatically to maintain performance.\nIF concurrent user count exceeds 1,000 simultaneous connections, THEN THE platform SHALL implement intelligent rate limiting to protect system resources.\nWHEN demand surpasses current capacity, THE system SHALL queue excess requests and process them according to priority levels.\n\n### Session Management\n\nWHEN 10,000 users maintain active sessions simultaneously, THE system SHALL perform without performance degradation.\nWHEN users remain idle for more than 30 minutes, THE system SHALL transition their session to a low-resource consumption state.\nWHEN session data becomes stale, THE system SHALL refresh session information transparently to users.\n\n## Scalability Metrics\n\n### User Growth Projections\n\nWHEN user registrations increase by 20% monthly, THE system SHALL scale infrastructure automatically to maintain consistent performance.\nWHEN the platform reaches 100,000 daily active users within 24 months, THE system SHALL operate without fundamental architectural changes.\nWHEN viral growth events cause user numbers to spike to 500,000+ daily users, THE system SHALL maintain 99% uptime during the event period.\n\n### Content Scalability\n\nWHEN the platform accumulates 1 million total posts across all communities, THE system SHALL maintain sorting algorithm performance within acceptable limits.\nWHEN individual communities reach 10,000 posts, THE system SHALL preserve efficient data retrieval and display capabilities.\nWHEN comment threads grow to 5,000 nested replies per post, THE system SHALL maintain acceptable load times for thread navigation.\n\n### Traffic Metrics\n\nWHEN the platform handles 500,000 page views per hour during peak periods, THE system SHALL maintain sub-2-second average response times.\nWHEN traffic volume doubles from baseline measurements, THE system SHALL complete automatic scaling within 10 minutes.\nWHEN system capacity reaches 90% utilization during peak load, THE system SHALL maintain performance guarantees.\n\n## Database Performance\n\n### Query Performance\n\nWHEN retrieving posts sorted by the \"hot\" algorithm, THE system SHALL complete database queries within 500 milliseconds.\nWHEN accessing user profile information, THE system SHALL retrieve complete profile data within 200 milliseconds.\nWHEN calculating karma score changes, THE system SHALL complete computational operations within 1 second.\n\n### Write Operations\n\nWHEN inserting new post records into the database, THE system SHALL complete write operations within 2 seconds.\nWHEN processing 100 simultaneous post submissions, THE system SHALL handle all transactions without conflicts or data loss.\nWHEN updating vote counts across multiple related tables, THE system SHALL perform atomic operations ensuring data consistency.\n\n### Data Volume Handling\n\nWHEN database size reaches 100 GB in total volume, THE system SHALL maintain consistent query performance standards.\nWHEN individual database tables contain 1 million records, THE system SHALL implement automatic partitioning strategies.\nWHEN read operations dominate system load, THE system SHALL deploy database replication for improved read performance.\n\n## Caching Strategies\n\n### User Session Caching\n\nWHEN users authenticate successfully, THE system SHALL cache authentication tokens for instant session validation without database queries.\nWHEN users repeatedly view their subscribed community feeds, THE system SHALL cache personalized content for 5 minutes to reduce database load.\nWHEN user profile information updates occur, THE system SHALL invalidate associated cache entries within 30 seconds.\n\n### Content Caching\n\nWHEN posts receive high view counts, THE system SHALL cache complete post content and metadata for 10 minutes.\nWHEN sorting algorithms request vote statistics, THE system SHALL cache calculated controversial scores for 1 hour.\nWHEN serving static community assets like images and CSS files, THE system SHALL implement edge caching at CDN level.\n\n### Algorithm Caching\n\nWHEN computing \"hot\" post rankings, THE system SHALL cache intermediate calculation results for 15 minutes.\nWHEN distributing cached data across multiple servers, THE system SHALL ensure data consistency through cache invalidation protocols.\nWHEN cache misses occur during high traffic, THE system SHALL fallback to direct database queries without user-perceived impact.\n\n## System Architecture Implications\n\nThe platform architecture supports horizontal scaling through:\n\n```mermaid\ngraph LR\n  A[\"User Request\"] --> B{\"Load Balancer\"}\n  B --> C[\"Web Server Pool\"]\n  B --> D[\"API Gateway\"]\n  C --> E[\"Application Server 1\"]\n  C --> F[\"Application Server N\"]\n  D --> E\n  D --> F\n  E --> G[\"Redis Cache Layer\"]\n  F --> G\n  G --> H[\"Database Cluster\"]\n  H --> I[\"Master Node\"]\n  H --> J[\"Replica Node 1\"]\n  H --> K[\"Replica Node N\"]\n```\n\nWHEN increased user load demands additional capacity, THE system SHALL automatically add application servers to the pool without service disruption.\nWHEN database performance becomes bottleneck, THE system SHALL add replica nodes to distribute read operations effectively.\nWHEN cache layer requires expansion, THE system SHALL implement sharding strategies to maintain high availability.\n\n## Monitoring and Alerting\n\n### Performance Monitoring\n\nWHEN average response times exceed 3 seconds across critical operations, THE system SHALL trigger automated alerts to operations team.\nWHEN CPU utilization reaches 70% across application servers, THE system SHALL initiate automatic scaling procedures.\nWHEN performance metrics indicate potential issues, THE system SHALL log detailed information for post-mortem analysis.\n\n### Scalability Alerts\n\nWHEN database connection pools reach 80% utilization, THE system SHALL alert administrators and prepare additional database resources.\nWHEN cache hit rates drop below 85%, THE system SHALL investigate cache configuration and implement optimizations.\nWHEN traffic patterns suggest imminent capacity limits, THE system SHALL proactively scale resources to prevent performance degradation.\n\n## Conclusion and Success Metrics\n\n### Critical Success Factors\n\nTHE platform SHALL achieve consistent sub-2-second response times for 95% of user interactions during normal operation.\nTHE system SHALL demonstrate linear scalability supporting 100,000+ concurrent users without architectural redesign.\nTHE platform SHALL maintain 99.9% uptime annually excluding planned maintenance windows.\nTHE system SHALL reduce database load by 80% through intelligent caching strategies.\nTHE platform SHALL support content growth to millions of posts while maintaining sorting algorithm efficiency.\n\nThese performance and scalability requirements ensure the Reddit-like community platform provides reliable, fast service to users while accommodating substantial growth. Backend developers should design systems that can scale from initial operation to enterprise-level traffic without requiring fundamental architectural changes.\n\nKey success factors include:\n- Consistent sub-2-second response times for user interactions\n- Support for 100,000+ concurrent users\n- 99% uptime with graceful degradation during peak loads\n- Efficient database operations supporting millions of content items\n- Intelligent caching reducing database load by 80%\n\n### Future Considerations\n\nWHEN mobile application development begins, THE system SHALL maintain performance parity between web and mobile platforms.\nWHEN additional features increase complexity, THE system SHALL preserve current performance baselines.\nWHEN global expansion occurs, THE system SHALL implement geographic content delivery optimizations.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"}],"created_at":"2025-10-15T02:14:12.208Z","completed_at":"2025-10-15T02:17:34.050Z","step":0},{"id":"0199e5a8-92d8-718f-92ba-c7ede45d7ebe","type":"userMessage","contents":[{"type":"text","text":"Design the database schema."}],"created_at":"2025-10-15T02:17:34.168Z"},{"type":"prisma","id":"0199e5aa-d5a0-7197-898a-d667daec9be1","instruction":"Design database schema for a Reddit-like community platform with support for user registration, communities, posts (text, links, images), upvotes/downvotes on posts and comments, nested comments, user karma, post sorting (hot, new, top, controversial), community subscriptions, user profiles, and content reporting.","schemas":{"schema-01-systematic.prisma":"/// Core community entities that organize content and user interactions\n/// within the platform. Communities serve as containers for posts, comments,\n/// and subscriptions, with each having unique names and requiring moderator\n/// approval for creation.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_communities {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique community identifier consisting of alphanumeric characters and\n  /// underscores, maximum 21 characters.\n  code String\n  \n  /// Display name of the community shown to users, maximum 100 characters.\n  name String\n  \n  /// Detailed description of the community's purpose and rules, maximum 500\n  /// characters.\n  description String\n  \n  /// Current status of the community (pending, active, suspended, archived).\n  /// Default is pending until moderator approval.\n  status String\n  \n  /// Business workflow status for community management (e.g., pending_review,\n  /// approved, featured).\n  business_status String\n  \n  /// Timestamp when the community was initially created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the community was last modified.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp for communities that have been removed but retained\n  /// for audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  community_platform_moderators community_platform_moderators[]\n  community_platform_posts community_platform_posts[]\n  community_platform_subscriptions community_platform_subscriptions[]\n  \n  @@unique([code])\n  @@index([status])\n  @@index([created_at])\n}","schema-02-actors.prisma":"/// Registered members who participate in the community platform, posting\n/// content, voting, and engaging with discussions. Members can customize\n/// their profiles and subscribe to communities of interest. Each member has\n/// a unique email and nickname for identification and communication.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_members {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Email address for account registration and notifications.\n  email String\n  \n  /// Hashed password for secure authentication.\n  password_hash String\n  \n  /// Unique username displayed throughout the platform.\n  nickname String\n  \n  /// Optional user biography or description.\n  bio String?\n  \n  /// Optional avatar image URL for user profiles.\n  avatar_uri String? @db.VarChar(80000)\n  \n  /// Timestamp when the member account was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last profile modification.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp for deactivated accounts.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  community_platform_moderators community_platform_moderators[]\n  community_platform_posts community_platform_posts[]\n  community_platform_comments community_platform_comments[]\n  community_platform_votes community_platform_votes[]\n  community_platform_subscriptions community_platform_subscriptions[]\n  community_platform_reports community_platform_reports[]\n  \n  @@unique([email])\n  @@unique([nickname])\n  @@index([created_at])\n}\n\n/// Junction table linking members to communities where they serve as\n/// moderators. Moderators can approve content, remove inappropriate posts,\n/// manage user behavior, and enforce community rules in their assigned\n/// communities.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Member assigned as moderator for this community.\n  community_platform_member_id String @db.Uuid\n  \n  /// Community this member moderates.\n  community_platform_community_id String @db.Uuid\n  \n  /// Timestamp when the moderator role was assigned.\n  assigned_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member community_platform_members @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n  community community_platform_communities @relation(fields: [community_platform_community_id], references: [id], onDelete: Cascade, map: \"community_platform_moderators_community_platform_commu_7a846c49\")\n  \n  community_platform_reports community_platform_reports[]\n  \n  @@unique([community_platform_member_id, community_platform_community_id], map: \"community_platform_moderators_community_platform_membe_d68dc93a\")\n  @@index([community_platform_community_id], map: \"community_platform_moderators_community_platform_commu_65018e17\")\n}","schema-03-content.prisma":"/// Core content entities representing user-submitted posts including text\n/// posts, link posts, and image posts. Posts can be upvoted/downvoted,\n/// commented on, and are associated with specific communities. Posts require\n/// independent creation, editing, and management capabilities across the\n/// platform, supporting the primary content lifecycle.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_posts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged community's {\"@link community_platform_communities.id\"}.\n  community_platform_community_id String @db.Uuid\n  \n  /// Author's {\"@link community_platform_members.id\"}.\n  community_platform_member_id String @db.Uuid\n  \n  /// Post title visible in listings and searches.\n  title String\n  \n  /// Type of post content: 'text', 'link', or 'image'.\n  content_type String\n  \n  /// Text content for text posts.\n  text_content String?\n  \n  /// URL for link posts.\n  url String? @db.VarChar(80000)\n  \n  /// Image URL for image posts.\n  image_url String? @db.VarChar(80000)\n  \n  /// Post creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last modification timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft deletion timestamp when post is removed.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  community community_platform_communities @relation(fields: [community_platform_community_id], references: [id], onDelete: Cascade)\n  author community_platform_members @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n  \n  community_platform_comments community_platform_comments[]\n  community_platform_votes community_platform_votes[]\n  community_platform_reports community_platform_reports[]\n  \n  @@index([community_platform_community_id, created_at], map: \"community_platform_posts_community_platform_community__4df12ea5\")\n  @@index([created_at])\n  @@index([community_platform_member_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Threaded comment system supporting unlimited nesting for discussions on\n/// posts. Comments can be replied to independently, represent user\n/// engagement, and require separate management from parent posts. Each\n/// comment can be voted on and moderated independently, enabling cross-post\n/// search and user activity tracking.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Referenced post's {\"@link community_platform_posts.id\"}.\n  community_platform_post_id String @db.Uuid\n  \n  /// Comment author's {\"@link community_platform_members.id\"}.\n  community_platform_member_id String @db.Uuid\n  \n  /// Parent comment's {\"@link community_platform_comments.id\"} for nested\n  /// structure.\n  parent_comment_id String? @db.Uuid\n  \n  /// Comment text content.\n  content String\n  \n  /// Nesting level in comment thread.\n  depth Int @db.Integer\n  \n  /// Comment creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last modification timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft deletion timestamp when comment is removed.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post community_platform_posts @relation(fields: [community_platform_post_id], references: [id], onDelete: Cascade)\n  author community_platform_members @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n  parent community_platform_comments? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n  \n  recursive community_platform_comments[] @relation(\"recursive\")\n  community_platform_votes community_platform_votes[]\n  community_platform_reports community_platform_reports[]\n  \n  @@index([community_platform_post_id, created_at], map: \"community_platform_comments_community_platform_post_id_520bb25f\")\n  @@index([community_platform_member_id, created_at], map: \"community_platform_comments_community_platform_member__5ac10bc6\")\n  @@index([created_at])\n  @@index([parent_comment_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-04-engagement.prisma":"/// Tracks user votes on posts and comments within the engagement system.\n/// Each vote represents member engagement with community content, affecting\n/// karma calculations and content visibility. Relationships exist with\n/// members (voters), posts, and comments (voted content). Votes are\n/// immutable once cast but require efficient querying for real-time karma\n/// updates and content sorting algorithms. Modified to include proper stance\n/// classification and check constraint for mutual exclusivity.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_votes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Voted member's {@link community_platform_members.id} who cast the vote.\n  member_id String @db.Uuid\n  \n  /// Related post's {@link community_platform_posts.id} that received the vote\n  /// (if applicable).\n  post_id String? @db.Uuid\n  \n  /// Related comment's {@link community_platform_comments.id} that received\n  /// the vote (if applicable).\n  comment_id String? @db.Uuid\n  \n  /// Type of vote cast - 'up' for positive or 'down' for negative engagement.\n  vote_type String\n  \n  /// Timestamp when the vote was cast, used for audit trails and analytical\n  /// purposes.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member community_platform_members @relation(fields: [member_id], references: [id], onDelete: Cascade)\n  post community_platform_posts? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment community_platform_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@unique([member_id, post_id])\n  @@unique([member_id, comment_id])\n  @@index([created_at])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([member_id, created_at])\n}\n\n/// Manages member subscriptions to communities for personalized content\n/// delivery. Each subscription represents active interest in specific\n/// community content, enabling personalized feeds and notification systems.\n/// Relationships exist with members (subscribers) and communities\n/// (subscribed content). Subscriptions can be toggled on/off with proper\n/// timestamp tracking.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_subscriptions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Subscribing member's {@link community_platform_members.id}.\n  member_id String @db.Uuid\n  \n  /// Subscribed community's {@link community_platform_communities.id}.\n  community_id String @db.Uuid\n  \n  /// Timestamp when the subscription was established.\n  subscribed_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the subscription was terminated (null if still active).\n  unsubscribed_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member community_platform_members @relation(fields: [member_id], references: [id], onDelete: Cascade)\n  community community_platform_communities @relation(fields: [community_id], references: [id], onDelete: Cascade)\n  \n  @@unique([member_id, community_id])\n  @@index([subscribed_at])\n  @@index([community_id])\n  @@index([member_id, unsubscribed_at])\n}","schema-05-moderation.prisma":"/// User-submitted reports of content violations requiring moderator\n/// attention. Captures reporter identification, targeted content references,\n/// violation categories, and moderation resolution workflow. Enables\n/// platform governance through transparent reporting system that maintains\n/// community standards.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Reporter's {@link community_platform_members.id}.\n  reporter_id String @db.Uuid\n  \n  /// Assigned moderator's {@link community_platform_moderators.id} for\n  /// handling the report.\n  assigned_moderator_id String? @db.Uuid\n  \n  /// Reported post's {@link community_platform_posts.id} if report is about a\n  /// post.\n  reported_post_id String? @db.Uuid\n  \n  /// Reported comment's {@link community_platform_comments.id} if report is\n  /// about a comment.\n  reported_comment_id String? @db.Uuid\n  \n  /// Type of report violation (spam, harassment, hate_speech, adult_content,\n  /// misinformation, copyright, other).\n  report_type String\n  \n  /// Additional details provided by reporter explaining the violation concern.\n  description String\n  \n  /// Current processing status of the report (pending, under_review, resolved,\n  /// dismissed).\n  status String\n  \n  /// Internal notes added by moderators during review and resolution process.\n  moderation_notes String?\n  \n  /// Timestamp when the report was first submitted for moderation review.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last modification to the report record.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp for report archival without permanent removal.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  reporter community_platform_members @relation(fields: [reporter_id], references: [id], onDelete: Cascade)\n  assignedModerator community_platform_moderators? @relation(fields: [assigned_moderator_id], references: [id], onDelete: Cascade)\n  reportedPost community_platform_posts? @relation(fields: [reported_post_id], references: [id], onDelete: Cascade)\n  reportedComment community_platform_comments? @relation(fields: [reported_comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([reported_post_id])\n  @@index([reported_comment_id])\n  \n  @@index([status])\n  @@index([report_type])\n  @@index([created_at])\n  @@index([reporter_id, status])\n  @@index([assigned_moderator_id, updated_at])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  engineType      = \"client\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}"},"result":{"success":true,"data":{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_platform_communities","description":"Core community entities that organize content and user interactions within the platform. Communities serve as containers for posts, comments, and subscriptions, with each having unique names and requiring moderator approval for creation.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"Unique community identifier consisting of alphanumeric characters and underscores, maximum 21 characters.","nullable":false},{"name":"name","type":"string","description":"Display name of the community shown to users, maximum 100 characters.","nullable":false},{"name":"description","type":"string","description":"Detailed description of the community's purpose and rules, maximum 500 characters.","nullable":false},{"name":"status","type":"string","description":"Current status of the community (pending, active, suspended, archived). Default is pending until moderator approval.","nullable":false},{"name":"business_status","type":"string","description":"Business workflow status for community management (e.g., pending_review, approved, featured).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the community was initially created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the community was last modified.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for communities that have been removed but retained for audit purposes.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_members","description":"Registered members who participate in the community platform, posting content, voting, and engaging with discussions. Members can customize their profiles and subscribe to communities of interest. Each member has a unique email and nickname for identification and communication.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Email address for account registration and notifications.","nullable":false},{"name":"password_hash","type":"string","description":"Hashed password for secure authentication.","nullable":false},{"name":"nickname","type":"string","description":"Unique username displayed throughout the platform.","nullable":false},{"name":"bio","type":"string","description":"Optional user biography or description.","nullable":true},{"name":"avatar_uri","type":"uri","description":"Optional avatar image URL for user profiles.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the member account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last profile modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for deactivated accounts.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["nickname"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_moderators","description":"Junction table linking members to communities where they serve as moderators. Moderators can approve content, remove inappropriate posts, manage user behavior, and enforce community rules in their assigned communities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Member assigned as moderator for this community.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Community this member moderates.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"assigned_at","type":"datetime","description":"Timestamp when the moderator role was assigned.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_member_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_community_id"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"community_platform_posts","description":"Core content entities representing user-submitted posts including text posts, link posts, and image posts. Posts can be upvoted/downvoted, commented on, and are associated with specific communities. Posts require independent creation, editing, and management capabilities across the platform, supporting the primary content lifecycle.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {\"@link community_platform_communities.id\"}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"community_platform_member_id","type":"uuid","description":"Author's {\"@link community_platform_members.id\"}.","relation":{"name":"author","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Post title visible in listings and searches.","nullable":false},{"name":"content_type","type":"string","description":"Type of post content: 'text', 'link', or 'image'.","nullable":false},{"name":"text_content","type":"string","description":"Text content for text posts.","nullable":true},{"name":"url","type":"uri","description":"URL for link posts.","nullable":true},{"name":"image_url","type":"uri","description":"Image URL for image posts.","nullable":true},{"name":"created_at","type":"datetime","description":"Post creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when post is removed.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["created_at"]},{"fieldNames":["community_platform_member_id"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"community_platform_comments","description":"Threaded comment system supporting unlimited nesting for discussions on posts. Comments can be replied to independently, represent user engagement, and require separate management from parent posts. Each comment can be voted on and moderated independently, enabling cross-post search and user activity tracking.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Referenced post's {\"@link community_platform_posts.id\"}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"community_platform_member_id","type":"uuid","description":"Comment author's {\"@link community_platform_members.id\"}.","relation":{"name":"author","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"parent_comment_id","type":"uuid","description":"Parent comment's {\"@link community_platform_comments.id\"} for nested structure.","relation":{"name":"parent","targetModel":"community_platform_comments","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"Comment text content.","nullable":false},{"name":"depth","type":"int","description":"Nesting level in comment thread.","nullable":false},{"name":"created_at","type":"datetime","description":"Comment creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when comment is removed.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_member_id","created_at"]},{"fieldNames":["created_at"]},{"fieldNames":["parent_comment_id"]}],"ginIndexes":[{"fieldName":"content"}]}]},{"filename":"schema-04-engagement.prisma","namespace":"Engagement","models":[{"name":"community_platform_votes","description":"Tracks user votes on posts and comments within the engagement system. Each vote represents member engagement with community content, affecting karma calculations and content visibility. Relationships exist with members (voters), posts, and comments (voted content). Votes are immutable once cast but require efficient querying for real-time karma updates and content sorting algorithms. Modified to include proper stance classification and check constraint for mutual exclusivity.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Voted member's {@link community_platform_members.id} who cast the vote.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Related post's {@link community_platform_posts.id} that received the vote (if applicable).","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Related comment's {@link community_platform_comments.id} that received the vote (if applicable).","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote cast - 'up' for positive or 'down' for negative engagement.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast, used for audit trails and analytical purposes.","nullable":false}],"uniqueIndexes":[{"fieldNames":["member_id","post_id"],"unique":true},{"fieldNames":["member_id","comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]},{"fieldNames":["member_id","created_at"]}],"ginIndexes":[]},{"name":"community_platform_subscriptions","description":"Manages member subscriptions to communities for personalized content delivery. Each subscription represents active interest in specific community content, enabling personalized feeds and notification systems. Relationships exist with members (subscribers) and communities (subscribed content). Subscriptions can be toggled on/off with proper timestamp tracking.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Subscribing member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Subscribed community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"subscribed_at","type":"datetime","description":"Timestamp when the subscription was established.","nullable":false},{"name":"unsubscribed_at","type":"datetime","description":"Timestamp when the subscription was terminated (null if still active).","nullable":true}],"uniqueIndexes":[{"fieldNames":["member_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["subscribed_at"]},{"fieldNames":["community_id"]},{"fieldNames":["member_id","unsubscribed_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-moderation.prisma","namespace":"Moderation","models":[{"name":"community_platform_reports","description":"User-submitted reports of content violations requiring moderator attention. Captures reporter identification, targeted content references, violation categories, and moderation resolution workflow. Enables platform governance through transparent reporting system that maintains community standards.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_id","type":"uuid","description":"Reporter's {@link community_platform_members.id}.","relation":{"name":"reporter","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"assigned_moderator_id","type":"uuid","description":"Assigned moderator's {@link community_platform_moderators.id} for handling the report.","relation":{"name":"assignedModerator","targetModel":"community_platform_moderators"},"unique":false,"nullable":true},{"name":"reported_post_id","type":"uuid","description":"Reported post's {@link community_platform_posts.id} if report is about a post.","relation":{"name":"reportedPost","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"reported_comment_id","type":"uuid","description":"Reported comment's {@link community_platform_comments.id} if report is about a comment.","relation":{"name":"reportedComment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"report_type","type":"string","description":"Type of report violation (spam, harassment, hate_speech, adult_content, misinformation, copyright, other).","nullable":false},{"name":"description","type":"string","description":"Additional details provided by reporter explaining the violation concern.","nullable":false},{"name":"status","type":"string","description":"Current processing status of the report (pending, under_review, resolved, dismissed).","nullable":false},{"name":"moderation_notes","type":"string","description":"Internal notes added by moderators during review and resolution process.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the report was first submitted for moderation review.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last modification to the report record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for report archival without permanent removal.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["report_type"]},{"fieldNames":["created_at"]},{"fieldNames":["reporter_id","status"]},{"fieldNames":["assigned_moderator_id","updated_at"]}],"ginIndexes":[{"fieldName":"description"}]}]}]}},"compiled":{"type":"success","schemas":{"schema-01-systematic.prisma":"/// Core community entities that organize content and user interactions\n/// within the platform. Communities serve as containers for posts, comments,\n/// and subscriptions, with each having unique names and requiring moderator\n/// approval for creation.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_communities {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique community identifier consisting of alphanumeric characters and\n  /// underscores, maximum 21 characters.\n  code String\n\n  /// Display name of the community shown to users, maximum 100 characters.\n  name String\n\n  /// Detailed description of the community's purpose and rules, maximum 500\n  /// characters.\n  description String\n\n  /// Current status of the community (pending, active, suspended, archived).\n  /// Default is pending until moderator approval.\n  status String\n\n  /// Business workflow status for community management (e.g., pending_review,\n  /// approved, featured).\n  business_status String\n\n  /// Timestamp when the community was initially created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the community was last modified.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp for communities that have been removed but retained\n  /// for audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  community_platform_moderators    community_platform_moderators[]\n  community_platform_posts         community_platform_posts[]\n  community_platform_subscriptions community_platform_subscriptions[]\n\n  @@unique([code])\n  @@index([status])\n  @@index([created_at])\n}\n","schema-02-actors.prisma":"/// Registered members who participate in the community platform, posting\n/// content, voting, and engaging with discussions. Members can customize\n/// their profiles and subscribe to communities of interest. Each member has\n/// a unique email and nickname for identification and communication.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_members {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Email address for account registration and notifications.\n  email String\n\n  /// Hashed password for secure authentication.\n  password_hash String\n\n  /// Unique username displayed throughout the platform.\n  nickname String\n\n  /// Optional user biography or description.\n  bio String?\n\n  /// Optional avatar image URL for user profiles.\n  avatar_uri String? @db.VarChar(80000)\n\n  /// Timestamp when the member account was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last profile modification.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp for deactivated accounts.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  community_platform_moderators    community_platform_moderators[]\n  community_platform_posts         community_platform_posts[]\n  community_platform_comments      community_platform_comments[]\n  community_platform_votes         community_platform_votes[]\n  community_platform_subscriptions community_platform_subscriptions[]\n  community_platform_reports       community_platform_reports[]\n\n  @@unique([email])\n  @@unique([nickname])\n  @@index([created_at])\n}\n\n/// Junction table linking members to communities where they serve as\n/// moderators. Moderators can approve content, remove inappropriate posts,\n/// manage user behavior, and enforce community rules in their assigned\n/// communities.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Member assigned as moderator for this community.\n  community_platform_member_id String @db.Uuid\n\n  /// Community this member moderates.\n  community_platform_community_id String @db.Uuid\n\n  /// Timestamp when the moderator role was assigned.\n  assigned_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member    community_platform_members     @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n  community community_platform_communities @relation(fields: [community_platform_community_id], references: [id], onDelete: Cascade, map: \"community_platform_moderators_community_platform_commu_7a846c49\")\n\n  community_platform_reports community_platform_reports[]\n\n  @@unique([community_platform_member_id, community_platform_community_id], map: \"community_platform_moderators_community_platform_membe_d68dc93a\")\n  @@index([community_platform_community_id], map: \"community_platform_moderators_community_platform_commu_65018e17\")\n}\n","schema-03-content.prisma":"/// Core content entities representing user-submitted posts including text\n/// posts, link posts, and image posts. Posts can be upvoted/downvoted,\n/// commented on, and are associated with specific communities. Posts require\n/// independent creation, editing, and management capabilities across the\n/// platform, supporting the primary content lifecycle.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_posts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged community's {\"@link community_platform_communities.id\"}.\n  community_platform_community_id String @db.Uuid\n\n  /// Author's {\"@link community_platform_members.id\"}.\n  community_platform_member_id String @db.Uuid\n\n  /// Post title visible in listings and searches.\n  title String\n\n  /// Type of post content: 'text', 'link', or 'image'.\n  content_type String\n\n  /// Text content for text posts.\n  text_content String?\n\n  /// URL for link posts.\n  url String? @db.VarChar(80000)\n\n  /// Image URL for image posts.\n  image_url String? @db.VarChar(80000)\n\n  /// Post creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Last modification timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft deletion timestamp when post is removed.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  community community_platform_communities @relation(fields: [community_platform_community_id], references: [id], onDelete: Cascade)\n  author    community_platform_members     @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n\n  community_platform_comments community_platform_comments[]\n  community_platform_votes    community_platform_votes[]\n  community_platform_reports  community_platform_reports[]\n\n  @@index([community_platform_community_id, created_at], map: \"community_platform_posts_community_platform_community__4df12ea5\")\n  @@index([created_at])\n  @@index([community_platform_member_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Threaded comment system supporting unlimited nesting for discussions on\n/// posts. Comments can be replied to independently, represent user\n/// engagement, and require separate management from parent posts. Each\n/// comment can be voted on and moderated independently, enabling cross-post\n/// search and user activity tracking.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Referenced post's {\"@link community_platform_posts.id\"}.\n  community_platform_post_id String @db.Uuid\n\n  /// Comment author's {\"@link community_platform_members.id\"}.\n  community_platform_member_id String @db.Uuid\n\n  /// Parent comment's {\"@link community_platform_comments.id\"} for nested\n  /// structure.\n  parent_comment_id String? @db.Uuid\n\n  /// Comment text content.\n  content String\n\n  /// Nesting level in comment thread.\n  depth Int @db.Integer\n\n  /// Comment creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Last modification timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft deletion timestamp when comment is removed.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post   community_platform_posts     @relation(fields: [community_platform_post_id], references: [id], onDelete: Cascade)\n  author community_platform_members   @relation(fields: [community_platform_member_id], references: [id], onDelete: Cascade)\n  parent community_platform_comments? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n\n  recursive                  community_platform_comments[] @relation(\"recursive\")\n  community_platform_votes   community_platform_votes[]\n  community_platform_reports community_platform_reports[]\n\n  @@index([community_platform_post_id, created_at], map: \"community_platform_comments_community_platform_post_id_520bb25f\")\n  @@index([community_platform_member_id, created_at], map: \"community_platform_comments_community_platform_member__5ac10bc6\")\n  @@index([created_at])\n  @@index([parent_comment_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-04-engagement.prisma":"/// Tracks user votes on posts and comments within the engagement system.\n/// Each vote represents member engagement with community content, affecting\n/// karma calculations and content visibility. Relationships exist with\n/// members (voters), posts, and comments (voted content). Votes are\n/// immutable once cast but require efficient querying for real-time karma\n/// updates and content sorting algorithms. Modified to include proper stance\n/// classification and check constraint for mutual exclusivity.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_votes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Voted member's {@link community_platform_members.id} who cast the vote.\n  member_id String @db.Uuid\n\n  /// Related post's {@link community_platform_posts.id} that received the vote\n  /// (if applicable).\n  post_id String? @db.Uuid\n\n  /// Related comment's {@link community_platform_comments.id} that received\n  /// the vote (if applicable).\n  comment_id String? @db.Uuid\n\n  /// Type of vote cast - 'up' for positive or 'down' for negative engagement.\n  vote_type String\n\n  /// Timestamp when the vote was cast, used for audit trails and analytical\n  /// purposes.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member  community_platform_members   @relation(fields: [member_id], references: [id], onDelete: Cascade)\n  post    community_platform_posts?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment community_platform_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([member_id, post_id])\n  @@unique([member_id, comment_id])\n  @@index([created_at])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([member_id, created_at])\n}\n\n/// Manages member subscriptions to communities for personalized content\n/// delivery. Each subscription represents active interest in specific\n/// community content, enabling personalized feeds and notification systems.\n/// Relationships exist with members (subscribers) and communities\n/// (subscribed content). Subscriptions can be toggled on/off with proper\n/// timestamp tracking.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_subscriptions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Subscribing member's {@link community_platform_members.id}.\n  member_id String @db.Uuid\n\n  /// Subscribed community's {@link community_platform_communities.id}.\n  community_id String @db.Uuid\n\n  /// Timestamp when the subscription was established.\n  subscribed_at DateTime @db.Timestamptz\n\n  /// Timestamp when the subscription was terminated (null if still active).\n  unsubscribed_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member    community_platform_members     @relation(fields: [member_id], references: [id], onDelete: Cascade)\n  community community_platform_communities @relation(fields: [community_id], references: [id], onDelete: Cascade)\n\n  @@unique([member_id, community_id])\n  @@index([subscribed_at])\n  @@index([community_id])\n  @@index([member_id, unsubscribed_at])\n}\n","schema-05-moderation.prisma":"/// User-submitted reports of content violations requiring moderator\n/// attention. Captures reporter identification, targeted content references,\n/// violation categories, and moderation resolution workflow. Enables\n/// platform governance through transparent reporting system that maintains\n/// community standards.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel community_platform_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Reporter's {@link community_platform_members.id}.\n  reporter_id String @db.Uuid\n\n  /// Assigned moderator's {@link community_platform_moderators.id} for\n  /// handling the report.\n  assigned_moderator_id String? @db.Uuid\n\n  /// Reported post's {@link community_platform_posts.id} if report is about a\n  /// post.\n  reported_post_id String? @db.Uuid\n\n  /// Reported comment's {@link community_platform_comments.id} if report is\n  /// about a comment.\n  reported_comment_id String? @db.Uuid\n\n  /// Type of report violation (spam, harassment, hate_speech, adult_content,\n  /// misinformation, copyright, other).\n  report_type String\n\n  /// Additional details provided by reporter explaining the violation concern.\n  description String\n\n  /// Current processing status of the report (pending, under_review, resolved,\n  /// dismissed).\n  status String\n\n  /// Internal notes added by moderators during review and resolution process.\n  moderation_notes String?\n\n  /// Timestamp when the report was first submitted for moderation review.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last modification to the report record.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp for report archival without permanent removal.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  reporter          community_platform_members     @relation(fields: [reporter_id], references: [id], onDelete: Cascade)\n  assignedModerator community_platform_moderators? @relation(fields: [assigned_moderator_id], references: [id], onDelete: Cascade)\n  reportedPost      community_platform_posts?      @relation(fields: [reported_post_id], references: [id], onDelete: Cascade)\n  reportedComment   community_platform_comments?   @relation(fields: [reported_comment_id], references: [id], onDelete: Cascade)\n\n  @@index([reported_post_id])\n  @@index([reported_comment_id])\n  @@index([status])\n  @@index([report_type])\n  @@index([created_at])\n  @@index([reporter_id, status])\n  @@index([assigned_moderator_id, updated_at])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  engineType      = \"client\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}\n"},"nodeModules":{"node_modules/.prisma/client/client.d.ts":"export * from \"./index\"","node_modules/.prisma/client/default.d.ts":"export * from \"./index\"","node_modules/.prisma/client/edge.d.ts":"export * from \"./default\"","node_modules/.prisma/client/index.d.ts":"\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/client.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model community_platform_communities\n * Core community entities that organize content and user interactions\n * within the platform. Communities serve as containers for posts, comments,\n * and subscriptions, with each having unique names and requiring moderator\n * approval for creation.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_communities = $Result.DefaultSelection<Prisma.$community_platform_communitiesPayload>\n/**\n * Model community_platform_members\n * Registered members who participate in the community platform, posting\n * content, voting, and engaging with discussions. Members can customize\n * their profiles and subscribe to communities of interest. Each member has\n * a unique email and nickname for identification and communication.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_members = $Result.DefaultSelection<Prisma.$community_platform_membersPayload>\n/**\n * Model community_platform_moderators\n * Junction table linking members to communities where they serve as\n * moderators. Moderators can approve content, remove inappropriate posts,\n * manage user behavior, and enforce community rules in their assigned\n * communities.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_moderators = $Result.DefaultSelection<Prisma.$community_platform_moderatorsPayload>\n/**\n * Model community_platform_posts\n * Core content entities representing user-submitted posts including text\n * posts, link posts, and image posts. Posts can be upvoted/downvoted,\n * commented on, and are associated with specific communities. Posts require\n * independent creation, editing, and management capabilities across the\n * platform, supporting the primary content lifecycle.\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_posts = $Result.DefaultSelection<Prisma.$community_platform_postsPayload>\n/**\n * Model community_platform_comments\n * Threaded comment system supporting unlimited nesting for discussions on\n * posts. Comments can be replied to independently, represent user\n * engagement, and require separate management from parent posts. Each\n * comment can be voted on and moderated independently, enabling cross-post\n * search and user activity tracking.\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_comments = $Result.DefaultSelection<Prisma.$community_platform_commentsPayload>\n/**\n * Model community_platform_votes\n * Tracks user votes on posts and comments within the engagement system.\n * Each vote represents member engagement with community content, affecting\n * karma calculations and content visibility. Relationships exist with\n * members (voters), posts, and comments (voted content). Votes are\n * immutable once cast but require efficient querying for real-time karma\n * updates and content sorting algorithms. Modified to include proper stance\n * classification and check constraint for mutual exclusivity.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_votes = $Result.DefaultSelection<Prisma.$community_platform_votesPayload>\n/**\n * Model community_platform_subscriptions\n * Manages member subscriptions to communities for personalized content\n * delivery. Each subscription represents active interest in specific\n * community content, enabling personalized feeds and notification systems.\n * Relationships exist with members (subscribers) and communities\n * (subscribed content). Subscriptions can be toggled on/off with proper\n * timestamp tracking.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_subscriptions = $Result.DefaultSelection<Prisma.$community_platform_subscriptionsPayload>\n/**\n * Model community_platform_reports\n * User-submitted reports of content violations requiring moderator\n * attention. Captures reporter identification, targeted content references,\n * violation categories, and moderation resolution workflow. Enables\n * platform governance through transparent reporting system that maintains\n * community standards.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type community_platform_reports = $Result.DefaultSelection<Prisma.$community_platform_reportsPayload>\n\n/**\n * ##  Prisma Client ʲˢ\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Community_platform_communities\n * const community_platform_communities = await prisma.community_platform_communities.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client ʲˢ\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Community_platform_communities\n   * const community_platform_communities = await prisma.community_platform_communities.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.community_platform_communities`: Exposes CRUD operations for the **community_platform_communities** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_communities\n    * const community_platform_communities = await prisma.community_platform_communities.findMany()\n    * ```\n    */\n  get community_platform_communities(): Prisma.community_platform_communitiesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_members`: Exposes CRUD operations for the **community_platform_members** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_members\n    * const community_platform_members = await prisma.community_platform_members.findMany()\n    * ```\n    */\n  get community_platform_members(): Prisma.community_platform_membersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_moderators`: Exposes CRUD operations for the **community_platform_moderators** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_moderators\n    * const community_platform_moderators = await prisma.community_platform_moderators.findMany()\n    * ```\n    */\n  get community_platform_moderators(): Prisma.community_platform_moderatorsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_posts`: Exposes CRUD operations for the **community_platform_posts** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_posts\n    * const community_platform_posts = await prisma.community_platform_posts.findMany()\n    * ```\n    */\n  get community_platform_posts(): Prisma.community_platform_postsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_comments`: Exposes CRUD operations for the **community_platform_comments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_comments\n    * const community_platform_comments = await prisma.community_platform_comments.findMany()\n    * ```\n    */\n  get community_platform_comments(): Prisma.community_platform_commentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_votes`: Exposes CRUD operations for the **community_platform_votes** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_votes\n    * const community_platform_votes = await prisma.community_platform_votes.findMany()\n    * ```\n    */\n  get community_platform_votes(): Prisma.community_platform_votesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_subscriptions`: Exposes CRUD operations for the **community_platform_subscriptions** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_subscriptions\n    * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findMany()\n    * ```\n    */\n  get community_platform_subscriptions(): Prisma.community_platform_subscriptionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.community_platform_reports`: Exposes CRUD operations for the **community_platform_reports** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Community_platform_reports\n    * const community_platform_reports = await prisma.community_platform_reports.findMany()\n    * ```\n    */\n  get community_platform_reports(): Prisma.community_platform_reportsDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    community_platform_communities: 'community_platform_communities',\n    community_platform_members: 'community_platform_members',\n    community_platform_moderators: 'community_platform_moderators',\n    community_platform_posts: 'community_platform_posts',\n    community_platform_comments: 'community_platform_comments',\n    community_platform_votes: 'community_platform_votes',\n    community_platform_subscriptions: 'community_platform_subscriptions',\n    community_platform_reports: 'community_platform_reports'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"community_platform_communities\" | \"community_platform_members\" | \"community_platform_moderators\" | \"community_platform_posts\" | \"community_platform_comments\" | \"community_platform_votes\" | \"community_platform_subscriptions\" | \"community_platform_reports\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      community_platform_communities: {\n        payload: Prisma.$community_platform_communitiesPayload<ExtArgs>\n        fields: Prisma.community_platform_communitiesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_communitiesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_communitiesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_communitiesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_communitiesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_communitiesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_communitiesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_communitiesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_communitiesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_communitiesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          update: {\n            args: Prisma.community_platform_communitiesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_communitiesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_communitiesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_communitiesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_communitiesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_communitiesPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_communitiesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_communities>\n          }\n          groupBy: {\n            args: Prisma.community_platform_communitiesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_communitiesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_communitiesCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_communitiesCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_members: {\n        payload: Prisma.$community_platform_membersPayload<ExtArgs>\n        fields: Prisma.community_platform_membersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_membersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_membersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_membersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_membersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_membersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_membersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_membersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_membersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_membersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          update: {\n            args: Prisma.community_platform_membersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_membersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_membersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_membersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_membersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_membersPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_membersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_members>\n          }\n          groupBy: {\n            args: Prisma.community_platform_membersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_membersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_membersCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_membersCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_moderators: {\n        payload: Prisma.$community_platform_moderatorsPayload<ExtArgs>\n        fields: Prisma.community_platform_moderatorsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_moderatorsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_moderatorsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_moderatorsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_moderatorsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_moderatorsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_moderatorsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_moderatorsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_moderatorsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_moderatorsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          update: {\n            args: Prisma.community_platform_moderatorsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_moderatorsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_moderatorsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_moderatorsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_moderatorsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_moderatorsPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_moderatorsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_moderators>\n          }\n          groupBy: {\n            args: Prisma.community_platform_moderatorsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_moderatorsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_moderatorsCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_moderatorsCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_posts: {\n        payload: Prisma.$community_platform_postsPayload<ExtArgs>\n        fields: Prisma.community_platform_postsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_postsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_postsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_postsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_postsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_postsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_postsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_postsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_postsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_postsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          update: {\n            args: Prisma.community_platform_postsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_postsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_postsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_postsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_postsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_postsPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_postsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_posts>\n          }\n          groupBy: {\n            args: Prisma.community_platform_postsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_postsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_postsCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_postsCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_comments: {\n        payload: Prisma.$community_platform_commentsPayload<ExtArgs>\n        fields: Prisma.community_platform_commentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_commentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_commentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_commentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_commentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_commentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_commentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_commentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_commentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_commentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          update: {\n            args: Prisma.community_platform_commentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_commentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_commentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_commentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_commentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_commentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_commentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_comments>\n          }\n          groupBy: {\n            args: Prisma.community_platform_commentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_commentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_commentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_commentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_votes: {\n        payload: Prisma.$community_platform_votesPayload<ExtArgs>\n        fields: Prisma.community_platform_votesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_votesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_votesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_votesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_votesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_votesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_votesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_votesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_votesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_votesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          update: {\n            args: Prisma.community_platform_votesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_votesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_votesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_votesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_votesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_votesPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_votesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_votes>\n          }\n          groupBy: {\n            args: Prisma.community_platform_votesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_votesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_votesCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_votesCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_subscriptions: {\n        payload: Prisma.$community_platform_subscriptionsPayload<ExtArgs>\n        fields: Prisma.community_platform_subscriptionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_subscriptionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_subscriptionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_subscriptionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_subscriptionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_subscriptionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_subscriptionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_subscriptionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_subscriptionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_subscriptionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          update: {\n            args: Prisma.community_platform_subscriptionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_subscriptionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_subscriptionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_subscriptionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_subscriptionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_subscriptionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_subscriptionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_subscriptions>\n          }\n          groupBy: {\n            args: Prisma.community_platform_subscriptionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_subscriptionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_subscriptionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_subscriptionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      community_platform_reports: {\n        payload: Prisma.$community_platform_reportsPayload<ExtArgs>\n        fields: Prisma.community_platform_reportsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.community_platform_reportsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.community_platform_reportsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          findFirst: {\n            args: Prisma.community_platform_reportsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.community_platform_reportsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          findMany: {\n            args: Prisma.community_platform_reportsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>[]\n          }\n          create: {\n            args: Prisma.community_platform_reportsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          createMany: {\n            args: Prisma.community_platform_reportsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.community_platform_reportsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>[]\n          }\n          delete: {\n            args: Prisma.community_platform_reportsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          update: {\n            args: Prisma.community_platform_reportsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          deleteMany: {\n            args: Prisma.community_platform_reportsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.community_platform_reportsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.community_platform_reportsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>[]\n          }\n          upsert: {\n            args: Prisma.community_platform_reportsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$community_platform_reportsPayload>\n          }\n          aggregate: {\n            args: Prisma.Community_platform_reportsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateCommunity_platform_reports>\n          }\n          groupBy: {\n            args: Prisma.community_platform_reportsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_reportsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.community_platform_reportsCountArgs<ExtArgs>\n            result: $Utils.Optional<Community_platform_reportsCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Shorthand for `emit: 'stdout'`\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events only\n     * log: [\n     *   { emit: 'event', level: 'query' },\n     *   { emit: 'event', level: 'info' },\n     *   { emit: 'event', level: 'warn' }\n     *   { emit: 'event', level: 'error' }\n     * ]\n     * \n     * / Emit as events and log to stdout\n     * og: [\n     *  { emit: 'stdout', level: 'query' },\n     *  { emit: 'stdout', level: 'info' },\n     *  { emit: 'stdout', level: 'warn' }\n     *  { emit: 'stdout', level: 'error' }\n     * \n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`\n     */\n    adapter?: runtime.SqlDriverAdapterFactory | null\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    community_platform_communities?: community_platform_communitiesOmit\n    community_platform_members?: community_platform_membersOmit\n    community_platform_moderators?: community_platform_moderatorsOmit\n    community_platform_posts?: community_platform_postsOmit\n    community_platform_comments?: community_platform_commentsOmit\n    community_platform_votes?: community_platform_votesOmit\n    community_platform_subscriptions?: community_platform_subscriptionsOmit\n    community_platform_reports?: community_platform_reportsOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;\n\n  export type GetLogType<T> = CheckIsLogLevel<\n    T extends LogDefinition ? T['level'] : T\n  >;\n\n  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>\n    ? GetLogType<T[number]>\n    : never;\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Community_platform_communitiesCountOutputType\n   */\n\n  export type Community_platform_communitiesCountOutputType = {\n    community_platform_moderators: number\n    community_platform_posts: number\n    community_platform_subscriptions: number\n  }\n\n  export type Community_platform_communitiesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_moderators?: boolean | Community_platform_communitiesCountOutputTypeCountCommunity_platform_moderatorsArgs\n    community_platform_posts?: boolean | Community_platform_communitiesCountOutputTypeCountCommunity_platform_postsArgs\n    community_platform_subscriptions?: boolean | Community_platform_communitiesCountOutputTypeCountCommunity_platform_subscriptionsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Community_platform_communitiesCountOutputType without action\n   */\n  export type Community_platform_communitiesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Community_platform_communitiesCountOutputType\n     */\n    select?: Community_platform_communitiesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Community_platform_communitiesCountOutputType without action\n   */\n  export type Community_platform_communitiesCountOutputTypeCountCommunity_platform_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_moderatorsWhereInput\n  }\n\n  /**\n   * Community_platform_communitiesCountOutputType without action\n   */\n  export type Community_platform_communitiesCountOutputTypeCountCommunity_platform_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_postsWhereInput\n  }\n\n  /**\n   * Community_platform_communitiesCountOutputType without action\n   */\n  export type Community_platform_communitiesCountOutputTypeCountCommunity_platform_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_subscriptionsWhereInput\n  }\n\n\n  /**\n   * Count Type Community_platform_membersCountOutputType\n   */\n\n  export type Community_platform_membersCountOutputType = {\n    community_platform_moderators: number\n    community_platform_posts: number\n    community_platform_comments: number\n    community_platform_votes: number\n    community_platform_subscriptions: number\n    community_platform_reports: number\n  }\n\n  export type Community_platform_membersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_moderators?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_moderatorsArgs\n    community_platform_posts?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_postsArgs\n    community_platform_comments?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_commentsArgs\n    community_platform_votes?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_votesArgs\n    community_platform_subscriptions?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_subscriptionsArgs\n    community_platform_reports?: boolean | Community_platform_membersCountOutputTypeCountCommunity_platform_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Community_platform_membersCountOutputType\n     */\n    select?: Community_platform_membersCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_moderatorsWhereInput\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_postsWhereInput\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_votesWhereInput\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_subscriptionsWhereInput\n  }\n\n  /**\n   * Community_platform_membersCountOutputType without action\n   */\n  export type Community_platform_membersCountOutputTypeCountCommunity_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Community_platform_moderatorsCountOutputType\n   */\n\n  export type Community_platform_moderatorsCountOutputType = {\n    community_platform_reports: number\n  }\n\n  export type Community_platform_moderatorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_reports?: boolean | Community_platform_moderatorsCountOutputTypeCountCommunity_platform_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Community_platform_moderatorsCountOutputType without action\n   */\n  export type Community_platform_moderatorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Community_platform_moderatorsCountOutputType\n     */\n    select?: Community_platform_moderatorsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Community_platform_moderatorsCountOutputType without action\n   */\n  export type Community_platform_moderatorsCountOutputTypeCountCommunity_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Community_platform_postsCountOutputType\n   */\n\n  export type Community_platform_postsCountOutputType = {\n    community_platform_comments: number\n    community_platform_votes: number\n    community_platform_reports: number\n  }\n\n  export type Community_platform_postsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_comments?: boolean | Community_platform_postsCountOutputTypeCountCommunity_platform_commentsArgs\n    community_platform_votes?: boolean | Community_platform_postsCountOutputTypeCountCommunity_platform_votesArgs\n    community_platform_reports?: boolean | Community_platform_postsCountOutputTypeCountCommunity_platform_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Community_platform_postsCountOutputType without action\n   */\n  export type Community_platform_postsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Community_platform_postsCountOutputType\n     */\n    select?: Community_platform_postsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Community_platform_postsCountOutputType without action\n   */\n  export type Community_platform_postsCountOutputTypeCountCommunity_platform_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * Community_platform_postsCountOutputType without action\n   */\n  export type Community_platform_postsCountOutputTypeCountCommunity_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_votesWhereInput\n  }\n\n  /**\n   * Community_platform_postsCountOutputType without action\n   */\n  export type Community_platform_postsCountOutputTypeCountCommunity_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_reportsWhereInput\n  }\n\n\n  /**\n   * Count Type Community_platform_commentsCountOutputType\n   */\n\n  export type Community_platform_commentsCountOutputType = {\n    recursive: number\n    community_platform_votes: number\n    community_platform_reports: number\n  }\n\n  export type Community_platform_commentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Community_platform_commentsCountOutputTypeCountRecursiveArgs\n    community_platform_votes?: boolean | Community_platform_commentsCountOutputTypeCountCommunity_platform_votesArgs\n    community_platform_reports?: boolean | Community_platform_commentsCountOutputTypeCountCommunity_platform_reportsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Community_platform_commentsCountOutputType without action\n   */\n  export type Community_platform_commentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Community_platform_commentsCountOutputType\n     */\n    select?: Community_platform_commentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Community_platform_commentsCountOutputType without action\n   */\n  export type Community_platform_commentsCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * Community_platform_commentsCountOutputType without action\n   */\n  export type Community_platform_commentsCountOutputTypeCountCommunity_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_votesWhereInput\n  }\n\n  /**\n   * Community_platform_commentsCountOutputType without action\n   */\n  export type Community_platform_commentsCountOutputTypeCountCommunity_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_reportsWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model community_platform_communities\n   */\n\n  export type AggregateCommunity_platform_communities = {\n    _count: Community_platform_communitiesCountAggregateOutputType | null\n    _min: Community_platform_communitiesMinAggregateOutputType | null\n    _max: Community_platform_communitiesMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_communitiesMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    status: string | null\n    business_status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_communitiesMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    status: string | null\n    business_status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_communitiesCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    status: number\n    business_status: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_communitiesMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    status?: true\n    business_status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_communitiesMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    status?: true\n    business_status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_communitiesCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    status?: true\n    business_status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_communitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_communities to aggregate.\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_communities to fetch.\n     */\n    orderBy?: community_platform_communitiesOrderByWithRelationInput | community_platform_communitiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_communitiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_communities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_communities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_communities\n    **/\n    _count?: true | Community_platform_communitiesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_communitiesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_communitiesMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_communitiesAggregateType<T extends Community_platform_communitiesAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_communities]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_communities[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_communities[P]>\n  }\n\n\n\n\n  export type community_platform_communitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_communitiesWhereInput\n    orderBy?: community_platform_communitiesOrderByWithAggregationInput | community_platform_communitiesOrderByWithAggregationInput[]\n    by: Community_platform_communitiesScalarFieldEnum[] | Community_platform_communitiesScalarFieldEnum\n    having?: community_platform_communitiesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_communitiesCountAggregateInputType | true\n    _min?: Community_platform_communitiesMinAggregateInputType\n    _max?: Community_platform_communitiesMaxAggregateInputType\n  }\n\n  export type Community_platform_communitiesGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Community_platform_communitiesCountAggregateOutputType | null\n    _min: Community_platform_communitiesMinAggregateOutputType | null\n    _max: Community_platform_communitiesMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_communitiesGroupByPayload<T extends community_platform_communitiesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_communitiesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_communitiesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_communitiesGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_communitiesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_communitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    status?: boolean\n    business_status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    community_platform_moderators?: boolean | community_platform_communities$community_platform_moderatorsArgs<ExtArgs>\n    community_platform_posts?: boolean | community_platform_communities$community_platform_postsArgs<ExtArgs>\n    community_platform_subscriptions?: boolean | community_platform_communities$community_platform_subscriptionsArgs<ExtArgs>\n    _count?: boolean | Community_platform_communitiesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_communities\"]>\n\n  export type community_platform_communitiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    status?: boolean\n    business_status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"community_platform_communities\"]>\n\n  export type community_platform_communitiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    status?: boolean\n    business_status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"community_platform_communities\"]>\n\n  export type community_platform_communitiesSelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    status?: boolean\n    business_status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type community_platform_communitiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"status\" | \"business_status\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"community_platform_communities\"]>\n  export type community_platform_communitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_moderators?: boolean | community_platform_communities$community_platform_moderatorsArgs<ExtArgs>\n    community_platform_posts?: boolean | community_platform_communities$community_platform_postsArgs<ExtArgs>\n    community_platform_subscriptions?: boolean | community_platform_communities$community_platform_subscriptionsArgs<ExtArgs>\n    _count?: boolean | Community_platform_communitiesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type community_platform_communitiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type community_platform_communitiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $community_platform_communitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_communities\"\n    objects: {\n      community_platform_moderators: Prisma.$community_platform_moderatorsPayload<ExtArgs>[]\n      community_platform_posts: Prisma.$community_platform_postsPayload<ExtArgs>[]\n      community_platform_subscriptions: Prisma.$community_platform_subscriptionsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique community identifier consisting of alphanumeric characters and\n       * underscores, maximum 21 characters.\n       */\n      code: string\n      /**\n       * Display name of the community shown to users, maximum 100 characters.\n       */\n      name: string\n      /**\n       * Detailed description of the community's purpose and rules, maximum 500\n       * characters.\n       */\n      description: string\n      /**\n       * Current status of the community (pending, active, suspended, archived).\n       * Default is pending until moderator approval.\n       */\n      status: string\n      /**\n       * Business workflow status for community management (e.g., pending_review,\n       * approved, featured).\n       */\n      business_status: string\n      /**\n       * Timestamp when the community was initially created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the community was last modified.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp for communities that have been removed but retained\n       * for audit purposes.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_communities\"]>\n    composites: {}\n  }\n\n  type community_platform_communitiesGetPayload<S extends boolean | null | undefined | community_platform_communitiesDefaultArgs> = $Result.GetResult<Prisma.$community_platform_communitiesPayload, S>\n\n  type community_platform_communitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_communitiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_communitiesCountAggregateInputType | true\n    }\n\n  export interface community_platform_communitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_communities'], meta: { name: 'community_platform_communities' } }\n    /**\n     * Find zero or one Community_platform_communities that matches the filter.\n     * @param {community_platform_communitiesFindUniqueArgs} args - Arguments to find a Community_platform_communities\n     * @example\n     * // Get one Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_communitiesFindUniqueArgs>(args: SelectSubset<T, community_platform_communitiesFindUniqueArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_communities that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_communitiesFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_communities\n     * @example\n     * // Get one Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_communitiesFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_communitiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_communities that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesFindFirstArgs} args - Arguments to find a Community_platform_communities\n     * @example\n     * // Get one Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_communitiesFindFirstArgs>(args?: SelectSubset<T, community_platform_communitiesFindFirstArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_communities that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesFindFirstOrThrowArgs} args - Arguments to find a Community_platform_communities\n     * @example\n     * // Get one Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_communitiesFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_communitiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_communities that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findMany()\n     * \n     * // Get first 10 Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_communitiesWithIdOnly = await prisma.community_platform_communities.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_communitiesFindManyArgs>(args?: SelectSubset<T, community_platform_communitiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_communities.\n     * @param {community_platform_communitiesCreateArgs} args - Arguments to create a Community_platform_communities.\n     * @example\n     * // Create one Community_platform_communities\n     * const Community_platform_communities = await prisma.community_platform_communities.create({\n     *   data: {\n     *     // ... data to create a Community_platform_communities\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_communitiesCreateArgs>(args: SelectSubset<T, community_platform_communitiesCreateArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_communities.\n     * @param {community_platform_communitiesCreateManyArgs} args - Arguments to create many Community_platform_communities.\n     * @example\n     * // Create many Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_communitiesCreateManyArgs>(args?: SelectSubset<T, community_platform_communitiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_communities and returns the data saved in the database.\n     * @param {community_platform_communitiesCreateManyAndReturnArgs} args - Arguments to create many Community_platform_communities.\n     * @example\n     * // Create many Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_communities and only return the `id`\n     * const community_platform_communitiesWithIdOnly = await prisma.community_platform_communities.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_communitiesCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_communitiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_communities.\n     * @param {community_platform_communitiesDeleteArgs} args - Arguments to delete one Community_platform_communities.\n     * @example\n     * // Delete one Community_platform_communities\n     * const Community_platform_communities = await prisma.community_platform_communities.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_communities\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_communitiesDeleteArgs>(args: SelectSubset<T, community_platform_communitiesDeleteArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_communities.\n     * @param {community_platform_communitiesUpdateArgs} args - Arguments to update one Community_platform_communities.\n     * @example\n     * // Update one Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_communitiesUpdateArgs>(args: SelectSubset<T, community_platform_communitiesUpdateArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_communities.\n     * @param {community_platform_communitiesDeleteManyArgs} args - Arguments to filter Community_platform_communities to delete.\n     * @example\n     * // Delete a few Community_platform_communities\n     * const { count } = await prisma.community_platform_communities.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_communitiesDeleteManyArgs>(args?: SelectSubset<T, community_platform_communitiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_communities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_communitiesUpdateManyArgs>(args: SelectSubset<T, community_platform_communitiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_communities and returns the data updated in the database.\n     * @param {community_platform_communitiesUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_communities.\n     * @example\n     * // Update many Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_communities and only return the `id`\n     * const community_platform_communitiesWithIdOnly = await prisma.community_platform_communities.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_communitiesUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_communitiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_communities.\n     * @param {community_platform_communitiesUpsertArgs} args - Arguments to update or create a Community_platform_communities.\n     * @example\n     * // Update or create a Community_platform_communities\n     * const community_platform_communities = await prisma.community_platform_communities.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_communities\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_communities we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_communitiesUpsertArgs>(args: SelectSubset<T, community_platform_communitiesUpsertArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_communities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesCountArgs} args - Arguments to filter Community_platform_communities to count.\n     * @example\n     * // Count the number of Community_platform_communities\n     * const count = await prisma.community_platform_communities.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_communities we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_communitiesCountArgs>(\n      args?: Subset<T, community_platform_communitiesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_communitiesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_communities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_communitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_communitiesAggregateArgs>(args: Subset<T, Community_platform_communitiesAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_communitiesAggregateType<T>>\n\n    /**\n     * Group by Community_platform_communities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_communitiesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_communitiesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_communitiesGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_communitiesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_communitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_communitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_communities model\n   */\n  readonly fields: community_platform_communitiesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_communities.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_communitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    community_platform_moderators<T extends community_platform_communities$community_platform_moderatorsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communities$community_platform_moderatorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_posts<T extends community_platform_communities$community_platform_postsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communities$community_platform_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_subscriptions<T extends community_platform_communities$community_platform_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communities$community_platform_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_communities model\n   */\n  interface community_platform_communitiesFieldRefs {\n    readonly id: FieldRef<\"community_platform_communities\", 'String'>\n    readonly code: FieldRef<\"community_platform_communities\", 'String'>\n    readonly name: FieldRef<\"community_platform_communities\", 'String'>\n    readonly description: FieldRef<\"community_platform_communities\", 'String'>\n    readonly status: FieldRef<\"community_platform_communities\", 'String'>\n    readonly business_status: FieldRef<\"community_platform_communities\", 'String'>\n    readonly created_at: FieldRef<\"community_platform_communities\", 'DateTime'>\n    readonly updated_at: FieldRef<\"community_platform_communities\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"community_platform_communities\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_communities findUnique\n   */\n  export type community_platform_communitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_communities to fetch.\n     */\n    where: community_platform_communitiesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_communities findUniqueOrThrow\n   */\n  export type community_platform_communitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_communities to fetch.\n     */\n    where: community_platform_communitiesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_communities findFirst\n   */\n  export type community_platform_communitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_communities to fetch.\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_communities to fetch.\n     */\n    orderBy?: community_platform_communitiesOrderByWithRelationInput | community_platform_communitiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_communities.\n     */\n    cursor?: community_platform_communitiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_communities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_communities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_communities.\n     */\n    distinct?: Community_platform_communitiesScalarFieldEnum | Community_platform_communitiesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities findFirstOrThrow\n   */\n  export type community_platform_communitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_communities to fetch.\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_communities to fetch.\n     */\n    orderBy?: community_platform_communitiesOrderByWithRelationInput | community_platform_communitiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_communities.\n     */\n    cursor?: community_platform_communitiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_communities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_communities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_communities.\n     */\n    distinct?: Community_platform_communitiesScalarFieldEnum | Community_platform_communitiesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities findMany\n   */\n  export type community_platform_communitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_communities to fetch.\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_communities to fetch.\n     */\n    orderBy?: community_platform_communitiesOrderByWithRelationInput | community_platform_communitiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_communities.\n     */\n    cursor?: community_platform_communitiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_communities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_communities.\n     */\n    skip?: number\n    distinct?: Community_platform_communitiesScalarFieldEnum | Community_platform_communitiesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities create\n   */\n  export type community_platform_communitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_communities.\n     */\n    data: XOR<community_platform_communitiesCreateInput, community_platform_communitiesUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_communities createMany\n   */\n  export type community_platform_communitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_communities.\n     */\n    data: community_platform_communitiesCreateManyInput | community_platform_communitiesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_communities createManyAndReturn\n   */\n  export type community_platform_communitiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_communities.\n     */\n    data: community_platform_communitiesCreateManyInput | community_platform_communitiesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_communities update\n   */\n  export type community_platform_communitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_communities.\n     */\n    data: XOR<community_platform_communitiesUpdateInput, community_platform_communitiesUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_communities to update.\n     */\n    where: community_platform_communitiesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_communities updateMany\n   */\n  export type community_platform_communitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_communities.\n     */\n    data: XOR<community_platform_communitiesUpdateManyMutationInput, community_platform_communitiesUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_communities to update\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * Limit how many community_platform_communities to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_communities updateManyAndReturn\n   */\n  export type community_platform_communitiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_communities.\n     */\n    data: XOR<community_platform_communitiesUpdateManyMutationInput, community_platform_communitiesUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_communities to update\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * Limit how many community_platform_communities to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_communities upsert\n   */\n  export type community_platform_communitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_communities to update in case it exists.\n     */\n    where: community_platform_communitiesWhereUniqueInput\n    /**\n     * In case the community_platform_communities found by the `where` argument doesn't exist, create a new community_platform_communities with this data.\n     */\n    create: XOR<community_platform_communitiesCreateInput, community_platform_communitiesUncheckedCreateInput>\n    /**\n     * In case the community_platform_communities was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_communitiesUpdateInput, community_platform_communitiesUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_communities delete\n   */\n  export type community_platform_communitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_communities to delete.\n     */\n    where: community_platform_communitiesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_communities deleteMany\n   */\n  export type community_platform_communitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_communities to delete\n     */\n    where?: community_platform_communitiesWhereInput\n    /**\n     * Limit how many community_platform_communities to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_communities.community_platform_moderators\n   */\n  export type community_platform_communities$community_platform_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    where?: community_platform_moderatorsWhereInput\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_moderatorsScalarFieldEnum | Community_platform_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities.community_platform_posts\n   */\n  export type community_platform_communities$community_platform_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    where?: community_platform_postsWhereInput\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    cursor?: community_platform_postsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_postsScalarFieldEnum | Community_platform_postsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities.community_platform_subscriptions\n   */\n  export type community_platform_communities$community_platform_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    where?: community_platform_subscriptionsWhereInput\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_subscriptionsScalarFieldEnum | Community_platform_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_communities without action\n   */\n  export type community_platform_communitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_communities\n     */\n    select?: community_platform_communitiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_communities\n     */\n    omit?: community_platform_communitiesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_communitiesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_members\n   */\n\n  export type AggregateCommunity_platform_members = {\n    _count: Community_platform_membersCountAggregateOutputType | null\n    _min: Community_platform_membersMinAggregateOutputType | null\n    _max: Community_platform_membersMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_membersMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    nickname: string | null\n    bio: string | null\n    avatar_uri: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_membersMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    nickname: string | null\n    bio: string | null\n    avatar_uri: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_membersCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    nickname: number\n    bio: number\n    avatar_uri: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_membersMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    nickname?: true\n    bio?: true\n    avatar_uri?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_membersMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    nickname?: true\n    bio?: true\n    avatar_uri?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_membersCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    nickname?: true\n    bio?: true\n    avatar_uri?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_members to aggregate.\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_members to fetch.\n     */\n    orderBy?: community_platform_membersOrderByWithRelationInput | community_platform_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_members\n    **/\n    _count?: true | Community_platform_membersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_membersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_membersMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_membersAggregateType<T extends Community_platform_membersAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_members]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_members[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_members[P]>\n  }\n\n\n\n\n  export type community_platform_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_membersWhereInput\n    orderBy?: community_platform_membersOrderByWithAggregationInput | community_platform_membersOrderByWithAggregationInput[]\n    by: Community_platform_membersScalarFieldEnum[] | Community_platform_membersScalarFieldEnum\n    having?: community_platform_membersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_membersCountAggregateInputType | true\n    _min?: Community_platform_membersMinAggregateInputType\n    _max?: Community_platform_membersMaxAggregateInputType\n  }\n\n  export type Community_platform_membersGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio: string | null\n    avatar_uri: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Community_platform_membersCountAggregateOutputType | null\n    _min: Community_platform_membersMinAggregateOutputType | null\n    _max: Community_platform_membersMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_membersGroupByPayload<T extends community_platform_membersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_membersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_membersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_membersGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_membersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    nickname?: boolean\n    bio?: boolean\n    avatar_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    community_platform_moderators?: boolean | community_platform_members$community_platform_moderatorsArgs<ExtArgs>\n    community_platform_posts?: boolean | community_platform_members$community_platform_postsArgs<ExtArgs>\n    community_platform_comments?: boolean | community_platform_members$community_platform_commentsArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_members$community_platform_votesArgs<ExtArgs>\n    community_platform_subscriptions?: boolean | community_platform_members$community_platform_subscriptionsArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_members$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_membersCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_members\"]>\n\n  export type community_platform_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    nickname?: boolean\n    bio?: boolean\n    avatar_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"community_platform_members\"]>\n\n  export type community_platform_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    nickname?: boolean\n    bio?: boolean\n    avatar_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"community_platform_members\"]>\n\n  export type community_platform_membersSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    nickname?: boolean\n    bio?: boolean\n    avatar_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type community_platform_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"nickname\" | \"bio\" | \"avatar_uri\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"community_platform_members\"]>\n  export type community_platform_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community_platform_moderators?: boolean | community_platform_members$community_platform_moderatorsArgs<ExtArgs>\n    community_platform_posts?: boolean | community_platform_members$community_platform_postsArgs<ExtArgs>\n    community_platform_comments?: boolean | community_platform_members$community_platform_commentsArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_members$community_platform_votesArgs<ExtArgs>\n    community_platform_subscriptions?: boolean | community_platform_members$community_platform_subscriptionsArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_members$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_membersCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type community_platform_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type community_platform_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $community_platform_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_members\"\n    objects: {\n      community_platform_moderators: Prisma.$community_platform_moderatorsPayload<ExtArgs>[]\n      community_platform_posts: Prisma.$community_platform_postsPayload<ExtArgs>[]\n      community_platform_comments: Prisma.$community_platform_commentsPayload<ExtArgs>[]\n      community_platform_votes: Prisma.$community_platform_votesPayload<ExtArgs>[]\n      community_platform_subscriptions: Prisma.$community_platform_subscriptionsPayload<ExtArgs>[]\n      community_platform_reports: Prisma.$community_platform_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Email address for account registration and notifications.\n       */\n      email: string\n      /**\n       * Hashed password for secure authentication.\n       */\n      password_hash: string\n      /**\n       * Unique username displayed throughout the platform.\n       */\n      nickname: string\n      /**\n       * Optional user biography or description.\n       */\n      bio: string | null\n      /**\n       * Optional avatar image URL for user profiles.\n       */\n      avatar_uri: string | null\n      /**\n       * Timestamp when the member account was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last profile modification.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp for deactivated accounts.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_members\"]>\n    composites: {}\n  }\n\n  type community_platform_membersGetPayload<S extends boolean | null | undefined | community_platform_membersDefaultArgs> = $Result.GetResult<Prisma.$community_platform_membersPayload, S>\n\n  type community_platform_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_membersCountAggregateInputType | true\n    }\n\n  export interface community_platform_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_members'], meta: { name: 'community_platform_members' } }\n    /**\n     * Find zero or one Community_platform_members that matches the filter.\n     * @param {community_platform_membersFindUniqueArgs} args - Arguments to find a Community_platform_members\n     * @example\n     * // Get one Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_membersFindUniqueArgs>(args: SelectSubset<T, community_platform_membersFindUniqueArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_members that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_membersFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_members\n     * @example\n     * // Get one Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersFindFirstArgs} args - Arguments to find a Community_platform_members\n     * @example\n     * // Get one Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_membersFindFirstArgs>(args?: SelectSubset<T, community_platform_membersFindFirstArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_members that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersFindFirstOrThrowArgs} args - Arguments to find a Community_platform_members\n     * @example\n     * // Get one Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findMany()\n     * \n     * // Get first 10 Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_membersWithIdOnly = await prisma.community_platform_members.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_membersFindManyArgs>(args?: SelectSubset<T, community_platform_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_members.\n     * @param {community_platform_membersCreateArgs} args - Arguments to create a Community_platform_members.\n     * @example\n     * // Create one Community_platform_members\n     * const Community_platform_members = await prisma.community_platform_members.create({\n     *   data: {\n     *     // ... data to create a Community_platform_members\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_membersCreateArgs>(args: SelectSubset<T, community_platform_membersCreateArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_members.\n     * @param {community_platform_membersCreateManyArgs} args - Arguments to create many Community_platform_members.\n     * @example\n     * // Create many Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_membersCreateManyArgs>(args?: SelectSubset<T, community_platform_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_members and returns the data saved in the database.\n     * @param {community_platform_membersCreateManyAndReturnArgs} args - Arguments to create many Community_platform_members.\n     * @example\n     * // Create many Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_members and only return the `id`\n     * const community_platform_membersWithIdOnly = await prisma.community_platform_members.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_members.\n     * @param {community_platform_membersDeleteArgs} args - Arguments to delete one Community_platform_members.\n     * @example\n     * // Delete one Community_platform_members\n     * const Community_platform_members = await prisma.community_platform_members.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_members\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_membersDeleteArgs>(args: SelectSubset<T, community_platform_membersDeleteArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_members.\n     * @param {community_platform_membersUpdateArgs} args - Arguments to update one Community_platform_members.\n     * @example\n     * // Update one Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_membersUpdateArgs>(args: SelectSubset<T, community_platform_membersUpdateArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_members.\n     * @param {community_platform_membersDeleteManyArgs} args - Arguments to filter Community_platform_members to delete.\n     * @example\n     * // Delete a few Community_platform_members\n     * const { count } = await prisma.community_platform_members.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_membersDeleteManyArgs>(args?: SelectSubset<T, community_platform_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_membersUpdateManyArgs>(args: SelectSubset<T, community_platform_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_members and returns the data updated in the database.\n     * @param {community_platform_membersUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_members.\n     * @example\n     * // Update many Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_members and only return the `id`\n     * const community_platform_membersWithIdOnly = await prisma.community_platform_members.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_members.\n     * @param {community_platform_membersUpsertArgs} args - Arguments to update or create a Community_platform_members.\n     * @example\n     * // Update or create a Community_platform_members\n     * const community_platform_members = await prisma.community_platform_members.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_members\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_members we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_membersUpsertArgs>(args: SelectSubset<T, community_platform_membersUpsertArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersCountArgs} args - Arguments to filter Community_platform_members to count.\n     * @example\n     * // Count the number of Community_platform_members\n     * const count = await prisma.community_platform_members.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_members we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_membersCountArgs>(\n      args?: Subset<T, community_platform_membersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_membersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_membersAggregateArgs>(args: Subset<T, Community_platform_membersAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_membersAggregateType<T>>\n\n    /**\n     * Group by Community_platform_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_membersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_membersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_membersGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_membersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_members model\n   */\n  readonly fields: community_platform_membersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_members.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    community_platform_moderators<T extends community_platform_members$community_platform_moderatorsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_moderatorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_posts<T extends community_platform_members$community_platform_postsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_comments<T extends community_platform_members$community_platform_commentsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_votes<T extends community_platform_members$community_platform_votesArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_subscriptions<T extends community_platform_members$community_platform_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_reports<T extends community_platform_members$community_platform_reportsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_members$community_platform_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_members model\n   */\n  interface community_platform_membersFieldRefs {\n    readonly id: FieldRef<\"community_platform_members\", 'String'>\n    readonly email: FieldRef<\"community_platform_members\", 'String'>\n    readonly password_hash: FieldRef<\"community_platform_members\", 'String'>\n    readonly nickname: FieldRef<\"community_platform_members\", 'String'>\n    readonly bio: FieldRef<\"community_platform_members\", 'String'>\n    readonly avatar_uri: FieldRef<\"community_platform_members\", 'String'>\n    readonly created_at: FieldRef<\"community_platform_members\", 'DateTime'>\n    readonly updated_at: FieldRef<\"community_platform_members\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"community_platform_members\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_members findUnique\n   */\n  export type community_platform_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_members to fetch.\n     */\n    where: community_platform_membersWhereUniqueInput\n  }\n\n  /**\n   * community_platform_members findUniqueOrThrow\n   */\n  export type community_platform_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_members to fetch.\n     */\n    where: community_platform_membersWhereUniqueInput\n  }\n\n  /**\n   * community_platform_members findFirst\n   */\n  export type community_platform_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_members to fetch.\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_members to fetch.\n     */\n    orderBy?: community_platform_membersOrderByWithRelationInput | community_platform_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_members.\n     */\n    cursor?: community_platform_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_members.\n     */\n    distinct?: Community_platform_membersScalarFieldEnum | Community_platform_membersScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members findFirstOrThrow\n   */\n  export type community_platform_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_members to fetch.\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_members to fetch.\n     */\n    orderBy?: community_platform_membersOrderByWithRelationInput | community_platform_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_members.\n     */\n    cursor?: community_platform_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_members.\n     */\n    distinct?: Community_platform_membersScalarFieldEnum | Community_platform_membersScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members findMany\n   */\n  export type community_platform_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_members to fetch.\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_members to fetch.\n     */\n    orderBy?: community_platform_membersOrderByWithRelationInput | community_platform_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_members.\n     */\n    cursor?: community_platform_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_members.\n     */\n    skip?: number\n    distinct?: Community_platform_membersScalarFieldEnum | Community_platform_membersScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members create\n   */\n  export type community_platform_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_members.\n     */\n    data: XOR<community_platform_membersCreateInput, community_platform_membersUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_members createMany\n   */\n  export type community_platform_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_members.\n     */\n    data: community_platform_membersCreateManyInput | community_platform_membersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_members createManyAndReturn\n   */\n  export type community_platform_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_members.\n     */\n    data: community_platform_membersCreateManyInput | community_platform_membersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_members update\n   */\n  export type community_platform_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_members.\n     */\n    data: XOR<community_platform_membersUpdateInput, community_platform_membersUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_members to update.\n     */\n    where: community_platform_membersWhereUniqueInput\n  }\n\n  /**\n   * community_platform_members updateMany\n   */\n  export type community_platform_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_members.\n     */\n    data: XOR<community_platform_membersUpdateManyMutationInput, community_platform_membersUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_members to update\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * Limit how many community_platform_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_members updateManyAndReturn\n   */\n  export type community_platform_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_members.\n     */\n    data: XOR<community_platform_membersUpdateManyMutationInput, community_platform_membersUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_members to update\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * Limit how many community_platform_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_members upsert\n   */\n  export type community_platform_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_members to update in case it exists.\n     */\n    where: community_platform_membersWhereUniqueInput\n    /**\n     * In case the community_platform_members found by the `where` argument doesn't exist, create a new community_platform_members with this data.\n     */\n    create: XOR<community_platform_membersCreateInput, community_platform_membersUncheckedCreateInput>\n    /**\n     * In case the community_platform_members was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_membersUpdateInput, community_platform_membersUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_members delete\n   */\n  export type community_platform_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_members to delete.\n     */\n    where: community_platform_membersWhereUniqueInput\n  }\n\n  /**\n   * community_platform_members deleteMany\n   */\n  export type community_platform_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_members to delete\n     */\n    where?: community_platform_membersWhereInput\n    /**\n     * Limit how many community_platform_members to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_members.community_platform_moderators\n   */\n  export type community_platform_members$community_platform_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    where?: community_platform_moderatorsWhereInput\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_moderatorsScalarFieldEnum | Community_platform_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members.community_platform_posts\n   */\n  export type community_platform_members$community_platform_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    where?: community_platform_postsWhereInput\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    cursor?: community_platform_postsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_postsScalarFieldEnum | Community_platform_postsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members.community_platform_comments\n   */\n  export type community_platform_members$community_platform_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    cursor?: community_platform_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members.community_platform_votes\n   */\n  export type community_platform_members$community_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    where?: community_platform_votesWhereInput\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    cursor?: community_platform_votesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members.community_platform_subscriptions\n   */\n  export type community_platform_members$community_platform_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    where?: community_platform_subscriptionsWhereInput\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_subscriptionsScalarFieldEnum | Community_platform_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members.community_platform_reports\n   */\n  export type community_platform_members$community_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    where?: community_platform_reportsWhereInput\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    cursor?: community_platform_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_members without action\n   */\n  export type community_platform_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_members\n     */\n    select?: community_platform_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_members\n     */\n    omit?: community_platform_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_membersInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_moderators\n   */\n\n  export type AggregateCommunity_platform_moderators = {\n    _count: Community_platform_moderatorsCountAggregateOutputType | null\n    _min: Community_platform_moderatorsMinAggregateOutputType | null\n    _max: Community_platform_moderatorsMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_moderatorsMinAggregateOutputType = {\n    id: string | null\n    community_platform_member_id: string | null\n    community_platform_community_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Community_platform_moderatorsMaxAggregateOutputType = {\n    id: string | null\n    community_platform_member_id: string | null\n    community_platform_community_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Community_platform_moderatorsCountAggregateOutputType = {\n    id: number\n    community_platform_member_id: number\n    community_platform_community_id: number\n    assigned_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_moderatorsMinAggregateInputType = {\n    id?: true\n    community_platform_member_id?: true\n    community_platform_community_id?: true\n    assigned_at?: true\n  }\n\n  export type Community_platform_moderatorsMaxAggregateInputType = {\n    id?: true\n    community_platform_member_id?: true\n    community_platform_community_id?: true\n    assigned_at?: true\n  }\n\n  export type Community_platform_moderatorsCountAggregateInputType = {\n    id?: true\n    community_platform_member_id?: true\n    community_platform_community_id?: true\n    assigned_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_moderatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_moderators to aggregate.\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_moderators to fetch.\n     */\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_moderators\n    **/\n    _count?: true | Community_platform_moderatorsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_moderatorsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_moderatorsMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_moderatorsAggregateType<T extends Community_platform_moderatorsAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_moderators]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_moderators[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_moderators[P]>\n  }\n\n\n\n\n  export type community_platform_moderatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_moderatorsWhereInput\n    orderBy?: community_platform_moderatorsOrderByWithAggregationInput | community_platform_moderatorsOrderByWithAggregationInput[]\n    by: Community_platform_moderatorsScalarFieldEnum[] | Community_platform_moderatorsScalarFieldEnum\n    having?: community_platform_moderatorsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_moderatorsCountAggregateInputType | true\n    _min?: Community_platform_moderatorsMinAggregateInputType\n    _max?: Community_platform_moderatorsMaxAggregateInputType\n  }\n\n  export type Community_platform_moderatorsGroupByOutputType = {\n    id: string\n    community_platform_member_id: string\n    community_platform_community_id: string\n    assigned_at: Date\n    _count: Community_platform_moderatorsCountAggregateOutputType | null\n    _min: Community_platform_moderatorsMinAggregateOutputType | null\n    _max: Community_platform_moderatorsMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_moderatorsGroupByPayload<T extends community_platform_moderatorsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_moderatorsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_moderatorsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_moderatorsGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_moderatorsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_moderatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_member_id?: boolean\n    community_platform_community_id?: boolean\n    assigned_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_moderators$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_moderators\"]>\n\n  export type community_platform_moderatorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_member_id?: boolean\n    community_platform_community_id?: boolean\n    assigned_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_moderators\"]>\n\n  export type community_platform_moderatorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_member_id?: boolean\n    community_platform_community_id?: boolean\n    assigned_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_moderators\"]>\n\n  export type community_platform_moderatorsSelectScalar = {\n    id?: boolean\n    community_platform_member_id?: boolean\n    community_platform_community_id?: boolean\n    assigned_at?: boolean\n  }\n\n  export type community_platform_moderatorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"community_platform_member_id\" | \"community_platform_community_id\" | \"assigned_at\", ExtArgs[\"result\"][\"community_platform_moderators\"]>\n  export type community_platform_moderatorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_moderators$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type community_platform_moderatorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }\n  export type community_platform_moderatorsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }\n\n  export type $community_platform_moderatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_moderators\"\n    objects: {\n      member: Prisma.$community_platform_membersPayload<ExtArgs>\n      community: Prisma.$community_platform_communitiesPayload<ExtArgs>\n      community_platform_reports: Prisma.$community_platform_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Member assigned as moderator for this community.\n       */\n      community_platform_member_id: string\n      /**\n       * Community this member moderates.\n       */\n      community_platform_community_id: string\n      /**\n       * Timestamp when the moderator role was assigned.\n       */\n      assigned_at: Date\n    }, ExtArgs[\"result\"][\"community_platform_moderators\"]>\n    composites: {}\n  }\n\n  type community_platform_moderatorsGetPayload<S extends boolean | null | undefined | community_platform_moderatorsDefaultArgs> = $Result.GetResult<Prisma.$community_platform_moderatorsPayload, S>\n\n  type community_platform_moderatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_moderatorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_moderatorsCountAggregateInputType | true\n    }\n\n  export interface community_platform_moderatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_moderators'], meta: { name: 'community_platform_moderators' } }\n    /**\n     * Find zero or one Community_platform_moderators that matches the filter.\n     * @param {community_platform_moderatorsFindUniqueArgs} args - Arguments to find a Community_platform_moderators\n     * @example\n     * // Get one Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_moderatorsFindUniqueArgs>(args: SelectSubset<T, community_platform_moderatorsFindUniqueArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_moderators that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_moderatorsFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_moderators\n     * @example\n     * // Get one Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_moderatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_moderatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsFindFirstArgs} args - Arguments to find a Community_platform_moderators\n     * @example\n     * // Get one Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_moderatorsFindFirstArgs>(args?: SelectSubset<T, community_platform_moderatorsFindFirstArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_moderators that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsFindFirstOrThrowArgs} args - Arguments to find a Community_platform_moderators\n     * @example\n     * // Get one Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_moderatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_moderatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findMany()\n     * \n     * // Get first 10 Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_moderatorsWithIdOnly = await prisma.community_platform_moderators.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_moderatorsFindManyArgs>(args?: SelectSubset<T, community_platform_moderatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_moderators.\n     * @param {community_platform_moderatorsCreateArgs} args - Arguments to create a Community_platform_moderators.\n     * @example\n     * // Create one Community_platform_moderators\n     * const Community_platform_moderators = await prisma.community_platform_moderators.create({\n     *   data: {\n     *     // ... data to create a Community_platform_moderators\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_moderatorsCreateArgs>(args: SelectSubset<T, community_platform_moderatorsCreateArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_moderators.\n     * @param {community_platform_moderatorsCreateManyArgs} args - Arguments to create many Community_platform_moderators.\n     * @example\n     * // Create many Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_moderatorsCreateManyArgs>(args?: SelectSubset<T, community_platform_moderatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_moderators and returns the data saved in the database.\n     * @param {community_platform_moderatorsCreateManyAndReturnArgs} args - Arguments to create many Community_platform_moderators.\n     * @example\n     * // Create many Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_moderators and only return the `id`\n     * const community_platform_moderatorsWithIdOnly = await prisma.community_platform_moderators.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_moderatorsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_moderatorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_moderators.\n     * @param {community_platform_moderatorsDeleteArgs} args - Arguments to delete one Community_platform_moderators.\n     * @example\n     * // Delete one Community_platform_moderators\n     * const Community_platform_moderators = await prisma.community_platform_moderators.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_moderators\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_moderatorsDeleteArgs>(args: SelectSubset<T, community_platform_moderatorsDeleteArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_moderators.\n     * @param {community_platform_moderatorsUpdateArgs} args - Arguments to update one Community_platform_moderators.\n     * @example\n     * // Update one Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_moderatorsUpdateArgs>(args: SelectSubset<T, community_platform_moderatorsUpdateArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_moderators.\n     * @param {community_platform_moderatorsDeleteManyArgs} args - Arguments to filter Community_platform_moderators to delete.\n     * @example\n     * // Delete a few Community_platform_moderators\n     * const { count } = await prisma.community_platform_moderators.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_moderatorsDeleteManyArgs>(args?: SelectSubset<T, community_platform_moderatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_moderatorsUpdateManyArgs>(args: SelectSubset<T, community_platform_moderatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_moderators and returns the data updated in the database.\n     * @param {community_platform_moderatorsUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_moderators.\n     * @example\n     * // Update many Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_moderators and only return the `id`\n     * const community_platform_moderatorsWithIdOnly = await prisma.community_platform_moderators.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_moderatorsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_moderatorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_moderators.\n     * @param {community_platform_moderatorsUpsertArgs} args - Arguments to update or create a Community_platform_moderators.\n     * @example\n     * // Update or create a Community_platform_moderators\n     * const community_platform_moderators = await prisma.community_platform_moderators.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_moderators\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_moderators we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_moderatorsUpsertArgs>(args: SelectSubset<T, community_platform_moderatorsUpsertArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsCountArgs} args - Arguments to filter Community_platform_moderators to count.\n     * @example\n     * // Count the number of Community_platform_moderators\n     * const count = await prisma.community_platform_moderators.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_moderators we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_moderatorsCountArgs>(\n      args?: Subset<T, community_platform_moderatorsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_moderatorsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_moderatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_moderatorsAggregateArgs>(args: Subset<T, Community_platform_moderatorsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_moderatorsAggregateType<T>>\n\n    /**\n     * Group by Community_platform_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_moderatorsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_moderatorsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_moderatorsGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_moderatorsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_moderatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_moderatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_moderators model\n   */\n  readonly fields: community_platform_moderatorsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_moderators.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_moderatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    community<T extends community_platform_communitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communitiesDefaultArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    community_platform_reports<T extends community_platform_moderators$community_platform_reportsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_moderators$community_platform_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_moderators model\n   */\n  interface community_platform_moderatorsFieldRefs {\n    readonly id: FieldRef<\"community_platform_moderators\", 'String'>\n    readonly community_platform_member_id: FieldRef<\"community_platform_moderators\", 'String'>\n    readonly community_platform_community_id: FieldRef<\"community_platform_moderators\", 'String'>\n    readonly assigned_at: FieldRef<\"community_platform_moderators\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_moderators findUnique\n   */\n  export type community_platform_moderatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_moderators to fetch.\n     */\n    where: community_platform_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_moderators findUniqueOrThrow\n   */\n  export type community_platform_moderatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_moderators to fetch.\n     */\n    where: community_platform_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_moderators findFirst\n   */\n  export type community_platform_moderatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_moderators to fetch.\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_moderators to fetch.\n     */\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_moderators.\n     */\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_moderators.\n     */\n    distinct?: Community_platform_moderatorsScalarFieldEnum | Community_platform_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_moderators findFirstOrThrow\n   */\n  export type community_platform_moderatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_moderators to fetch.\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_moderators to fetch.\n     */\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_moderators.\n     */\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_moderators.\n     */\n    distinct?: Community_platform_moderatorsScalarFieldEnum | Community_platform_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_moderators findMany\n   */\n  export type community_platform_moderatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_moderators to fetch.\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_moderators to fetch.\n     */\n    orderBy?: community_platform_moderatorsOrderByWithRelationInput | community_platform_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_moderators.\n     */\n    cursor?: community_platform_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_moderators.\n     */\n    skip?: number\n    distinct?: Community_platform_moderatorsScalarFieldEnum | Community_platform_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_moderators create\n   */\n  export type community_platform_moderatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_moderators.\n     */\n    data: XOR<community_platform_moderatorsCreateInput, community_platform_moderatorsUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_moderators createMany\n   */\n  export type community_platform_moderatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_moderators.\n     */\n    data: community_platform_moderatorsCreateManyInput | community_platform_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_moderators createManyAndReturn\n   */\n  export type community_platform_moderatorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_moderators.\n     */\n    data: community_platform_moderatorsCreateManyInput | community_platform_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_moderators update\n   */\n  export type community_platform_moderatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_moderators.\n     */\n    data: XOR<community_platform_moderatorsUpdateInput, community_platform_moderatorsUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_moderators to update.\n     */\n    where: community_platform_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_moderators updateMany\n   */\n  export type community_platform_moderatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_moderators.\n     */\n    data: XOR<community_platform_moderatorsUpdateManyMutationInput, community_platform_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_moderators to update\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * Limit how many community_platform_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_moderators updateManyAndReturn\n   */\n  export type community_platform_moderatorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_moderators.\n     */\n    data: XOR<community_platform_moderatorsUpdateManyMutationInput, community_platform_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_moderators to update\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * Limit how many community_platform_moderators to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_moderators upsert\n   */\n  export type community_platform_moderatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_moderators to update in case it exists.\n     */\n    where: community_platform_moderatorsWhereUniqueInput\n    /**\n     * In case the community_platform_moderators found by the `where` argument doesn't exist, create a new community_platform_moderators with this data.\n     */\n    create: XOR<community_platform_moderatorsCreateInput, community_platform_moderatorsUncheckedCreateInput>\n    /**\n     * In case the community_platform_moderators was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_moderatorsUpdateInput, community_platform_moderatorsUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_moderators delete\n   */\n  export type community_platform_moderatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_moderators to delete.\n     */\n    where: community_platform_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_moderators deleteMany\n   */\n  export type community_platform_moderatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_moderators to delete\n     */\n    where?: community_platform_moderatorsWhereInput\n    /**\n     * Limit how many community_platform_moderators to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_moderators.community_platform_reports\n   */\n  export type community_platform_moderators$community_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    where?: community_platform_reportsWhereInput\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    cursor?: community_platform_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_moderators without action\n   */\n  export type community_platform_moderatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_posts\n   */\n\n  export type AggregateCommunity_platform_posts = {\n    _count: Community_platform_postsCountAggregateOutputType | null\n    _min: Community_platform_postsMinAggregateOutputType | null\n    _max: Community_platform_postsMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_postsMinAggregateOutputType = {\n    id: string | null\n    community_platform_community_id: string | null\n    community_platform_member_id: string | null\n    title: string | null\n    content_type: string | null\n    text_content: string | null\n    url: string | null\n    image_url: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_postsMaxAggregateOutputType = {\n    id: string | null\n    community_platform_community_id: string | null\n    community_platform_member_id: string | null\n    title: string | null\n    content_type: string | null\n    text_content: string | null\n    url: string | null\n    image_url: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_postsCountAggregateOutputType = {\n    id: number\n    community_platform_community_id: number\n    community_platform_member_id: number\n    title: number\n    content_type: number\n    text_content: number\n    url: number\n    image_url: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_postsMinAggregateInputType = {\n    id?: true\n    community_platform_community_id?: true\n    community_platform_member_id?: true\n    title?: true\n    content_type?: true\n    text_content?: true\n    url?: true\n    image_url?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_postsMaxAggregateInputType = {\n    id?: true\n    community_platform_community_id?: true\n    community_platform_member_id?: true\n    title?: true\n    content_type?: true\n    text_content?: true\n    url?: true\n    image_url?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_postsCountAggregateInputType = {\n    id?: true\n    community_platform_community_id?: true\n    community_platform_member_id?: true\n    title?: true\n    content_type?: true\n    text_content?: true\n    url?: true\n    image_url?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_posts to aggregate.\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_posts to fetch.\n     */\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_posts\n    **/\n    _count?: true | Community_platform_postsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_postsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_postsMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_postsAggregateType<T extends Community_platform_postsAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_posts]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_posts[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_posts[P]>\n  }\n\n\n\n\n  export type community_platform_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_postsWhereInput\n    orderBy?: community_platform_postsOrderByWithAggregationInput | community_platform_postsOrderByWithAggregationInput[]\n    by: Community_platform_postsScalarFieldEnum[] | Community_platform_postsScalarFieldEnum\n    having?: community_platform_postsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_postsCountAggregateInputType | true\n    _min?: Community_platform_postsMinAggregateInputType\n    _max?: Community_platform_postsMaxAggregateInputType\n  }\n\n  export type Community_platform_postsGroupByOutputType = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content: string | null\n    url: string | null\n    image_url: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Community_platform_postsCountAggregateOutputType | null\n    _min: Community_platform_postsMinAggregateOutputType | null\n    _max: Community_platform_postsMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_postsGroupByPayload<T extends community_platform_postsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_postsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_postsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_postsGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_postsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_community_id?: boolean\n    community_platform_member_id?: boolean\n    title?: boolean\n    content_type?: boolean\n    text_content?: boolean\n    url?: boolean\n    image_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community_platform_comments?: boolean | community_platform_posts$community_platform_commentsArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_posts$community_platform_votesArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_posts$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_postsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_posts\"]>\n\n  export type community_platform_postsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_community_id?: boolean\n    community_platform_member_id?: boolean\n    title?: boolean\n    content_type?: boolean\n    text_content?: boolean\n    url?: boolean\n    image_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_posts\"]>\n\n  export type community_platform_postsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_community_id?: boolean\n    community_platform_member_id?: boolean\n    title?: boolean\n    content_type?: boolean\n    text_content?: boolean\n    url?: boolean\n    image_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_posts\"]>\n\n  export type community_platform_postsSelectScalar = {\n    id?: boolean\n    community_platform_community_id?: boolean\n    community_platform_member_id?: boolean\n    title?: boolean\n    content_type?: boolean\n    text_content?: boolean\n    url?: boolean\n    image_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type community_platform_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"community_platform_community_id\" | \"community_platform_member_id\" | \"title\" | \"content_type\" | \"text_content\" | \"url\" | \"image_url\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"community_platform_posts\"]>\n  export type community_platform_postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community_platform_comments?: boolean | community_platform_posts$community_platform_commentsArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_posts$community_platform_votesArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_posts$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_postsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type community_platform_postsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n  }\n  export type community_platform_postsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $community_platform_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_posts\"\n    objects: {\n      community: Prisma.$community_platform_communitiesPayload<ExtArgs>\n      author: Prisma.$community_platform_membersPayload<ExtArgs>\n      community_platform_comments: Prisma.$community_platform_commentsPayload<ExtArgs>[]\n      community_platform_votes: Prisma.$community_platform_votesPayload<ExtArgs>[]\n      community_platform_reports: Prisma.$community_platform_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged community's {\"@link community_platform_communities.id\"}.\n       */\n      community_platform_community_id: string\n      /**\n       * Author's {\"@link community_platform_members.id\"}.\n       */\n      community_platform_member_id: string\n      /**\n       * Post title visible in listings and searches.\n       */\n      title: string\n      /**\n       * Type of post content: 'text', 'link', or 'image'.\n       */\n      content_type: string\n      /**\n       * Text content for text posts.\n       */\n      text_content: string | null\n      /**\n       * URL for link posts.\n       */\n      url: string | null\n      /**\n       * Image URL for image posts.\n       */\n      image_url: string | null\n      /**\n       * Post creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Last modification timestamp.\n       */\n      updated_at: Date\n      /**\n       * Soft deletion timestamp when post is removed.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_posts\"]>\n    composites: {}\n  }\n\n  type community_platform_postsGetPayload<S extends boolean | null | undefined | community_platform_postsDefaultArgs> = $Result.GetResult<Prisma.$community_platform_postsPayload, S>\n\n  type community_platform_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_postsCountAggregateInputType | true\n    }\n\n  export interface community_platform_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_posts'], meta: { name: 'community_platform_posts' } }\n    /**\n     * Find zero or one Community_platform_posts that matches the filter.\n     * @param {community_platform_postsFindUniqueArgs} args - Arguments to find a Community_platform_posts\n     * @example\n     * // Get one Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_postsFindUniqueArgs>(args: SelectSubset<T, community_platform_postsFindUniqueArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_posts that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_postsFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_posts\n     * @example\n     * // Get one Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsFindFirstArgs} args - Arguments to find a Community_platform_posts\n     * @example\n     * // Get one Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_postsFindFirstArgs>(args?: SelectSubset<T, community_platform_postsFindFirstArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_posts that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsFindFirstOrThrowArgs} args - Arguments to find a Community_platform_posts\n     * @example\n     * // Get one Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findMany()\n     * \n     * // Get first 10 Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_postsWithIdOnly = await prisma.community_platform_posts.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_postsFindManyArgs>(args?: SelectSubset<T, community_platform_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_posts.\n     * @param {community_platform_postsCreateArgs} args - Arguments to create a Community_platform_posts.\n     * @example\n     * // Create one Community_platform_posts\n     * const Community_platform_posts = await prisma.community_platform_posts.create({\n     *   data: {\n     *     // ... data to create a Community_platform_posts\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_postsCreateArgs>(args: SelectSubset<T, community_platform_postsCreateArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_posts.\n     * @param {community_platform_postsCreateManyArgs} args - Arguments to create many Community_platform_posts.\n     * @example\n     * // Create many Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_postsCreateManyArgs>(args?: SelectSubset<T, community_platform_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_posts and returns the data saved in the database.\n     * @param {community_platform_postsCreateManyAndReturnArgs} args - Arguments to create many Community_platform_posts.\n     * @example\n     * // Create many Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_posts and only return the `id`\n     * const community_platform_postsWithIdOnly = await prisma.community_platform_posts.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_postsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_postsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_posts.\n     * @param {community_platform_postsDeleteArgs} args - Arguments to delete one Community_platform_posts.\n     * @example\n     * // Delete one Community_platform_posts\n     * const Community_platform_posts = await prisma.community_platform_posts.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_posts\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_postsDeleteArgs>(args: SelectSubset<T, community_platform_postsDeleteArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_posts.\n     * @param {community_platform_postsUpdateArgs} args - Arguments to update one Community_platform_posts.\n     * @example\n     * // Update one Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_postsUpdateArgs>(args: SelectSubset<T, community_platform_postsUpdateArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_posts.\n     * @param {community_platform_postsDeleteManyArgs} args - Arguments to filter Community_platform_posts to delete.\n     * @example\n     * // Delete a few Community_platform_posts\n     * const { count } = await prisma.community_platform_posts.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_postsDeleteManyArgs>(args?: SelectSubset<T, community_platform_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_postsUpdateManyArgs>(args: SelectSubset<T, community_platform_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_posts and returns the data updated in the database.\n     * @param {community_platform_postsUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_posts.\n     * @example\n     * // Update many Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_posts and only return the `id`\n     * const community_platform_postsWithIdOnly = await prisma.community_platform_posts.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_postsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_postsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_posts.\n     * @param {community_platform_postsUpsertArgs} args - Arguments to update or create a Community_platform_posts.\n     * @example\n     * // Update or create a Community_platform_posts\n     * const community_platform_posts = await prisma.community_platform_posts.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_posts\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_posts we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_postsUpsertArgs>(args: SelectSubset<T, community_platform_postsUpsertArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsCountArgs} args - Arguments to filter Community_platform_posts to count.\n     * @example\n     * // Count the number of Community_platform_posts\n     * const count = await prisma.community_platform_posts.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_posts we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_postsCountArgs>(\n      args?: Subset<T, community_platform_postsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_postsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_postsAggregateArgs>(args: Subset<T, Community_platform_postsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_postsAggregateType<T>>\n\n    /**\n     * Group by Community_platform_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_postsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_postsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_postsGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_postsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_posts model\n   */\n  readonly fields: community_platform_postsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_posts.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    community<T extends community_platform_communitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communitiesDefaultArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    community_platform_comments<T extends community_platform_posts$community_platform_commentsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_posts$community_platform_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_votes<T extends community_platform_posts$community_platform_votesArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_posts$community_platform_votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_reports<T extends community_platform_posts$community_platform_reportsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_posts$community_platform_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_posts model\n   */\n  interface community_platform_postsFieldRefs {\n    readonly id: FieldRef<\"community_platform_posts\", 'String'>\n    readonly community_platform_community_id: FieldRef<\"community_platform_posts\", 'String'>\n    readonly community_platform_member_id: FieldRef<\"community_platform_posts\", 'String'>\n    readonly title: FieldRef<\"community_platform_posts\", 'String'>\n    readonly content_type: FieldRef<\"community_platform_posts\", 'String'>\n    readonly text_content: FieldRef<\"community_platform_posts\", 'String'>\n    readonly url: FieldRef<\"community_platform_posts\", 'String'>\n    readonly image_url: FieldRef<\"community_platform_posts\", 'String'>\n    readonly created_at: FieldRef<\"community_platform_posts\", 'DateTime'>\n    readonly updated_at: FieldRef<\"community_platform_posts\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"community_platform_posts\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_posts findUnique\n   */\n  export type community_platform_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_posts to fetch.\n     */\n    where: community_platform_postsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_posts findUniqueOrThrow\n   */\n  export type community_platform_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_posts to fetch.\n     */\n    where: community_platform_postsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_posts findFirst\n   */\n  export type community_platform_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_posts to fetch.\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_posts to fetch.\n     */\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_posts.\n     */\n    cursor?: community_platform_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_posts.\n     */\n    distinct?: Community_platform_postsScalarFieldEnum | Community_platform_postsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts findFirstOrThrow\n   */\n  export type community_platform_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_posts to fetch.\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_posts to fetch.\n     */\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_posts.\n     */\n    cursor?: community_platform_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_posts.\n     */\n    distinct?: Community_platform_postsScalarFieldEnum | Community_platform_postsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts findMany\n   */\n  export type community_platform_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_posts to fetch.\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_posts to fetch.\n     */\n    orderBy?: community_platform_postsOrderByWithRelationInput | community_platform_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_posts.\n     */\n    cursor?: community_platform_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_posts.\n     */\n    skip?: number\n    distinct?: Community_platform_postsScalarFieldEnum | Community_platform_postsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts create\n   */\n  export type community_platform_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_posts.\n     */\n    data: XOR<community_platform_postsCreateInput, community_platform_postsUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_posts createMany\n   */\n  export type community_platform_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_posts.\n     */\n    data: community_platform_postsCreateManyInput | community_platform_postsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_posts createManyAndReturn\n   */\n  export type community_platform_postsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_posts.\n     */\n    data: community_platform_postsCreateManyInput | community_platform_postsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_posts update\n   */\n  export type community_platform_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_posts.\n     */\n    data: XOR<community_platform_postsUpdateInput, community_platform_postsUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_posts to update.\n     */\n    where: community_platform_postsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_posts updateMany\n   */\n  export type community_platform_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_posts.\n     */\n    data: XOR<community_platform_postsUpdateManyMutationInput, community_platform_postsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_posts to update\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * Limit how many community_platform_posts to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_posts updateManyAndReturn\n   */\n  export type community_platform_postsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_posts.\n     */\n    data: XOR<community_platform_postsUpdateManyMutationInput, community_platform_postsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_posts to update\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * Limit how many community_platform_posts to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_posts upsert\n   */\n  export type community_platform_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_posts to update in case it exists.\n     */\n    where: community_platform_postsWhereUniqueInput\n    /**\n     * In case the community_platform_posts found by the `where` argument doesn't exist, create a new community_platform_posts with this data.\n     */\n    create: XOR<community_platform_postsCreateInput, community_platform_postsUncheckedCreateInput>\n    /**\n     * In case the community_platform_posts was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_postsUpdateInput, community_platform_postsUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_posts delete\n   */\n  export type community_platform_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_posts to delete.\n     */\n    where: community_platform_postsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_posts deleteMany\n   */\n  export type community_platform_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_posts to delete\n     */\n    where?: community_platform_postsWhereInput\n    /**\n     * Limit how many community_platform_posts to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_posts.community_platform_comments\n   */\n  export type community_platform_posts$community_platform_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    cursor?: community_platform_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts.community_platform_votes\n   */\n  export type community_platform_posts$community_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    where?: community_platform_votesWhereInput\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    cursor?: community_platform_votesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts.community_platform_reports\n   */\n  export type community_platform_posts$community_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    where?: community_platform_reportsWhereInput\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    cursor?: community_platform_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_posts without action\n   */\n  export type community_platform_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_comments\n   */\n\n  export type AggregateCommunity_platform_comments = {\n    _count: Community_platform_commentsCountAggregateOutputType | null\n    _avg: Community_platform_commentsAvgAggregateOutputType | null\n    _sum: Community_platform_commentsSumAggregateOutputType | null\n    _min: Community_platform_commentsMinAggregateOutputType | null\n    _max: Community_platform_commentsMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_commentsAvgAggregateOutputType = {\n    depth: number | null\n  }\n\n  export type Community_platform_commentsSumAggregateOutputType = {\n    depth: number | null\n  }\n\n  export type Community_platform_commentsMinAggregateOutputType = {\n    id: string | null\n    community_platform_post_id: string | null\n    community_platform_member_id: string | null\n    parent_comment_id: string | null\n    content: string | null\n    depth: number | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_commentsMaxAggregateOutputType = {\n    id: string | null\n    community_platform_post_id: string | null\n    community_platform_member_id: string | null\n    parent_comment_id: string | null\n    content: string | null\n    depth: number | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_commentsCountAggregateOutputType = {\n    id: number\n    community_platform_post_id: number\n    community_platform_member_id: number\n    parent_comment_id: number\n    content: number\n    depth: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_commentsAvgAggregateInputType = {\n    depth?: true\n  }\n\n  export type Community_platform_commentsSumAggregateInputType = {\n    depth?: true\n  }\n\n  export type Community_platform_commentsMinAggregateInputType = {\n    id?: true\n    community_platform_post_id?: true\n    community_platform_member_id?: true\n    parent_comment_id?: true\n    content?: true\n    depth?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_commentsMaxAggregateInputType = {\n    id?: true\n    community_platform_post_id?: true\n    community_platform_member_id?: true\n    parent_comment_id?: true\n    content?: true\n    depth?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_commentsCountAggregateInputType = {\n    id?: true\n    community_platform_post_id?: true\n    community_platform_member_id?: true\n    parent_comment_id?: true\n    content?: true\n    depth?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_comments to aggregate.\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_comments to fetch.\n     */\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_comments\n    **/\n    _count?: true | Community_platform_commentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Community_platform_commentsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Community_platform_commentsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_commentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_commentsMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_commentsAggregateType<T extends Community_platform_commentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_comments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_comments[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_comments[P]>\n  }\n\n\n\n\n  export type community_platform_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_commentsWhereInput\n    orderBy?: community_platform_commentsOrderByWithAggregationInput | community_platform_commentsOrderByWithAggregationInput[]\n    by: Community_platform_commentsScalarFieldEnum[] | Community_platform_commentsScalarFieldEnum\n    having?: community_platform_commentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_commentsCountAggregateInputType | true\n    _avg?: Community_platform_commentsAvgAggregateInputType\n    _sum?: Community_platform_commentsSumAggregateInputType\n    _min?: Community_platform_commentsMinAggregateInputType\n    _max?: Community_platform_commentsMaxAggregateInputType\n  }\n\n  export type Community_platform_commentsGroupByOutputType = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id: string | null\n    content: string\n    depth: number\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Community_platform_commentsCountAggregateOutputType | null\n    _avg: Community_platform_commentsAvgAggregateOutputType | null\n    _sum: Community_platform_commentsSumAggregateOutputType | null\n    _min: Community_platform_commentsMinAggregateOutputType | null\n    _max: Community_platform_commentsMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_commentsGroupByPayload<T extends community_platform_commentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_commentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_commentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_commentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_commentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_post_id?: boolean\n    community_platform_member_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    depth?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n    recursive?: boolean | community_platform_comments$recursiveArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_comments$community_platform_votesArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_comments$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_comments\"]>\n\n  export type community_platform_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_post_id?: boolean\n    community_platform_member_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    depth?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_comments\"]>\n\n  export type community_platform_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    community_platform_post_id?: boolean\n    community_platform_member_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    depth?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_comments\"]>\n\n  export type community_platform_commentsSelectScalar = {\n    id?: boolean\n    community_platform_post_id?: boolean\n    community_platform_member_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    depth?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type community_platform_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"community_platform_post_id\" | \"community_platform_member_id\" | \"parent_comment_id\" | \"content\" | \"depth\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"community_platform_comments\"]>\n  export type community_platform_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n    recursive?: boolean | community_platform_comments$recursiveArgs<ExtArgs>\n    community_platform_votes?: boolean | community_platform_comments$community_platform_votesArgs<ExtArgs>\n    community_platform_reports?: boolean | community_platform_comments$community_platform_reportsArgs<ExtArgs>\n    _count?: boolean | Community_platform_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type community_platform_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n  }\n  export type community_platform_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | community_platform_postsDefaultArgs<ExtArgs>\n    author?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    parent?: boolean | community_platform_comments$parentArgs<ExtArgs>\n  }\n\n  export type $community_platform_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_comments\"\n    objects: {\n      post: Prisma.$community_platform_postsPayload<ExtArgs>\n      author: Prisma.$community_platform_membersPayload<ExtArgs>\n      parent: Prisma.$community_platform_commentsPayload<ExtArgs> | null\n      recursive: Prisma.$community_platform_commentsPayload<ExtArgs>[]\n      community_platform_votes: Prisma.$community_platform_votesPayload<ExtArgs>[]\n      community_platform_reports: Prisma.$community_platform_reportsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Referenced post's {\"@link community_platform_posts.id\"}.\n       */\n      community_platform_post_id: string\n      /**\n       * Comment author's {\"@link community_platform_members.id\"}.\n       */\n      community_platform_member_id: string\n      /**\n       * Parent comment's {\"@link community_platform_comments.id\"} for nested\n       * structure.\n       */\n      parent_comment_id: string | null\n      /**\n       * Comment text content.\n       */\n      content: string\n      /**\n       * Nesting level in comment thread.\n       */\n      depth: number\n      /**\n       * Comment creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Last modification timestamp.\n       */\n      updated_at: Date\n      /**\n       * Soft deletion timestamp when comment is removed.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_comments\"]>\n    composites: {}\n  }\n\n  type community_platform_commentsGetPayload<S extends boolean | null | undefined | community_platform_commentsDefaultArgs> = $Result.GetResult<Prisma.$community_platform_commentsPayload, S>\n\n  type community_platform_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_commentsCountAggregateInputType | true\n    }\n\n  export interface community_platform_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_comments'], meta: { name: 'community_platform_comments' } }\n    /**\n     * Find zero or one Community_platform_comments that matches the filter.\n     * @param {community_platform_commentsFindUniqueArgs} args - Arguments to find a Community_platform_comments\n     * @example\n     * // Get one Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_commentsFindUniqueArgs>(args: SelectSubset<T, community_platform_commentsFindUniqueArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_comments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_commentsFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_comments\n     * @example\n     * // Get one Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsFindFirstArgs} args - Arguments to find a Community_platform_comments\n     * @example\n     * // Get one Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_commentsFindFirstArgs>(args?: SelectSubset<T, community_platform_commentsFindFirstArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_comments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsFindFirstOrThrowArgs} args - Arguments to find a Community_platform_comments\n     * @example\n     * // Get one Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findMany()\n     * \n     * // Get first 10 Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_commentsWithIdOnly = await prisma.community_platform_comments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_commentsFindManyArgs>(args?: SelectSubset<T, community_platform_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_comments.\n     * @param {community_platform_commentsCreateArgs} args - Arguments to create a Community_platform_comments.\n     * @example\n     * // Create one Community_platform_comments\n     * const Community_platform_comments = await prisma.community_platform_comments.create({\n     *   data: {\n     *     // ... data to create a Community_platform_comments\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_commentsCreateArgs>(args: SelectSubset<T, community_platform_commentsCreateArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_comments.\n     * @param {community_platform_commentsCreateManyArgs} args - Arguments to create many Community_platform_comments.\n     * @example\n     * // Create many Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_commentsCreateManyArgs>(args?: SelectSubset<T, community_platform_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_comments and returns the data saved in the database.\n     * @param {community_platform_commentsCreateManyAndReturnArgs} args - Arguments to create many Community_platform_comments.\n     * @example\n     * // Create many Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_comments and only return the `id`\n     * const community_platform_commentsWithIdOnly = await prisma.community_platform_comments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_comments.\n     * @param {community_platform_commentsDeleteArgs} args - Arguments to delete one Community_platform_comments.\n     * @example\n     * // Delete one Community_platform_comments\n     * const Community_platform_comments = await prisma.community_platform_comments.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_comments\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_commentsDeleteArgs>(args: SelectSubset<T, community_platform_commentsDeleteArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_comments.\n     * @param {community_platform_commentsUpdateArgs} args - Arguments to update one Community_platform_comments.\n     * @example\n     * // Update one Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_commentsUpdateArgs>(args: SelectSubset<T, community_platform_commentsUpdateArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_comments.\n     * @param {community_platform_commentsDeleteManyArgs} args - Arguments to filter Community_platform_comments to delete.\n     * @example\n     * // Delete a few Community_platform_comments\n     * const { count } = await prisma.community_platform_comments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_commentsDeleteManyArgs>(args?: SelectSubset<T, community_platform_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_commentsUpdateManyArgs>(args: SelectSubset<T, community_platform_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_comments and returns the data updated in the database.\n     * @param {community_platform_commentsUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_comments.\n     * @example\n     * // Update many Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_comments and only return the `id`\n     * const community_platform_commentsWithIdOnly = await prisma.community_platform_comments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_comments.\n     * @param {community_platform_commentsUpsertArgs} args - Arguments to update or create a Community_platform_comments.\n     * @example\n     * // Update or create a Community_platform_comments\n     * const community_platform_comments = await prisma.community_platform_comments.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_comments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_comments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_commentsUpsertArgs>(args: SelectSubset<T, community_platform_commentsUpsertArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsCountArgs} args - Arguments to filter Community_platform_comments to count.\n     * @example\n     * // Count the number of Community_platform_comments\n     * const count = await prisma.community_platform_comments.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_comments we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_commentsCountArgs>(\n      args?: Subset<T, community_platform_commentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_commentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_commentsAggregateArgs>(args: Subset<T, Community_platform_commentsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_commentsAggregateType<T>>\n\n    /**\n     * Group by Community_platform_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_commentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_commentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_commentsGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_commentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_comments model\n   */\n  readonly fields: community_platform_commentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_comments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends community_platform_postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_postsDefaultArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    parent<T extends community_platform_comments$parentArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_comments$parentArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends community_platform_comments$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_comments$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_votes<T extends community_platform_comments$community_platform_votesArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_comments$community_platform_votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    community_platform_reports<T extends community_platform_comments$community_platform_reportsArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_comments$community_platform_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_comments model\n   */\n  interface community_platform_commentsFieldRefs {\n    readonly id: FieldRef<\"community_platform_comments\", 'String'>\n    readonly community_platform_post_id: FieldRef<\"community_platform_comments\", 'String'>\n    readonly community_platform_member_id: FieldRef<\"community_platform_comments\", 'String'>\n    readonly parent_comment_id: FieldRef<\"community_platform_comments\", 'String'>\n    readonly content: FieldRef<\"community_platform_comments\", 'String'>\n    readonly depth: FieldRef<\"community_platform_comments\", 'Int'>\n    readonly created_at: FieldRef<\"community_platform_comments\", 'DateTime'>\n    readonly updated_at: FieldRef<\"community_platform_comments\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"community_platform_comments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_comments findUnique\n   */\n  export type community_platform_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_comments to fetch.\n     */\n    where: community_platform_commentsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_comments findUniqueOrThrow\n   */\n  export type community_platform_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_comments to fetch.\n     */\n    where: community_platform_commentsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_comments findFirst\n   */\n  export type community_platform_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_comments to fetch.\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_comments to fetch.\n     */\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_comments.\n     */\n    cursor?: community_platform_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_comments.\n     */\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments findFirstOrThrow\n   */\n  export type community_platform_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_comments to fetch.\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_comments to fetch.\n     */\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_comments.\n     */\n    cursor?: community_platform_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_comments.\n     */\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments findMany\n   */\n  export type community_platform_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_comments to fetch.\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_comments to fetch.\n     */\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_comments.\n     */\n    cursor?: community_platform_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_comments.\n     */\n    skip?: number\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments create\n   */\n  export type community_platform_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_comments.\n     */\n    data: XOR<community_platform_commentsCreateInput, community_platform_commentsUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_comments createMany\n   */\n  export type community_platform_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_comments.\n     */\n    data: community_platform_commentsCreateManyInput | community_platform_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_comments createManyAndReturn\n   */\n  export type community_platform_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_comments.\n     */\n    data: community_platform_commentsCreateManyInput | community_platform_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_comments update\n   */\n  export type community_platform_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_comments.\n     */\n    data: XOR<community_platform_commentsUpdateInput, community_platform_commentsUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_comments to update.\n     */\n    where: community_platform_commentsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_comments updateMany\n   */\n  export type community_platform_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_comments.\n     */\n    data: XOR<community_platform_commentsUpdateManyMutationInput, community_platform_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_comments to update\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * Limit how many community_platform_comments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_comments updateManyAndReturn\n   */\n  export type community_platform_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_comments.\n     */\n    data: XOR<community_platform_commentsUpdateManyMutationInput, community_platform_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_comments to update\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * Limit how many community_platform_comments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_comments upsert\n   */\n  export type community_platform_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_comments to update in case it exists.\n     */\n    where: community_platform_commentsWhereUniqueInput\n    /**\n     * In case the community_platform_comments found by the `where` argument doesn't exist, create a new community_platform_comments with this data.\n     */\n    create: XOR<community_platform_commentsCreateInput, community_platform_commentsUncheckedCreateInput>\n    /**\n     * In case the community_platform_comments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_commentsUpdateInput, community_platform_commentsUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_comments delete\n   */\n  export type community_platform_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_comments to delete.\n     */\n    where: community_platform_commentsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_comments deleteMany\n   */\n  export type community_platform_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_comments to delete\n     */\n    where?: community_platform_commentsWhereInput\n    /**\n     * Limit how many community_platform_comments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_comments.parent\n   */\n  export type community_platform_comments$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * community_platform_comments.recursive\n   */\n  export type community_platform_comments$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n    orderBy?: community_platform_commentsOrderByWithRelationInput | community_platform_commentsOrderByWithRelationInput[]\n    cursor?: community_platform_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_commentsScalarFieldEnum | Community_platform_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments.community_platform_votes\n   */\n  export type community_platform_comments$community_platform_votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    where?: community_platform_votesWhereInput\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    cursor?: community_platform_votesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments.community_platform_reports\n   */\n  export type community_platform_comments$community_platform_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    where?: community_platform_reportsWhereInput\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    cursor?: community_platform_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_comments without action\n   */\n  export type community_platform_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_votes\n   */\n\n  export type AggregateCommunity_platform_votes = {\n    _count: Community_platform_votesCountAggregateOutputType | null\n    _min: Community_platform_votesMinAggregateOutputType | null\n    _max: Community_platform_votesMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_votesMinAggregateOutputType = {\n    id: string | null\n    member_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    vote_type: string | null\n    created_at: Date | null\n  }\n\n  export type Community_platform_votesMaxAggregateOutputType = {\n    id: string | null\n    member_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    vote_type: string | null\n    created_at: Date | null\n  }\n\n  export type Community_platform_votesCountAggregateOutputType = {\n    id: number\n    member_id: number\n    post_id: number\n    comment_id: number\n    vote_type: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_votesMinAggregateInputType = {\n    id?: true\n    member_id?: true\n    post_id?: true\n    comment_id?: true\n    vote_type?: true\n    created_at?: true\n  }\n\n  export type Community_platform_votesMaxAggregateInputType = {\n    id?: true\n    member_id?: true\n    post_id?: true\n    comment_id?: true\n    vote_type?: true\n    created_at?: true\n  }\n\n  export type Community_platform_votesCountAggregateInputType = {\n    id?: true\n    member_id?: true\n    post_id?: true\n    comment_id?: true\n    vote_type?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_votesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_votes to aggregate.\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_votes to fetch.\n     */\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_votesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_votes\n    **/\n    _count?: true | Community_platform_votesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_votesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_votesMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_votesAggregateType<T extends Community_platform_votesAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_votes]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_votes[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_votes[P]>\n  }\n\n\n\n\n  export type community_platform_votesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_votesWhereInput\n    orderBy?: community_platform_votesOrderByWithAggregationInput | community_platform_votesOrderByWithAggregationInput[]\n    by: Community_platform_votesScalarFieldEnum[] | Community_platform_votesScalarFieldEnum\n    having?: community_platform_votesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_votesCountAggregateInputType | true\n    _min?: Community_platform_votesMinAggregateInputType\n    _max?: Community_platform_votesMaxAggregateInputType\n  }\n\n  export type Community_platform_votesGroupByOutputType = {\n    id: string\n    member_id: string\n    post_id: string | null\n    comment_id: string | null\n    vote_type: string\n    created_at: Date\n    _count: Community_platform_votesCountAggregateOutputType | null\n    _min: Community_platform_votesMinAggregateOutputType | null\n    _max: Community_platform_votesMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_votesGroupByPayload<T extends community_platform_votesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_votesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_votesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_votesGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_votesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_votesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    vote_type?: boolean\n    created_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_votes\"]>\n\n  export type community_platform_votesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    vote_type?: boolean\n    created_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_votes\"]>\n\n  export type community_platform_votesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    vote_type?: boolean\n    created_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_votes\"]>\n\n  export type community_platform_votesSelectScalar = {\n    id?: boolean\n    member_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    vote_type?: boolean\n    created_at?: boolean\n  }\n\n  export type community_platform_votesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"member_id\" | \"post_id\" | \"comment_id\" | \"vote_type\" | \"created_at\", ExtArgs[\"result\"][\"community_platform_votes\"]>\n  export type community_platform_votesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }\n  export type community_platform_votesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }\n  export type community_platform_votesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    post?: boolean | community_platform_votes$postArgs<ExtArgs>\n    comment?: boolean | community_platform_votes$commentArgs<ExtArgs>\n  }\n\n  export type $community_platform_votesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_votes\"\n    objects: {\n      member: Prisma.$community_platform_membersPayload<ExtArgs>\n      post: Prisma.$community_platform_postsPayload<ExtArgs> | null\n      comment: Prisma.$community_platform_commentsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Voted member's {@link community_platform_members.id} who cast the vote.\n       */\n      member_id: string\n      /**\n       * Related post's {@link community_platform_posts.id} that received the vote\n       * (if applicable).\n       */\n      post_id: string | null\n      /**\n       * Related comment's {@link community_platform_comments.id} that received\n       * the vote (if applicable).\n       */\n      comment_id: string | null\n      /**\n       * Type of vote cast - 'up' for positive or 'down' for negative engagement.\n       */\n      vote_type: string\n      /**\n       * Timestamp when the vote was cast, used for audit trails and analytical\n       * purposes.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"community_platform_votes\"]>\n    composites: {}\n  }\n\n  type community_platform_votesGetPayload<S extends boolean | null | undefined | community_platform_votesDefaultArgs> = $Result.GetResult<Prisma.$community_platform_votesPayload, S>\n\n  type community_platform_votesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_votesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_votesCountAggregateInputType | true\n    }\n\n  export interface community_platform_votesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_votes'], meta: { name: 'community_platform_votes' } }\n    /**\n     * Find zero or one Community_platform_votes that matches the filter.\n     * @param {community_platform_votesFindUniqueArgs} args - Arguments to find a Community_platform_votes\n     * @example\n     * // Get one Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_votesFindUniqueArgs>(args: SelectSubset<T, community_platform_votesFindUniqueArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_votes that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_votesFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_votes\n     * @example\n     * // Get one Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_votesFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_votesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_votes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesFindFirstArgs} args - Arguments to find a Community_platform_votes\n     * @example\n     * // Get one Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_votesFindFirstArgs>(args?: SelectSubset<T, community_platform_votesFindFirstArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_votes that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesFindFirstOrThrowArgs} args - Arguments to find a Community_platform_votes\n     * @example\n     * // Get one Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_votesFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_votesFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_votes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findMany()\n     * \n     * // Get first 10 Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_votesWithIdOnly = await prisma.community_platform_votes.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_votesFindManyArgs>(args?: SelectSubset<T, community_platform_votesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_votes.\n     * @param {community_platform_votesCreateArgs} args - Arguments to create a Community_platform_votes.\n     * @example\n     * // Create one Community_platform_votes\n     * const Community_platform_votes = await prisma.community_platform_votes.create({\n     *   data: {\n     *     // ... data to create a Community_platform_votes\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_votesCreateArgs>(args: SelectSubset<T, community_platform_votesCreateArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_votes.\n     * @param {community_platform_votesCreateManyArgs} args - Arguments to create many Community_platform_votes.\n     * @example\n     * // Create many Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_votesCreateManyArgs>(args?: SelectSubset<T, community_platform_votesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_votes and returns the data saved in the database.\n     * @param {community_platform_votesCreateManyAndReturnArgs} args - Arguments to create many Community_platform_votes.\n     * @example\n     * // Create many Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_votes and only return the `id`\n     * const community_platform_votesWithIdOnly = await prisma.community_platform_votes.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_votesCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_votesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_votes.\n     * @param {community_platform_votesDeleteArgs} args - Arguments to delete one Community_platform_votes.\n     * @example\n     * // Delete one Community_platform_votes\n     * const Community_platform_votes = await prisma.community_platform_votes.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_votes\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_votesDeleteArgs>(args: SelectSubset<T, community_platform_votesDeleteArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_votes.\n     * @param {community_platform_votesUpdateArgs} args - Arguments to update one Community_platform_votes.\n     * @example\n     * // Update one Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_votesUpdateArgs>(args: SelectSubset<T, community_platform_votesUpdateArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_votes.\n     * @param {community_platform_votesDeleteManyArgs} args - Arguments to filter Community_platform_votes to delete.\n     * @example\n     * // Delete a few Community_platform_votes\n     * const { count } = await prisma.community_platform_votes.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_votesDeleteManyArgs>(args?: SelectSubset<T, community_platform_votesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_votesUpdateManyArgs>(args: SelectSubset<T, community_platform_votesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_votes and returns the data updated in the database.\n     * @param {community_platform_votesUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_votes.\n     * @example\n     * // Update many Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_votes and only return the `id`\n     * const community_platform_votesWithIdOnly = await prisma.community_platform_votes.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_votesUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_votesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_votes.\n     * @param {community_platform_votesUpsertArgs} args - Arguments to update or create a Community_platform_votes.\n     * @example\n     * // Update or create a Community_platform_votes\n     * const community_platform_votes = await prisma.community_platform_votes.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_votes\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_votes we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_votesUpsertArgs>(args: SelectSubset<T, community_platform_votesUpsertArgs<ExtArgs>>): Prisma__community_platform_votesClient<$Result.GetResult<Prisma.$community_platform_votesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesCountArgs} args - Arguments to filter Community_platform_votes to count.\n     * @example\n     * // Count the number of Community_platform_votes\n     * const count = await prisma.community_platform_votes.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_votes we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_votesCountArgs>(\n      args?: Subset<T, community_platform_votesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_votesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_votesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_votesAggregateArgs>(args: Subset<T, Community_platform_votesAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_votesAggregateType<T>>\n\n    /**\n     * Group by Community_platform_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_votesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_votesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_votesGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_votesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_votesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_votesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_votes model\n   */\n  readonly fields: community_platform_votesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_votes.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_votesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    post<T extends community_platform_votes$postArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_votes$postArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends community_platform_votes$commentArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_votes$commentArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_votes model\n   */\n  interface community_platform_votesFieldRefs {\n    readonly id: FieldRef<\"community_platform_votes\", 'String'>\n    readonly member_id: FieldRef<\"community_platform_votes\", 'String'>\n    readonly post_id: FieldRef<\"community_platform_votes\", 'String'>\n    readonly comment_id: FieldRef<\"community_platform_votes\", 'String'>\n    readonly vote_type: FieldRef<\"community_platform_votes\", 'String'>\n    readonly created_at: FieldRef<\"community_platform_votes\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_votes findUnique\n   */\n  export type community_platform_votesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_votes to fetch.\n     */\n    where: community_platform_votesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_votes findUniqueOrThrow\n   */\n  export type community_platform_votesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_votes to fetch.\n     */\n    where: community_platform_votesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_votes findFirst\n   */\n  export type community_platform_votesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_votes to fetch.\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_votes to fetch.\n     */\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_votes.\n     */\n    cursor?: community_platform_votesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_votes.\n     */\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_votes findFirstOrThrow\n   */\n  export type community_platform_votesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_votes to fetch.\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_votes to fetch.\n     */\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_votes.\n     */\n    cursor?: community_platform_votesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_votes.\n     */\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_votes findMany\n   */\n  export type community_platform_votesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_votes to fetch.\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_votes to fetch.\n     */\n    orderBy?: community_platform_votesOrderByWithRelationInput | community_platform_votesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_votes.\n     */\n    cursor?: community_platform_votesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_votes.\n     */\n    skip?: number\n    distinct?: Community_platform_votesScalarFieldEnum | Community_platform_votesScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_votes create\n   */\n  export type community_platform_votesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_votes.\n     */\n    data: XOR<community_platform_votesCreateInput, community_platform_votesUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_votes createMany\n   */\n  export type community_platform_votesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_votes.\n     */\n    data: community_platform_votesCreateManyInput | community_platform_votesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_votes createManyAndReturn\n   */\n  export type community_platform_votesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_votes.\n     */\n    data: community_platform_votesCreateManyInput | community_platform_votesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_votes update\n   */\n  export type community_platform_votesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_votes.\n     */\n    data: XOR<community_platform_votesUpdateInput, community_platform_votesUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_votes to update.\n     */\n    where: community_platform_votesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_votes updateMany\n   */\n  export type community_platform_votesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_votes.\n     */\n    data: XOR<community_platform_votesUpdateManyMutationInput, community_platform_votesUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_votes to update\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * Limit how many community_platform_votes to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_votes updateManyAndReturn\n   */\n  export type community_platform_votesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_votes.\n     */\n    data: XOR<community_platform_votesUpdateManyMutationInput, community_platform_votesUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_votes to update\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * Limit how many community_platform_votes to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_votes upsert\n   */\n  export type community_platform_votesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_votes to update in case it exists.\n     */\n    where: community_platform_votesWhereUniqueInput\n    /**\n     * In case the community_platform_votes found by the `where` argument doesn't exist, create a new community_platform_votes with this data.\n     */\n    create: XOR<community_platform_votesCreateInput, community_platform_votesUncheckedCreateInput>\n    /**\n     * In case the community_platform_votes was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_votesUpdateInput, community_platform_votesUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_votes delete\n   */\n  export type community_platform_votesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_votes to delete.\n     */\n    where: community_platform_votesWhereUniqueInput\n  }\n\n  /**\n   * community_platform_votes deleteMany\n   */\n  export type community_platform_votesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_votes to delete\n     */\n    where?: community_platform_votesWhereInput\n    /**\n     * Limit how many community_platform_votes to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_votes.post\n   */\n  export type community_platform_votes$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    where?: community_platform_postsWhereInput\n  }\n\n  /**\n   * community_platform_votes.comment\n   */\n  export type community_platform_votes$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * community_platform_votes without action\n   */\n  export type community_platform_votesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_votes\n     */\n    select?: community_platform_votesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_votes\n     */\n    omit?: community_platform_votesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_votesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_subscriptions\n   */\n\n  export type AggregateCommunity_platform_subscriptions = {\n    _count: Community_platform_subscriptionsCountAggregateOutputType | null\n    _min: Community_platform_subscriptionsMinAggregateOutputType | null\n    _max: Community_platform_subscriptionsMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_subscriptionsMinAggregateOutputType = {\n    id: string | null\n    member_id: string | null\n    community_id: string | null\n    subscribed_at: Date | null\n    unsubscribed_at: Date | null\n  }\n\n  export type Community_platform_subscriptionsMaxAggregateOutputType = {\n    id: string | null\n    member_id: string | null\n    community_id: string | null\n    subscribed_at: Date | null\n    unsubscribed_at: Date | null\n  }\n\n  export type Community_platform_subscriptionsCountAggregateOutputType = {\n    id: number\n    member_id: number\n    community_id: number\n    subscribed_at: number\n    unsubscribed_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_subscriptionsMinAggregateInputType = {\n    id?: true\n    member_id?: true\n    community_id?: true\n    subscribed_at?: true\n    unsubscribed_at?: true\n  }\n\n  export type Community_platform_subscriptionsMaxAggregateInputType = {\n    id?: true\n    member_id?: true\n    community_id?: true\n    subscribed_at?: true\n    unsubscribed_at?: true\n  }\n\n  export type Community_platform_subscriptionsCountAggregateInputType = {\n    id?: true\n    member_id?: true\n    community_id?: true\n    subscribed_at?: true\n    unsubscribed_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_subscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_subscriptions to aggregate.\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_subscriptions to fetch.\n     */\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_subscriptions\n    **/\n    _count?: true | Community_platform_subscriptionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_subscriptionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_subscriptionsMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_subscriptionsAggregateType<T extends Community_platform_subscriptionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_subscriptions]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_subscriptions[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_subscriptions[P]>\n  }\n\n\n\n\n  export type community_platform_subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_subscriptionsWhereInput\n    orderBy?: community_platform_subscriptionsOrderByWithAggregationInput | community_platform_subscriptionsOrderByWithAggregationInput[]\n    by: Community_platform_subscriptionsScalarFieldEnum[] | Community_platform_subscriptionsScalarFieldEnum\n    having?: community_platform_subscriptionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_subscriptionsCountAggregateInputType | true\n    _min?: Community_platform_subscriptionsMinAggregateInputType\n    _max?: Community_platform_subscriptionsMaxAggregateInputType\n  }\n\n  export type Community_platform_subscriptionsGroupByOutputType = {\n    id: string\n    member_id: string\n    community_id: string\n    subscribed_at: Date\n    unsubscribed_at: Date | null\n    _count: Community_platform_subscriptionsCountAggregateOutputType | null\n    _min: Community_platform_subscriptionsMinAggregateOutputType | null\n    _max: Community_platform_subscriptionsMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_subscriptionsGroupByPayload<T extends community_platform_subscriptionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_subscriptionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_subscriptionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_subscriptionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_subscriptionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    community_id?: boolean\n    subscribed_at?: boolean\n    unsubscribed_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_subscriptions\"]>\n\n  export type community_platform_subscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    community_id?: boolean\n    subscribed_at?: boolean\n    unsubscribed_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_subscriptions\"]>\n\n  export type community_platform_subscriptionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    member_id?: boolean\n    community_id?: boolean\n    subscribed_at?: boolean\n    unsubscribed_at?: boolean\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_subscriptions\"]>\n\n  export type community_platform_subscriptionsSelectScalar = {\n    id?: boolean\n    member_id?: boolean\n    community_id?: boolean\n    subscribed_at?: boolean\n    unsubscribed_at?: boolean\n  }\n\n  export type community_platform_subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"member_id\" | \"community_id\" | \"subscribed_at\" | \"unsubscribed_at\", ExtArgs[\"result\"][\"community_platform_subscriptions\"]>\n  export type community_platform_subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }\n  export type community_platform_subscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }\n  export type community_platform_subscriptionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    community?: boolean | community_platform_communitiesDefaultArgs<ExtArgs>\n  }\n\n  export type $community_platform_subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_subscriptions\"\n    objects: {\n      member: Prisma.$community_platform_membersPayload<ExtArgs>\n      community: Prisma.$community_platform_communitiesPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Subscribing member's {@link community_platform_members.id}.\n       */\n      member_id: string\n      /**\n       * Subscribed community's {@link community_platform_communities.id}.\n       */\n      community_id: string\n      /**\n       * Timestamp when the subscription was established.\n       */\n      subscribed_at: Date\n      /**\n       * Timestamp when the subscription was terminated (null if still active).\n       */\n      unsubscribed_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_subscriptions\"]>\n    composites: {}\n  }\n\n  type community_platform_subscriptionsGetPayload<S extends boolean | null | undefined | community_platform_subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$community_platform_subscriptionsPayload, S>\n\n  type community_platform_subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_subscriptionsCountAggregateInputType | true\n    }\n\n  export interface community_platform_subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_subscriptions'], meta: { name: 'community_platform_subscriptions' } }\n    /**\n     * Find zero or one Community_platform_subscriptions that matches the filter.\n     * @param {community_platform_subscriptionsFindUniqueArgs} args - Arguments to find a Community_platform_subscriptions\n     * @example\n     * // Get one Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_subscriptionsFindUniqueArgs>(args: SelectSubset<T, community_platform_subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_subscriptions that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_subscriptions\n     * @example\n     * // Get one Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_subscriptions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsFindFirstArgs} args - Arguments to find a Community_platform_subscriptions\n     * @example\n     * // Get one Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_subscriptionsFindFirstArgs>(args?: SelectSubset<T, community_platform_subscriptionsFindFirstArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_subscriptions that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsFindFirstOrThrowArgs} args - Arguments to find a Community_platform_subscriptions\n     * @example\n     * // Get one Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_subscriptions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findMany()\n     * \n     * // Get first 10 Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_subscriptionsWithIdOnly = await prisma.community_platform_subscriptions.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_subscriptionsFindManyArgs>(args?: SelectSubset<T, community_platform_subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsCreateArgs} args - Arguments to create a Community_platform_subscriptions.\n     * @example\n     * // Create one Community_platform_subscriptions\n     * const Community_platform_subscriptions = await prisma.community_platform_subscriptions.create({\n     *   data: {\n     *     // ... data to create a Community_platform_subscriptions\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_subscriptionsCreateArgs>(args: SelectSubset<T, community_platform_subscriptionsCreateArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsCreateManyArgs} args - Arguments to create many Community_platform_subscriptions.\n     * @example\n     * // Create many Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_subscriptionsCreateManyArgs>(args?: SelectSubset<T, community_platform_subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_subscriptions and returns the data saved in the database.\n     * @param {community_platform_subscriptionsCreateManyAndReturnArgs} args - Arguments to create many Community_platform_subscriptions.\n     * @example\n     * // Create many Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_subscriptions and only return the `id`\n     * const community_platform_subscriptionsWithIdOnly = await prisma.community_platform_subscriptions.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_subscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_subscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsDeleteArgs} args - Arguments to delete one Community_platform_subscriptions.\n     * @example\n     * // Delete one Community_platform_subscriptions\n     * const Community_platform_subscriptions = await prisma.community_platform_subscriptions.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_subscriptions\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_subscriptionsDeleteArgs>(args: SelectSubset<T, community_platform_subscriptionsDeleteArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsUpdateArgs} args - Arguments to update one Community_platform_subscriptions.\n     * @example\n     * // Update one Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_subscriptionsUpdateArgs>(args: SelectSubset<T, community_platform_subscriptionsUpdateArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsDeleteManyArgs} args - Arguments to filter Community_platform_subscriptions to delete.\n     * @example\n     * // Delete a few Community_platform_subscriptions\n     * const { count } = await prisma.community_platform_subscriptions.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_subscriptionsDeleteManyArgs>(args?: SelectSubset<T, community_platform_subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_subscriptionsUpdateManyArgs>(args: SelectSubset<T, community_platform_subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_subscriptions and returns the data updated in the database.\n     * @param {community_platform_subscriptionsUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_subscriptions.\n     * @example\n     * // Update many Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_subscriptions and only return the `id`\n     * const community_platform_subscriptionsWithIdOnly = await prisma.community_platform_subscriptions.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_subscriptionsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_subscriptionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_subscriptions.\n     * @param {community_platform_subscriptionsUpsertArgs} args - Arguments to update or create a Community_platform_subscriptions.\n     * @example\n     * // Update or create a Community_platform_subscriptions\n     * const community_platform_subscriptions = await prisma.community_platform_subscriptions.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_subscriptions\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_subscriptions we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_subscriptionsUpsertArgs>(args: SelectSubset<T, community_platform_subscriptionsUpsertArgs<ExtArgs>>): Prisma__community_platform_subscriptionsClient<$Result.GetResult<Prisma.$community_platform_subscriptionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsCountArgs} args - Arguments to filter Community_platform_subscriptions to count.\n     * @example\n     * // Count the number of Community_platform_subscriptions\n     * const count = await prisma.community_platform_subscriptions.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_subscriptions we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_subscriptionsCountArgs>(\n      args?: Subset<T, community_platform_subscriptionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_subscriptionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_subscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_subscriptionsAggregateArgs>(args: Subset<T, Community_platform_subscriptionsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_subscriptionsAggregateType<T>>\n\n    /**\n     * Group by Community_platform_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_subscriptionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_subscriptionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_subscriptionsGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_subscriptionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_subscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_subscriptions model\n   */\n  readonly fields: community_platform_subscriptionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_subscriptions.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    community<T extends community_platform_communitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_communitiesDefaultArgs<ExtArgs>>): Prisma__community_platform_communitiesClient<$Result.GetResult<Prisma.$community_platform_communitiesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_subscriptions model\n   */\n  interface community_platform_subscriptionsFieldRefs {\n    readonly id: FieldRef<\"community_platform_subscriptions\", 'String'>\n    readonly member_id: FieldRef<\"community_platform_subscriptions\", 'String'>\n    readonly community_id: FieldRef<\"community_platform_subscriptions\", 'String'>\n    readonly subscribed_at: FieldRef<\"community_platform_subscriptions\", 'DateTime'>\n    readonly unsubscribed_at: FieldRef<\"community_platform_subscriptions\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_subscriptions findUnique\n   */\n  export type community_platform_subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_subscriptions to fetch.\n     */\n    where: community_platform_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_subscriptions findUniqueOrThrow\n   */\n  export type community_platform_subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_subscriptions to fetch.\n     */\n    where: community_platform_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_subscriptions findFirst\n   */\n  export type community_platform_subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_subscriptions to fetch.\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_subscriptions to fetch.\n     */\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_subscriptions.\n     */\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_subscriptions.\n     */\n    distinct?: Community_platform_subscriptionsScalarFieldEnum | Community_platform_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_subscriptions findFirstOrThrow\n   */\n  export type community_platform_subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_subscriptions to fetch.\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_subscriptions to fetch.\n     */\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_subscriptions.\n     */\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_subscriptions.\n     */\n    distinct?: Community_platform_subscriptionsScalarFieldEnum | Community_platform_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_subscriptions findMany\n   */\n  export type community_platform_subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_subscriptions to fetch.\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_subscriptions to fetch.\n     */\n    orderBy?: community_platform_subscriptionsOrderByWithRelationInput | community_platform_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_subscriptions.\n     */\n    cursor?: community_platform_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_subscriptions.\n     */\n    skip?: number\n    distinct?: Community_platform_subscriptionsScalarFieldEnum | Community_platform_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_subscriptions create\n   */\n  export type community_platform_subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_subscriptions.\n     */\n    data: XOR<community_platform_subscriptionsCreateInput, community_platform_subscriptionsUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_subscriptions createMany\n   */\n  export type community_platform_subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_subscriptions.\n     */\n    data: community_platform_subscriptionsCreateManyInput | community_platform_subscriptionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_subscriptions createManyAndReturn\n   */\n  export type community_platform_subscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_subscriptions.\n     */\n    data: community_platform_subscriptionsCreateManyInput | community_platform_subscriptionsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_subscriptions update\n   */\n  export type community_platform_subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_subscriptions.\n     */\n    data: XOR<community_platform_subscriptionsUpdateInput, community_platform_subscriptionsUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_subscriptions to update.\n     */\n    where: community_platform_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_subscriptions updateMany\n   */\n  export type community_platform_subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_subscriptions.\n     */\n    data: XOR<community_platform_subscriptionsUpdateManyMutationInput, community_platform_subscriptionsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_subscriptions to update\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * Limit how many community_platform_subscriptions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_subscriptions updateManyAndReturn\n   */\n  export type community_platform_subscriptionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_subscriptions.\n     */\n    data: XOR<community_platform_subscriptionsUpdateManyMutationInput, community_platform_subscriptionsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_subscriptions to update\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * Limit how many community_platform_subscriptions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_subscriptions upsert\n   */\n  export type community_platform_subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_subscriptions to update in case it exists.\n     */\n    where: community_platform_subscriptionsWhereUniqueInput\n    /**\n     * In case the community_platform_subscriptions found by the `where` argument doesn't exist, create a new community_platform_subscriptions with this data.\n     */\n    create: XOR<community_platform_subscriptionsCreateInput, community_platform_subscriptionsUncheckedCreateInput>\n    /**\n     * In case the community_platform_subscriptions was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_subscriptionsUpdateInput, community_platform_subscriptionsUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_subscriptions delete\n   */\n  export type community_platform_subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_subscriptions to delete.\n     */\n    where: community_platform_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_subscriptions deleteMany\n   */\n  export type community_platform_subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_subscriptions to delete\n     */\n    where?: community_platform_subscriptionsWhereInput\n    /**\n     * Limit how many community_platform_subscriptions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_subscriptions without action\n   */\n  export type community_platform_subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_subscriptions\n     */\n    select?: community_platform_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_subscriptions\n     */\n    omit?: community_platform_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_subscriptionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model community_platform_reports\n   */\n\n  export type AggregateCommunity_platform_reports = {\n    _count: Community_platform_reportsCountAggregateOutputType | null\n    _min: Community_platform_reportsMinAggregateOutputType | null\n    _max: Community_platform_reportsMaxAggregateOutputType | null\n  }\n\n  export type Community_platform_reportsMinAggregateOutputType = {\n    id: string | null\n    reporter_id: string | null\n    assigned_moderator_id: string | null\n    reported_post_id: string | null\n    reported_comment_id: string | null\n    report_type: string | null\n    description: string | null\n    status: string | null\n    moderation_notes: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_reportsMaxAggregateOutputType = {\n    id: string | null\n    reporter_id: string | null\n    assigned_moderator_id: string | null\n    reported_post_id: string | null\n    reported_comment_id: string | null\n    report_type: string | null\n    description: string | null\n    status: string | null\n    moderation_notes: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Community_platform_reportsCountAggregateOutputType = {\n    id: number\n    reporter_id: number\n    assigned_moderator_id: number\n    reported_post_id: number\n    reported_comment_id: number\n    report_type: number\n    description: number\n    status: number\n    moderation_notes: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Community_platform_reportsMinAggregateInputType = {\n    id?: true\n    reporter_id?: true\n    assigned_moderator_id?: true\n    reported_post_id?: true\n    reported_comment_id?: true\n    report_type?: true\n    description?: true\n    status?: true\n    moderation_notes?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_reportsMaxAggregateInputType = {\n    id?: true\n    reporter_id?: true\n    assigned_moderator_id?: true\n    reported_post_id?: true\n    reported_comment_id?: true\n    report_type?: true\n    description?: true\n    status?: true\n    moderation_notes?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Community_platform_reportsCountAggregateInputType = {\n    id?: true\n    reporter_id?: true\n    assigned_moderator_id?: true\n    reported_post_id?: true\n    reported_comment_id?: true\n    report_type?: true\n    description?: true\n    status?: true\n    moderation_notes?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Community_platform_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_reports to aggregate.\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_reports to fetch.\n     */\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: community_platform_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned community_platform_reports\n    **/\n    _count?: true | Community_platform_reportsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Community_platform_reportsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Community_platform_reportsMaxAggregateInputType\n  }\n\n  export type GetCommunity_platform_reportsAggregateType<T extends Community_platform_reportsAggregateArgs> = {\n        [P in keyof T & keyof AggregateCommunity_platform_reports]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateCommunity_platform_reports[P]>\n      : GetScalarType<T[P], AggregateCommunity_platform_reports[P]>\n  }\n\n\n\n\n  export type community_platform_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: community_platform_reportsWhereInput\n    orderBy?: community_platform_reportsOrderByWithAggregationInput | community_platform_reportsOrderByWithAggregationInput[]\n    by: Community_platform_reportsScalarFieldEnum[] | Community_platform_reportsScalarFieldEnum\n    having?: community_platform_reportsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Community_platform_reportsCountAggregateInputType | true\n    _min?: Community_platform_reportsMinAggregateInputType\n    _max?: Community_platform_reportsMaxAggregateInputType\n  }\n\n  export type Community_platform_reportsGroupByOutputType = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id: string | null\n    reported_post_id: string | null\n    reported_comment_id: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Community_platform_reportsCountAggregateOutputType | null\n    _min: Community_platform_reportsMinAggregateOutputType | null\n    _max: Community_platform_reportsMaxAggregateOutputType | null\n  }\n\n  type GetCommunity_platform_reportsGroupByPayload<T extends community_platform_reportsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Community_platform_reportsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Community_platform_reportsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Community_platform_reportsGroupByOutputType[P]>\n            : GetScalarType<T[P], Community_platform_reportsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type community_platform_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporter_id?: boolean\n    assigned_moderator_id?: boolean\n    reported_post_id?: boolean\n    reported_comment_id?: boolean\n    report_type?: boolean\n    description?: boolean\n    status?: boolean\n    moderation_notes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_reports\"]>\n\n  export type community_platform_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporter_id?: boolean\n    assigned_moderator_id?: boolean\n    reported_post_id?: boolean\n    reported_comment_id?: boolean\n    report_type?: boolean\n    description?: boolean\n    status?: boolean\n    moderation_notes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_reports\"]>\n\n  export type community_platform_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporter_id?: boolean\n    assigned_moderator_id?: boolean\n    reported_post_id?: boolean\n    reported_comment_id?: boolean\n    report_type?: boolean\n    description?: boolean\n    status?: boolean\n    moderation_notes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"community_platform_reports\"]>\n\n  export type community_platform_reportsSelectScalar = {\n    id?: boolean\n    reporter_id?: boolean\n    assigned_moderator_id?: boolean\n    reported_post_id?: boolean\n    reported_comment_id?: boolean\n    report_type?: boolean\n    description?: boolean\n    status?: boolean\n    moderation_notes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type community_platform_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"reporter_id\" | \"assigned_moderator_id\" | \"reported_post_id\" | \"reported_comment_id\" | \"report_type\" | \"description\" | \"status\" | \"moderation_notes\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"community_platform_reports\"]>\n  export type community_platform_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }\n  export type community_platform_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }\n  export type community_platform_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reporter?: boolean | community_platform_membersDefaultArgs<ExtArgs>\n    assignedModerator?: boolean | community_platform_reports$assignedModeratorArgs<ExtArgs>\n    reportedPost?: boolean | community_platform_reports$reportedPostArgs<ExtArgs>\n    reportedComment?: boolean | community_platform_reports$reportedCommentArgs<ExtArgs>\n  }\n\n  export type $community_platform_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"community_platform_reports\"\n    objects: {\n      reporter: Prisma.$community_platform_membersPayload<ExtArgs>\n      assignedModerator: Prisma.$community_platform_moderatorsPayload<ExtArgs> | null\n      reportedPost: Prisma.$community_platform_postsPayload<ExtArgs> | null\n      reportedComment: Prisma.$community_platform_commentsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Reporter's {@link community_platform_members.id}.\n       */\n      reporter_id: string\n      /**\n       * Assigned moderator's {@link community_platform_moderators.id} for\n       * handling the report.\n       */\n      assigned_moderator_id: string | null\n      /**\n       * Reported post's {@link community_platform_posts.id} if report is about a\n       * post.\n       */\n      reported_post_id: string | null\n      /**\n       * Reported comment's {@link community_platform_comments.id} if report is\n       * about a comment.\n       */\n      reported_comment_id: string | null\n      /**\n       * Type of report violation (spam, harassment, hate_speech, adult_content,\n       * misinformation, copyright, other).\n       */\n      report_type: string\n      /**\n       * Additional details provided by reporter explaining the violation concern.\n       */\n      description: string\n      /**\n       * Current processing status of the report (pending, under_review, resolved,\n       * dismissed).\n       */\n      status: string\n      /**\n       * Internal notes added by moderators during review and resolution process.\n       */\n      moderation_notes: string | null\n      /**\n       * Timestamp when the report was first submitted for moderation review.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last modification to the report record.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp for report archival without permanent removal.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"community_platform_reports\"]>\n    composites: {}\n  }\n\n  type community_platform_reportsGetPayload<S extends boolean | null | undefined | community_platform_reportsDefaultArgs> = $Result.GetResult<Prisma.$community_platform_reportsPayload, S>\n\n  type community_platform_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<community_platform_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Community_platform_reportsCountAggregateInputType | true\n    }\n\n  export interface community_platform_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_platform_reports'], meta: { name: 'community_platform_reports' } }\n    /**\n     * Find zero or one Community_platform_reports that matches the filter.\n     * @param {community_platform_reportsFindUniqueArgs} args - Arguments to find a Community_platform_reports\n     * @example\n     * // Get one Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends community_platform_reportsFindUniqueArgs>(args: SelectSubset<T, community_platform_reportsFindUniqueArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Community_platform_reports that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {community_platform_reportsFindUniqueOrThrowArgs} args - Arguments to find a Community_platform_reports\n     * @example\n     * // Get one Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends community_platform_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_platform_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsFindFirstArgs} args - Arguments to find a Community_platform_reports\n     * @example\n     * // Get one Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends community_platform_reportsFindFirstArgs>(args?: SelectSubset<T, community_platform_reportsFindFirstArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Community_platform_reports that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsFindFirstOrThrowArgs} args - Arguments to find a Community_platform_reports\n     * @example\n     * // Get one Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends community_platform_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_platform_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Community_platform_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findMany()\n     * \n     * // Get first 10 Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const community_platform_reportsWithIdOnly = await prisma.community_platform_reports.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends community_platform_reportsFindManyArgs>(args?: SelectSubset<T, community_platform_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Community_platform_reports.\n     * @param {community_platform_reportsCreateArgs} args - Arguments to create a Community_platform_reports.\n     * @example\n     * // Create one Community_platform_reports\n     * const Community_platform_reports = await prisma.community_platform_reports.create({\n     *   data: {\n     *     // ... data to create a Community_platform_reports\n     *   }\n     * })\n     * \n     */\n    create<T extends community_platform_reportsCreateArgs>(args: SelectSubset<T, community_platform_reportsCreateArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Community_platform_reports.\n     * @param {community_platform_reportsCreateManyArgs} args - Arguments to create many Community_platform_reports.\n     * @example\n     * // Create many Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends community_platform_reportsCreateManyArgs>(args?: SelectSubset<T, community_platform_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Community_platform_reports and returns the data saved in the database.\n     * @param {community_platform_reportsCreateManyAndReturnArgs} args - Arguments to create many Community_platform_reports.\n     * @example\n     * // Create many Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Community_platform_reports and only return the `id`\n     * const community_platform_reportsWithIdOnly = await prisma.community_platform_reports.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends community_platform_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_platform_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Community_platform_reports.\n     * @param {community_platform_reportsDeleteArgs} args - Arguments to delete one Community_platform_reports.\n     * @example\n     * // Delete one Community_platform_reports\n     * const Community_platform_reports = await prisma.community_platform_reports.delete({\n     *   where: {\n     *     // ... filter to delete one Community_platform_reports\n     *   }\n     * })\n     * \n     */\n    delete<T extends community_platform_reportsDeleteArgs>(args: SelectSubset<T, community_platform_reportsDeleteArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Community_platform_reports.\n     * @param {community_platform_reportsUpdateArgs} args - Arguments to update one Community_platform_reports.\n     * @example\n     * // Update one Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends community_platform_reportsUpdateArgs>(args: SelectSubset<T, community_platform_reportsUpdateArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Community_platform_reports.\n     * @param {community_platform_reportsDeleteManyArgs} args - Arguments to filter Community_platform_reports to delete.\n     * @example\n     * // Delete a few Community_platform_reports\n     * const { count } = await prisma.community_platform_reports.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends community_platform_reportsDeleteManyArgs>(args?: SelectSubset<T, community_platform_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends community_platform_reportsUpdateManyArgs>(args: SelectSubset<T, community_platform_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Community_platform_reports and returns the data updated in the database.\n     * @param {community_platform_reportsUpdateManyAndReturnArgs} args - Arguments to update many Community_platform_reports.\n     * @example\n     * // Update many Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Community_platform_reports and only return the `id`\n     * const community_platform_reportsWithIdOnly = await prisma.community_platform_reports.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends community_platform_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_platform_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Community_platform_reports.\n     * @param {community_platform_reportsUpsertArgs} args - Arguments to update or create a Community_platform_reports.\n     * @example\n     * // Update or create a Community_platform_reports\n     * const community_platform_reports = await prisma.community_platform_reports.upsert({\n     *   create: {\n     *     // ... data to create a Community_platform_reports\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Community_platform_reports we want to update\n     *   }\n     * })\n     */\n    upsert<T extends community_platform_reportsUpsertArgs>(args: SelectSubset<T, community_platform_reportsUpsertArgs<ExtArgs>>): Prisma__community_platform_reportsClient<$Result.GetResult<Prisma.$community_platform_reportsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Community_platform_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsCountArgs} args - Arguments to filter Community_platform_reports to count.\n     * @example\n     * // Count the number of Community_platform_reports\n     * const count = await prisma.community_platform_reports.count({\n     *   where: {\n     *     // ... the filter for the Community_platform_reports we want to count\n     *   }\n     * })\n    **/\n    count<T extends community_platform_reportsCountArgs>(\n      args?: Subset<T, community_platform_reportsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Community_platform_reportsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Community_platform_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Community_platform_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Community_platform_reportsAggregateArgs>(args: Subset<T, Community_platform_reportsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_platform_reportsAggregateType<T>>\n\n    /**\n     * Group by Community_platform_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {community_platform_reportsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends community_platform_reportsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: community_platform_reportsGroupByArgs['orderBy'] }\n        : { orderBy?: community_platform_reportsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, community_platform_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_platform_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the community_platform_reports model\n   */\n  readonly fields: community_platform_reportsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for community_platform_reports.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__community_platform_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    reporter<T extends community_platform_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_membersDefaultArgs<ExtArgs>>): Prisma__community_platform_membersClient<$Result.GetResult<Prisma.$community_platform_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    assignedModerator<T extends community_platform_reports$assignedModeratorArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_reports$assignedModeratorArgs<ExtArgs>>): Prisma__community_platform_moderatorsClient<$Result.GetResult<Prisma.$community_platform_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    reportedPost<T extends community_platform_reports$reportedPostArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_reports$reportedPostArgs<ExtArgs>>): Prisma__community_platform_postsClient<$Result.GetResult<Prisma.$community_platform_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    reportedComment<T extends community_platform_reports$reportedCommentArgs<ExtArgs> = {}>(args?: Subset<T, community_platform_reports$reportedCommentArgs<ExtArgs>>): Prisma__community_platform_commentsClient<$Result.GetResult<Prisma.$community_platform_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the community_platform_reports model\n   */\n  interface community_platform_reportsFieldRefs {\n    readonly id: FieldRef<\"community_platform_reports\", 'String'>\n    readonly reporter_id: FieldRef<\"community_platform_reports\", 'String'>\n    readonly assigned_moderator_id: FieldRef<\"community_platform_reports\", 'String'>\n    readonly reported_post_id: FieldRef<\"community_platform_reports\", 'String'>\n    readonly reported_comment_id: FieldRef<\"community_platform_reports\", 'String'>\n    readonly report_type: FieldRef<\"community_platform_reports\", 'String'>\n    readonly description: FieldRef<\"community_platform_reports\", 'String'>\n    readonly status: FieldRef<\"community_platform_reports\", 'String'>\n    readonly moderation_notes: FieldRef<\"community_platform_reports\", 'String'>\n    readonly created_at: FieldRef<\"community_platform_reports\", 'DateTime'>\n    readonly updated_at: FieldRef<\"community_platform_reports\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"community_platform_reports\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * community_platform_reports findUnique\n   */\n  export type community_platform_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_reports to fetch.\n     */\n    where: community_platform_reportsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_reports findUniqueOrThrow\n   */\n  export type community_platform_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_reports to fetch.\n     */\n    where: community_platform_reportsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_reports findFirst\n   */\n  export type community_platform_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_reports to fetch.\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_reports to fetch.\n     */\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_reports.\n     */\n    cursor?: community_platform_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_reports.\n     */\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_reports findFirstOrThrow\n   */\n  export type community_platform_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_reports to fetch.\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_reports to fetch.\n     */\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for community_platform_reports.\n     */\n    cursor?: community_platform_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of community_platform_reports.\n     */\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_reports findMany\n   */\n  export type community_platform_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which community_platform_reports to fetch.\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of community_platform_reports to fetch.\n     */\n    orderBy?: community_platform_reportsOrderByWithRelationInput | community_platform_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing community_platform_reports.\n     */\n    cursor?: community_platform_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` community_platform_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` community_platform_reports.\n     */\n    skip?: number\n    distinct?: Community_platform_reportsScalarFieldEnum | Community_platform_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * community_platform_reports create\n   */\n  export type community_platform_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a community_platform_reports.\n     */\n    data: XOR<community_platform_reportsCreateInput, community_platform_reportsUncheckedCreateInput>\n  }\n\n  /**\n   * community_platform_reports createMany\n   */\n  export type community_platform_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many community_platform_reports.\n     */\n    data: community_platform_reportsCreateManyInput | community_platform_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * community_platform_reports createManyAndReturn\n   */\n  export type community_platform_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to create many community_platform_reports.\n     */\n    data: community_platform_reportsCreateManyInput | community_platform_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_reports update\n   */\n  export type community_platform_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a community_platform_reports.\n     */\n    data: XOR<community_platform_reportsUpdateInput, community_platform_reportsUncheckedUpdateInput>\n    /**\n     * Choose, which community_platform_reports to update.\n     */\n    where: community_platform_reportsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_reports updateMany\n   */\n  export type community_platform_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update community_platform_reports.\n     */\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_reports to update\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * Limit how many community_platform_reports to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_reports updateManyAndReturn\n   */\n  export type community_platform_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to update community_platform_reports.\n     */\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which community_platform_reports to update\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * Limit how many community_platform_reports to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * community_platform_reports upsert\n   */\n  export type community_platform_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the community_platform_reports to update in case it exists.\n     */\n    where: community_platform_reportsWhereUniqueInput\n    /**\n     * In case the community_platform_reports found by the `where` argument doesn't exist, create a new community_platform_reports with this data.\n     */\n    create: XOR<community_platform_reportsCreateInput, community_platform_reportsUncheckedCreateInput>\n    /**\n     * In case the community_platform_reports was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<community_platform_reportsUpdateInput, community_platform_reportsUncheckedUpdateInput>\n  }\n\n  /**\n   * community_platform_reports delete\n   */\n  export type community_platform_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n    /**\n     * Filter which community_platform_reports to delete.\n     */\n    where: community_platform_reportsWhereUniqueInput\n  }\n\n  /**\n   * community_platform_reports deleteMany\n   */\n  export type community_platform_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which community_platform_reports to delete\n     */\n    where?: community_platform_reportsWhereInput\n    /**\n     * Limit how many community_platform_reports to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * community_platform_reports.assignedModerator\n   */\n  export type community_platform_reports$assignedModeratorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_moderators\n     */\n    select?: community_platform_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_moderators\n     */\n    omit?: community_platform_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_moderatorsInclude<ExtArgs> | null\n    where?: community_platform_moderatorsWhereInput\n  }\n\n  /**\n   * community_platform_reports.reportedPost\n   */\n  export type community_platform_reports$reportedPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_posts\n     */\n    select?: community_platform_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_posts\n     */\n    omit?: community_platform_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_postsInclude<ExtArgs> | null\n    where?: community_platform_postsWhereInput\n  }\n\n  /**\n   * community_platform_reports.reportedComment\n   */\n  export type community_platform_reports$reportedCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_comments\n     */\n    select?: community_platform_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_comments\n     */\n    omit?: community_platform_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_commentsInclude<ExtArgs> | null\n    where?: community_platform_commentsWhereInput\n  }\n\n  /**\n   * community_platform_reports without action\n   */\n  export type community_platform_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the community_platform_reports\n     */\n    select?: community_platform_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the community_platform_reports\n     */\n    omit?: community_platform_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: community_platform_reportsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Community_platform_communitiesScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    status: 'status',\n    business_status: 'business_status',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Community_platform_communitiesScalarFieldEnum = (typeof Community_platform_communitiesScalarFieldEnum)[keyof typeof Community_platform_communitiesScalarFieldEnum]\n\n\n  export const Community_platform_membersScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    nickname: 'nickname',\n    bio: 'bio',\n    avatar_uri: 'avatar_uri',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Community_platform_membersScalarFieldEnum = (typeof Community_platform_membersScalarFieldEnum)[keyof typeof Community_platform_membersScalarFieldEnum]\n\n\n  export const Community_platform_moderatorsScalarFieldEnum: {\n    id: 'id',\n    community_platform_member_id: 'community_platform_member_id',\n    community_platform_community_id: 'community_platform_community_id',\n    assigned_at: 'assigned_at'\n  };\n\n  export type Community_platform_moderatorsScalarFieldEnum = (typeof Community_platform_moderatorsScalarFieldEnum)[keyof typeof Community_platform_moderatorsScalarFieldEnum]\n\n\n  export const Community_platform_postsScalarFieldEnum: {\n    id: 'id',\n    community_platform_community_id: 'community_platform_community_id',\n    community_platform_member_id: 'community_platform_member_id',\n    title: 'title',\n    content_type: 'content_type',\n    text_content: 'text_content',\n    url: 'url',\n    image_url: 'image_url',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Community_platform_postsScalarFieldEnum = (typeof Community_platform_postsScalarFieldEnum)[keyof typeof Community_platform_postsScalarFieldEnum]\n\n\n  export const Community_platform_commentsScalarFieldEnum: {\n    id: 'id',\n    community_platform_post_id: 'community_platform_post_id',\n    community_platform_member_id: 'community_platform_member_id',\n    parent_comment_id: 'parent_comment_id',\n    content: 'content',\n    depth: 'depth',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Community_platform_commentsScalarFieldEnum = (typeof Community_platform_commentsScalarFieldEnum)[keyof typeof Community_platform_commentsScalarFieldEnum]\n\n\n  export const Community_platform_votesScalarFieldEnum: {\n    id: 'id',\n    member_id: 'member_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    vote_type: 'vote_type',\n    created_at: 'created_at'\n  };\n\n  export type Community_platform_votesScalarFieldEnum = (typeof Community_platform_votesScalarFieldEnum)[keyof typeof Community_platform_votesScalarFieldEnum]\n\n\n  export const Community_platform_subscriptionsScalarFieldEnum: {\n    id: 'id',\n    member_id: 'member_id',\n    community_id: 'community_id',\n    subscribed_at: 'subscribed_at',\n    unsubscribed_at: 'unsubscribed_at'\n  };\n\n  export type Community_platform_subscriptionsScalarFieldEnum = (typeof Community_platform_subscriptionsScalarFieldEnum)[keyof typeof Community_platform_subscriptionsScalarFieldEnum]\n\n\n  export const Community_platform_reportsScalarFieldEnum: {\n    id: 'id',\n    reporter_id: 'reporter_id',\n    assigned_moderator_id: 'assigned_moderator_id',\n    reported_post_id: 'reported_post_id',\n    reported_comment_id: 'reported_comment_id',\n    report_type: 'report_type',\n    description: 'description',\n    status: 'status',\n    moderation_notes: 'moderation_notes',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Community_platform_reportsScalarFieldEnum = (typeof Community_platform_reportsScalarFieldEnum)[keyof typeof Community_platform_reportsScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float'\n   */\n  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float[]'\n   */\n  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type community_platform_communitiesWhereInput = {\n    AND?: community_platform_communitiesWhereInput | community_platform_communitiesWhereInput[]\n    OR?: community_platform_communitiesWhereInput[]\n    NOT?: community_platform_communitiesWhereInput | community_platform_communitiesWhereInput[]\n    id?: UuidFilter<\"community_platform_communities\"> | string\n    code?: StringFilter<\"community_platform_communities\"> | string\n    name?: StringFilter<\"community_platform_communities\"> | string\n    description?: StringFilter<\"community_platform_communities\"> | string\n    status?: StringFilter<\"community_platform_communities\"> | string\n    business_status?: StringFilter<\"community_platform_communities\"> | string\n    created_at?: DateTimeFilter<\"community_platform_communities\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_communities\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_communities\"> | Date | string | null\n    community_platform_moderators?: Community_platform_moderatorsListRelationFilter\n    community_platform_posts?: Community_platform_postsListRelationFilter\n    community_platform_subscriptions?: Community_platform_subscriptionsListRelationFilter\n  }\n\n  export type community_platform_communitiesOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    business_status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    community_platform_moderators?: community_platform_moderatorsOrderByRelationAggregateInput\n    community_platform_posts?: community_platform_postsOrderByRelationAggregateInput\n    community_platform_subscriptions?: community_platform_subscriptionsOrderByRelationAggregateInput\n  }\n\n  export type community_platform_communitiesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    AND?: community_platform_communitiesWhereInput | community_platform_communitiesWhereInput[]\n    OR?: community_platform_communitiesWhereInput[]\n    NOT?: community_platform_communitiesWhereInput | community_platform_communitiesWhereInput[]\n    name?: StringFilter<\"community_platform_communities\"> | string\n    description?: StringFilter<\"community_platform_communities\"> | string\n    status?: StringFilter<\"community_platform_communities\"> | string\n    business_status?: StringFilter<\"community_platform_communities\"> | string\n    created_at?: DateTimeFilter<\"community_platform_communities\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_communities\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_communities\"> | Date | string | null\n    community_platform_moderators?: Community_platform_moderatorsListRelationFilter\n    community_platform_posts?: Community_platform_postsListRelationFilter\n    community_platform_subscriptions?: Community_platform_subscriptionsListRelationFilter\n  }, \"id\" | \"code\">\n\n  export type community_platform_communitiesOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    business_status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: community_platform_communitiesCountOrderByAggregateInput\n    _max?: community_platform_communitiesMaxOrderByAggregateInput\n    _min?: community_platform_communitiesMinOrderByAggregateInput\n  }\n\n  export type community_platform_communitiesScalarWhereWithAggregatesInput = {\n    AND?: community_platform_communitiesScalarWhereWithAggregatesInput | community_platform_communitiesScalarWhereWithAggregatesInput[]\n    OR?: community_platform_communitiesScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_communitiesScalarWhereWithAggregatesInput | community_platform_communitiesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_communities\"> | string\n    code?: StringWithAggregatesFilter<\"community_platform_communities\"> | string\n    name?: StringWithAggregatesFilter<\"community_platform_communities\"> | string\n    description?: StringWithAggregatesFilter<\"community_platform_communities\"> | string\n    status?: StringWithAggregatesFilter<\"community_platform_communities\"> | string\n    business_status?: StringWithAggregatesFilter<\"community_platform_communities\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_communities\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"community_platform_communities\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_communities\"> | Date | string | null\n  }\n\n  export type community_platform_membersWhereInput = {\n    AND?: community_platform_membersWhereInput | community_platform_membersWhereInput[]\n    OR?: community_platform_membersWhereInput[]\n    NOT?: community_platform_membersWhereInput | community_platform_membersWhereInput[]\n    id?: UuidFilter<\"community_platform_members\"> | string\n    email?: StringFilter<\"community_platform_members\"> | string\n    password_hash?: StringFilter<\"community_platform_members\"> | string\n    nickname?: StringFilter<\"community_platform_members\"> | string\n    bio?: StringNullableFilter<\"community_platform_members\"> | string | null\n    avatar_uri?: StringNullableFilter<\"community_platform_members\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_members\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_members\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_members\"> | Date | string | null\n    community_platform_moderators?: Community_platform_moderatorsListRelationFilter\n    community_platform_posts?: Community_platform_postsListRelationFilter\n    community_platform_comments?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_subscriptions?: Community_platform_subscriptionsListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }\n\n  export type community_platform_membersOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    nickname?: SortOrder\n    bio?: SortOrderInput | SortOrder\n    avatar_uri?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    community_platform_moderators?: community_platform_moderatorsOrderByRelationAggregateInput\n    community_platform_posts?: community_platform_postsOrderByRelationAggregateInput\n    community_platform_comments?: community_platform_commentsOrderByRelationAggregateInput\n    community_platform_votes?: community_platform_votesOrderByRelationAggregateInput\n    community_platform_subscriptions?: community_platform_subscriptionsOrderByRelationAggregateInput\n    community_platform_reports?: community_platform_reportsOrderByRelationAggregateInput\n  }\n\n  export type community_platform_membersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    nickname?: string\n    AND?: community_platform_membersWhereInput | community_platform_membersWhereInput[]\n    OR?: community_platform_membersWhereInput[]\n    NOT?: community_platform_membersWhereInput | community_platform_membersWhereInput[]\n    password_hash?: StringFilter<\"community_platform_members\"> | string\n    bio?: StringNullableFilter<\"community_platform_members\"> | string | null\n    avatar_uri?: StringNullableFilter<\"community_platform_members\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_members\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_members\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_members\"> | Date | string | null\n    community_platform_moderators?: Community_platform_moderatorsListRelationFilter\n    community_platform_posts?: Community_platform_postsListRelationFilter\n    community_platform_comments?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_subscriptions?: Community_platform_subscriptionsListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }, \"id\" | \"email\" | \"nickname\">\n\n  export type community_platform_membersOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    nickname?: SortOrder\n    bio?: SortOrderInput | SortOrder\n    avatar_uri?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: community_platform_membersCountOrderByAggregateInput\n    _max?: community_platform_membersMaxOrderByAggregateInput\n    _min?: community_platform_membersMinOrderByAggregateInput\n  }\n\n  export type community_platform_membersScalarWhereWithAggregatesInput = {\n    AND?: community_platform_membersScalarWhereWithAggregatesInput | community_platform_membersScalarWhereWithAggregatesInput[]\n    OR?: community_platform_membersScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_membersScalarWhereWithAggregatesInput | community_platform_membersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_members\"> | string\n    email?: StringWithAggregatesFilter<\"community_platform_members\"> | string\n    password_hash?: StringWithAggregatesFilter<\"community_platform_members\"> | string\n    nickname?: StringWithAggregatesFilter<\"community_platform_members\"> | string\n    bio?: StringNullableWithAggregatesFilter<\"community_platform_members\"> | string | null\n    avatar_uri?: StringNullableWithAggregatesFilter<\"community_platform_members\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_members\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"community_platform_members\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_members\"> | Date | string | null\n  }\n\n  export type community_platform_moderatorsWhereInput = {\n    AND?: community_platform_moderatorsWhereInput | community_platform_moderatorsWhereInput[]\n    OR?: community_platform_moderatorsWhereInput[]\n    NOT?: community_platform_moderatorsWhereInput | community_platform_moderatorsWhereInput[]\n    id?: UuidFilter<\"community_platform_moderators\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_moderators\"> | string\n    community_platform_community_id?: UuidFilter<\"community_platform_moderators\"> | string\n    assigned_at?: DateTimeFilter<\"community_platform_moderators\"> | Date | string\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }\n\n  export type community_platform_moderatorsOrderByWithRelationInput = {\n    id?: SortOrder\n    community_platform_member_id?: SortOrder\n    community_platform_community_id?: SortOrder\n    assigned_at?: SortOrder\n    member?: community_platform_membersOrderByWithRelationInput\n    community?: community_platform_communitiesOrderByWithRelationInput\n    community_platform_reports?: community_platform_reportsOrderByRelationAggregateInput\n  }\n\n  export type community_platform_moderatorsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    community_platform_member_id_community_platform_community_id?: community_platform_moderatorsCommunity_platform_member_idCommunity_platform_community_idCompoundUniqueInput\n    AND?: community_platform_moderatorsWhereInput | community_platform_moderatorsWhereInput[]\n    OR?: community_platform_moderatorsWhereInput[]\n    NOT?: community_platform_moderatorsWhereInput | community_platform_moderatorsWhereInput[]\n    community_platform_member_id?: UuidFilter<\"community_platform_moderators\"> | string\n    community_platform_community_id?: UuidFilter<\"community_platform_moderators\"> | string\n    assigned_at?: DateTimeFilter<\"community_platform_moderators\"> | Date | string\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }, \"id\" | \"community_platform_member_id_community_platform_community_id\">\n\n  export type community_platform_moderatorsOrderByWithAggregationInput = {\n    id?: SortOrder\n    community_platform_member_id?: SortOrder\n    community_platform_community_id?: SortOrder\n    assigned_at?: SortOrder\n    _count?: community_platform_moderatorsCountOrderByAggregateInput\n    _max?: community_platform_moderatorsMaxOrderByAggregateInput\n    _min?: community_platform_moderatorsMinOrderByAggregateInput\n  }\n\n  export type community_platform_moderatorsScalarWhereWithAggregatesInput = {\n    AND?: community_platform_moderatorsScalarWhereWithAggregatesInput | community_platform_moderatorsScalarWhereWithAggregatesInput[]\n    OR?: community_platform_moderatorsScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_moderatorsScalarWhereWithAggregatesInput | community_platform_moderatorsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_moderators\"> | string\n    community_platform_member_id?: UuidWithAggregatesFilter<\"community_platform_moderators\"> | string\n    community_platform_community_id?: UuidWithAggregatesFilter<\"community_platform_moderators\"> | string\n    assigned_at?: DateTimeWithAggregatesFilter<\"community_platform_moderators\"> | Date | string\n  }\n\n  export type community_platform_postsWhereInput = {\n    AND?: community_platform_postsWhereInput | community_platform_postsWhereInput[]\n    OR?: community_platform_postsWhereInput[]\n    NOT?: community_platform_postsWhereInput | community_platform_postsWhereInput[]\n    id?: UuidFilter<\"community_platform_posts\"> | string\n    community_platform_community_id?: UuidFilter<\"community_platform_posts\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_posts\"> | string\n    title?: StringFilter<\"community_platform_posts\"> | string\n    content_type?: StringFilter<\"community_platform_posts\"> | string\n    text_content?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    image_url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_posts\"> | Date | string | null\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n    author?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community_platform_comments?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }\n\n  export type community_platform_postsOrderByWithRelationInput = {\n    id?: SortOrder\n    community_platform_community_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    title?: SortOrder\n    content_type?: SortOrder\n    text_content?: SortOrderInput | SortOrder\n    url?: SortOrderInput | SortOrder\n    image_url?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    community?: community_platform_communitiesOrderByWithRelationInput\n    author?: community_platform_membersOrderByWithRelationInput\n    community_platform_comments?: community_platform_commentsOrderByRelationAggregateInput\n    community_platform_votes?: community_platform_votesOrderByRelationAggregateInput\n    community_platform_reports?: community_platform_reportsOrderByRelationAggregateInput\n  }\n\n  export type community_platform_postsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: community_platform_postsWhereInput | community_platform_postsWhereInput[]\n    OR?: community_platform_postsWhereInput[]\n    NOT?: community_platform_postsWhereInput | community_platform_postsWhereInput[]\n    community_platform_community_id?: UuidFilter<\"community_platform_posts\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_posts\"> | string\n    title?: StringFilter<\"community_platform_posts\"> | string\n    content_type?: StringFilter<\"community_platform_posts\"> | string\n    text_content?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    image_url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_posts\"> | Date | string | null\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n    author?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community_platform_comments?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }, \"id\">\n\n  export type community_platform_postsOrderByWithAggregationInput = {\n    id?: SortOrder\n    community_platform_community_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    title?: SortOrder\n    content_type?: SortOrder\n    text_content?: SortOrderInput | SortOrder\n    url?: SortOrderInput | SortOrder\n    image_url?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: community_platform_postsCountOrderByAggregateInput\n    _max?: community_platform_postsMaxOrderByAggregateInput\n    _min?: community_platform_postsMinOrderByAggregateInput\n  }\n\n  export type community_platform_postsScalarWhereWithAggregatesInput = {\n    AND?: community_platform_postsScalarWhereWithAggregatesInput | community_platform_postsScalarWhereWithAggregatesInput[]\n    OR?: community_platform_postsScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_postsScalarWhereWithAggregatesInput | community_platform_postsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_posts\"> | string\n    community_platform_community_id?: UuidWithAggregatesFilter<\"community_platform_posts\"> | string\n    community_platform_member_id?: UuidWithAggregatesFilter<\"community_platform_posts\"> | string\n    title?: StringWithAggregatesFilter<\"community_platform_posts\"> | string\n    content_type?: StringWithAggregatesFilter<\"community_platform_posts\"> | string\n    text_content?: StringNullableWithAggregatesFilter<\"community_platform_posts\"> | string | null\n    url?: StringNullableWithAggregatesFilter<\"community_platform_posts\"> | string | null\n    image_url?: StringNullableWithAggregatesFilter<\"community_platform_posts\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_posts\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"community_platform_posts\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_posts\"> | Date | string | null\n  }\n\n  export type community_platform_commentsWhereInput = {\n    AND?: community_platform_commentsWhereInput | community_platform_commentsWhereInput[]\n    OR?: community_platform_commentsWhereInput[]\n    NOT?: community_platform_commentsWhereInput | community_platform_commentsWhereInput[]\n    id?: UuidFilter<\"community_platform_comments\"> | string\n    community_platform_post_id?: UuidFilter<\"community_platform_comments\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"community_platform_comments\"> | string | null\n    content?: StringFilter<\"community_platform_comments\"> | string\n    depth?: IntFilter<\"community_platform_comments\"> | number\n    created_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_comments\"> | Date | string | null\n    post?: XOR<Community_platform_postsScalarRelationFilter, community_platform_postsWhereInput>\n    author?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    parent?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n    recursive?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }\n\n  export type community_platform_commentsOrderByWithRelationInput = {\n    id?: SortOrder\n    community_platform_post_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    content?: SortOrder\n    depth?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    post?: community_platform_postsOrderByWithRelationInput\n    author?: community_platform_membersOrderByWithRelationInput\n    parent?: community_platform_commentsOrderByWithRelationInput\n    recursive?: community_platform_commentsOrderByRelationAggregateInput\n    community_platform_votes?: community_platform_votesOrderByRelationAggregateInput\n    community_platform_reports?: community_platform_reportsOrderByRelationAggregateInput\n  }\n\n  export type community_platform_commentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: community_platform_commentsWhereInput | community_platform_commentsWhereInput[]\n    OR?: community_platform_commentsWhereInput[]\n    NOT?: community_platform_commentsWhereInput | community_platform_commentsWhereInput[]\n    community_platform_post_id?: UuidFilter<\"community_platform_comments\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"community_platform_comments\"> | string | null\n    content?: StringFilter<\"community_platform_comments\"> | string\n    depth?: IntFilter<\"community_platform_comments\"> | number\n    created_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_comments\"> | Date | string | null\n    post?: XOR<Community_platform_postsScalarRelationFilter, community_platform_postsWhereInput>\n    author?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    parent?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n    recursive?: Community_platform_commentsListRelationFilter\n    community_platform_votes?: Community_platform_votesListRelationFilter\n    community_platform_reports?: Community_platform_reportsListRelationFilter\n  }, \"id\">\n\n  export type community_platform_commentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    community_platform_post_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    content?: SortOrder\n    depth?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: community_platform_commentsCountOrderByAggregateInput\n    _avg?: community_platform_commentsAvgOrderByAggregateInput\n    _max?: community_platform_commentsMaxOrderByAggregateInput\n    _min?: community_platform_commentsMinOrderByAggregateInput\n    _sum?: community_platform_commentsSumOrderByAggregateInput\n  }\n\n  export type community_platform_commentsScalarWhereWithAggregatesInput = {\n    AND?: community_platform_commentsScalarWhereWithAggregatesInput | community_platform_commentsScalarWhereWithAggregatesInput[]\n    OR?: community_platform_commentsScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_commentsScalarWhereWithAggregatesInput | community_platform_commentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_comments\"> | string\n    community_platform_post_id?: UuidWithAggregatesFilter<\"community_platform_comments\"> | string\n    community_platform_member_id?: UuidWithAggregatesFilter<\"community_platform_comments\"> | string\n    parent_comment_id?: UuidNullableWithAggregatesFilter<\"community_platform_comments\"> | string | null\n    content?: StringWithAggregatesFilter<\"community_platform_comments\"> | string\n    depth?: IntWithAggregatesFilter<\"community_platform_comments\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_comments\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"community_platform_comments\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_comments\"> | Date | string | null\n  }\n\n  export type community_platform_votesWhereInput = {\n    AND?: community_platform_votesWhereInput | community_platform_votesWhereInput[]\n    OR?: community_platform_votesWhereInput[]\n    NOT?: community_platform_votesWhereInput | community_platform_votesWhereInput[]\n    id?: UuidFilter<\"community_platform_votes\"> | string\n    member_id?: UuidFilter<\"community_platform_votes\"> | string\n    post_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    comment_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    vote_type?: StringFilter<\"community_platform_votes\"> | string\n    created_at?: DateTimeFilter<\"community_platform_votes\"> | Date | string\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    post?: XOR<Community_platform_postsNullableScalarRelationFilter, community_platform_postsWhereInput> | null\n    comment?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n  }\n\n  export type community_platform_votesOrderByWithRelationInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    vote_type?: SortOrder\n    created_at?: SortOrder\n    member?: community_platform_membersOrderByWithRelationInput\n    post?: community_platform_postsOrderByWithRelationInput\n    comment?: community_platform_commentsOrderByWithRelationInput\n  }\n\n  export type community_platform_votesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    member_id_post_id?: community_platform_votesMember_idPost_idCompoundUniqueInput\n    member_id_comment_id?: community_platform_votesMember_idComment_idCompoundUniqueInput\n    AND?: community_platform_votesWhereInput | community_platform_votesWhereInput[]\n    OR?: community_platform_votesWhereInput[]\n    NOT?: community_platform_votesWhereInput | community_platform_votesWhereInput[]\n    member_id?: UuidFilter<\"community_platform_votes\"> | string\n    post_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    comment_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    vote_type?: StringFilter<\"community_platform_votes\"> | string\n    created_at?: DateTimeFilter<\"community_platform_votes\"> | Date | string\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    post?: XOR<Community_platform_postsNullableScalarRelationFilter, community_platform_postsWhereInput> | null\n    comment?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n  }, \"id\" | \"member_id_post_id\" | \"member_id_comment_id\">\n\n  export type community_platform_votesOrderByWithAggregationInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    vote_type?: SortOrder\n    created_at?: SortOrder\n    _count?: community_platform_votesCountOrderByAggregateInput\n    _max?: community_platform_votesMaxOrderByAggregateInput\n    _min?: community_platform_votesMinOrderByAggregateInput\n  }\n\n  export type community_platform_votesScalarWhereWithAggregatesInput = {\n    AND?: community_platform_votesScalarWhereWithAggregatesInput | community_platform_votesScalarWhereWithAggregatesInput[]\n    OR?: community_platform_votesScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_votesScalarWhereWithAggregatesInput | community_platform_votesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_votes\"> | string\n    member_id?: UuidWithAggregatesFilter<\"community_platform_votes\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"community_platform_votes\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"community_platform_votes\"> | string | null\n    vote_type?: StringWithAggregatesFilter<\"community_platform_votes\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_votes\"> | Date | string\n  }\n\n  export type community_platform_subscriptionsWhereInput = {\n    AND?: community_platform_subscriptionsWhereInput | community_platform_subscriptionsWhereInput[]\n    OR?: community_platform_subscriptionsWhereInput[]\n    NOT?: community_platform_subscriptionsWhereInput | community_platform_subscriptionsWhereInput[]\n    id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    member_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    community_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    subscribed_at?: DateTimeFilter<\"community_platform_subscriptions\"> | Date | string\n    unsubscribed_at?: DateTimeNullableFilter<\"community_platform_subscriptions\"> | Date | string | null\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n  }\n\n  export type community_platform_subscriptionsOrderByWithRelationInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    community_id?: SortOrder\n    subscribed_at?: SortOrder\n    unsubscribed_at?: SortOrderInput | SortOrder\n    member?: community_platform_membersOrderByWithRelationInput\n    community?: community_platform_communitiesOrderByWithRelationInput\n  }\n\n  export type community_platform_subscriptionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    member_id_community_id?: community_platform_subscriptionsMember_idCommunity_idCompoundUniqueInput\n    AND?: community_platform_subscriptionsWhereInput | community_platform_subscriptionsWhereInput[]\n    OR?: community_platform_subscriptionsWhereInput[]\n    NOT?: community_platform_subscriptionsWhereInput | community_platform_subscriptionsWhereInput[]\n    member_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    community_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    subscribed_at?: DateTimeFilter<\"community_platform_subscriptions\"> | Date | string\n    unsubscribed_at?: DateTimeNullableFilter<\"community_platform_subscriptions\"> | Date | string | null\n    member?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    community?: XOR<Community_platform_communitiesScalarRelationFilter, community_platform_communitiesWhereInput>\n  }, \"id\" | \"member_id_community_id\">\n\n  export type community_platform_subscriptionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    community_id?: SortOrder\n    subscribed_at?: SortOrder\n    unsubscribed_at?: SortOrderInput | SortOrder\n    _count?: community_platform_subscriptionsCountOrderByAggregateInput\n    _max?: community_platform_subscriptionsMaxOrderByAggregateInput\n    _min?: community_platform_subscriptionsMinOrderByAggregateInput\n  }\n\n  export type community_platform_subscriptionsScalarWhereWithAggregatesInput = {\n    AND?: community_platform_subscriptionsScalarWhereWithAggregatesInput | community_platform_subscriptionsScalarWhereWithAggregatesInput[]\n    OR?: community_platform_subscriptionsScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_subscriptionsScalarWhereWithAggregatesInput | community_platform_subscriptionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_subscriptions\"> | string\n    member_id?: UuidWithAggregatesFilter<\"community_platform_subscriptions\"> | string\n    community_id?: UuidWithAggregatesFilter<\"community_platform_subscriptions\"> | string\n    subscribed_at?: DateTimeWithAggregatesFilter<\"community_platform_subscriptions\"> | Date | string\n    unsubscribed_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_subscriptions\"> | Date | string | null\n  }\n\n  export type community_platform_reportsWhereInput = {\n    AND?: community_platform_reportsWhereInput | community_platform_reportsWhereInput[]\n    OR?: community_platform_reportsWhereInput[]\n    NOT?: community_platform_reportsWhereInput | community_platform_reportsWhereInput[]\n    id?: UuidFilter<\"community_platform_reports\"> | string\n    reporter_id?: UuidFilter<\"community_platform_reports\"> | string\n    assigned_moderator_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_post_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_comment_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    report_type?: StringFilter<\"community_platform_reports\"> | string\n    description?: StringFilter<\"community_platform_reports\"> | string\n    status?: StringFilter<\"community_platform_reports\"> | string\n    moderation_notes?: StringNullableFilter<\"community_platform_reports\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_reports\"> | Date | string | null\n    reporter?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    assignedModerator?: XOR<Community_platform_moderatorsNullableScalarRelationFilter, community_platform_moderatorsWhereInput> | null\n    reportedPost?: XOR<Community_platform_postsNullableScalarRelationFilter, community_platform_postsWhereInput> | null\n    reportedComment?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n  }\n\n  export type community_platform_reportsOrderByWithRelationInput = {\n    id?: SortOrder\n    reporter_id?: SortOrder\n    assigned_moderator_id?: SortOrderInput | SortOrder\n    reported_post_id?: SortOrderInput | SortOrder\n    reported_comment_id?: SortOrderInput | SortOrder\n    report_type?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    moderation_notes?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    reporter?: community_platform_membersOrderByWithRelationInput\n    assignedModerator?: community_platform_moderatorsOrderByWithRelationInput\n    reportedPost?: community_platform_postsOrderByWithRelationInput\n    reportedComment?: community_platform_commentsOrderByWithRelationInput\n  }\n\n  export type community_platform_reportsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: community_platform_reportsWhereInput | community_platform_reportsWhereInput[]\n    OR?: community_platform_reportsWhereInput[]\n    NOT?: community_platform_reportsWhereInput | community_platform_reportsWhereInput[]\n    reporter_id?: UuidFilter<\"community_platform_reports\"> | string\n    assigned_moderator_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_post_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_comment_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    report_type?: StringFilter<\"community_platform_reports\"> | string\n    description?: StringFilter<\"community_platform_reports\"> | string\n    status?: StringFilter<\"community_platform_reports\"> | string\n    moderation_notes?: StringNullableFilter<\"community_platform_reports\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_reports\"> | Date | string | null\n    reporter?: XOR<Community_platform_membersScalarRelationFilter, community_platform_membersWhereInput>\n    assignedModerator?: XOR<Community_platform_moderatorsNullableScalarRelationFilter, community_platform_moderatorsWhereInput> | null\n    reportedPost?: XOR<Community_platform_postsNullableScalarRelationFilter, community_platform_postsWhereInput> | null\n    reportedComment?: XOR<Community_platform_commentsNullableScalarRelationFilter, community_platform_commentsWhereInput> | null\n  }, \"id\">\n\n  export type community_platform_reportsOrderByWithAggregationInput = {\n    id?: SortOrder\n    reporter_id?: SortOrder\n    assigned_moderator_id?: SortOrderInput | SortOrder\n    reported_post_id?: SortOrderInput | SortOrder\n    reported_comment_id?: SortOrderInput | SortOrder\n    report_type?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    moderation_notes?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: community_platform_reportsCountOrderByAggregateInput\n    _max?: community_platform_reportsMaxOrderByAggregateInput\n    _min?: community_platform_reportsMinOrderByAggregateInput\n  }\n\n  export type community_platform_reportsScalarWhereWithAggregatesInput = {\n    AND?: community_platform_reportsScalarWhereWithAggregatesInput | community_platform_reportsScalarWhereWithAggregatesInput[]\n    OR?: community_platform_reportsScalarWhereWithAggregatesInput[]\n    NOT?: community_platform_reportsScalarWhereWithAggregatesInput | community_platform_reportsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"community_platform_reports\"> | string\n    reporter_id?: UuidWithAggregatesFilter<\"community_platform_reports\"> | string\n    assigned_moderator_id?: UuidNullableWithAggregatesFilter<\"community_platform_reports\"> | string | null\n    reported_post_id?: UuidNullableWithAggregatesFilter<\"community_platform_reports\"> | string | null\n    reported_comment_id?: UuidNullableWithAggregatesFilter<\"community_platform_reports\"> | string | null\n    report_type?: StringWithAggregatesFilter<\"community_platform_reports\"> | string\n    description?: StringWithAggregatesFilter<\"community_platform_reports\"> | string\n    status?: StringWithAggregatesFilter<\"community_platform_reports\"> | string\n    moderation_notes?: StringNullableWithAggregatesFilter<\"community_platform_reports\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"community_platform_reports\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"community_platform_reports\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"community_platform_reports\"> | Date | string | null\n  }\n\n  export type community_platform_communitiesCreateInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutCommunityInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutCommunityInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutCommunityNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_communitiesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutCommunityNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_communitiesCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_communitiesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_communitiesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_membersCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_membersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_membersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_moderatorsCreateInput = {\n    id: string\n    assigned_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_moderatorsInput\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_moderatorsInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsUncheckedCreateInput = {\n    id: string\n    community_platform_member_id: string\n    community_platform_community_id: string\n    assigned_at: Date | string\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsCreateManyInput = {\n    id: string\n    community_platform_member_id: string\n    community_platform_community_id: string\n    assigned_at: Date | string\n  }\n\n  export type community_platform_moderatorsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_postsCreateInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateInput = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsCreateManyInput = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_postsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_postsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_commentsCreateInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsCreateManyInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_commentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_votesCreateInput = {\n    id: string\n    vote_type: string\n    created_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_votesInput\n    post?: community_platform_postsCreateNestedOneWithoutCommunity_platform_votesInput\n    comment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_votesInput\n  }\n\n  export type community_platform_votesUncheckedCreateInput = {\n    id: string\n    member_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_votesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_votesNestedInput\n    post?: community_platform_postsUpdateOneWithoutCommunity_platform_votesNestedInput\n    comment?: community_platform_commentsUpdateOneWithoutCommunity_platform_votesNestedInput\n  }\n\n  export type community_platform_votesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_votesCreateManyInput = {\n    id: string\n    member_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_votesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_votesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_subscriptionsCreateInput = {\n    id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_subscriptionsInput\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_subscriptionsInput\n  }\n\n  export type community_platform_subscriptionsUncheckedCreateInput = {\n    id: string\n    member_id: string\n    community_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_subscriptionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    community_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_subscriptionsCreateManyInput = {\n    id: string\n    member_id: string\n    community_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_subscriptionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    community_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsCreateInput = {\n    id: string\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    reporter: community_platform_membersCreateNestedOneWithoutCommunity_platform_reportsInput\n    assignedModerator?: community_platform_moderatorsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedPost?: community_platform_postsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedComment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_reportsInput\n  }\n\n  export type community_platform_reportsUncheckedCreateInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    reporter?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_reportsNestedInput\n    assignedModerator?: community_platform_moderatorsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedPost?: community_platform_postsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedComment?: community_platform_commentsUpdateOneWithoutCommunity_platform_reportsNestedInput\n  }\n\n  export type community_platform_reportsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsCreateManyInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Community_platform_moderatorsListRelationFilter = {\n    every?: community_platform_moderatorsWhereInput\n    some?: community_platform_moderatorsWhereInput\n    none?: community_platform_moderatorsWhereInput\n  }\n\n  export type Community_platform_postsListRelationFilter = {\n    every?: community_platform_postsWhereInput\n    some?: community_platform_postsWhereInput\n    none?: community_platform_postsWhereInput\n  }\n\n  export type Community_platform_subscriptionsListRelationFilter = {\n    every?: community_platform_subscriptionsWhereInput\n    some?: community_platform_subscriptionsWhereInput\n    none?: community_platform_subscriptionsWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type community_platform_moderatorsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_postsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_subscriptionsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_communitiesCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    business_status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_communitiesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    business_status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_communitiesMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    business_status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Community_platform_commentsListRelationFilter = {\n    every?: community_platform_commentsWhereInput\n    some?: community_platform_commentsWhereInput\n    none?: community_platform_commentsWhereInput\n  }\n\n  export type Community_platform_votesListRelationFilter = {\n    every?: community_platform_votesWhereInput\n    some?: community_platform_votesWhereInput\n    none?: community_platform_votesWhereInput\n  }\n\n  export type Community_platform_reportsListRelationFilter = {\n    every?: community_platform_reportsWhereInput\n    some?: community_platform_reportsWhereInput\n    none?: community_platform_reportsWhereInput\n  }\n\n  export type community_platform_commentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_votesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_reportsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type community_platform_membersCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    nickname?: SortOrder\n    bio?: SortOrder\n    avatar_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_membersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    nickname?: SortOrder\n    bio?: SortOrder\n    avatar_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_membersMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    nickname?: SortOrder\n    bio?: SortOrder\n    avatar_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Community_platform_membersScalarRelationFilter = {\n    is?: community_platform_membersWhereInput\n    isNot?: community_platform_membersWhereInput\n  }\n\n  export type Community_platform_communitiesScalarRelationFilter = {\n    is?: community_platform_communitiesWhereInput\n    isNot?: community_platform_communitiesWhereInput\n  }\n\n  export type community_platform_moderatorsCommunity_platform_member_idCommunity_platform_community_idCompoundUniqueInput = {\n    community_platform_member_id: string\n    community_platform_community_id: string\n  }\n\n  export type community_platform_moderatorsCountOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_member_id?: SortOrder\n    community_platform_community_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type community_platform_moderatorsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_member_id?: SortOrder\n    community_platform_community_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type community_platform_moderatorsMinOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_member_id?: SortOrder\n    community_platform_community_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type community_platform_postsCountOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_community_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    title?: SortOrder\n    content_type?: SortOrder\n    text_content?: SortOrder\n    url?: SortOrder\n    image_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_postsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_community_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    title?: SortOrder\n    content_type?: SortOrder\n    text_content?: SortOrder\n    url?: SortOrder\n    image_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_postsMinOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_community_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    title?: SortOrder\n    content_type?: SortOrder\n    text_content?: SortOrder\n    url?: SortOrder\n    image_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type IntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type Community_platform_postsScalarRelationFilter = {\n    is?: community_platform_postsWhereInput\n    isNot?: community_platform_postsWhereInput\n  }\n\n  export type Community_platform_commentsNullableScalarRelationFilter = {\n    is?: community_platform_commentsWhereInput | null\n    isNot?: community_platform_commentsWhereInput | null\n  }\n\n  export type community_platform_commentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_post_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    depth?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_commentsAvgOrderByAggregateInput = {\n    depth?: SortOrder\n  }\n\n  export type community_platform_commentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_post_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    depth?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_commentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    community_platform_post_id?: SortOrder\n    community_platform_member_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    depth?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_commentsSumOrderByAggregateInput = {\n    depth?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type IntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type Community_platform_postsNullableScalarRelationFilter = {\n    is?: community_platform_postsWhereInput | null\n    isNot?: community_platform_postsWhereInput | null\n  }\n\n  export type community_platform_votesMember_idPost_idCompoundUniqueInput = {\n    member_id: string\n    post_id: string\n  }\n\n  export type community_platform_votesMember_idComment_idCompoundUniqueInput = {\n    member_id: string\n    comment_id: string\n  }\n\n  export type community_platform_votesCountOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    vote_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type community_platform_votesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    vote_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type community_platform_votesMinOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    vote_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type community_platform_subscriptionsMember_idCommunity_idCompoundUniqueInput = {\n    member_id: string\n    community_id: string\n  }\n\n  export type community_platform_subscriptionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    community_id?: SortOrder\n    subscribed_at?: SortOrder\n    unsubscribed_at?: SortOrder\n  }\n\n  export type community_platform_subscriptionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    community_id?: SortOrder\n    subscribed_at?: SortOrder\n    unsubscribed_at?: SortOrder\n  }\n\n  export type community_platform_subscriptionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    member_id?: SortOrder\n    community_id?: SortOrder\n    subscribed_at?: SortOrder\n    unsubscribed_at?: SortOrder\n  }\n\n  export type Community_platform_moderatorsNullableScalarRelationFilter = {\n    is?: community_platform_moderatorsWhereInput | null\n    isNot?: community_platform_moderatorsWhereInput | null\n  }\n\n  export type community_platform_reportsCountOrderByAggregateInput = {\n    id?: SortOrder\n    reporter_id?: SortOrder\n    assigned_moderator_id?: SortOrder\n    reported_post_id?: SortOrder\n    reported_comment_id?: SortOrder\n    report_type?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    moderation_notes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_reportsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    reporter_id?: SortOrder\n    assigned_moderator_id?: SortOrder\n    reported_post_id?: SortOrder\n    reported_comment_id?: SortOrder\n    report_type?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    moderation_notes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_reportsMinOrderByAggregateInput = {\n    id?: SortOrder\n    reporter_id?: SortOrder\n    assigned_moderator_id?: SortOrder\n    reported_post_id?: SortOrder\n    reported_comment_id?: SortOrder\n    report_type?: SortOrder\n    description?: SortOrder\n    status?: SortOrder\n    moderation_notes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type community_platform_moderatorsCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput> | community_platform_moderatorsCreateWithoutCommunityInput[] | community_platform_moderatorsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunityInput | community_platform_moderatorsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_moderatorsCreateManyCommunityInputEnvelope\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n  }\n\n  export type community_platform_postsCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput> | community_platform_postsCreateWithoutCommunityInput[] | community_platform_postsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunityInput | community_platform_postsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_postsCreateManyCommunityInputEnvelope\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n  }\n\n  export type community_platform_subscriptionsCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput> | community_platform_subscriptionsCreateWithoutCommunityInput[] | community_platform_subscriptionsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutCommunityInput | community_platform_subscriptionsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_subscriptionsCreateManyCommunityInputEnvelope\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n  }\n\n  export type community_platform_moderatorsUncheckedCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput> | community_platform_moderatorsCreateWithoutCommunityInput[] | community_platform_moderatorsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunityInput | community_platform_moderatorsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_moderatorsCreateManyCommunityInputEnvelope\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n  }\n\n  export type community_platform_postsUncheckedCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput> | community_platform_postsCreateWithoutCommunityInput[] | community_platform_postsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunityInput | community_platform_postsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_postsCreateManyCommunityInputEnvelope\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n  }\n\n  export type community_platform_subscriptionsUncheckedCreateNestedManyWithoutCommunityInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput> | community_platform_subscriptionsCreateWithoutCommunityInput[] | community_platform_subscriptionsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutCommunityInput | community_platform_subscriptionsCreateOrConnectWithoutCommunityInput[]\n    createMany?: community_platform_subscriptionsCreateManyCommunityInputEnvelope\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type community_platform_moderatorsUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput> | community_platform_moderatorsCreateWithoutCommunityInput[] | community_platform_moderatorsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunityInput | community_platform_moderatorsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_moderatorsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_moderatorsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_moderatorsCreateManyCommunityInputEnvelope\n    set?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    disconnect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    delete?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    update?: community_platform_moderatorsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_moderatorsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_moderatorsUpdateManyWithWhereWithoutCommunityInput | community_platform_moderatorsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n  }\n\n  export type community_platform_postsUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput> | community_platform_postsCreateWithoutCommunityInput[] | community_platform_postsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunityInput | community_platform_postsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_postsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_postsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_postsCreateManyCommunityInputEnvelope\n    set?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    disconnect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    delete?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    update?: community_platform_postsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_postsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_postsUpdateManyWithWhereWithoutCommunityInput | community_platform_postsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n  }\n\n  export type community_platform_subscriptionsUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput> | community_platform_subscriptionsCreateWithoutCommunityInput[] | community_platform_subscriptionsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutCommunityInput | community_platform_subscriptionsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_subscriptionsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_subscriptionsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_subscriptionsCreateManyCommunityInputEnvelope\n    set?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    disconnect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    delete?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    update?: community_platform_subscriptionsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_subscriptionsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_subscriptionsUpdateManyWithWhereWithoutCommunityInput | community_platform_subscriptionsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput> | community_platform_moderatorsCreateWithoutCommunityInput[] | community_platform_moderatorsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunityInput | community_platform_moderatorsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_moderatorsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_moderatorsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_moderatorsCreateManyCommunityInputEnvelope\n    set?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    disconnect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    delete?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    update?: community_platform_moderatorsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_moderatorsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_moderatorsUpdateManyWithWhereWithoutCommunityInput | community_platform_moderatorsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n  }\n\n  export type community_platform_postsUncheckedUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput> | community_platform_postsCreateWithoutCommunityInput[] | community_platform_postsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunityInput | community_platform_postsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_postsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_postsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_postsCreateManyCommunityInputEnvelope\n    set?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    disconnect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    delete?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    update?: community_platform_postsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_postsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_postsUpdateManyWithWhereWithoutCommunityInput | community_platform_postsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityNestedInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput> | community_platform_subscriptionsCreateWithoutCommunityInput[] | community_platform_subscriptionsUncheckedCreateWithoutCommunityInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutCommunityInput | community_platform_subscriptionsCreateOrConnectWithoutCommunityInput[]\n    upsert?: community_platform_subscriptionsUpsertWithWhereUniqueWithoutCommunityInput | community_platform_subscriptionsUpsertWithWhereUniqueWithoutCommunityInput[]\n    createMany?: community_platform_subscriptionsCreateManyCommunityInputEnvelope\n    set?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    disconnect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    delete?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    update?: community_platform_subscriptionsUpdateWithWhereUniqueWithoutCommunityInput | community_platform_subscriptionsUpdateWithWhereUniqueWithoutCommunityInput[]\n    updateMany?: community_platform_subscriptionsUpdateManyWithWhereWithoutCommunityInput | community_platform_subscriptionsUpdateManyWithWhereWithoutCommunityInput[]\n    deleteMany?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n  }\n\n  export type community_platform_moderatorsCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput> | community_platform_moderatorsCreateWithoutMemberInput[] | community_platform_moderatorsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutMemberInput | community_platform_moderatorsCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_moderatorsCreateManyMemberInputEnvelope\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n  }\n\n  export type community_platform_postsCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput> | community_platform_postsCreateWithoutAuthorInput[] | community_platform_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutAuthorInput | community_platform_postsCreateOrConnectWithoutAuthorInput[]\n    createMany?: community_platform_postsCreateManyAuthorInputEnvelope\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n  }\n\n  export type community_platform_commentsCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput> | community_platform_commentsCreateWithoutAuthorInput[] | community_platform_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutAuthorInput | community_platform_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: community_platform_commentsCreateManyAuthorInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput> | community_platform_votesCreateWithoutMemberInput[] | community_platform_votesUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutMemberInput | community_platform_votesCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_votesCreateManyMemberInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_subscriptionsCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput> | community_platform_subscriptionsCreateWithoutMemberInput[] | community_platform_subscriptionsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutMemberInput | community_platform_subscriptionsCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_subscriptionsCreateManyMemberInputEnvelope\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsCreateNestedManyWithoutReporterInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput> | community_platform_reportsCreateWithoutReporterInput[] | community_platform_reportsUncheckedCreateWithoutReporterInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReporterInput | community_platform_reportsCreateOrConnectWithoutReporterInput[]\n    createMany?: community_platform_reportsCreateManyReporterInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput> | community_platform_moderatorsCreateWithoutMemberInput[] | community_platform_moderatorsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutMemberInput | community_platform_moderatorsCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_moderatorsCreateManyMemberInputEnvelope\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n  }\n\n  export type community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput> | community_platform_postsCreateWithoutAuthorInput[] | community_platform_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutAuthorInput | community_platform_postsCreateOrConnectWithoutAuthorInput[]\n    createMany?: community_platform_postsCreateManyAuthorInputEnvelope\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n  }\n\n  export type community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput> | community_platform_commentsCreateWithoutAuthorInput[] | community_platform_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutAuthorInput | community_platform_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: community_platform_commentsCreateManyAuthorInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput> | community_platform_votesCreateWithoutMemberInput[] | community_platform_votesUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutMemberInput | community_platform_votesCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_votesCreateManyMemberInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput> | community_platform_subscriptionsCreateWithoutMemberInput[] | community_platform_subscriptionsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutMemberInput | community_platform_subscriptionsCreateOrConnectWithoutMemberInput[]\n    createMany?: community_platform_subscriptionsCreateManyMemberInputEnvelope\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput> | community_platform_reportsCreateWithoutReporterInput[] | community_platform_reportsUncheckedCreateWithoutReporterInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReporterInput | community_platform_reportsCreateOrConnectWithoutReporterInput[]\n    createMany?: community_platform_reportsCreateManyReporterInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type community_platform_moderatorsUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput> | community_platform_moderatorsCreateWithoutMemberInput[] | community_platform_moderatorsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutMemberInput | community_platform_moderatorsCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_moderatorsUpsertWithWhereUniqueWithoutMemberInput | community_platform_moderatorsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_moderatorsCreateManyMemberInputEnvelope\n    set?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    disconnect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    delete?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    update?: community_platform_moderatorsUpdateWithWhereUniqueWithoutMemberInput | community_platform_moderatorsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_moderatorsUpdateManyWithWhereWithoutMemberInput | community_platform_moderatorsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n  }\n\n  export type community_platform_postsUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput> | community_platform_postsCreateWithoutAuthorInput[] | community_platform_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutAuthorInput | community_platform_postsCreateOrConnectWithoutAuthorInput[]\n    upsert?: community_platform_postsUpsertWithWhereUniqueWithoutAuthorInput | community_platform_postsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: community_platform_postsCreateManyAuthorInputEnvelope\n    set?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    disconnect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    delete?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    update?: community_platform_postsUpdateWithWhereUniqueWithoutAuthorInput | community_platform_postsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: community_platform_postsUpdateManyWithWhereWithoutAuthorInput | community_platform_postsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n  }\n\n  export type community_platform_commentsUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput> | community_platform_commentsCreateWithoutAuthorInput[] | community_platform_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutAuthorInput | community_platform_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutAuthorInput | community_platform_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: community_platform_commentsCreateManyAuthorInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutAuthorInput | community_platform_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutAuthorInput | community_platform_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput> | community_platform_votesCreateWithoutMemberInput[] | community_platform_votesUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutMemberInput | community_platform_votesCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutMemberInput | community_platform_votesUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_votesCreateManyMemberInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutMemberInput | community_platform_votesUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutMemberInput | community_platform_votesUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_subscriptionsUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput> | community_platform_subscriptionsCreateWithoutMemberInput[] | community_platform_subscriptionsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutMemberInput | community_platform_subscriptionsCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_subscriptionsUpsertWithWhereUniqueWithoutMemberInput | community_platform_subscriptionsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_subscriptionsCreateManyMemberInputEnvelope\n    set?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    disconnect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    delete?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    update?: community_platform_subscriptionsUpdateWithWhereUniqueWithoutMemberInput | community_platform_subscriptionsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_subscriptionsUpdateManyWithWhereWithoutMemberInput | community_platform_subscriptionsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUpdateManyWithoutReporterNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput> | community_platform_reportsCreateWithoutReporterInput[] | community_platform_reportsUncheckedCreateWithoutReporterInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReporterInput | community_platform_reportsCreateOrConnectWithoutReporterInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReporterInput | community_platform_reportsUpsertWithWhereUniqueWithoutReporterInput[]\n    createMany?: community_platform_reportsCreateManyReporterInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReporterInput | community_platform_reportsUpdateWithWhereUniqueWithoutReporterInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReporterInput | community_platform_reportsUpdateManyWithWhereWithoutReporterInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput> | community_platform_moderatorsCreateWithoutMemberInput[] | community_platform_moderatorsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutMemberInput | community_platform_moderatorsCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_moderatorsUpsertWithWhereUniqueWithoutMemberInput | community_platform_moderatorsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_moderatorsCreateManyMemberInputEnvelope\n    set?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    disconnect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    delete?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    connect?: community_platform_moderatorsWhereUniqueInput | community_platform_moderatorsWhereUniqueInput[]\n    update?: community_platform_moderatorsUpdateWithWhereUniqueWithoutMemberInput | community_platform_moderatorsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_moderatorsUpdateManyWithWhereWithoutMemberInput | community_platform_moderatorsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n  }\n\n  export type community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput> | community_platform_postsCreateWithoutAuthorInput[] | community_platform_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutAuthorInput | community_platform_postsCreateOrConnectWithoutAuthorInput[]\n    upsert?: community_platform_postsUpsertWithWhereUniqueWithoutAuthorInput | community_platform_postsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: community_platform_postsCreateManyAuthorInputEnvelope\n    set?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    disconnect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    delete?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    connect?: community_platform_postsWhereUniqueInput | community_platform_postsWhereUniqueInput[]\n    update?: community_platform_postsUpdateWithWhereUniqueWithoutAuthorInput | community_platform_postsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: community_platform_postsUpdateManyWithWhereWithoutAuthorInput | community_platform_postsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput> | community_platform_commentsCreateWithoutAuthorInput[] | community_platform_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutAuthorInput | community_platform_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutAuthorInput | community_platform_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: community_platform_commentsCreateManyAuthorInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutAuthorInput | community_platform_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutAuthorInput | community_platform_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput> | community_platform_votesCreateWithoutMemberInput[] | community_platform_votesUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutMemberInput | community_platform_votesCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutMemberInput | community_platform_votesUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_votesCreateManyMemberInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutMemberInput | community_platform_votesUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutMemberInput | community_platform_votesUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput> | community_platform_subscriptionsCreateWithoutMemberInput[] | community_platform_subscriptionsUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: community_platform_subscriptionsCreateOrConnectWithoutMemberInput | community_platform_subscriptionsCreateOrConnectWithoutMemberInput[]\n    upsert?: community_platform_subscriptionsUpsertWithWhereUniqueWithoutMemberInput | community_platform_subscriptionsUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: community_platform_subscriptionsCreateManyMemberInputEnvelope\n    set?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    disconnect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    delete?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    connect?: community_platform_subscriptionsWhereUniqueInput | community_platform_subscriptionsWhereUniqueInput[]\n    update?: community_platform_subscriptionsUpdateWithWhereUniqueWithoutMemberInput | community_platform_subscriptionsUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: community_platform_subscriptionsUpdateManyWithWhereWithoutMemberInput | community_platform_subscriptionsUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput> | community_platform_reportsCreateWithoutReporterInput[] | community_platform_reportsUncheckedCreateWithoutReporterInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReporterInput | community_platform_reportsCreateOrConnectWithoutReporterInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReporterInput | community_platform_reportsUpsertWithWhereUniqueWithoutReporterInput[]\n    createMany?: community_platform_reportsCreateManyReporterInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReporterInput | community_platform_reportsUpdateWithWhereUniqueWithoutReporterInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReporterInput | community_platform_reportsUpdateManyWithWhereWithoutReporterInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_moderatorsInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_moderatorsInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_communitiesCreateNestedOneWithoutCommunity_platform_moderatorsInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_moderatorsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n  }\n\n  export type community_platform_reportsCreateNestedManyWithoutAssignedModeratorInput = {\n    create?: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput> | community_platform_reportsCreateWithoutAssignedModeratorInput[] | community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput | community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput[]\n    createMany?: community_platform_reportsCreateManyAssignedModeratorInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsUncheckedCreateNestedManyWithoutAssignedModeratorInput = {\n    create?: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput> | community_platform_reportsCreateWithoutAssignedModeratorInput[] | community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput | community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput[]\n    createMany?: community_platform_reportsCreateManyAssignedModeratorInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_moderatorsInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_moderatorsInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_moderatorsInput, community_platform_membersUpdateWithoutCommunity_platform_moderatorsInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_moderatorsInput\n    upsert?: community_platform_communitiesUpsertWithoutCommunity_platform_moderatorsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n    update?: XOR<XOR<community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUpdateWithoutCommunity_platform_moderatorsInput>, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_reportsUpdateManyWithoutAssignedModeratorNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput> | community_platform_reportsCreateWithoutAssignedModeratorInput[] | community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput | community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutAssignedModeratorInput | community_platform_reportsUpsertWithWhereUniqueWithoutAssignedModeratorInput[]\n    createMany?: community_platform_reportsCreateManyAssignedModeratorInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutAssignedModeratorInput | community_platform_reportsUpdateWithWhereUniqueWithoutAssignedModeratorInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutAssignedModeratorInput | community_platform_reportsUpdateManyWithWhereWithoutAssignedModeratorInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput> | community_platform_reportsCreateWithoutAssignedModeratorInput[] | community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput | community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutAssignedModeratorInput | community_platform_reportsUpsertWithWhereUniqueWithoutAssignedModeratorInput[]\n    createMany?: community_platform_reportsCreateManyAssignedModeratorInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutAssignedModeratorInput | community_platform_reportsUpdateWithWhereUniqueWithoutAssignedModeratorInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutAssignedModeratorInput | community_platform_reportsUpdateManyWithWhereWithoutAssignedModeratorInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_postsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_postsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_postsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_postsInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_commentsCreateNestedManyWithoutPostInput = {\n    create?: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput> | community_platform_commentsCreateWithoutPostInput[] | community_platform_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutPostInput | community_platform_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: community_platform_commentsCreateManyPostInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesCreateNestedManyWithoutPostInput = {\n    create?: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput> | community_platform_votesCreateWithoutPostInput[] | community_platform_votesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutPostInput | community_platform_votesCreateOrConnectWithoutPostInput[]\n    createMany?: community_platform_votesCreateManyPostInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsCreateNestedManyWithoutReportedPostInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput> | community_platform_reportsCreateWithoutReportedPostInput[] | community_platform_reportsUncheckedCreateWithoutReportedPostInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedPostInput | community_platform_reportsCreateOrConnectWithoutReportedPostInput[]\n    createMany?: community_platform_reportsCreateManyReportedPostInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_commentsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput> | community_platform_commentsCreateWithoutPostInput[] | community_platform_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutPostInput | community_platform_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: community_platform_commentsCreateManyPostInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput> | community_platform_votesCreateWithoutPostInput[] | community_platform_votesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutPostInput | community_platform_votesCreateOrConnectWithoutPostInput[]\n    createMany?: community_platform_votesCreateManyPostInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput> | community_platform_reportsCreateWithoutReportedPostInput[] | community_platform_reportsUncheckedCreateWithoutReportedPostInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedPostInput | community_platform_reportsCreateOrConnectWithoutReportedPostInput[]\n    createMany?: community_platform_reportsCreateManyReportedPostInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_postsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_postsInput\n    upsert?: community_platform_communitiesUpsertWithoutCommunity_platform_postsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n    update?: XOR<XOR<community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_postsInput, community_platform_communitiesUpdateWithoutCommunity_platform_postsInput>, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_postsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_postsInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_postsInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_postsInput, community_platform_membersUpdateWithoutCommunity_platform_postsInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_commentsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput> | community_platform_commentsCreateWithoutPostInput[] | community_platform_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutPostInput | community_platform_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutPostInput | community_platform_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: community_platform_commentsCreateManyPostInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutPostInput | community_platform_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutPostInput | community_platform_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUpdateManyWithoutPostNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput> | community_platform_votesCreateWithoutPostInput[] | community_platform_votesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutPostInput | community_platform_votesCreateOrConnectWithoutPostInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutPostInput | community_platform_votesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: community_platform_votesCreateManyPostInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutPostInput | community_platform_votesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutPostInput | community_platform_votesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUpdateManyWithoutReportedPostNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput> | community_platform_reportsCreateWithoutReportedPostInput[] | community_platform_reportsUncheckedCreateWithoutReportedPostInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedPostInput | community_platform_reportsCreateOrConnectWithoutReportedPostInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReportedPostInput | community_platform_reportsUpsertWithWhereUniqueWithoutReportedPostInput[]\n    createMany?: community_platform_reportsCreateManyReportedPostInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReportedPostInput | community_platform_reportsUpdateWithWhereUniqueWithoutReportedPostInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReportedPostInput | community_platform_reportsUpdateManyWithWhereWithoutReportedPostInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput> | community_platform_commentsCreateWithoutPostInput[] | community_platform_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutPostInput | community_platform_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutPostInput | community_platform_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: community_platform_commentsCreateManyPostInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutPostInput | community_platform_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutPostInput | community_platform_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput> | community_platform_votesCreateWithoutPostInput[] | community_platform_votesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutPostInput | community_platform_votesCreateOrConnectWithoutPostInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutPostInput | community_platform_votesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: community_platform_votesCreateManyPostInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutPostInput | community_platform_votesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutPostInput | community_platform_votesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput> | community_platform_reportsCreateWithoutReportedPostInput[] | community_platform_reportsUncheckedCreateWithoutReportedPostInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedPostInput | community_platform_reportsCreateOrConnectWithoutReportedPostInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReportedPostInput | community_platform_reportsUpsertWithWhereUniqueWithoutReportedPostInput[]\n    createMany?: community_platform_reportsCreateManyReportedPostInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReportedPostInput | community_platform_reportsUpdateWithWhereUniqueWithoutReportedPostInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReportedPostInput | community_platform_reportsUpdateManyWithWhereWithoutReportedPostInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_commentsInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_commentsInput\n    connect?: community_platform_postsWhereUniqueInput\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_commentsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_commentsInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_commentsCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<community_platform_commentsCreateWithoutRecursiveInput, community_platform_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutRecursiveInput\n    connect?: community_platform_commentsWhereUniqueInput\n  }\n\n  export type community_platform_commentsCreateNestedManyWithoutParentInput = {\n    create?: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput> | community_platform_commentsCreateWithoutParentInput[] | community_platform_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutParentInput | community_platform_commentsCreateOrConnectWithoutParentInput[]\n    createMany?: community_platform_commentsCreateManyParentInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesCreateNestedManyWithoutCommentInput = {\n    create?: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput> | community_platform_votesCreateWithoutCommentInput[] | community_platform_votesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutCommentInput | community_platform_votesCreateOrConnectWithoutCommentInput[]\n    createMany?: community_platform_votesCreateManyCommentInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsCreateNestedManyWithoutReportedCommentInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput> | community_platform_reportsCreateWithoutReportedCommentInput[] | community_platform_reportsUncheckedCreateWithoutReportedCommentInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedCommentInput | community_platform_reportsCreateOrConnectWithoutReportedCommentInput[]\n    createMany?: community_platform_reportsCreateManyReportedCommentInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type community_platform_commentsUncheckedCreateNestedManyWithoutParentInput = {\n    create?: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput> | community_platform_commentsCreateWithoutParentInput[] | community_platform_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutParentInput | community_platform_commentsCreateOrConnectWithoutParentInput[]\n    createMany?: community_platform_commentsCreateManyParentInputEnvelope\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n  }\n\n  export type community_platform_votesUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput> | community_platform_votesCreateWithoutCommentInput[] | community_platform_votesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutCommentInput | community_platform_votesCreateOrConnectWithoutCommentInput[]\n    createMany?: community_platform_votesCreateManyCommentInputEnvelope\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n  }\n\n  export type community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput> | community_platform_reportsCreateWithoutReportedCommentInput[] | community_platform_reportsUncheckedCreateWithoutReportedCommentInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedCommentInput | community_platform_reportsCreateOrConnectWithoutReportedCommentInput[]\n    createMany?: community_platform_reportsCreateManyReportedCommentInputEnvelope\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n  }\n\n  export type IntFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_commentsInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_commentsInput\n    upsert?: community_platform_postsUpsertWithoutCommunity_platform_commentsInput\n    connect?: community_platform_postsWhereUniqueInput\n    update?: XOR<XOR<community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_commentsInput, community_platform_postsUpdateWithoutCommunity_platform_commentsInput>, community_platform_postsUncheckedUpdateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_commentsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_commentsInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_commentsInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_commentsInput, community_platform_membersUpdateWithoutCommunity_platform_commentsInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_commentsUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutRecursiveInput, community_platform_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutRecursiveInput\n    upsert?: community_platform_commentsUpsertWithoutRecursiveInput\n    disconnect?: community_platform_commentsWhereInput | boolean\n    delete?: community_platform_commentsWhereInput | boolean\n    connect?: community_platform_commentsWhereUniqueInput\n    update?: XOR<XOR<community_platform_commentsUpdateToOneWithWhereWithoutRecursiveInput, community_platform_commentsUpdateWithoutRecursiveInput>, community_platform_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type community_platform_commentsUpdateManyWithoutParentNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput> | community_platform_commentsCreateWithoutParentInput[] | community_platform_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutParentInput | community_platform_commentsCreateOrConnectWithoutParentInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutParentInput | community_platform_commentsUpsertWithWhereUniqueWithoutParentInput[]\n    createMany?: community_platform_commentsCreateManyParentInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutParentInput | community_platform_commentsUpdateWithWhereUniqueWithoutParentInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutParentInput | community_platform_commentsUpdateManyWithWhereWithoutParentInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput> | community_platform_votesCreateWithoutCommentInput[] | community_platform_votesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutCommentInput | community_platform_votesCreateOrConnectWithoutCommentInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutCommentInput | community_platform_votesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: community_platform_votesCreateManyCommentInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutCommentInput | community_platform_votesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutCommentInput | community_platform_votesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUpdateManyWithoutReportedCommentNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput> | community_platform_reportsCreateWithoutReportedCommentInput[] | community_platform_reportsUncheckedCreateWithoutReportedCommentInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedCommentInput | community_platform_reportsCreateOrConnectWithoutReportedCommentInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReportedCommentInput | community_platform_reportsUpsertWithWhereUniqueWithoutReportedCommentInput[]\n    createMany?: community_platform_reportsCreateManyReportedCommentInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReportedCommentInput | community_platform_reportsUpdateWithWhereUniqueWithoutReportedCommentInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReportedCommentInput | community_platform_reportsUpdateManyWithWhereWithoutReportedCommentInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput> | community_platform_commentsCreateWithoutParentInput[] | community_platform_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutParentInput | community_platform_commentsCreateOrConnectWithoutParentInput[]\n    upsert?: community_platform_commentsUpsertWithWhereUniqueWithoutParentInput | community_platform_commentsUpsertWithWhereUniqueWithoutParentInput[]\n    createMany?: community_platform_commentsCreateManyParentInputEnvelope\n    set?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    disconnect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    delete?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    connect?: community_platform_commentsWhereUniqueInput | community_platform_commentsWhereUniqueInput[]\n    update?: community_platform_commentsUpdateWithWhereUniqueWithoutParentInput | community_platform_commentsUpdateWithWhereUniqueWithoutParentInput[]\n    updateMany?: community_platform_commentsUpdateManyWithWhereWithoutParentInput | community_platform_commentsUpdateManyWithWhereWithoutParentInput[]\n    deleteMany?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput> | community_platform_votesCreateWithoutCommentInput[] | community_platform_votesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: community_platform_votesCreateOrConnectWithoutCommentInput | community_platform_votesCreateOrConnectWithoutCommentInput[]\n    upsert?: community_platform_votesUpsertWithWhereUniqueWithoutCommentInput | community_platform_votesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: community_platform_votesCreateManyCommentInputEnvelope\n    set?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    disconnect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    delete?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    connect?: community_platform_votesWhereUniqueInput | community_platform_votesWhereUniqueInput[]\n    update?: community_platform_votesUpdateWithWhereUniqueWithoutCommentInput | community_platform_votesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: community_platform_votesUpdateManyWithWhereWithoutCommentInput | community_platform_votesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput = {\n    create?: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput> | community_platform_reportsCreateWithoutReportedCommentInput[] | community_platform_reportsUncheckedCreateWithoutReportedCommentInput[]\n    connectOrCreate?: community_platform_reportsCreateOrConnectWithoutReportedCommentInput | community_platform_reportsCreateOrConnectWithoutReportedCommentInput[]\n    upsert?: community_platform_reportsUpsertWithWhereUniqueWithoutReportedCommentInput | community_platform_reportsUpsertWithWhereUniqueWithoutReportedCommentInput[]\n    createMany?: community_platform_reportsCreateManyReportedCommentInputEnvelope\n    set?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    disconnect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    delete?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    connect?: community_platform_reportsWhereUniqueInput | community_platform_reportsWhereUniqueInput[]\n    update?: community_platform_reportsUpdateWithWhereUniqueWithoutReportedCommentInput | community_platform_reportsUpdateWithWhereUniqueWithoutReportedCommentInput[]\n    updateMany?: community_platform_reportsUpdateManyWithWhereWithoutReportedCommentInput | community_platform_reportsUpdateManyWithWhereWithoutReportedCommentInput[]\n    deleteMany?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_votesInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_votesInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_postsCreateNestedOneWithoutCommunity_platform_votesInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_votesInput\n    connect?: community_platform_postsWhereUniqueInput\n  }\n\n  export type community_platform_commentsCreateNestedOneWithoutCommunity_platform_votesInput = {\n    create?: XOR<community_platform_commentsCreateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutCommunity_platform_votesInput\n    connect?: community_platform_commentsWhereUniqueInput\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_votesNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_votesInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_votesInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_votesInput, community_platform_membersUpdateWithoutCommunity_platform_votesInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_postsUpdateOneWithoutCommunity_platform_votesNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_votesInput\n    upsert?: community_platform_postsUpsertWithoutCommunity_platform_votesInput\n    disconnect?: community_platform_postsWhereInput | boolean\n    delete?: community_platform_postsWhereInput | boolean\n    connect?: community_platform_postsWhereUniqueInput\n    update?: XOR<XOR<community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_votesInput, community_platform_postsUpdateWithoutCommunity_platform_votesInput>, community_platform_postsUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_commentsUpdateOneWithoutCommunity_platform_votesNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_votesInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutCommunity_platform_votesInput\n    upsert?: community_platform_commentsUpsertWithoutCommunity_platform_votesInput\n    disconnect?: community_platform_commentsWhereInput | boolean\n    delete?: community_platform_commentsWhereInput | boolean\n    connect?: community_platform_commentsWhereUniqueInput\n    update?: XOR<XOR<community_platform_commentsUpdateToOneWithWhereWithoutCommunity_platform_votesInput, community_platform_commentsUpdateWithoutCommunity_platform_votesInput>, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_subscriptionsInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_subscriptionsInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_communitiesCreateNestedOneWithoutCommunity_platform_subscriptionsInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_subscriptionsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_subscriptionsInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_subscriptionsInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_subscriptionsInput, community_platform_membersUpdateWithoutCommunity_platform_subscriptionsInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput = {\n    create?: XOR<community_platform_communitiesCreateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    connectOrCreate?: community_platform_communitiesCreateOrConnectWithoutCommunity_platform_subscriptionsInput\n    upsert?: community_platform_communitiesUpsertWithoutCommunity_platform_subscriptionsInput\n    connect?: community_platform_communitiesWhereUniqueInput\n    update?: XOR<XOR<community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUpdateWithoutCommunity_platform_subscriptionsInput>, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_membersCreateNestedOneWithoutCommunity_platform_reportsInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_reportsInput\n    connect?: community_platform_membersWhereUniqueInput\n  }\n\n  export type community_platform_moderatorsCreateNestedOneWithoutCommunity_platform_reportsInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunity_platform_reportsInput\n    connect?: community_platform_moderatorsWhereUniqueInput\n  }\n\n  export type community_platform_postsCreateNestedOneWithoutCommunity_platform_reportsInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_reportsInput\n    connect?: community_platform_postsWhereUniqueInput\n  }\n\n  export type community_platform_commentsCreateNestedOneWithoutCommunity_platform_reportsInput = {\n    create?: XOR<community_platform_commentsCreateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutCommunity_platform_reportsInput\n    connect?: community_platform_commentsWhereUniqueInput\n  }\n\n  export type community_platform_membersUpdateOneRequiredWithoutCommunity_platform_reportsNestedInput = {\n    create?: XOR<community_platform_membersCreateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_membersCreateOrConnectWithoutCommunity_platform_reportsInput\n    upsert?: community_platform_membersUpsertWithoutCommunity_platform_reportsInput\n    connect?: community_platform_membersWhereUniqueInput\n    update?: XOR<XOR<community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_reportsInput, community_platform_membersUpdateWithoutCommunity_platform_reportsInput>, community_platform_membersUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_moderatorsUpdateOneWithoutCommunity_platform_reportsNestedInput = {\n    create?: XOR<community_platform_moderatorsCreateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_moderatorsCreateOrConnectWithoutCommunity_platform_reportsInput\n    upsert?: community_platform_moderatorsUpsertWithoutCommunity_platform_reportsInput\n    disconnect?: community_platform_moderatorsWhereInput | boolean\n    delete?: community_platform_moderatorsWhereInput | boolean\n    connect?: community_platform_moderatorsWhereUniqueInput\n    update?: XOR<XOR<community_platform_moderatorsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput, community_platform_moderatorsUpdateWithoutCommunity_platform_reportsInput>, community_platform_moderatorsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_postsUpdateOneWithoutCommunity_platform_reportsNestedInput = {\n    create?: XOR<community_platform_postsCreateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_postsCreateOrConnectWithoutCommunity_platform_reportsInput\n    upsert?: community_platform_postsUpsertWithoutCommunity_platform_reportsInput\n    disconnect?: community_platform_postsWhereInput | boolean\n    delete?: community_platform_postsWhereInput | boolean\n    connect?: community_platform_postsWhereUniqueInput\n    update?: XOR<XOR<community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput, community_platform_postsUpdateWithoutCommunity_platform_reportsInput>, community_platform_postsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_commentsUpdateOneWithoutCommunity_platform_reportsNestedInput = {\n    create?: XOR<community_platform_commentsCreateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    connectOrCreate?: community_platform_commentsCreateOrConnectWithoutCommunity_platform_reportsInput\n    upsert?: community_platform_commentsUpsertWithoutCommunity_platform_reportsInput\n    disconnect?: community_platform_commentsWhereInput | boolean\n    delete?: community_platform_commentsWhereInput | boolean\n    connect?: community_platform_commentsWhereUniqueInput\n    update?: XOR<XOR<community_platform_commentsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput, community_platform_commentsUpdateWithoutCommunity_platform_reportsInput>, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type NestedFloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type community_platform_moderatorsCreateWithoutCommunityInput = {\n    id: string\n    assigned_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_moderatorsInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsUncheckedCreateWithoutCommunityInput = {\n    id: string\n    community_platform_member_id: string\n    assigned_at: Date | string\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsCreateOrConnectWithoutCommunityInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    create: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_moderatorsCreateManyCommunityInputEnvelope = {\n    data: community_platform_moderatorsCreateManyCommunityInput | community_platform_moderatorsCreateManyCommunityInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_postsCreateWithoutCommunityInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateWithoutCommunityInput = {\n    id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsCreateOrConnectWithoutCommunityInput = {\n    where: community_platform_postsWhereUniqueInput\n    create: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_postsCreateManyCommunityInputEnvelope = {\n    data: community_platform_postsCreateManyCommunityInput | community_platform_postsCreateManyCommunityInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_subscriptionsCreateWithoutCommunityInput = {\n    id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_subscriptionsInput\n  }\n\n  export type community_platform_subscriptionsUncheckedCreateWithoutCommunityInput = {\n    id: string\n    member_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_subscriptionsCreateOrConnectWithoutCommunityInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    create: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_subscriptionsCreateManyCommunityInputEnvelope = {\n    data: community_platform_subscriptionsCreateManyCommunityInput | community_platform_subscriptionsCreateManyCommunityInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_moderatorsUpsertWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    update: XOR<community_platform_moderatorsUpdateWithoutCommunityInput, community_platform_moderatorsUncheckedUpdateWithoutCommunityInput>\n    create: XOR<community_platform_moderatorsCreateWithoutCommunityInput, community_platform_moderatorsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_moderatorsUpdateWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    data: XOR<community_platform_moderatorsUpdateWithoutCommunityInput, community_platform_moderatorsUncheckedUpdateWithoutCommunityInput>\n  }\n\n  export type community_platform_moderatorsUpdateManyWithWhereWithoutCommunityInput = {\n    where: community_platform_moderatorsScalarWhereInput\n    data: XOR<community_platform_moderatorsUpdateManyMutationInput, community_platform_moderatorsUncheckedUpdateManyWithoutCommunityInput>\n  }\n\n  export type community_platform_moderatorsScalarWhereInput = {\n    AND?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n    OR?: community_platform_moderatorsScalarWhereInput[]\n    NOT?: community_platform_moderatorsScalarWhereInput | community_platform_moderatorsScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_moderators\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_moderators\"> | string\n    community_platform_community_id?: UuidFilter<\"community_platform_moderators\"> | string\n    assigned_at?: DateTimeFilter<\"community_platform_moderators\"> | Date | string\n  }\n\n  export type community_platform_postsUpsertWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_postsWhereUniqueInput\n    update: XOR<community_platform_postsUpdateWithoutCommunityInput, community_platform_postsUncheckedUpdateWithoutCommunityInput>\n    create: XOR<community_platform_postsCreateWithoutCommunityInput, community_platform_postsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_postsUpdateWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_postsWhereUniqueInput\n    data: XOR<community_platform_postsUpdateWithoutCommunityInput, community_platform_postsUncheckedUpdateWithoutCommunityInput>\n  }\n\n  export type community_platform_postsUpdateManyWithWhereWithoutCommunityInput = {\n    where: community_platform_postsScalarWhereInput\n    data: XOR<community_platform_postsUpdateManyMutationInput, community_platform_postsUncheckedUpdateManyWithoutCommunityInput>\n  }\n\n  export type community_platform_postsScalarWhereInput = {\n    AND?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n    OR?: community_platform_postsScalarWhereInput[]\n    NOT?: community_platform_postsScalarWhereInput | community_platform_postsScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_posts\"> | string\n    community_platform_community_id?: UuidFilter<\"community_platform_posts\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_posts\"> | string\n    title?: StringFilter<\"community_platform_posts\"> | string\n    content_type?: StringFilter<\"community_platform_posts\"> | string\n    text_content?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    image_url?: StringNullableFilter<\"community_platform_posts\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_posts\"> | Date | string | null\n  }\n\n  export type community_platform_subscriptionsUpsertWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    update: XOR<community_platform_subscriptionsUpdateWithoutCommunityInput, community_platform_subscriptionsUncheckedUpdateWithoutCommunityInput>\n    create: XOR<community_platform_subscriptionsCreateWithoutCommunityInput, community_platform_subscriptionsUncheckedCreateWithoutCommunityInput>\n  }\n\n  export type community_platform_subscriptionsUpdateWithWhereUniqueWithoutCommunityInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    data: XOR<community_platform_subscriptionsUpdateWithoutCommunityInput, community_platform_subscriptionsUncheckedUpdateWithoutCommunityInput>\n  }\n\n  export type community_platform_subscriptionsUpdateManyWithWhereWithoutCommunityInput = {\n    where: community_platform_subscriptionsScalarWhereInput\n    data: XOR<community_platform_subscriptionsUpdateManyMutationInput, community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityInput>\n  }\n\n  export type community_platform_subscriptionsScalarWhereInput = {\n    AND?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n    OR?: community_platform_subscriptionsScalarWhereInput[]\n    NOT?: community_platform_subscriptionsScalarWhereInput | community_platform_subscriptionsScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    member_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    community_id?: UuidFilter<\"community_platform_subscriptions\"> | string\n    subscribed_at?: DateTimeFilter<\"community_platform_subscriptions\"> | Date | string\n    unsubscribed_at?: DateTimeNullableFilter<\"community_platform_subscriptions\"> | Date | string | null\n  }\n\n  export type community_platform_moderatorsCreateWithoutMemberInput = {\n    id: string\n    assigned_at: Date | string\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_moderatorsInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsUncheckedCreateWithoutMemberInput = {\n    id: string\n    community_platform_community_id: string\n    assigned_at: Date | string\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutAssignedModeratorInput\n  }\n\n  export type community_platform_moderatorsCreateOrConnectWithoutMemberInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    create: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_moderatorsCreateManyMemberInputEnvelope = {\n    data: community_platform_moderatorsCreateManyMemberInput | community_platform_moderatorsCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_postsCreateWithoutAuthorInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateWithoutAuthorInput = {\n    id: string\n    community_platform_community_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsCreateOrConnectWithoutAuthorInput = {\n    where: community_platform_postsWhereUniqueInput\n    create: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type community_platform_postsCreateManyAuthorInputEnvelope = {\n    data: community_platform_postsCreateManyAuthorInput | community_platform_postsCreateManyAuthorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_commentsCreateWithoutAuthorInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutAuthorInput = {\n    id: string\n    community_platform_post_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutAuthorInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type community_platform_commentsCreateManyAuthorInputEnvelope = {\n    data: community_platform_commentsCreateManyAuthorInput | community_platform_commentsCreateManyAuthorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_votesCreateWithoutMemberInput = {\n    id: string\n    vote_type: string\n    created_at: Date | string\n    post?: community_platform_postsCreateNestedOneWithoutCommunity_platform_votesInput\n    comment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_votesInput\n  }\n\n  export type community_platform_votesUncheckedCreateWithoutMemberInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_votesCreateOrConnectWithoutMemberInput = {\n    where: community_platform_votesWhereUniqueInput\n    create: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_votesCreateManyMemberInputEnvelope = {\n    data: community_platform_votesCreateManyMemberInput | community_platform_votesCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_subscriptionsCreateWithoutMemberInput = {\n    id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_subscriptionsInput\n  }\n\n  export type community_platform_subscriptionsUncheckedCreateWithoutMemberInput = {\n    id: string\n    community_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_subscriptionsCreateOrConnectWithoutMemberInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    create: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_subscriptionsCreateManyMemberInputEnvelope = {\n    data: community_platform_subscriptionsCreateManyMemberInput | community_platform_subscriptionsCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_reportsCreateWithoutReporterInput = {\n    id: string\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    assignedModerator?: community_platform_moderatorsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedPost?: community_platform_postsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedComment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_reportsInput\n  }\n\n  export type community_platform_reportsUncheckedCreateWithoutReporterInput = {\n    id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsCreateOrConnectWithoutReporterInput = {\n    where: community_platform_reportsWhereUniqueInput\n    create: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput>\n  }\n\n  export type community_platform_reportsCreateManyReporterInputEnvelope = {\n    data: community_platform_reportsCreateManyReporterInput | community_platform_reportsCreateManyReporterInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_moderatorsUpsertWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    update: XOR<community_platform_moderatorsUpdateWithoutMemberInput, community_platform_moderatorsUncheckedUpdateWithoutMemberInput>\n    create: XOR<community_platform_moderatorsCreateWithoutMemberInput, community_platform_moderatorsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_moderatorsUpdateWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    data: XOR<community_platform_moderatorsUpdateWithoutMemberInput, community_platform_moderatorsUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type community_platform_moderatorsUpdateManyWithWhereWithoutMemberInput = {\n    where: community_platform_moderatorsScalarWhereInput\n    data: XOR<community_platform_moderatorsUpdateManyMutationInput, community_platform_moderatorsUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type community_platform_postsUpsertWithWhereUniqueWithoutAuthorInput = {\n    where: community_platform_postsWhereUniqueInput\n    update: XOR<community_platform_postsUpdateWithoutAuthorInput, community_platform_postsUncheckedUpdateWithoutAuthorInput>\n    create: XOR<community_platform_postsCreateWithoutAuthorInput, community_platform_postsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type community_platform_postsUpdateWithWhereUniqueWithoutAuthorInput = {\n    where: community_platform_postsWhereUniqueInput\n    data: XOR<community_platform_postsUpdateWithoutAuthorInput, community_platform_postsUncheckedUpdateWithoutAuthorInput>\n  }\n\n  export type community_platform_postsUpdateManyWithWhereWithoutAuthorInput = {\n    where: community_platform_postsScalarWhereInput\n    data: XOR<community_platform_postsUpdateManyMutationInput, community_platform_postsUncheckedUpdateManyWithoutAuthorInput>\n  }\n\n  export type community_platform_commentsUpsertWithWhereUniqueWithoutAuthorInput = {\n    where: community_platform_commentsWhereUniqueInput\n    update: XOR<community_platform_commentsUpdateWithoutAuthorInput, community_platform_commentsUncheckedUpdateWithoutAuthorInput>\n    create: XOR<community_platform_commentsCreateWithoutAuthorInput, community_platform_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type community_platform_commentsUpdateWithWhereUniqueWithoutAuthorInput = {\n    where: community_platform_commentsWhereUniqueInput\n    data: XOR<community_platform_commentsUpdateWithoutAuthorInput, community_platform_commentsUncheckedUpdateWithoutAuthorInput>\n  }\n\n  export type community_platform_commentsUpdateManyWithWhereWithoutAuthorInput = {\n    where: community_platform_commentsScalarWhereInput\n    data: XOR<community_platform_commentsUpdateManyMutationInput, community_platform_commentsUncheckedUpdateManyWithoutAuthorInput>\n  }\n\n  export type community_platform_commentsScalarWhereInput = {\n    AND?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n    OR?: community_platform_commentsScalarWhereInput[]\n    NOT?: community_platform_commentsScalarWhereInput | community_platform_commentsScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_comments\"> | string\n    community_platform_post_id?: UuidFilter<\"community_platform_comments\"> | string\n    community_platform_member_id?: UuidFilter<\"community_platform_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"community_platform_comments\"> | string | null\n    content?: StringFilter<\"community_platform_comments\"> | string\n    depth?: IntFilter<\"community_platform_comments\"> | number\n    created_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_comments\"> | Date | string | null\n  }\n\n  export type community_platform_votesUpsertWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_votesWhereUniqueInput\n    update: XOR<community_platform_votesUpdateWithoutMemberInput, community_platform_votesUncheckedUpdateWithoutMemberInput>\n    create: XOR<community_platform_votesCreateWithoutMemberInput, community_platform_votesUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_votesUpdateWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_votesWhereUniqueInput\n    data: XOR<community_platform_votesUpdateWithoutMemberInput, community_platform_votesUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type community_platform_votesUpdateManyWithWhereWithoutMemberInput = {\n    where: community_platform_votesScalarWhereInput\n    data: XOR<community_platform_votesUpdateManyMutationInput, community_platform_votesUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type community_platform_votesScalarWhereInput = {\n    AND?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n    OR?: community_platform_votesScalarWhereInput[]\n    NOT?: community_platform_votesScalarWhereInput | community_platform_votesScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_votes\"> | string\n    member_id?: UuidFilter<\"community_platform_votes\"> | string\n    post_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    comment_id?: UuidNullableFilter<\"community_platform_votes\"> | string | null\n    vote_type?: StringFilter<\"community_platform_votes\"> | string\n    created_at?: DateTimeFilter<\"community_platform_votes\"> | Date | string\n  }\n\n  export type community_platform_subscriptionsUpsertWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    update: XOR<community_platform_subscriptionsUpdateWithoutMemberInput, community_platform_subscriptionsUncheckedUpdateWithoutMemberInput>\n    create: XOR<community_platform_subscriptionsCreateWithoutMemberInput, community_platform_subscriptionsUncheckedCreateWithoutMemberInput>\n  }\n\n  export type community_platform_subscriptionsUpdateWithWhereUniqueWithoutMemberInput = {\n    where: community_platform_subscriptionsWhereUniqueInput\n    data: XOR<community_platform_subscriptionsUpdateWithoutMemberInput, community_platform_subscriptionsUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type community_platform_subscriptionsUpdateManyWithWhereWithoutMemberInput = {\n    where: community_platform_subscriptionsScalarWhereInput\n    data: XOR<community_platform_subscriptionsUpdateManyMutationInput, community_platform_subscriptionsUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type community_platform_reportsUpsertWithWhereUniqueWithoutReporterInput = {\n    where: community_platform_reportsWhereUniqueInput\n    update: XOR<community_platform_reportsUpdateWithoutReporterInput, community_platform_reportsUncheckedUpdateWithoutReporterInput>\n    create: XOR<community_platform_reportsCreateWithoutReporterInput, community_platform_reportsUncheckedCreateWithoutReporterInput>\n  }\n\n  export type community_platform_reportsUpdateWithWhereUniqueWithoutReporterInput = {\n    where: community_platform_reportsWhereUniqueInput\n    data: XOR<community_platform_reportsUpdateWithoutReporterInput, community_platform_reportsUncheckedUpdateWithoutReporterInput>\n  }\n\n  export type community_platform_reportsUpdateManyWithWhereWithoutReporterInput = {\n    where: community_platform_reportsScalarWhereInput\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyWithoutReporterInput>\n  }\n\n  export type community_platform_reportsScalarWhereInput = {\n    AND?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n    OR?: community_platform_reportsScalarWhereInput[]\n    NOT?: community_platform_reportsScalarWhereInput | community_platform_reportsScalarWhereInput[]\n    id?: UuidFilter<\"community_platform_reports\"> | string\n    reporter_id?: UuidFilter<\"community_platform_reports\"> | string\n    assigned_moderator_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_post_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    reported_comment_id?: UuidNullableFilter<\"community_platform_reports\"> | string | null\n    report_type?: StringFilter<\"community_platform_reports\"> | string\n    description?: StringFilter<\"community_platform_reports\"> | string\n    status?: StringFilter<\"community_platform_reports\"> | string\n    moderation_notes?: StringNullableFilter<\"community_platform_reports\"> | string | null\n    created_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    updated_at?: DateTimeFilter<\"community_platform_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"community_platform_reports\"> | Date | string | null\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_moderatorsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_moderatorsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_moderatorsInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_communitiesCreateWithoutCommunity_platform_moderatorsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesUncheckedCreateWithoutCommunity_platform_moderatorsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesCreateOrConnectWithoutCommunity_platform_moderatorsInput = {\n    where: community_platform_communitiesWhereUniqueInput\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_reportsCreateWithoutAssignedModeratorInput = {\n    id: string\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    reporter: community_platform_membersCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedPost?: community_platform_postsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedComment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_reportsInput\n  }\n\n  export type community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput = {\n    id: string\n    reporter_id: string\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsCreateOrConnectWithoutAssignedModeratorInput = {\n    where: community_platform_reportsWhereUniqueInput\n    create: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput>\n  }\n\n  export type community_platform_reportsCreateManyAssignedModeratorInputEnvelope = {\n    data: community_platform_reportsCreateManyAssignedModeratorInput | community_platform_reportsCreateManyAssignedModeratorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_moderatorsInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_moderatorsInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_moderatorsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_communitiesUpsertWithoutCommunity_platform_moderatorsInput = {\n    update: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_moderatorsInput>\n    where?: community_platform_communitiesWhereInput\n  }\n\n  export type community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_moderatorsInput = {\n    where?: community_platform_communitiesWhereInput\n    data: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_moderatorsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_moderatorsInput>\n  }\n\n  export type community_platform_communitiesUpdateWithoutCommunity_platform_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_posts?: community_platform_postsUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_reportsUpsertWithWhereUniqueWithoutAssignedModeratorInput = {\n    where: community_platform_reportsWhereUniqueInput\n    update: XOR<community_platform_reportsUpdateWithoutAssignedModeratorInput, community_platform_reportsUncheckedUpdateWithoutAssignedModeratorInput>\n    create: XOR<community_platform_reportsCreateWithoutAssignedModeratorInput, community_platform_reportsUncheckedCreateWithoutAssignedModeratorInput>\n  }\n\n  export type community_platform_reportsUpdateWithWhereUniqueWithoutAssignedModeratorInput = {\n    where: community_platform_reportsWhereUniqueInput\n    data: XOR<community_platform_reportsUpdateWithoutAssignedModeratorInput, community_platform_reportsUncheckedUpdateWithoutAssignedModeratorInput>\n  }\n\n  export type community_platform_reportsUpdateManyWithWhereWithoutAssignedModeratorInput = {\n    where: community_platform_reportsScalarWhereInput\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorInput>\n  }\n\n  export type community_platform_communitiesCreateWithoutCommunity_platform_postsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesUncheckedCreateWithoutCommunity_platform_postsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutCommunityInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesCreateOrConnectWithoutCommunity_platform_postsInput = {\n    where: community_platform_communitiesWhereUniqueInput\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_postsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_postsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_postsInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_commentsCreateWithoutPostInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutPostInput = {\n    id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutPostInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type community_platform_commentsCreateManyPostInputEnvelope = {\n    data: community_platform_commentsCreateManyPostInput | community_platform_commentsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_votesCreateWithoutPostInput = {\n    id: string\n    vote_type: string\n    created_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_votesInput\n    comment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_votesInput\n  }\n\n  export type community_platform_votesUncheckedCreateWithoutPostInput = {\n    id: string\n    member_id: string\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_votesCreateOrConnectWithoutPostInput = {\n    where: community_platform_votesWhereUniqueInput\n    create: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput>\n  }\n\n  export type community_platform_votesCreateManyPostInputEnvelope = {\n    data: community_platform_votesCreateManyPostInput | community_platform_votesCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_reportsCreateWithoutReportedPostInput = {\n    id: string\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    reporter: community_platform_membersCreateNestedOneWithoutCommunity_platform_reportsInput\n    assignedModerator?: community_platform_moderatorsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedComment?: community_platform_commentsCreateNestedOneWithoutCommunity_platform_reportsInput\n  }\n\n  export type community_platform_reportsUncheckedCreateWithoutReportedPostInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsCreateOrConnectWithoutReportedPostInput = {\n    where: community_platform_reportsWhereUniqueInput\n    create: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput>\n  }\n\n  export type community_platform_reportsCreateManyReportedPostInputEnvelope = {\n    data: community_platform_reportsCreateManyReportedPostInput | community_platform_reportsCreateManyReportedPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_communitiesUpsertWithoutCommunity_platform_postsInput = {\n    update: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_postsInput>\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_postsInput>\n    where?: community_platform_communitiesWhereInput\n  }\n\n  export type community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_postsInput = {\n    where?: community_platform_communitiesWhereInput\n    data: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_postsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_communitiesUpdateWithoutCommunity_platform_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutCommunityNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_postsInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_postsInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_postsInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_postsInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_postsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_postsInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_commentsUpsertWithWhereUniqueWithoutPostInput = {\n    where: community_platform_commentsWhereUniqueInput\n    update: XOR<community_platform_commentsUpdateWithoutPostInput, community_platform_commentsUncheckedUpdateWithoutPostInput>\n    create: XOR<community_platform_commentsCreateWithoutPostInput, community_platform_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type community_platform_commentsUpdateWithWhereUniqueWithoutPostInput = {\n    where: community_platform_commentsWhereUniqueInput\n    data: XOR<community_platform_commentsUpdateWithoutPostInput, community_platform_commentsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type community_platform_commentsUpdateManyWithWhereWithoutPostInput = {\n    where: community_platform_commentsScalarWhereInput\n    data: XOR<community_platform_commentsUpdateManyMutationInput, community_platform_commentsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type community_platform_votesUpsertWithWhereUniqueWithoutPostInput = {\n    where: community_platform_votesWhereUniqueInput\n    update: XOR<community_platform_votesUpdateWithoutPostInput, community_platform_votesUncheckedUpdateWithoutPostInput>\n    create: XOR<community_platform_votesCreateWithoutPostInput, community_platform_votesUncheckedCreateWithoutPostInput>\n  }\n\n  export type community_platform_votesUpdateWithWhereUniqueWithoutPostInput = {\n    where: community_platform_votesWhereUniqueInput\n    data: XOR<community_platform_votesUpdateWithoutPostInput, community_platform_votesUncheckedUpdateWithoutPostInput>\n  }\n\n  export type community_platform_votesUpdateManyWithWhereWithoutPostInput = {\n    where: community_platform_votesScalarWhereInput\n    data: XOR<community_platform_votesUpdateManyMutationInput, community_platform_votesUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type community_platform_reportsUpsertWithWhereUniqueWithoutReportedPostInput = {\n    where: community_platform_reportsWhereUniqueInput\n    update: XOR<community_platform_reportsUpdateWithoutReportedPostInput, community_platform_reportsUncheckedUpdateWithoutReportedPostInput>\n    create: XOR<community_platform_reportsCreateWithoutReportedPostInput, community_platform_reportsUncheckedCreateWithoutReportedPostInput>\n  }\n\n  export type community_platform_reportsUpdateWithWhereUniqueWithoutReportedPostInput = {\n    where: community_platform_reportsWhereUniqueInput\n    data: XOR<community_platform_reportsUpdateWithoutReportedPostInput, community_platform_reportsUncheckedUpdateWithoutReportedPostInput>\n  }\n\n  export type community_platform_reportsUpdateManyWithWhereWithoutReportedPostInput = {\n    where: community_platform_reportsScalarWhereInput\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyWithoutReportedPostInput>\n  }\n\n  export type community_platform_postsCreateWithoutCommunity_platform_commentsInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateWithoutCommunity_platform_commentsInput = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsCreateOrConnectWithoutCommunity_platform_commentsInput = {\n    where: community_platform_postsWhereUniqueInput\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_commentsInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_commentsCreateWithoutRecursiveInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutRecursiveInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutRecursiveInput, community_platform_commentsUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type community_platform_commentsCreateWithoutParentInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutParentInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutParentInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput>\n  }\n\n  export type community_platform_commentsCreateManyParentInputEnvelope = {\n    data: community_platform_commentsCreateManyParentInput | community_platform_commentsCreateManyParentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_votesCreateWithoutCommentInput = {\n    id: string\n    vote_type: string\n    created_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_votesInput\n    post?: community_platform_postsCreateNestedOneWithoutCommunity_platform_votesInput\n  }\n\n  export type community_platform_votesUncheckedCreateWithoutCommentInput = {\n    id: string\n    member_id: string\n    post_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_votesCreateOrConnectWithoutCommentInput = {\n    where: community_platform_votesWhereUniqueInput\n    create: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type community_platform_votesCreateManyCommentInputEnvelope = {\n    data: community_platform_votesCreateManyCommentInput | community_platform_votesCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_reportsCreateWithoutReportedCommentInput = {\n    id: string\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    reporter: community_platform_membersCreateNestedOneWithoutCommunity_platform_reportsInput\n    assignedModerator?: community_platform_moderatorsCreateNestedOneWithoutCommunity_platform_reportsInput\n    reportedPost?: community_platform_postsCreateNestedOneWithoutCommunity_platform_reportsInput\n  }\n\n  export type community_platform_reportsUncheckedCreateWithoutReportedCommentInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsCreateOrConnectWithoutReportedCommentInput = {\n    where: community_platform_reportsWhereUniqueInput\n    create: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput>\n  }\n\n  export type community_platform_reportsCreateManyReportedCommentInputEnvelope = {\n    data: community_platform_reportsCreateManyReportedCommentInput | community_platform_reportsCreateManyReportedCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type community_platform_postsUpsertWithoutCommunity_platform_commentsInput = {\n    update: XOR<community_platform_postsUpdateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_commentsInput>\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_commentsInput>\n    where?: community_platform_postsWhereInput\n  }\n\n  export type community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_commentsInput = {\n    where?: community_platform_postsWhereInput\n    data: XOR<community_platform_postsUpdateWithoutCommunity_platform_commentsInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_postsUpdateWithoutCommunity_platform_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateWithoutCommunity_platform_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_commentsInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_commentsInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_commentsInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_commentsInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_commentsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_commentsInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_commentsUpsertWithoutRecursiveInput = {\n    update: XOR<community_platform_commentsUpdateWithoutRecursiveInput, community_platform_commentsUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<community_platform_commentsCreateWithoutRecursiveInput, community_platform_commentsUncheckedCreateWithoutRecursiveInput>\n    where?: community_platform_commentsWhereInput\n  }\n\n  export type community_platform_commentsUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: community_platform_commentsWhereInput\n    data: XOR<community_platform_commentsUpdateWithoutRecursiveInput, community_platform_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type community_platform_commentsUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUpsertWithWhereUniqueWithoutParentInput = {\n    where: community_platform_commentsWhereUniqueInput\n    update: XOR<community_platform_commentsUpdateWithoutParentInput, community_platform_commentsUncheckedUpdateWithoutParentInput>\n    create: XOR<community_platform_commentsCreateWithoutParentInput, community_platform_commentsUncheckedCreateWithoutParentInput>\n  }\n\n  export type community_platform_commentsUpdateWithWhereUniqueWithoutParentInput = {\n    where: community_platform_commentsWhereUniqueInput\n    data: XOR<community_platform_commentsUpdateWithoutParentInput, community_platform_commentsUncheckedUpdateWithoutParentInput>\n  }\n\n  export type community_platform_commentsUpdateManyWithWhereWithoutParentInput = {\n    where: community_platform_commentsScalarWhereInput\n    data: XOR<community_platform_commentsUpdateManyMutationInput, community_platform_commentsUncheckedUpdateManyWithoutParentInput>\n  }\n\n  export type community_platform_votesUpsertWithWhereUniqueWithoutCommentInput = {\n    where: community_platform_votesWhereUniqueInput\n    update: XOR<community_platform_votesUpdateWithoutCommentInput, community_platform_votesUncheckedUpdateWithoutCommentInput>\n    create: XOR<community_platform_votesCreateWithoutCommentInput, community_platform_votesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type community_platform_votesUpdateWithWhereUniqueWithoutCommentInput = {\n    where: community_platform_votesWhereUniqueInput\n    data: XOR<community_platform_votesUpdateWithoutCommentInput, community_platform_votesUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type community_platform_votesUpdateManyWithWhereWithoutCommentInput = {\n    where: community_platform_votesScalarWhereInput\n    data: XOR<community_platform_votesUpdateManyMutationInput, community_platform_votesUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type community_platform_reportsUpsertWithWhereUniqueWithoutReportedCommentInput = {\n    where: community_platform_reportsWhereUniqueInput\n    update: XOR<community_platform_reportsUpdateWithoutReportedCommentInput, community_platform_reportsUncheckedUpdateWithoutReportedCommentInput>\n    create: XOR<community_platform_reportsCreateWithoutReportedCommentInput, community_platform_reportsUncheckedCreateWithoutReportedCommentInput>\n  }\n\n  export type community_platform_reportsUpdateWithWhereUniqueWithoutReportedCommentInput = {\n    where: community_platform_reportsWhereUniqueInput\n    data: XOR<community_platform_reportsUpdateWithoutReportedCommentInput, community_platform_reportsUncheckedUpdateWithoutReportedCommentInput>\n  }\n\n  export type community_platform_reportsUpdateManyWithWhereWithoutReportedCommentInput = {\n    where: community_platform_reportsScalarWhereInput\n    data: XOR<community_platform_reportsUpdateManyMutationInput, community_platform_reportsUncheckedUpdateManyWithoutReportedCommentInput>\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_votesInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_postsCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutPostInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedPostInput\n  }\n\n  export type community_platform_postsCreateOrConnectWithoutCommunity_platform_votesInput = {\n    where: community_platform_postsWhereUniqueInput\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_commentsCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutCommunity_platform_votesInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReportedCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutCommunity_platform_votesInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_votesInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_votesInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_votesInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_votesInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_votesInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_postsUpsertWithoutCommunity_platform_votesInput = {\n    update: XOR<community_platform_postsUpdateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_votesInput>\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_votesInput>\n    where?: community_platform_postsWhereInput\n  }\n\n  export type community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_votesInput = {\n    where?: community_platform_postsWhereInput\n    data: XOR<community_platform_postsUpdateWithoutCommunity_platform_votesInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_postsUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_commentsUpsertWithoutCommunity_platform_votesInput = {\n    update: XOR<community_platform_commentsUpdateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_votesInput>\n    create: XOR<community_platform_commentsCreateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_votesInput>\n    where?: community_platform_commentsWhereInput\n  }\n\n  export type community_platform_commentsUpdateToOneWithWhereWithoutCommunity_platform_votesInput = {\n    where?: community_platform_commentsWhereInput\n    data: XOR<community_platform_commentsUpdateWithoutCommunity_platform_votesInput, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_votesInput>\n  }\n\n  export type community_platform_commentsUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutCommunity_platform_votesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_subscriptionsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_subscriptionsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_reports?: community_platform_reportsUncheckedCreateNestedManyWithoutReporterInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_subscriptionsInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_communitiesCreateWithoutCommunity_platform_subscriptionsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutCommunityInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesUncheckedCreateWithoutCommunity_platform_subscriptionsInput = {\n    id: string\n    code: string\n    name: string\n    description: string\n    status: string\n    business_status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutCommunityInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutCommunityInput\n  }\n\n  export type community_platform_communitiesCreateOrConnectWithoutCommunity_platform_subscriptionsInput = {\n    where: community_platform_communitiesWhereUniqueInput\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_subscriptionsInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_subscriptionsInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_subscriptionsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReporterNestedInput\n  }\n\n  export type community_platform_communitiesUpsertWithoutCommunity_platform_subscriptionsInput = {\n    update: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n    create: XOR<community_platform_communitiesCreateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedCreateWithoutCommunity_platform_subscriptionsInput>\n    where?: community_platform_communitiesWhereInput\n  }\n\n  export type community_platform_communitiesUpdateToOneWithWhereWithoutCommunity_platform_subscriptionsInput = {\n    where?: community_platform_communitiesWhereInput\n    data: XOR<community_platform_communitiesUpdateWithoutCommunity_platform_subscriptionsInput, community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_subscriptionsInput>\n  }\n\n  export type community_platform_communitiesUpdateWithoutCommunity_platform_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutCommunityNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_communitiesUncheckedUpdateWithoutCommunity_platform_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    business_status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutCommunityNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutCommunityNestedInput\n  }\n\n  export type community_platform_membersCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsCreateNestedManyWithoutMemberInput\n  }\n\n  export type community_platform_membersUncheckedCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    nickname: string\n    bio?: string | null\n    avatar_uri?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_posts?: community_platform_postsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutMemberInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type community_platform_membersCreateOrConnectWithoutCommunity_platform_reportsInput = {\n    where: community_platform_membersWhereUniqueInput\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_moderatorsCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    assigned_at: Date | string\n    member: community_platform_membersCreateNestedOneWithoutCommunity_platform_moderatorsInput\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_moderatorsInput\n  }\n\n  export type community_platform_moderatorsUncheckedCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    community_platform_member_id: string\n    community_platform_community_id: string\n    assigned_at: Date | string\n  }\n\n  export type community_platform_moderatorsCreateOrConnectWithoutCommunity_platform_reportsInput = {\n    where: community_platform_moderatorsWhereUniqueInput\n    create: XOR<community_platform_moderatorsCreateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedCreateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_postsCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community: community_platform_communitiesCreateNestedOneWithoutCommunity_platform_postsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_postsInput\n    community_platform_comments?: community_platform_commentsCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutPostInput\n  }\n\n  export type community_platform_postsUncheckedCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    community_platform_community_id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedCreateNestedManyWithoutPostInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type community_platform_postsCreateOrConnectWithoutCommunity_platform_reportsInput = {\n    where: community_platform_postsWhereUniqueInput\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_commentsCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: community_platform_postsCreateNestedOneWithoutCommunity_platform_commentsInput\n    author: community_platform_membersCreateNestedOneWithoutCommunity_platform_commentsInput\n    parent?: community_platform_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: community_platform_commentsCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesCreateNestedManyWithoutCommentInput\n  }\n\n  export type community_platform_commentsUncheckedCreateWithoutCommunity_platform_reportsInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: community_platform_commentsUncheckedCreateNestedManyWithoutParentInput\n    community_platform_votes?: community_platform_votesUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type community_platform_commentsCreateOrConnectWithoutCommunity_platform_reportsInput = {\n    where: community_platform_commentsWhereUniqueInput\n    create: XOR<community_platform_commentsCreateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_membersUpsertWithoutCommunity_platform_reportsInput = {\n    update: XOR<community_platform_membersUpdateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_reportsInput>\n    create: XOR<community_platform_membersCreateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedCreateWithoutCommunity_platform_reportsInput>\n    where?: community_platform_membersWhereInput\n  }\n\n  export type community_platform_membersUpdateToOneWithWhereWithoutCommunity_platform_reportsInput = {\n    where?: community_platform_membersWhereInput\n    data: XOR<community_platform_membersUpdateWithoutCommunity_platform_reportsInput, community_platform_membersUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_membersUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUpdateManyWithoutMemberNestedInput\n  }\n\n  export type community_platform_membersUncheckedUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    nickname?: StringFieldUpdateOperationsInput | string\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_uri?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_moderators?: community_platform_moderatorsUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_posts?: community_platform_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutMemberNestedInput\n    community_platform_subscriptions?: community_platform_subscriptionsUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type community_platform_moderatorsUpsertWithoutCommunity_platform_reportsInput = {\n    update: XOR<community_platform_moderatorsUpdateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n    create: XOR<community_platform_moderatorsCreateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    where?: community_platform_moderatorsWhereInput\n  }\n\n  export type community_platform_moderatorsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput = {\n    where?: community_platform_moderatorsWhereInput\n    data: XOR<community_platform_moderatorsUpdateWithoutCommunity_platform_reportsInput, community_platform_moderatorsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_moderatorsUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_postsUpsertWithoutCommunity_platform_reportsInput = {\n    update: XOR<community_platform_postsUpdateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n    create: XOR<community_platform_postsCreateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    where?: community_platform_postsWhereInput\n  }\n\n  export type community_platform_postsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput = {\n    where?: community_platform_postsWhereInput\n    data: XOR<community_platform_postsUpdateWithoutCommunity_platform_reportsInput, community_platform_postsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_postsUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type community_platform_commentsUpsertWithoutCommunity_platform_reportsInput = {\n    update: XOR<community_platform_commentsUpdateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n    create: XOR<community_platform_commentsCreateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedCreateWithoutCommunity_platform_reportsInput>\n    where?: community_platform_commentsWhereInput\n  }\n\n  export type community_platform_commentsUpdateToOneWithWhereWithoutCommunity_platform_reportsInput = {\n    where?: community_platform_commentsWhereInput\n    data: XOR<community_platform_commentsUpdateWithoutCommunity_platform_reportsInput, community_platform_commentsUncheckedUpdateWithoutCommunity_platform_reportsInput>\n  }\n\n  export type community_platform_commentsUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutCommunity_platform_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type community_platform_moderatorsCreateManyCommunityInput = {\n    id: string\n    community_platform_member_id: string\n    assigned_at: Date | string\n  }\n\n  export type community_platform_postsCreateManyCommunityInput = {\n    id: string\n    community_platform_member_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_subscriptionsCreateManyCommunityInput = {\n    id: string\n    member_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_moderatorsUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateManyWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_postsUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateManyWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_subscriptionsUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateManyWithoutCommunityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_moderatorsCreateManyMemberInput = {\n    id: string\n    community_platform_community_id: string\n    assigned_at: Date | string\n  }\n\n  export type community_platform_postsCreateManyAuthorInput = {\n    id: string\n    community_platform_community_id: string\n    title: string\n    content_type: string\n    text_content?: string | null\n    url?: string | null\n    image_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_commentsCreateManyAuthorInput = {\n    id: string\n    community_platform_post_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_votesCreateManyMemberInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_subscriptionsCreateManyMemberInput = {\n    id: string\n    community_id: string\n    subscribed_at: Date | string\n    unsubscribed_at?: Date | string | null\n  }\n\n  export type community_platform_reportsCreateManyReporterInput = {\n    id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_moderatorsUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_moderatorsNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorNestedInput\n  }\n\n  export type community_platform_moderatorsUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_postsUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_postsNestedInput\n    community_platform_comments?: community_platform_commentsUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community_platform_comments?: community_platform_commentsUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutPostNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedPostNestedInput\n  }\n\n  export type community_platform_postsUncheckedUpdateManyWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_community_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    content_type?: StringFieldUpdateOperationsInput | string\n    text_content?: NullableStringFieldUpdateOperationsInput | string | null\n    url?: NullableStringFieldUpdateOperationsInput | string | null\n    image_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_commentsUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_votesUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: community_platform_postsUpdateOneWithoutCommunity_platform_votesNestedInput\n    comment?: community_platform_commentsUpdateOneWithoutCommunity_platform_votesNestedInput\n  }\n\n  export type community_platform_votesUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_subscriptionsUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    community?: community_platform_communitiesUpdateOneRequiredWithoutCommunity_platform_subscriptionsNestedInput\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_subscriptionsUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_id?: StringFieldUpdateOperationsInput | string\n    subscribed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUpdateWithoutReporterInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    assignedModerator?: community_platform_moderatorsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedPost?: community_platform_postsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedComment?: community_platform_commentsUpdateOneWithoutCommunity_platform_reportsNestedInput\n  }\n\n  export type community_platform_reportsUncheckedUpdateWithoutReporterInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReporterInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsCreateManyAssignedModeratorInput = {\n    id: string\n    reporter_id: string\n    reported_post_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_reportsUpdateWithoutAssignedModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    reporter?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_reportsNestedInput\n    reportedPost?: community_platform_postsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedComment?: community_platform_commentsUpdateOneWithoutCommunity_platform_reportsNestedInput\n  }\n\n  export type community_platform_reportsUncheckedUpdateWithoutAssignedModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutAssignedModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_commentsCreateManyPostInput = {\n    id: string\n    community_platform_member_id: string\n    parent_comment_id?: string | null\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_votesCreateManyPostInput = {\n    id: string\n    member_id: string\n    comment_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_reportsCreateManyReportedPostInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_comment_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_commentsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    parent?: community_platform_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_votesUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_votesNestedInput\n    comment?: community_platform_commentsUpdateOneWithoutCommunity_platform_votesNestedInput\n  }\n\n  export type community_platform_votesUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_reportsUpdateWithoutReportedPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    reporter?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_reportsNestedInput\n    assignedModerator?: community_platform_moderatorsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedComment?: community_platform_commentsUpdateOneWithoutCommunity_platform_reportsNestedInput\n  }\n\n  export type community_platform_reportsUncheckedUpdateWithoutReportedPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReportedPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_commentsCreateManyParentInput = {\n    id: string\n    community_platform_post_id: string\n    community_platform_member_id: string\n    content: string\n    depth: number\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_votesCreateManyCommentInput = {\n    id: string\n    member_id: string\n    post_id?: string | null\n    vote_type: string\n    created_at: Date | string\n  }\n\n  export type community_platform_reportsCreateManyReportedCommentInput = {\n    id: string\n    reporter_id: string\n    assigned_moderator_id?: string | null\n    reported_post_id?: string | null\n    report_type: string\n    description: string\n    status: string\n    moderation_notes?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type community_platform_commentsUpdateWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: community_platform_postsUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    author?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_commentsNestedInput\n    recursive?: community_platform_commentsUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: community_platform_commentsUncheckedUpdateManyWithoutParentNestedInput\n    community_platform_votes?: community_platform_votesUncheckedUpdateManyWithoutCommentNestedInput\n    community_platform_reports?: community_platform_reportsUncheckedUpdateManyWithoutReportedCommentNestedInput\n  }\n\n  export type community_platform_commentsUncheckedUpdateManyWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    community_platform_post_id?: StringFieldUpdateOperationsInput | string\n    community_platform_member_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    depth?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_votesUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_votesNestedInput\n    post?: community_platform_postsUpdateOneWithoutCommunity_platform_votesNestedInput\n  }\n\n  export type community_platform_votesUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_votesUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    member_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    vote_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type community_platform_reportsUpdateWithoutReportedCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    reporter?: community_platform_membersUpdateOneRequiredWithoutCommunity_platform_reportsNestedInput\n    assignedModerator?: community_platform_moderatorsUpdateOneWithoutCommunity_platform_reportsNestedInput\n    reportedPost?: community_platform_postsUpdateOneWithoutCommunity_platform_reportsNestedInput\n  }\n\n  export type community_platform_reportsUncheckedUpdateWithoutReportedCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type community_platform_reportsUncheckedUpdateManyWithoutReportedCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporter_id?: StringFieldUpdateOperationsInput | string\n    assigned_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reported_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_type?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    moderation_notes?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}","node_modules/.prisma/client/runtime/client.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/index-browser.d.ts":"declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/library.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/wasm.d.ts":"export * from \"./default\"","node_modules/@prisma/client/index.d.ts":"export * from '.prisma/client/default'"},"document":"# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Systematic](#systematic)\n- [Actors](#actors)\n- [Content](#content)\n- [Engagement](#engagement)\n- [Moderation](#moderation)\n\n## Systematic\n\n```mermaid\nerDiagram\n\"community_platform_communities\" {\n  String id PK\n  String code UK\n  String name\n  String description\n  String status\n  String business_status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `community_platform_communities`\n\nCore community entities that organize content and user interactions\nwithin the platform. Communities serve as containers for posts, comments,\nand subscriptions, with each having unique names and requiring moderator\napproval for creation.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `code`\n  > Unique community identifier consisting of alphanumeric characters and\n  > underscores, maximum 21 characters.\n- `name`: Display name of the community shown to users, maximum 100 characters.\n- `description`\n  > Detailed description of the community's purpose and rules, maximum 500\n  > characters.\n- `status`\n  > Current status of the community (pending, active, suspended, archived).\n  > Default is pending until moderator approval.\n- `business_status`\n  > Business workflow status for community management (e.g., pending_review,\n  > approved, featured).\n- `created_at`: Timestamp when the community was initially created.\n- `updated_at`: Timestamp when the community was last modified.\n- `deleted_at`\n  > Soft delete timestamp for communities that have been removed but retained\n  > for audit purposes.\n\n## Actors\n\n```mermaid\nerDiagram\n\"community_platform_members\" {\n  String id PK\n  String email UK\n  String password_hash\n  String nickname UK\n  String bio \"nullable\"\n  String(80000) avatar_uri \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_moderators\" {\n  String id PK\n  String community_platform_member_id FK\n  String community_platform_community_id FK\n  DateTime assigned_at\n}\n\"community_platform_moderators\" }o--|| \"community_platform_members\" : member\n```\n\n### `community_platform_members`\n\nRegistered members who participate in the community platform, posting\ncontent, voting, and engaging with discussions. Members can customize\ntheir profiles and subscribe to communities of interest. Each member has\na unique email and nickname for identification and communication.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Email address for account registration and notifications.\n- `password_hash`: Hashed password for secure authentication.\n- `nickname`: Unique username displayed throughout the platform.\n- `bio`: Optional user biography or description.\n- `avatar_uri`: Optional avatar image URL for user profiles.\n- `created_at`: Timestamp when the member account was created.\n- `updated_at`: Timestamp of last profile modification.\n- `deleted_at`: Soft delete timestamp for deactivated accounts.\n\n### `community_platform_moderators`\n\nJunction table linking members to communities where they serve as\nmoderators. Moderators can approve content, remove inappropriate posts,\nmanage user behavior, and enforce community rules in their assigned\ncommunities.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `community_platform_member_id`: Member assigned as moderator for this community.\n- `community_platform_community_id`: Community this member moderates.\n- `assigned_at`: Timestamp when the moderator role was assigned.\n\n## Content\n\n```mermaid\nerDiagram\n\"community_platform_posts\" {\n  String id PK\n  String community_platform_community_id FK\n  String community_platform_member_id FK\n  String title\n  String content_type\n  String text_content \"nullable\"\n  String(80000) url \"nullable\"\n  String(80000) image_url \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_comments\" {\n  String id PK\n  String community_platform_post_id FK\n  String community_platform_member_id FK\n  String parent_comment_id FK \"nullable\"\n  String content\n  Int depth\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_comments\" }o--|| \"community_platform_posts\" : post\n\"community_platform_comments\" }o--o| \"community_platform_comments\" : parent\n```\n\n### `community_platform_posts`\n\nCore content entities representing user-submitted posts including text\nposts, link posts, and image posts. Posts can be upvoted/downvoted,\ncommented on, and are associated with specific communities. Posts require\nindependent creation, editing, and management capabilities across the\nplatform, supporting the primary content lifecycle.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `community_platform_community_id`: Belonged community's {\"@link community_platform_communities.id\"}.\n- `community_platform_member_id`: Author's {\"@link community_platform_members.id\"}.\n- `title`: Post title visible in listings and searches.\n- `content_type`: Type of post content: 'text', 'link', or 'image'.\n- `text_content`: Text content for text posts.\n- `url`: URL for link posts.\n- `image_url`: Image URL for image posts.\n- `created_at`: Post creation timestamp.\n- `updated_at`: Last modification timestamp.\n- `deleted_at`: Soft deletion timestamp when post is removed.\n\n### `community_platform_comments`\n\nThreaded comment system supporting unlimited nesting for discussions on\nposts. Comments can be replied to independently, represent user\nengagement, and require separate management from parent posts. Each\ncomment can be voted on and moderated independently, enabling cross-post\nsearch and user activity tracking.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `community_platform_post_id`: Referenced post's {\"@link community_platform_posts.id\"}.\n- `community_platform_member_id`: Comment author's {\"@link community_platform_members.id\"}.\n- `parent_comment_id`\n  > Parent comment's {\"@link community_platform_comments.id\"} for nested\n  > structure.\n- `content`: Comment text content.\n- `depth`: Nesting level in comment thread.\n- `created_at`: Comment creation timestamp.\n- `updated_at`: Last modification timestamp.\n- `deleted_at`: Soft deletion timestamp when comment is removed.\n\n## Engagement\n\n```mermaid\nerDiagram\n\"community_platform_votes\" {\n  String id PK\n  String member_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String vote_type\n  DateTime created_at\n}\n\"community_platform_subscriptions\" {\n  String id PK\n  String member_id FK\n  String community_id FK\n  DateTime subscribed_at\n  DateTime unsubscribed_at \"nullable\"\n}\n```\n\n### `community_platform_votes`\n\nTracks user votes on posts and comments within the engagement system.\nEach vote represents member engagement with community content, affecting\nkarma calculations and content visibility. Relationships exist with\nmembers (voters), posts, and comments (voted content). Votes are\nimmutable once cast but require efficient querying for real-time karma\nupdates and content sorting algorithms. Modified to include proper stance\nclassification and check constraint for mutual exclusivity.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `member_id`: Voted member's [community_platform_members.id](#community_platform_members) who cast the vote.\n- `post_id`\n  > Related post's [community_platform_posts.id](#community_platform_posts) that received the vote\n  > (if applicable).\n- `comment_id`\n  > Related comment's [community_platform_comments.id](#community_platform_comments) that received\n  > the vote (if applicable).\n- `vote_type`: Type of vote cast - 'up' for positive or 'down' for negative engagement.\n- `created_at`\n  > Timestamp when the vote was cast, used for audit trails and analytical\n  > purposes.\n\n### `community_platform_subscriptions`\n\nManages member subscriptions to communities for personalized content\ndelivery. Each subscription represents active interest in specific\ncommunity content, enabling personalized feeds and notification systems.\nRelationships exist with members (subscribers) and communities\n(subscribed content). Subscriptions can be toggled on/off with proper\ntimestamp tracking.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `member_id`: Subscribing member's [community_platform_members.id](#community_platform_members).\n- `community_id`: Subscribed community's [community_platform_communities.id](#community_platform_communities).\n- `subscribed_at`: Timestamp when the subscription was established.\n- `unsubscribed_at`: Timestamp when the subscription was terminated (null if still active).\n\n## Moderation\n\n```mermaid\nerDiagram\n\"community_platform_reports\" {\n  String id PK\n  String reporter_id FK\n  String assigned_moderator_id FK \"nullable\"\n  String reported_post_id FK \"nullable\"\n  String reported_comment_id FK \"nullable\"\n  String report_type\n  String description\n  String status\n  String moderation_notes \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `community_platform_reports`\n\nUser-submitted reports of content violations requiring moderator\nattention. Captures reporter identification, targeted content references,\nviolation categories, and moderation resolution workflow. Enables\nplatform governance through transparent reporting system that maintains\ncommunity standards.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `reporter_id`: Reporter's [community_platform_members.id](#community_platform_members).\n- `assigned_moderator_id`\n  > Assigned moderator's [community_platform_moderators.id](#community_platform_moderators) for\n  > handling the report.\n- `reported_post_id`\n  > Reported post's [community_platform_posts.id](#community_platform_posts) if report is about a\n  > post.\n- `reported_comment_id`\n  > Reported comment's [community_platform_comments.id](#community_platform_comments) if report is\n  > about a comment.\n- `report_type`\n  > Type of report violation (spam, harassment, hate_speech, adult_content,\n  > misinformation, copyright, other).\n- `description`: Additional details provided by reporter explaining the violation concern.\n- `status`\n  > Current processing status of the report (pending, under_review, resolved,\n  > dismissed).\n- `moderation_notes`: Internal notes added by moderators during review and resolution process.\n- `created_at`: Timestamp when the report was first submitted for moderation review.\n- `updated_at`: Timestamp of last modification to the report record.\n- `deleted_at`: Soft delete timestamp for report archival without permanent removal.\n","diagrams":{"Systematic":"```mermaid\nerDiagram\n\"community_platform_communities\" {\n  String id PK\n  String code UK\n  String name\n  String description\n  String status\n  String business_status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```","Actors":"```mermaid\nerDiagram\n\"community_platform_members\" {\n  String id PK\n  String email UK\n  String password_hash\n  String nickname UK\n  String bio \"nullable\"\n  String(80000) avatar_uri \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_moderators\" {\n  String id PK\n  String community_platform_member_id FK\n  String community_platform_community_id FK\n  DateTime assigned_at\n}\n\"community_platform_moderators\" }o--|| \"community_platform_members\" : member\n```","Content":"```mermaid\nerDiagram\n\"community_platform_posts\" {\n  String id PK\n  String community_platform_community_id FK\n  String community_platform_member_id FK\n  String title\n  String content_type\n  String text_content \"nullable\"\n  String(80000) url \"nullable\"\n  String(80000) image_url \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_comments\" {\n  String id PK\n  String community_platform_post_id FK\n  String community_platform_member_id FK\n  String parent_comment_id FK \"nullable\"\n  String content\n  Int depth\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"community_platform_comments\" }o--|| \"community_platform_posts\" : post\n\"community_platform_comments\" }o--o| \"community_platform_comments\" : parent\n```","Engagement":"```mermaid\nerDiagram\n\"community_platform_votes\" {\n  String id PK\n  String member_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String vote_type\n  DateTime created_at\n}\n\"community_platform_subscriptions\" {\n  String id PK\n  String member_id FK\n  String community_id FK\n  DateTime subscribed_at\n  DateTime unsubscribed_at \"nullable\"\n}\n```","Moderation":"```mermaid\nerDiagram\n\"community_platform_reports\" {\n  String id PK\n  String reporter_id FK\n  String assigned_moderator_id FK \"nullable\"\n  String reported_post_id FK \"nullable\"\n  String reported_comment_id FK \"nullable\"\n  String report_type\n  String description\n  String status\n  String moderation_notes \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```"}},"created_at":"2025-10-15T02:17:39.602Z","completed_at":"2025-10-15T02:20:02.335Z","step":0}]