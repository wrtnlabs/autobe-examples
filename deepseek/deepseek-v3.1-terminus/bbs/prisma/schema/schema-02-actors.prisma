/// Anonymous guest users who can browse content without authentication.
/// Guests have limited access to read-only features and serve as the entry
/// point for new user acquisition. {@link discussion_board_members.id} can
/// be promoted from guest status through registration.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_guests {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// IP address used for guest session tracking and security monitoring.
  ip_address String
  
  /// Browser and device information for analytics and compatibility tracking.
  user_agent String?
  
  /// Timestamp when the guest first accessed the platform.
  first_visited_at DateTime
  
  /// Most recent activity timestamp for session management.
  last_activity_at DateTime
  
  /// Unique session identifier for guest tracking.
  session_id String
  
  /// Current guest status (active, expired, converted).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@unique([session_id])
  @@index([ip_address, last_activity_at])
  @@index([status, last_activity_at])
}

/// Registered members who can create content, participate in discussions,
/// and engage with the community. Members form the core user base of the
/// platform and have full access to discussion features. {@link
/// discussion_board_guests.id} can upgrade to member status through
/// registration.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_members {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Unique email address for authentication and communication.
  email String
  
  /// Display name used for community identification.
  username String
  
  /// Securely hashed password for authentication.
  password_hash String
  
  /// Timestamp when email verification was completed.
  email_verified_at DateTime?
  
  /// Date when the member registered on the platform.
  registration_date DateTime
  
  /// Most recent login timestamp for security monitoring.
  last_login_at DateTime?
  
  /// Member account status (active, suspended, banned).
  status String
  
  /// Community reputation based on content quality and engagement.
  reputation_score Int
  
  /// Number of posts created by the member.
  post_count Int
  
  /// Number of comments posted by the member.
  comment_count Int
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  discussion_board_moderators discussion_board_moderators?
  discussion_board_user_sessions discussion_board_user_sessions[]
  discussion_board_authentication_tokens discussion_board_authentication_tokens[]
  discussion_board_posts discussion_board_posts[]
  discussion_board_post_versions discussion_board_post_versions[]
  discussion_board_comments discussion_board_comments[]
  discussion_board_content_reports_of_reporter_id discussion_board_content_reports[] @relation("discussion_board_content_reports_of_reporter_id")
  discussion_board_content_reports_of_reported_user_id discussion_board_content_reports[] @relation("discussion_board_content_reports_of_reported_user_id")
  discussion_board_moderation_actions discussion_board_moderation_actions[]
  discussion_board_content_flags discussion_board_content_flags[]
  discussion_board_user_warnings discussion_board_user_warnings[]
  discussion_board_appeal_requests discussion_board_appeal_requests[]
  discussion_board_post_views discussion_board_post_views[]
  discussion_board_comment_engagements discussion_board_comment_engagements[]
  discussion_board_user_reactions discussion_board_user_reactions[]
  discussion_board_content_shares discussion_board_content_shares[]
  discussion_board_bookmarks discussion_board_bookmarks[]
  discussion_board_user_analytics discussion_board_user_analytics[]
  discussion_board_audit_logs discussion_board_audit_logs[]
  discussion_board_user_notifications discussion_board_user_notifications[]
  discussion_board_user_preferences discussion_board_user_preferences?
  
  @@unique([email])
  @@unique([username])
  @@index([status, last_login_at])
  @@index([reputation_score])
  @@index([registration_date])
}

/// Trusted users with content moderation privileges. Moderators review
/// reported content, enforce community guidelines, and maintain discussion
/// quality. {@link discussion_board_members.id} can be promoted to moderator
/// status based on trust and activity.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_moderators {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the base member account. {@link discussion_board_members.id}
  discussion_board_member_id String
  
  /// Areas of expertise for targeted content review (economic, political,
  /// etc.).
  moderation_specialization String?
  
  /// Date when the member was promoted to moderator.
  promotion_date DateTime
  
  /// Moderation authority level (junior, senior, lead).
  moderation_level String
  
  /// Number of moderation cases successfully handled.
  cases_resolved Int
  
  /// Average time in minutes to resolve moderation cases.
  average_resolution_time Int
  
  /// Moderator status (active, on_leave, inactive).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  member discussion_board_members @relation(fields: [discussion_board_member_id], references: [id], onDelete: Cascade)
  
  discussion_board_administrators discussion_board_administrators?
  discussion_board_category_moderators discussion_board_category_moderators[]
  discussion_board_content_reports discussion_board_content_reports[]
  discussion_board_moderation_actions discussion_board_moderation_actions[]
  discussion_board_moderation_queues discussion_board_moderation_queues[]
  discussion_board_user_warnings discussion_board_user_warnings[]
  discussion_board_appeal_requests discussion_board_appeal_requests[]
  
  @@unique([discussion_board_member_id])
  
  @@index([moderation_level, status])
  @@index([promotion_date])
  @@index([cases_resolved])
}

/// System administrators with full platform management privileges.
/// Administrators manage user accounts, system configuration, and oversee
/// all platform operations. {@link discussion_board_moderators.id} can be
/// elevated to administrator status for system-wide control.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_administrators {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the moderator account. {@link discussion_board_moderators.id}
  discussion_board_moderator_id String
  
  /// Administrative authority level (system, content, user).
  admin_level String
  
  /// Date when promoted to administrator role.
  promotion_date DateTime
  
  /// Areas of administrative responsibility (users, content, system).
  access_scope String
  
  /// Timestamp of most recent administrative access.
  last_system_access DateTime?
  
  /// Administrator status (active, suspended, retired).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  moderator discussion_board_moderators @relation(fields: [discussion_board_moderator_id], references: [id], onDelete: Cascade)
  
  discussion_board_audit_logs discussion_board_audit_logs[]
  
  @@unique([discussion_board_moderator_id], map: "discussion_board_administrators_discussion_board_moder_26bf9cb4")
  
  @@index([admin_level, status])
  @@index([promotion_date])
  @@index([access_scope])
}

/// Active user sessions for authentication state management. Tracks login
/// sessions, device information, and session security parameters. Managed
/// through user authentication flows.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_user_sessions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the authenticated member. {@link discussion_board_members.id}
  discussion_board_member_id String
  
  /// Unique session identifier for authentication.
  session_token String
  
  /// IP address where the session was initiated.
  ip_address String
  
  /// Browser and device information for session tracking.
  user_agent String?
  
  /// Timestamp when the session was created.
  login_timestamp DateTime
  
  /// Most recent activity timestamp for session validation.
  last_activity DateTime
  
  /// Session expiration timestamp for automatic cleanup.
  expires_at DateTime
  
  /// Session status (active, expired, revoked).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  member discussion_board_members @relation(fields: [discussion_board_member_id], references: [id], onDelete: Cascade)
  
  @@unique([session_token])
  @@index([discussion_board_member_id, status], map: "discussion_board_user_sessions_discussion_board_member_7b4c955b")
  @@index([expires_at])
  @@index([ip_address, login_timestamp])
}

/// Authentication tokens for secure API access and session management.
/// Stores JWT tokens, refresh tokens, and token security parameters. Managed
/// through authentication service operations.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model discussion_board_authentication_tokens {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the token owner. {@link discussion_board_members.id}
  discussion_board_member_id String
  
  /// JWT access token for API authentication.
  access_token String
  
  /// Refresh token for obtaining new access tokens.
  refresh_token String
  
  /// Type of token (bearer, etc.).
  token_type String
  
  /// Token validity duration in seconds.
  expires_in Int
  
  /// Access permissions granted by the token.
  scope String?
  
  /// Timestamp when the token was issued.
  issued_at DateTime
  
  /// Timestamp when the token was revoked.
  revoked_at DateTime?
  
  /// Token status (active, expired, revoked).
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Last modification timestamp.
  updated_at DateTime
  
  /// Soft deletion timestamp for data recovery.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  member discussion_board_members @relation(fields: [discussion_board_member_id], references: [id], onDelete: Cascade)
  
  @@unique([access_token])
  @@unique([refresh_token])
  @@index([discussion_board_member_id, status], map: "discussion_board_authentication_tokens_discussion_boar_40115311")
  @@index([issued_at])
  @@index([expires_in])
}