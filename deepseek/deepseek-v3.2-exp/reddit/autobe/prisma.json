{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"reddit_clone_configurations","description":"System-wide configuration settings and parameters for the Reddit-like platform. Stores key-value pairs for platform customization, feature flags, and operational parameters that control system behavior across all domains. {@link reddit_clone_users.id} {@link reddit_clone_communities.id}","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"created_by_id","type":"uuid","description":"User who created this configuration. {@link reddit_clone_users.id}","relation":{"name":"createdBy","targetModel":"reddit_clone_users","mappingName":"reddit_clone_configurations_of_created_by_id"},"unique":false,"nullable":true},{"name":"updated_by_id","type":"uuid","description":"User who last updated this configuration. {@link reddit_clone_users.id}","relation":{"name":"updatedBy","targetModel":"reddit_clone_users","mappingName":"reddit_clone_configurations_of_updated_by_id"},"unique":false,"nullable":true}],"plainFields":[{"name":"key","type":"string","description":"Unique configuration key identifier.","nullable":false},{"name":"value","type":"string","description":"Configuration value stored as string.","nullable":false},{"name":"data_type","type":"string","description":"Data type of the configuration value (string, number, boolean, json).","nullable":false},{"name":"description","type":"string","description":"Human-readable description of the configuration setting.","nullable":true},{"name":"category","type":"string","description":"Configuration category for organization (authentication, content, community, etc.).","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this configuration setting is currently active.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this configuration was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this configuration was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["category"]},{"fieldNames":["is_active"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_system_logs","description":"Comprehensive system logging for audit trails, error tracking, and operational monitoring. Captures user actions, system events, and security incidents across the entire platform. {@link reddit_clone_users.id} {@link reddit_clone_communities.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who performed the action. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":true},{"name":"community_id","type":"uuid","description":"Community where the action occurred. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"log_level","type":"string","description":"Log level severity (INFO, WARNING, ERROR, DEBUG).","nullable":false},{"name":"event_type","type":"string","description":"Type of event being logged (USER_LOGIN, POST_CREATED, VOTE_CAST, etc.).","nullable":false},{"name":"message","type":"string","description":"Detailed log message describing the event.","nullable":false},{"name":"ip_address","type":"string","description":"IP address of the request that triggered the log entry.","nullable":true},{"name":"user_agent","type":"string","description":"User agent string from the client making the request.","nullable":true},{"name":"request_path","type":"string","description":"HTTP request path that triggered the event.","nullable":true},{"name":"request_method","type":"string","description":"HTTP request method (GET, POST, PUT, DELETE).","nullable":true},{"name":"response_status","type":"int","description":"HTTP response status code.","nullable":true},{"name":"execution_time","type":"int","description":"Request execution time in milliseconds.","nullable":true},{"name":"metadata","type":"string","description":"Additional metadata about the event in JSON format.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this log entry was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["log_level"]},{"fieldNames":["event_type"]},{"fieldNames":["created_at"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["community_id","created_at"]}],"ginIndexes":[{"fieldName":"message"}]},{"name":"reddit_clone_platform_metrics","description":"Platform-wide performance and usage metrics tracking. Collects key performance indicators, user engagement statistics, and system health metrics for monitoring and analytics. {@link reddit_clone_users.id} {@link reddit_clone_communities.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User associated with this metric (if user-specific). {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":true},{"name":"community_id","type":"uuid","description":"Community associated with this metric (if community-specific). {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"metric_name","type":"string","description":"Name of the metric being tracked (active_users, post_count, vote_count, etc.).","nullable":false},{"name":"metric_value","type":"double","description":"Numerical value of the metric.","nullable":false},{"name":"metric_type","type":"string","description":"Type of metric (COUNTER, GAUGE, HISTOGRAM, SUMMARY).","nullable":false},{"name":"time_bucket","type":"string","description":"Time aggregation bucket (HOURLY, DAILY, WEEKLY, MONTHLY).","nullable":false},{"name":"bucket_start","type":"datetime","description":"Start timestamp of the time bucket for this metric.","nullable":false},{"name":"bucket_end","type":"datetime","description":"End timestamp of the time bucket for this metric.","nullable":false},{"name":"dimensions","type":"string","description":"Additional dimensions for the metric in JSON format (user_role, content_type, etc.).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this metric was recorded.","nullable":false}],"uniqueIndexes":[{"fieldNames":["metric_name","time_bucket","bucket_start"],"unique":true}],"plainIndexes":[{"fieldNames":["metric_name"]},{"fieldNames":["time_bucket"]},{"fieldNames":["bucket_start"]},{"fieldNames":["bucket_end"]},{"fieldNames":["user_id","metric_name","bucket_start"]},{"fieldNames":["community_id","metric_name","bucket_start"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"reddit_clone_users","description":"Base user entity containing authentication and core profile information. This table serves as the foundation for all user roles in the platform, storing common authentication data and basic profile details. {@link reddit_clone_guests}, {@link reddit_clone_members}, {@link reddit_clone_moderators}, {@link reddit_clone_administrators}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","nullable":false,"description":"Unique username for the user account."},{"name":"email","type":"string","nullable":false,"description":"User's email address for authentication and notifications."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for user authentication using bcrypt."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Whether the user's email address has been verified."},{"name":"status","type":"string","nullable":false,"description":"Current status of the user account (active, suspended, banned)."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the user account was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the user account was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the user account was soft deleted."}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["email_verified"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_guests","description":"Guest user role extending the base user entity with limited platform access. Guests have restricted permissions compared to registered members. {@link reddit_clone_users}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the base user entity. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the guest role was assigned."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the guest role was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the guest role was soft deleted."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id"]}],"ginIndexes":[]},{"name":"reddit_clone_members","description":"Member user role extending the base user entity with full platform access. Members can create content, vote, and participate in communities. {@link reddit_clone_users}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the base user entity. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"joined_at","type":"datetime","nullable":false,"description":"Timestamp when the user became a member."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the member role was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the member role was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the member role was soft deleted."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["joined_at"]}],"ginIndexes":[]},{"name":"reddit_clone_moderators","description":"Moderator user role extending the base user entity with community moderation privileges. Moderators can manage content and users within their assigned communities. {@link reddit_clone_users}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the base user entity. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"moderator_since","type":"datetime","nullable":false,"description":"Timestamp when the user became a moderator."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the moderator role was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the moderator role was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the moderator role was soft deleted."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["moderator_since"]}],"ginIndexes":[]},{"name":"reddit_clone_administrators","description":"Administrator user role extending the base user entity with platform-wide administrative privileges. Administrators have system-level access and can manage all communities and users. {@link reddit_clone_users}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the base user entity. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"admin_since","type":"datetime","nullable":false,"description":"Timestamp when the user became an administrator."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the administrator role was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the administrator role was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the administrator role was soft deleted."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["admin_since"]}],"ginIndexes":[]},{"name":"reddit_clone_user_sessions","description":"User authentication sessions for maintaining login state and security. Stores JWT tokens and session metadata for authenticated users. {@link reddit_clone_users}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the user who owns this session. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false}],"plainFields":[{"name":"access_token","type":"string","nullable":false,"description":"JWT access token for session authentication."},{"name":"refresh_token","type":"string","nullable":false,"description":"JWT refresh token for session renewal."},{"name":"expires_at","type":"datetime","nullable":false,"description":"Timestamp when the session expires."},{"name":"device_info","type":"string","nullable":true,"description":"Information about the device used for this session."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address from which the session was created."},{"name":"status","type":"string","nullable":false,"description":"Session status: active, expired, revoked."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the session was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the session was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the session was soft deleted."}],"uniqueIndexes":[{"fieldNames":["access_token"],"unique":true},{"fieldNames":["refresh_token"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["expires_at"]},{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"reddit_clone_user_preferences","description":"User preferences and settings for personalization and platform behavior customization. Stores user-specific configuration options. {@link reddit_clone_users}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Reference to the user who owns these preferences. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"theme","type":"string","nullable":true,"description":"User interface theme preference (light, dark, auto)."},{"name":"language","type":"string","nullable":true,"description":"Preferred language for the platform interface."},{"name":"email_notifications","type":"boolean","nullable":false,"description":"Whether the user wants to receive email notifications."},{"name":"push_notifications","type":"boolean","nullable":false,"description":"Whether the user wants to receive push notifications."},{"name":"nsfw_content","type":"boolean","nullable":false,"description":"Whether the user wants to see NSFW content."},{"name":"auto_play_media","type":"boolean","nullable":false,"description":"Whether media should auto-play for this user."},{"name":"content_visibility","type":"string","nullable":false,"description":"Content visibility preference: show_all, hide_nsfw, hide_spoilers."},{"name":"default_sort","type":"string","nullable":false,"description":"Default content sorting preference: hot, new, top, controversial."},{"name":"open_links_in_new_tab","type":"boolean","nullable":false,"description":"Whether to open links in new browser tabs."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the preferences were created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the preferences were last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the preferences were soft deleted."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"reddit_clone_communities","description":"Core community entity representing subreddit-like communities where users can create and share content. Communities are organized around specific topics and managed by moderators. {@link reddit_clone_users.id} {@link reddit_clone_members.id} {@link reddit_clone_moderators.id}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"creator_id","type":"uuid","description":"User who created this community. References the creator's user ID. {@link reddit_clone_users.id}","relation":{"name":"creator","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"primary_category_id","type":"uuid","description":"Primary category classification for this community. {@link reddit_clone_community_categories.id}","relation":{"name":"primaryCategory","targetModel":"reddit_clone_community_categories"},"unique":false,"nullable":true}],"plainFields":[{"name":"name","type":"string","description":"Unique name identifier for the community (e.g., 'programming', 'gaming'). Used in URLs and community discovery.","nullable":false},{"name":"display_name","type":"string","description":"Human-readable display name for the community (e.g., 'Programming', 'Video Games').","nullable":false},{"name":"description","type":"string","description":"Community description explaining the purpose, topics, and guidelines. Maximum 500 characters.","nullable":true},{"name":"slug","type":"string","description":"URL-friendly version of the community name for use in paths (e.g., 'r/programming'). Must be unique.","nullable":false},{"name":"community_type","type":"string","description":"Type of community: 'public' (anyone can view/post), 'restricted' (viewable by all, posting requires approval), or 'private' (invite-only).","nullable":false},{"name":"content_rating","type":"string","description":"Content rating: 'sfw' (Safe For Work) or 'nsfw' (Not Safe For Work). Controls content visibility and warnings.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether the community is currently active and accepting new content. Inactive communities are archived.","nullable":false},{"name":"is_archived","type":"boolean","description":"Whether the community has been archived and no longer accepts new content or subscriptions.","nullable":false},{"name":"avatar_url","type":"uri","description":"URL to the community's avatar image. Typically a small square image representing the community.","nullable":true},{"name":"banner_url","type":"uri","description":"URL to the community's banner image. Displayed at the top of the community page.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the community was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the community was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the community was soft deleted. Null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true},{"fieldNames":["slug"],"unique":true}],"plainIndexes":[{"fieldNames":["community_type","is_active"]},{"fieldNames":["primary_category_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"display_name"},{"fieldName":"description"}]},{"name":"reddit_clone_community_settings","description":"Configuration and preference settings for individual communities. Stores community-specific customization options that moderators can adjust. {@link reddit_clone_communities.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Community these settings belong to. Each community has exactly one settings record. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":true,"nullable":false}],"plainFields":[{"name":"allow_images","type":"boolean","description":"Whether this community allows image posts. Can be disabled for text-only communities.","nullable":false},{"name":"allow_links","type":"boolean","description":"Whether this community allows link posts. Can be disabled for discussion-only communities.","nullable":false},{"name":"allow_polls","type":"boolean","description":"Whether this community allows poll posts. Requires additional poll functionality.","nullable":false},{"name":"require_post_flair","type":"boolean","description":"Whether posts in this community must have flair assigned before submission.","nullable":false},{"name":"require_comment_flair","type":"boolean","description":"Whether comments in this community must have flair. Less common but available.","nullable":false},{"name":"post_approval_required","type":"boolean","description":"Whether new posts require moderator approval before becoming visible. Used in restricted communities.","nullable":false},{"name":"minimum_account_age_days","type":"int","description":"Minimum account age in days required to post in this community. Helps prevent spam.","nullable":true},{"name":"minimum_karma_required","type":"int","description":"Minimum karma points required to post in this community. Helps ensure quality contributors.","nullable":true},{"name":"slow_mode_enabled","type":"boolean","description":"Whether slow mode is enabled, limiting how frequently users can post/comments.","nullable":false},{"name":"slow_mode_interval_seconds","type":"int","description":"Time interval in seconds between posts/comments when slow mode is enabled.","nullable":true},{"name":"welcome_message_enabled","type":"boolean","description":"Whether to send a welcome message to new subscribers.","nullable":false},{"name":"welcome_message_text","type":"string","description":"Custom welcome message text sent to new subscribers when welcome_message_enabled is true.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when these settings were created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when these settings were last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_id"]}],"ginIndexes":[]},{"name":"reddit_clone_community_rules","description":"Community-specific rules and guidelines that members must follow. Each community can have multiple rules that are displayed to users. {@link reddit_clone_communities.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Community that this rule belongs to. Rules are specific to each community. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Short, descriptive title for the rule (e.g., 'No Spam', 'Be Civil'). Maximum 100 characters.","nullable":false},{"name":"description","type":"string","description":"Detailed explanation of the rule and its enforcement. Maximum 1000 characters.","nullable":false},{"name":"rule_order","type":"int","description":"Display order for the rule within the community's rules list. Lower numbers appear first.","nullable":false},{"name":"is_enabled","type":"boolean","description":"Whether this rule is currently active and being enforced. Disabled rules are not shown to users.","nullable":false},{"name":"violation_action","type":"string","description":"Action taken when this rule is violated: 'warning', 'post_removal', 'temporary_ban', 'permanent_ban'.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this rule was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this rule was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when this rule was soft deleted. Null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_id","rule_order"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id","is_enabled"]},{"fieldNames":["rule_order"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}]},{"name":"reddit_clone_community_categories","description":"Taxonomy system for categorizing communities by topic. Used for community discovery and organization. Categories are platform-wide and managed by administrators.","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique name of the category (e.g., 'Technology', 'Sports', 'Entertainment'). Used for display and organization.","nullable":false},{"name":"slug","type":"string","description":"URL-friendly version of the category name for use in navigation and filtering.","nullable":false},{"name":"description","type":"string","description":"Description explaining what types of communities belong in this category. Maximum 500 characters.","nullable":true},{"name":"icon_url","type":"uri","description":"URL to an icon representing this category. Used in category browsing interfaces.","nullable":true},{"name":"color_hex","type":"string","description":"Hex color code for this category (e.g., '#FF6B35'). Used for visual differentiation.","nullable":true},{"name":"is_featured","type":"boolean","description":"Whether this category is featured and shown prominently in category discovery.","nullable":false},{"name":"community_count","type":"int","description":"Number of communities currently categorized under this category. Updated automatically.","nullable":false},{"name":"display_order","type":"int","description":"Order in which this category appears in category lists. Lower numbers appear first.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this category is active and available for use. Inactive categories are hidden.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this category was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this category was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when this category was soft deleted. Null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true},{"fieldNames":["slug"],"unique":true}],"plainIndexes":[{"fieldNames":["display_order"]},{"fieldNames":["is_featured","is_active"]}],"ginIndexes":[{"fieldName":"description"}]}]},{"filename":"schema-04-content.prisma","namespace":"Content","models":[{"name":"reddit_clone_posts","description":"Main posts table containing core post information and relationships. Posts are the primary content entities that users create within communities. Each post can be of different types (text, link, image) and supports voting, commenting, and ranking functionality. {@link reddit_clone_users.id} {@link reddit_clone_communities.id}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"author_id","type":"uuid","description":"User who created the post. {@link reddit_clone_users.id}","relation":{"name":"author","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where the post is published. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false},{"name":"parent_post_id","type":"uuid","description":"Original post if this is a cross-post. {@link reddit_clone_posts.id}","relation":{"name":"parentPost","targetModel":"reddit_clone_posts","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"title","type":"string","description":"Post title displayed to users. Limited to 300 characters for display purposes.","nullable":false},{"name":"post_type","type":"string","description":"Type of post: text, link, or image. Determines which content table contains the actual content.","nullable":false},{"name":"status","type":"string","description":"Post status: published, draft, removed, or archived. Controls visibility and moderation state.","nullable":false},{"name":"is_nsfw","type":"boolean","description":"Flag indicating Not Safe For Work content. Controls content filtering and warnings.","nullable":false},{"name":"is_spoiler","type":"boolean","description":"Flag indicating spoiler content. Controls content visibility with warnings.","nullable":false},{"name":"is_locked","type":"boolean","description":"Whether comments are locked on this post. Prevents further discussion when enabled.","nullable":false},{"name":"is_pinned","type":"boolean","description":"Whether post is pinned in its community. Featured posts appear at the top of community feeds.","nullable":false},{"name":"is_oc","type":"boolean","description":"Original Content flag. Indicates user-created original content vs shared content.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the post was created. Used for sorting and archival purposes.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the post was last updated. Tracks edits and modifications.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the post was soft-deleted. Allows for content recovery and moderation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["author_id","title","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["post_type","created_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["is_nsfw"]},{"fieldNames":["is_pinned","community_id"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"reddit_clone_post_contents","description":"Polymorphic content storage for different post types. Separates content from post metadata to support multiple content formats efficiently. Text posts store markdown content, link posts store URLs, and image posts reference media files. {@link reddit_clone_posts.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Post that this content belongs to. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":true,"nullable":false}],"plainFields":[{"name":"content_type","type":"string","description":"Type of content: text, link, or image. Determines which content field is populated.","nullable":false},{"name":"text_content","type":"string","description":"Markdown-formatted text content for text posts. Supports rich formatting and links.","nullable":true},{"name":"link_url","type":"uri","description":"URL for link posts. Must be valid HTTP/HTTPS URL format.","nullable":true},{"name":"link_title","type":"string","description":"Title extracted from or provided for link posts. Used for link previews.","nullable":true},{"name":"link_description","type":"string","description":"Description extracted from or provided for link posts. Used for link previews.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the content was created. Tracks content creation timeline.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the content was last updated. Tracks edits and modifications.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["content_type"]},{"fieldNames":["post_id"]}],"ginIndexes":[{"fieldName":"text_content"}]},{"name":"reddit_clone_post_metadata","description":"Analytical metadata for posts used in ranking algorithms and performance tracking. Contains vote counts, view statistics, and engagement metrics that drive content discovery and sorting algorithms. {@link reddit_clone_posts.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Post that this metadata belongs to. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":true,"nullable":false}],"plainFields":[{"name":"upvote_count","type":"int","description":"Total number of upvotes received. Used in ranking algorithms and user karma calculation.","nullable":false},{"name":"downvote_count","type":"int","description":"Total number of downvotes received. Used in ranking algorithms and user karma calculation.","nullable":false},{"name":"comment_count","type":"int","description":"Total number of comments on the post. Indicates engagement level for ranking.","nullable":false},{"name":"view_count","type":"int","description":"Total number of views the post has received. Measures content reach and popularity.","nullable":false},{"name":"share_count","type":"int","description":"Total number of times the post has been shared. Measures viral potential and reach.","nullable":false},{"name":"save_count","type":"int","description":"Total number of times users have saved the post. Indicates content value and utility.","nullable":false},{"name":"hot_score","type":"double","description":"Calculated hot score for ranking algorithm. Combines votes, comments, and time decay.","nullable":false},{"name":"controversy_score","type":"double","description":"Calculated controversy score for controversial sorting. Measures vote polarization.","nullable":false},{"name":"last_activity_at","type":"datetime","description":"Timestamp of last engagement activity (vote, comment, view). Used for ranking freshness.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when metadata record was created. Tracks metadata lifecycle.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when metadata was last updated. Ensures data freshness for ranking.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["hot_score"]},{"fieldNames":["controversy_score"]},{"fieldNames":["upvote_count","downvote_count"]},{"fieldNames":["last_activity_at"]}],"ginIndexes":[]},{"name":"reddit_clone_comments","description":"User comments on posts with support for nested threading. Comments are primary entities that require independent management for search, moderation, and user activity tracking. Each comment can have parent comments for threaded discussions. {@link reddit_clone_posts.id} {@link reddit_clone_users.id}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Post that this comment belongs to. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":false},{"name":"author_id","type":"uuid","description":"User who created the comment. {@link reddit_clone_users.id}","relation":{"name":"author","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"parent_comment_id","type":"uuid","description":"Parent comment for nested threading. Null for top-level comments. {@link reddit_clone_comments.id}","relation":{"name":"parentComment","targetModel":"reddit_clone_comments","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"Markdown-formatted comment text. Supports rich formatting, links, and code blocks.","nullable":false},{"name":"depth","type":"int","description":"Nesting depth of comment in thread. 0 for top-level, increments for each reply level.","nullable":false},{"name":"status","type":"string","description":"Comment status: published, removed, or archived. Controls visibility and moderation.","nullable":false},{"name":"is_edited","type":"boolean","description":"Flag indicating if comment has been edited. Shows edit indicator to users.","nullable":false},{"name":"edited_at","type":"datetime","description":"Timestamp when comment was last edited. Tracks modification history.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when comment was created. Used for sorting and archival purposes.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when comment was last updated. Tracks edits and modifications.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when comment was soft-deleted. Allows for content recovery and moderation.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["parent_comment_id","depth"]},{"fieldNames":["status","created_at"]},{"fieldNames":["depth"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"reddit_clone_comment_threads","description":"Hierarchical structure for organizing nested comments efficiently. Maintains thread relationships and enables efficient querying of comment trees. Supports up to 10 levels of nesting for organized discussions while maintaining performance. {@link reddit_clone_comments.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"Comment that this thread record belongs to. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments","mappingName":"reddit_clone_comment_threads_of_comment_id"},"unique":true,"nullable":false},{"name":"root_comment_id","type":"uuid","description":"Top-level comment that starts this thread. {@link reddit_clone_comments.id}","relation":{"name":"rootComment","targetModel":"reddit_clone_comments","mappingName":"reddit_clone_comment_threads_of_root_comment_id"},"unique":false,"nullable":true},{"name":"parent_thread_id","type":"uuid","description":"Parent thread in the hierarchy. Null for top-level threads. {@link reddit_clone_comment_threads.id}","relation":{"name":"parentThread","targetModel":"reddit_clone_comment_threads","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"thread_path","type":"string","description":"Materialized path for efficient hierarchical queries. Uses ltree-like structure for performance.","nullable":false},{"name":"thread_depth","type":"int","description":"Depth of this thread in the hierarchy. Used for performance optimization and display limits.","nullable":false},{"name":"child_count","type":"int","description":"Number of direct child comments in this thread. Used for efficient thread management.","nullable":false},{"name":"descendant_count","type":"int","description":"Total number of descendants in this thread subtree. Used for performance optimization.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when thread record was created. Tracks thread lifecycle.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when thread record was last updated. Ensures data freshness for queries.","nullable":false}],"uniqueIndexes":[{"fieldNames":["comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["root_comment_id"]},{"fieldNames":["parent_thread_id"]},{"fieldNames":["thread_path"]},{"fieldNames":["thread_depth"]},{"fieldNames":["child_count"]}],"ginIndexes":[]},{"name":"reddit_clone_content_media","description":"Media attachments for posts and comments supporting images and other file types. Provides centralized media management with proper storage references, metadata, and access controls. Supports multiple media types with validation and optimization. {@link reddit_clone_posts.id} {@link reddit_clone_comments.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Post that this media belongs to. Null if attached to comment. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Comment that this media belongs to. Null if attached to post. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"media_type","type":"string","description":"Type of media: image, video, gif, or document. Determines rendering and processing.","nullable":false},{"name":"file_name","type":"string","description":"Original filename of uploaded media. Preserved for user reference and downloads.","nullable":false},{"name":"file_size","type":"int","description":"Size of media file in bytes. Used for storage management and upload limits.","nullable":false},{"name":"mime_type","type":"string","description":"MIME type of media file. Ensures proper content-type handling and security.","nullable":false},{"name":"storage_url","type":"uri","description":"URL to media file in storage service. References optimized versions and CDN.","nullable":false},{"name":"thumbnail_url","type":"uri","description":"URL to thumbnail version of media. Used for previews and performance optimization.","nullable":true},{"name":"width","type":"int","description":"Width of media in pixels for images/videos. Used for responsive rendering.","nullable":true},{"name":"height","type":"int","description":"Height of media in pixels for images/videos. Used for responsive rendering.","nullable":true},{"name":"duration","type":"int","description":"Duration in seconds for video/audio media. Used for player controls and UI.","nullable":true},{"name":"alt_text","type":"string","description":"Accessibility description of media content. Required for screen readers and SEO.","nullable":true},{"name":"caption","type":"string","description":"User-provided caption for media. Provides context and additional information.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when media was uploaded. Tracks media lifecycle and storage management.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when media metadata was last updated. Ensures data accuracy.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]},{"fieldNames":["media_type"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-voting.prisma","namespace":"Voting","models":[{"name":"reddit_clone_post_votes","description":"Individual votes cast by users on posts. Tracks upvotes and downvotes separately for post scoring and user karma calculations. {@link reddit_clone_posts.id} {@link reddit_clone_users.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who cast the vote. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Post that received the vote. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote cast: 'upvote' or 'downvote'.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["post_id","vote_type"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["vote_type","created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_comment_votes","description":"Individual votes cast by users on comments. Tracks upvotes and downvotes separately for comment scoring and user karma calculations. {@link reddit_clone_comments.id} {@link reddit_clone_users.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who cast the vote. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"comment_id","type":"uuid","description":"Comment that received the vote. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_type","type":"string","description":"Type of vote cast: 'upvote' or 'downvote'.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["comment_id","vote_type"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["vote_type","created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_user_karma","description":"Aggregated karma score for users based on post and comment votes. Used for user reputation tracking and content ranking algorithms. {@link reddit_clone_users.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User whose karma is being tracked. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true,"nullable":false}],"plainFields":[{"name":"post_karma","type":"int","description":"Total karma earned from post votes. Calculated as (post upvotes - post downvotes).","nullable":false},{"name":"comment_karma","type":"int","description":"Total karma earned from comment votes. Calculated as (comment upvotes - comment downvotes).","nullable":false},{"name":"total_karma","type":"int","description":"Combined karma score (post_karma + comment_karma).","nullable":false},{"name":"last_calculated_at","type":"datetime","description":"Timestamp when karma was last calculated.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when karma tracking started for this user.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when karma was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["total_karma"]},{"fieldNames":["last_calculated_at"]},{"fieldNames":["user_id","last_calculated_at"]}],"ginIndexes":[]},{"name":"reddit_clone_vote_history","description":"Historical record of vote changes for audit trail and karma recalibration. Tracks vote creation, updates, and deletions. {@link reddit_clone_post_votes.id} {@link reddit_clone_comment_votes.id} {@link reddit_clone_users.id}","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who cast the vote. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"post_vote_id","type":"uuid","description":"Post vote record that was changed (nullable for comment votes). {@link reddit_clone_post_votes.id}","relation":{"name":"postVote","targetModel":"reddit_clone_post_votes"},"unique":false,"nullable":true},{"name":"comment_vote_id","type":"uuid","description":"Comment vote record that was changed (nullable for post votes). {@link reddit_clone_comment_votes.id}","relation":{"name":"commentVote","targetModel":"reddit_clone_comment_votes"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of vote action: 'created', 'updated', 'deleted'.","nullable":false},{"name":"previous_vote_type","type":"string","description":"Previous vote type before change (null for creation).","nullable":true},{"name":"new_vote_type","type":"string","description":"New vote type after change (null for deletion).","nullable":true},{"name":"karma_impact","type":"int","description":"Net karma impact of this vote change (+1 for upvote, -1 for downvote, 0 for no change).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote history record was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["post_vote_id"]},{"fieldNames":["comment_vote_id"]},{"fieldNames":["karma_impact"]}],"ginIndexes":[]},{"name":"reddit_clone_ranking_scores","description":"Pre-calculated ranking scores for posts and comments to optimize content sorting algorithms. Used for 'hot', 'top', 'controversial', and 'rising' sorting methods. {@link reddit_clone_posts.id} {@link reddit_clone_comments.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Post being scored (nullable for comment scoring). {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Comment being scored (nullable for post scoring). {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"hot_score","type":"double","description":"Hot ranking score based on votes and time decay. Higher scores indicate trending content.","nullable":false},{"name":"top_score","type":"int","description":"Top ranking score based on net votes (upvotes - downvotes).","nullable":false},{"name":"controversial_score","type":"double","description":"Controversial ranking score based on high vote counts in both directions. Higher scores indicate controversial content.","nullable":false},{"name":"rising_score","type":"double","description":"Rising ranking score based on recent vote velocity. Higher scores indicate rapidly gaining popularity.","nullable":false},{"name":"calculated_at","type":"datetime","description":"Timestamp when scores were last calculated.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the ranking record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the ranking record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["post_id"],"unique":true},{"fieldNames":["comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["hot_score"]},{"fieldNames":["top_score"]},{"fieldNames":["controversial_score"]},{"fieldNames":["rising_score"]},{"fieldNames":["calculated_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-subscriptions.prisma","namespace":"Subscriptions","models":[{"name":"reddit_clone_subscriptions","description":"Manages user subscriptions to communities. This table represents the many-to-many relationship between users and communities, tracking when users join communities and their subscription status. Each subscription enables personalized content delivery and community-specific notifications. {@link reddit_clone_users.id} {@link reddit_clone_communities.id}","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Subscribing user's identifier. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community being subscribed to. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the user subscribed to the community.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the subscription was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the subscription was canceled (soft delete).","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["community_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_subscription_preferences","description":"Stores user-specific preferences for each community subscription. These preferences control how content is displayed and what notifications are received for subscribed communities. This table extends subscription behavior with personalized settings. {@link reddit_clone_subscriptions.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"subscription_id","type":"uuid","description":"Associated subscription record. {@link reddit_clone_subscriptions.id}","relation":{"name":"subscription","targetModel":"reddit_clone_subscriptions"},"unique":true,"nullable":false}],"plainFields":[{"name":"show_nsfw_content","type":"boolean","description":"Whether to show NSFW (Not Safe For Work) content from this community.","nullable":false},{"name":"auto_expand_media","type":"boolean","description":"Whether to automatically expand media content from this community.","nullable":false},{"name":"thumbnail_preference","type":"string","description":"Preferred thumbnail display setting (e.g., 'always', 'never', 'default').","nullable":false},{"name":"feed_sort_order","type":"string","description":"Preferred sorting algorithm for this community's content in feed (e.g., 'hot', 'new', 'top').","nullable":false},{"name":"post_density","type":"string","description":"Preferred post display density (e.g., 'compact', 'card', 'classic').","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the preference record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the preference record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["subscription_id"],"unique":true}],"plainIndexes":[{"fieldNames":["show_nsfw_content"]},{"fieldNames":["feed_sort_order"]}],"ginIndexes":[]},{"name":"reddit_clone_user_feeds","description":"Stores aggregated feed data for users based on their community subscriptions. This table enables efficient delivery of personalized content by pre-aggregating posts from subscribed communities. The feed is updated as new content is published. {@link reddit_clone_users.id} {@link reddit_clone_posts.id} {@link reddit_clone_communities.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User receiving the feed content. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Post included in the user's feed. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where the post originated. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"feed_position","type":"int","description":"Position of this post in the user's personalized feed ranking.","nullable":false},{"name":"ranking_score","type":"double","description":"Calculated ranking score used for feed ordering (based on votes, time, etc.).","nullable":false},{"name":"seen_at","type":"datetime","description":"Timestamp when the user viewed this post in their feed.","nullable":true},{"name":"dismissed_at","type":"datetime","description":"Timestamp when the user dismissed this post from their feed.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this post was added to the user's feed.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the feed entry was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id","post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id","feed_position"]},{"fieldNames":["user_id","ranking_score"]},{"fieldNames":["community_id"]},{"fieldNames":["created_at"]},{"fieldNames":["seen_at"]}],"ginIndexes":[]},{"name":"reddit_clone_notification_settings","description":"Manages user notification preferences for subscribed communities. Controls what types of notifications users receive and how they are delivered for each community subscription. Enables granular control over notification frequency and delivery methods. {@link reddit_clone_subscriptions.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"subscription_id","type":"uuid","description":"Associated subscription record. {@link reddit_clone_subscriptions.id}","relation":{"name":"subscription","targetModel":"reddit_clone_subscriptions"},"unique":true,"nullable":false}],"plainFields":[{"name":"notify_new_posts","type":"boolean","description":"Whether to receive notifications for new posts in this community.","nullable":false},{"name":"notify_comments_on_posts","type":"boolean","description":"Whether to receive notifications for comments on posts the user has engaged with.","nullable":false},{"name":"notify_replies_to_comments","type":"boolean","description":"Whether to receive notifications for replies to the user's comments.","nullable":false},{"name":"notify_community_announcements","type":"boolean","description":"Whether to receive notifications for community announcements and updates.","nullable":false},{"name":"notification_frequency","type":"string","description":"Preferred notification frequency (e.g., 'immediate', 'daily_digest', 'weekly_summary').","nullable":false},{"name":"push_notifications_enabled","type":"boolean","description":"Whether push notifications are enabled for this community.","nullable":false},{"name":"email_notifications_enabled","type":"boolean","description":"Whether email notifications are enabled for this community.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the notification settings were created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the notification settings were last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["subscription_id"],"unique":true}],"plainIndexes":[{"fieldNames":["notify_new_posts"]},{"fieldNames":["notification_frequency"]},{"fieldNames":["push_notifications_enabled"]},{"fieldNames":["email_notifications_enabled"]}],"ginIndexes":[]}]},{"filename":"schema-07-moderation.prisma","namespace":"Moderation","models":[{"name":"reddit_clone_content_reports","description":"Content reports submitted by users for moderation review. Users can report posts or comments that violate community guidelines or platform policies. Each report is categorized and tracked through the moderation workflow until resolution.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_id","type":"uuid","description":"User who submitted the report. {@link reddit_clone_users.id}","relation":{"name":"reporter","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"moderator_id","type":"uuid","description":"Moderator assigned to handle the report. {@link reddit_clone_moderators.id}","relation":{"name":"moderator","targetModel":"reddit_clone_moderators"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Reported post content. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Reported comment content. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":true},{"name":"report_category_id","type":"uuid","description":"Category of the reported violation. {@link reddit_clone_report_categories.id}","relation":{"name":"reportCategory","targetModel":"reddit_clone_report_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"description","type":"string","description":"Detailed description of the reported violation provided by the reporter.","nullable":true},{"name":"status","type":"string","description":"Current status of the report: pending, under_review, resolved, dismissed.","nullable":false},{"name":"priority","type":"string","description":"Report priority level: low, medium, high, critical.","nullable":false},{"name":"evidence_url","type":"uri","description":"Optional URL to supporting evidence or screenshots.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the report was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the report was last updated.","nullable":false},{"name":"resolved_at","type":"datetime","description":"Timestamp when the report was resolved.","nullable":true},{"name":"deleted_at","type":"datetime","description":"Timestamp when the report was soft deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["status","priority"]},{"fieldNames":["reporter_id","created_at"]},{"fieldNames":["moderator_id","status"]},{"fieldNames":["post_id","created_at"]},{"fieldNames":["comment_id","created_at"]}],"ginIndexes":[]},{"name":"reddit_clone_moderation_actions","description":"Actions taken by moderators in response to content reports or community violations. This table tracks all moderation decisions and their outcomes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Moderator who performed the action. {@link reddit_clone_moderators.id}","relation":{"name":"moderator","targetModel":"reddit_clone_moderators"},"unique":false,"nullable":false},{"name":"target_user_id","type":"uuid","description":"User who was the target of the moderation action. {@link reddit_clone_users.id}","relation":{"name":"targetUser","targetModel":"reddit_clone_users"},"unique":false,"nullable":true},{"name":"content_report_id","type":"uuid","description":"Content report that triggered this action. {@link reddit_clone_content_reports.id}","relation":{"name":"contentReport","targetModel":"reddit_clone_content_reports"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Post that was moderated. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Comment that was moderated. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action: remove_content, warn_user, temporary_ban, permanent_ban, approve_content, dismiss_report.","nullable":false},{"name":"reason","type":"string","description":"Detailed explanation for the moderation action.","nullable":false},{"name":"duration_hours","type":"int","description":"Duration of temporary actions in hours. Null for permanent actions.","nullable":true},{"name":"is_appealed","type":"boolean","description":"Whether the action has been appealed by the target user.","nullable":false},{"name":"appeal_reason","type":"string","description":"Reason provided by user for appealing the action.","nullable":true},{"name":"appeal_status","type":"string","description":"Status of the appeal: pending, approved, rejected.","nullable":true},{"name":"appeal_resolved_by","type":"string","description":"Moderator or admin who resolved the appeal.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderation action was taken.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the action was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the action was soft deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["moderator_id","created_at"]},{"fieldNames":["target_user_id","action_type"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["is_appealed","appeal_status"]}],"ginIndexes":[{"fieldName":"reason"},{"fieldName":"appeal_reason"}]},{"name":"reddit_clone_user_bans","description":"User ban records for community or platform violations. Tracks ban duration, reason, and status for users who have been restricted from platform access.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who is banned. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false},{"name":"moderator_id","type":"uuid","description":"Moderator who issued the ban. {@link reddit_clone_moderators.id}","relation":{"name":"moderator","targetModel":"reddit_clone_moderators"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community where the ban applies. Null for platform-wide bans. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"ban_type","type":"string","description":"Type of ban: temporary, permanent, shadow.","nullable":false},{"name":"reason","type":"string","description":"Detailed reason for the ban.","nullable":false},{"name":"duration_days","type":"int","description":"Duration of temporary ban in days. Null for permanent bans.","nullable":true},{"name":"starts_at","type":"datetime","description":"Timestamp when the ban takes effect.","nullable":false},{"name":"ends_at","type":"datetime","description":"Timestamp when the ban expires. Null for permanent bans.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether the ban is currently active.","nullable":false},{"name":"is_appealed","type":"boolean","description":"Whether the ban has been appealed.","nullable":false},{"name":"appeal_reason","type":"string","description":"Reason provided by user for appealing the ban.","nullable":true},{"name":"appeal_status","type":"string","description":"Status of the appeal: pending, approved, rejected.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the ban was issued.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the ban was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the ban was soft deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","is_active"]},{"fieldNames":["community_id","is_active"]},{"fieldNames":["ban_type","starts_at"]},{"fieldNames":["ends_at","is_active"]},{"fieldNames":["is_appealed","appeal_status"]}],"ginIndexes":[{"fieldName":"reason"},{"fieldName":"appeal_reason"}]},{"name":"reddit_clone_moderation_logs","description":"Comprehensive audit log of all moderation activities. This snapshot table preserves historical moderation actions for transparency, accountability, and compliance purposes.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Moderator who performed the action. {@link reddit_clone_moderators.id}","relation":{"name":"moderator","targetModel":"reddit_clone_moderators"},"unique":false,"nullable":false},{"name":"target_user_id","type":"uuid","description":"User who was affected by the moderation action. {@link reddit_clone_users.id}","relation":{"name":"targetUser","targetModel":"reddit_clone_users"},"unique":false,"nullable":true},{"name":"content_report_id","type":"uuid","description":"Content report that triggered the action. {@link reddit_clone_content_reports.id}","relation":{"name":"contentReport","targetModel":"reddit_clone_content_reports"},"unique":false,"nullable":true},{"name":"moderation_action_id","type":"uuid","description":"Moderation action that was logged. {@link reddit_clone_moderation_actions.id}","relation":{"name":"moderationAction","targetModel":"reddit_clone_moderation_actions"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action performed.","nullable":false},{"name":"target_type","type":"string","description":"Type of target: post, comment, user, community.","nullable":false},{"name":"target_id","type":"uuid","description":"ID of the target entity (post_id, comment_id, user_id, etc.).","nullable":false},{"name":"reason","type":"string","description":"Reason for the moderation action.","nullable":false},{"name":"details","type":"string","description":"Additional details about the moderation action.","nullable":true},{"name":"ip_address","type":"string","description":"IP address from which the action was performed.","nullable":true},{"name":"user_agent","type":"string","description":"User agent string of the moderator's browser.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the log entry was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["moderator_id","created_at"]},{"fieldNames":["target_user_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["target_type","target_id"]}],"ginIndexes":[{"fieldName":"reason"},{"fieldName":"details"}]},{"name":"reddit_clone_report_categories","description":"Standardized categories for content reporting. Provides consistent classification for user reports to streamline moderation workflows and reporting analytics.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique name of the report category.","nullable":false},{"name":"description","type":"string","description":"Detailed description of what constitutes this report category.","nullable":false},{"name":"severity_level","type":"string","description":"Severity level: low, medium, high, critical.","nullable":false},{"name":"response_time_hours","type":"int","description":"Target response time in hours for this category.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this report category is currently active.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the category was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the category was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the category was soft deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["severity_level"]},{"fieldNames":["is_active"]}],"ginIndexes":[{"fieldName":"description"}]}]},{"filename":"schema-08-profiles.prisma","namespace":"Profiles","models":[{"name":"reddit_clone_user_profiles","description":"Comprehensive user profile information including personal details, preferences, and display settings. This table serves as the central profile entity for user identity and customization. {@link reddit_clone_users.id}","stance":"primary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true,"nullable":false,"description":"Reference to the user account. {@link reddit_clone_users.id}"}],"plainFields":[{"name":"display_name","type":"string","nullable":true,"description":"User's public display name, different from username. Optional for users who prefer username display."},{"name":"bio","type":"string","nullable":true,"description":"User biography or about section text. Maximum 500 characters."},{"name":"avatar_url","type":"uri","nullable":true,"description":"URL to user's profile avatar image."},{"name":"banner_url","type":"uri","nullable":true,"description":"URL to user's profile banner image."},{"name":"location","type":"string","nullable":true,"description":"User's geographic location for community discovery."},{"name":"website","type":"uri","nullable":true,"description":"User's personal website or social media link."},{"name":"cake_day","type":"datetime","nullable":false,"description":"User's account creation anniversary date for annual celebration."},{"name":"profile_visibility","type":"string","nullable":false,"description":"Profile visibility setting: public, followers_only, or private."},{"name":"activity_visibility","type":"string","nullable":false,"description":"Activity feed visibility setting: public, followers_only, or private."},{"name":"karma_visibility","type":"string","nullable":false,"description":"Karma score visibility setting: show, hide, or followers_only."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the profile was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the profile was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the profile was soft deleted."}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["profile_visibility"]},{"fieldNames":["cake_day"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"reddit_clone_user_activity","description":"Comprehensive tracking of all user activities including posts, comments, votes, subscriptions, and other interactions. This table provides detailed activity history for user profiles and analytics. {@link reddit_clone_users.id} {@link reddit_clone_posts.id} {@link reddit_clone_comments.id} {@link reddit_clone_communities.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"User who performed the activity. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false},{"name":"post_id","type":"uuid","nullable":true,"description":"Related post if activity involves a post. {@link reddit_clone_posts.id}","relation":{"name":"post","targetModel":"reddit_clone_posts"},"unique":false},{"name":"comment_id","type":"uuid","nullable":true,"description":"Related comment if activity involves a comment. {@link reddit_clone_comments.id}","relation":{"name":"comment","targetModel":"reddit_clone_comments"},"unique":false},{"name":"community_id","type":"uuid","nullable":true,"description":"Related community if activity involves a community. {@link reddit_clone_communities.id}","relation":{"name":"community","targetModel":"reddit_clone_communities"},"unique":false}],"plainFields":[{"name":"activity_type","type":"string","nullable":false,"description":"Type of activity: post_created, comment_created, post_upvoted, post_downvoted, comment_upvoted, comment_downvoted, community_subscribed, community_unsubscribed, post_saved, post_hidden, etc."},{"name":"activity_data","type":"string","nullable":true,"description":"Additional JSON data specific to the activity type for detailed tracking."},{"name":"karma_change","type":"int","nullable":true,"description":"Karma points gained or lost from this activity."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address from which the activity was performed for security tracking."},{"name":"user_agent","type":"string","nullable":true,"description":"User agent string from the client for analytics."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the activity occurred."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["activity_type","created_at"]},{"fieldNames":["community_id","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"activity_type"}]},{"name":"reddit_clone_user_statistics","description":"Aggregated statistics and metrics for user performance and engagement tracking. This table provides pre-computed statistics for efficient querying and user analytics. {@link reddit_clone_users.id}","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"User these statistics belong to. {@link reddit_clone_users.id}","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true}],"plainFields":[{"name":"total_posts","type":"int","nullable":false,"description":"Total number of posts created by the user."},{"name":"total_comments","type":"int","nullable":false,"description":"Total number of comments created by the user."},{"name":"total_upvotes_received","type":"int","nullable":false,"description":"Total number of upvotes received across all posts and comments."},{"name":"total_downvotes_received","type":"int","nullable":false,"description":"Total number of downvotes received across all posts and comments."},{"name":"total_upvotes_given","type":"int","nullable":false,"description":"Total number of upvotes given by the user."},{"name":"total_downvotes_given","type":"int","nullable":false,"description":"Total number of downvotes given by the user."},{"name":"total_communities_subscribed","type":"int","nullable":false,"description":"Total number of communities the user is subscribed to."},{"name":"total_communities_created","type":"int","nullable":false,"description":"Total number of communities created by the user."},{"name":"total_awards_given","type":"int","nullable":false,"description":"Total number of awards given to other users."},{"name":"total_awards_received","type":"int","nullable":false,"description":"Total number of awards received from other users."},{"name":"last_calculated_at","type":"datetime","nullable":false,"description":"Timestamp when these statistics were last calculated."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the statistics record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the statistics record was last updated."}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["total_upvotes_received"]},{"fieldNames":["total_posts"]},{"fieldNames":["last_calculated_at"]}],"ginIndexes":[]},{"name":"reddit_clone_reputation_metrics","description":"Detailed reputation metrics and karma breakdown for user reputation tracking. This table provides granular reputation data beyond simple karma totals. {@link reddit_clone_users.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":true,"nullable":false,"description":"User these reputation metrics belong to. {@link reddit_clone_users.id}"}],"plainFields":[{"name":"post_karma","type":"int","nullable":false,"description":"Total karma earned from posts (upvotes - downvotes on posts)."},{"name":"comment_karma","type":"int","nullable":false,"description":"Total karma earned from comments (upvotes - downvotes on comments)."},{"name":"award_karma","type":"int","nullable":false,"description":"Karma earned from receiving awards from other users."},{"name":"community_karma","type":"int","nullable":false,"description":"Karma earned from community-specific contributions and moderation."},{"name":"contribution_score","type":"double","nullable":false,"description":"Weighted score based on quality and frequency of contributions."},{"name":"helpfulness_score","type":"double","nullable":false,"description":"Score measuring how helpful the user's contributions are to others."},{"name":"consistency_score","type":"double","nullable":false,"description":"Score measuring consistency of user engagement over time."},{"name":"engagement_velocity","type":"double","nullable":false,"description":"Rate of recent engagement activity and contribution frequency."},{"name":"reputation_tier","type":"string","nullable":false,"description":"User's current reputation tier: new_member, active_member, trusted_member, community_leader, etc."},{"name":"karma_trend","type":"string","nullable":false,"description":"Trend direction of karma: increasing, decreasing, or stable."},{"name":"last_reputation_calculation","type":"datetime","nullable":false,"description":"Timestamp when reputation metrics were last calculated."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the reputation metrics record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the reputation metrics record was last updated."}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["post_karma"]},{"fieldNames":["comment_karma"]},{"fieldNames":["last_reputation_calculation"]}],"ginIndexes":[{"fieldName":"reputation_tier"}]},{"name":"reddit_clone_achievements","description":"User achievements and badges earned through platform participation and contributions. This table tracks achievement awards and user recognition milestones. {@link reddit_clone_users.id}","stance":"subsidiary","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","relation":{"name":"user","targetModel":"reddit_clone_users"},"unique":false,"nullable":false,"description":"User who earned the achievement. {@link reddit_clone_users.id}"}],"plainFields":[{"name":"achievement_type","type":"string","nullable":false,"description":"Type of achievement: karma_milestone, post_milestone, comment_milestone, community_milestone, moderator_milestone, etc."},{"name":"achievement_name","type":"string","nullable":false,"description":"Name of the achievement award."},{"name":"achievement_description","type":"string","nullable":false,"description":"Description of what the achievement represents."},{"name":"achievement_tier","type":"string","nullable":false,"description":"Tier level of the achievement: bronze, silver, gold, platinum, diamond."},{"name":"criteria_value","type":"int","nullable":true,"description":"Value that triggered the achievement (e.g., karma threshold)."},{"name":"awarded_at","type":"datetime","nullable":false,"description":"Timestamp when the achievement was awarded."},{"name":"is_active","type":"boolean","nullable":false,"description":"Whether the achievement is currently active and displayed."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the achievement record was created."}],"uniqueIndexes":[{"fieldNames":["user_id","achievement_type","achievement_tier"],"unique":true}],"plainIndexes":[{"fieldNames":["achievement_type"]},{"fieldNames":["achievement_tier"]},{"fieldNames":["awarded_at"]},{"fieldNames":["is_active"]}],"ginIndexes":[{"fieldName":"achievement_name"}]}]}]}