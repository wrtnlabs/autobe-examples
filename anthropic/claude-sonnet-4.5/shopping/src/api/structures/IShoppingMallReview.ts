import { tags } from "typia";

/**
 * Complete product review entity with star rating and optional feedback.
 *
 * This represents a customer's review of a product they purchased and received.
 * Reviews can only be submitted by verified purchasers (customers with
 * completed orders for the product), ensuring authentic feedback and building
 * marketplace trust.
 *
 * Each review includes a mandatory star rating (1-5 scale) and optional written
 * content (title and text). Customers can enhance reviews with up to 5 uploaded
 * images. All reviews undergo moderation workflow before publication to
 * maintain quality standards.
 *
 * Reviews contribute to product aggregate ratings displayed throughout the
 * catalog and influence search ranking. The helpfulness voting system allows
 * customers to identify the most valuable reviews through community feedback.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallReview = {
  /**
   * Unique identifier of the product review.
   *
   * This UUID serves as the primary key in the shopping_mall_reviews table
   * and is used for all review-related operations including editing,
   * deletion, and voting.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Customer who wrote this review (reviewer).
   *
   * References the shopping_mall_customers table. This foreign key
   * establishes the review ownership and is used for authorization checks to
   * ensure customers can only edit or delete their own reviews.
   */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /**
   * Product being reviewed.
   *
   * References the shopping_mall_products table. Each review is associated
   * with a specific product, and customers can submit only one review per
   * product to prevent duplicate feedback.
   */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /**
   * Specific SKU variant reviewed (optional).
   *
   * References the shopping_mall_skus table. If provided, indicates the
   * customer reviewed a specific color/size/option combination. Null means
   * the review applies to the product generally rather than a specific
   * variant.
   */
  shopping_mall_sku_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Order that enabled this verified purchase review.
   *
   * References the shopping_mall_orders table. This foreign key validates
   * that the customer purchased and received the product, qualifying them to
   * submit a verified review. Only customers with completed orders can review
   * products.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * Star rating from 1 to 5 stars (required).
   *
   * Represents the customer's satisfaction level: 5=Excellent, 4=Good,
   * 3=Average, 2=Poor, 1=Terrible. This rating contributes to the product's
   * aggregate rating displayed throughout the catalog and influences search
   * ranking.
   */
  rating: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>;

  /**
   * Optional review title or short summary.
   *
   * Provides a concise headline summarizing the customer's opinion. Limited
   * to 100 characters. Helps other customers quickly understand the review's
   * main point before reading the full text.
   */
  title?: string | null | undefined;

  /**
   * Optional detailed review text.
   *
   * Comprehensive written feedback about the product. Customers can submit
   * rating-only reviews without text. When provided, must be at least 10
   * characters to ensure meaningful content, maximum 5000 characters.
   * Validated for prohibited content including profanity and contact
   * information.
   */
  review_text?: string | null | undefined;

  /**
   * Whether this review is from a verified purchase.
   *
   * Always true in this platform since only customers who completed orders
   * can review. This badge increases review credibility and helps customers
   * identify authentic feedback from actual purchasers.
   */
  verified_purchase: boolean;

  /**
   * Review moderation status.
   *
   * Indicates the current state in the moderation workflow:
   *
   * - Pending_moderation: Awaiting admin approval
   * - Approved: Published and visible to customers
   * - Rejected: Violates platform policies
   *
   * All reviews undergo moderation before publication to maintain quality
   * standards.
   */
  status: string;

  /**
   * Count of helpful votes.
   *
   * Number of customers who found this review helpful. Aggregated from
   * shopping_mall_review_helpfulness_votes where is_helpful is true. Higher
   * helpful counts indicate more valuable reviews and influence 'Most
   * Helpful' sorting.
   */
  helpful_count: number & tags.Type<"int32">;

  /**
   * Count of not-helpful votes.
   *
   * Number of customers who marked this review as not helpful. Tracked
   * internally for quality monitoring but not publicly displayed to avoid
   * negative sentiment. Used by admins to identify potentially problematic
   * reviews.
   */
  not_helpful_count: number & tags.Type<"int32">;

  /**
   * Timestamp when the review was originally submitted.
   *
   * Records when the customer first created the review. Used for determining
   * edit window eligibility (30 days from creation) and sorting reviews by
   * recency.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the review was last edited.
   *
   * Shows when the review was last modified. Reviews with updated_at
   * different from created_at display an 'edited' badge. Used for tracking
   * review modification history.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallReview {
  /**
   * Search and filter parameters for retrieving product reviews.
   *
   * This request DTO supports comprehensive review searching including
   * filtering by product, customer, rating level, moderation status,
   * helpfulness threshold, and date ranges. Pagination and sorting options
   * enable efficient review browsing.
   *
   * Customers use these filters to find relevant reviews when evaluating
   * products. Sellers use them to monitor feedback on their products. Admins
   * use them for moderation queue management.
   *
   * All filter fields are optional, allowing flexible query construction from
   * simple product review lists to complex filtered searches.
   */
  export type IRequest = {
    /**
     * Filter reviews by specific product.
     *
     * References shopping_mall_products table. Returns only reviews for the
     * specified product when provided.
     */
    shopping_mall_product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter reviews by specific customer.
     *
     * References shopping_mall_customers table. Returns only reviews
     * written by the specified customer when provided.
     */
    shopping_mall_customer_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter reviews by star rating level.
     *
     * Returns only reviews with the specified rating (1-5). Enables
     * filtering to show only 5-star reviews, only 1-star reviews, etc.
     */
    rating?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>)
      | undefined;

    /**
     * Filter reviews by moderation status.
     *
     * Valid values: pending_moderation, approved, rejected. Customers see
     * only approved reviews; admins can filter by any status for moderation
     * workflows.
     */
    status?: string | undefined;

    /**
     * Filter to show only verified purchase reviews.
     *
     * When true, returns only reviews where verified_purchase=true. Since
     * all reviews are from verified purchases on this platform, this filter
     * is always effectively true but included for API completeness.
     */
    verified_purchase_only?: boolean | undefined;

    /**
     * Filter reviews with at least this many helpful votes.
     *
     * Returns reviews where helpful_count >= this value. Useful for finding
     * highly-rated helpful reviews.
     */
    min_helpful_count?:
      | (number & tags.Type<"int32"> & tags.Minimum<0>)
      | undefined;

    /**
     * Filter reviews created after this timestamp.
     *
     * Enables date range filtering for recent reviews or reviews from
     * specific time periods.
     */
    created_after?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter reviews created before this timestamp.
     *
     * Enables date range filtering for older reviews or reviews from
     * specific time periods.
     */
    created_before?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Sort order for review results.
     *
     * Supported values:
     *
     * - Most_recent: Newest reviews first (default)
     * - Most_helpful: Highest helpful count first
     * - Highest_rating: 5-star reviews first
     * - Lowest_rating: 1-star reviews first
     */
    sort_by?: string | undefined;

    /**
     * Page number for pagination (1-based).
     *
     * Specifies which page of results to return. Defaults to 1 if not
     * provided.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of reviews per page.
     *
     * Controls page size for pagination. Typical values range from 10-50.
     * Default is 10 reviews per page.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;
  };

  /**
   * Review creation data transfer object for submitting new product reviews.
   *
   * This DTO enables verified purchasers to submit product reviews with star
   * ratings and optional written feedback. Only customers who have received
   * products from completed orders can submit reviews.
   *
   * The system validates that the customer has a delivered order containing
   * the product, ensures the customer hasn't already reviewed the product
   * (one review per customer per product), and checks that review content
   * meets quality standards.
   *
   * All submitted reviews enter moderation workflow with status
   * 'pending_moderation' and require admin approval before publication. The
   * verified_purchase flag is automatically set to true since only verified
   * purchasers can access this endpoint.
   */
  export type ICreate = {
    /**
     * Product being reviewed.
     *
     * References the shopping_mall_products table. Identifies which product
     * the customer is reviewing. The customer must have a completed order
     * containing this product to be eligible to submit a review.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Specific SKU variant reviewed (optional).
     *
     * References the shopping_mall_skus table. If provided, indicates the
     * customer is reviewing a specific color/size/option combination. If
     * null, the review applies to the product generally.
     */
    shopping_mall_sku_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Order that enables this verified purchase review.
     *
     * References the shopping_mall_orders table. Must be a completed order
     * (status='delivered') that contains the product being reviewed. This
     * validates the customer's purchase eligibility.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Star rating from 1 to 5 stars (required).
     *
     * Mandatory field representing customer satisfaction: 5=Excellent,
     * 4=Very Good, 3=Average, 2=Poor, 1=Terrible. Contributes to product
     * aggregate rating.
     */
    rating: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>;

    /**
     * Optional review title or short summary.
     *
     * Provides a concise headline for the review, maximum 100 characters.
     * Helps other customers quickly understand the review's main point.
     */
    title?: (string & tags.MaxLength<100>) | undefined;

    /**
     * Optional detailed review text.
     *
     * Comprehensive written feedback about the product. Minimum 10
     * characters when provided, maximum 5000 characters. Validated for
     * prohibited content.
     */
    review_text?:
      | (string & tags.MinLength<10> & tags.MaxLength<5000>)
      | undefined;
  };

  /**
   * Update data transfer object for modifying existing product reviews.
   *
   * This DTO enables customers to edit their previously submitted reviews
   * within the 30-day edit window as specified in the business requirements.
   * All fields are optional, allowing customers to update only the aspects
   * they wish to change.
   *
   * When a customer submits review updates, the modified content is
   * re-submitted to the moderation workflow with status transitioning to
   * 'pending_moderation'. This ensures that edited reviews maintain the same
   * quality standards as new submissions.
   *
   * The updated review will display an 'edited' badge showing the last
   * modification date to maintain transparency. The edit history is preserved
   * in audit logs accessible to administrators for moderation and dispute
   * resolution purposes.
   */
  export type IUpdate = {
    /**
     * Updated star rating for the product on a 1-5 scale.
     *
     * This represents the customer's revised satisfaction level with the
     * product. Valid values are 1 (Terrible), 2 (Poor), 3 (Average), 4
     * (Very Good), and 5 (Excellent). The rating contributes to the
     * product's aggregate rating calculation.
     *
     * Changing the rating triggers recalculation of the product's average
     * rating and may affect the product's ranking in search results and
     * category listings.
     */
    rating?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>)
      | undefined;

    /**
     * Updated short summary or headline for the product review.
     *
     * This optional field provides a concise title that summarizes the
     * customer's opinion or key point of their review. The title appears
     * prominently in review displays and helps other customers quickly
     * understand the review's main message.
     *
     * The title is limited to 100 characters to maintain readability and
     * ensure it displays properly across different devices and interfaces.
     */
    title?: (string & tags.MaxLength<100>) | undefined;

    /**
     * Updated detailed written feedback about the product.
     *
     * This optional field contains the customer's comprehensive review text
     * describing their experience with the product, its quality,
     * performance, and any notable characteristics. While optional,
     * detailed reviews provide valuable information to other customers.
     *
     * When provided, the review text must be at least 10 characters to
     * ensure meaningful content and cannot exceed 5000 characters. The text
     * is validated to prevent prohibited content including profanity,
     * personal contact information, external URLs, and promotional
     * material.
     */
    review_text?:
      | (string & tags.MinLength<10> & tags.MaxLength<5000>)
      | undefined;
  };

  /** Helpfulness vote. */
  export type IVote = {
    /** Helpful? */
    is_helpful: boolean;
  };
}
