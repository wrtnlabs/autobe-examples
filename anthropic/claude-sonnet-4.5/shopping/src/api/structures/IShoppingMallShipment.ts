import { tags } from "typia";

/**
 * Shipment.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallShipment = {
  /** Shipment ID. */
  id: string & tags.Format<"uuid">;

  /** Tracking. */
  tracking_number: string;
};
export namespace IShoppingMallShipment {
  /**
   * Search criteria for retrieving shipments.
   *
   * Supports filtering by status and carrier with pagination.
   */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Filter by shipment status. */
    shipment_status?: string | undefined;

    /** Filter by carrier name. */
    carrier_name?: string | undefined;
  };

  /** Shipment creation. */
  export type ICreate = {
    /** Order ID. */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /** Carrier. */
    carrier_name: string;

    /** Tracking. */
    tracking_number: string;
  };

  /**
   * Update payload for modifying shipment information and tracking details.
   *
   * This type supports sellers updating shipping information after initial
   * shipment creation, enabling correction of tracking numbers, updating
   * carrier details, revising shipment status as packages move through
   * delivery, and adjusting delivery estimates based on carrier updates.
   *
   * All fields are optional to support partial updates. Sellers can update
   * specific fields without providing all shipment information, allowing
   * focused corrections and status updates throughout the delivery
   * lifecycle.
   *
   * Sellers use this update type when correcting initially entered tracking
   * information, updating shipment status based on carrier notifications,
   * adding delivery signatures or proof of delivery, revising estimated
   * delivery dates when carrier schedules change, or changing shipping
   * methods if packages are rerouted.
   */
  export type IUpdate = {
    /**
     * Shipping carrier name used for package transportation and delivery.
     *
     * This field specifies the logistics company responsible for
     * transporting the package from the seller to the customer. Common
     * carrier names include national postal services, international courier
     * services (FedEx, UPS, DHL), and regional/local delivery providers.
     *
     * Updating the carrier name is useful when sellers need to correct
     * initial carrier selection or when package routing changes due to
     * carrier availability or service issues.
     */
    carrier_name?: string | undefined;

    /**
     * Carrier tracking number for shipment tracking and status updates.
     *
     * This unique identifier enables real-time package tracking through the
     * carrier's tracking system. The tracking number format varies by
     * carrier and is validated against carrier-specific patterns.
     *
     * Updating the tracking number is necessary when correcting initially
     * entered tracking information or when packages are rerouted and
     * assigned new tracking identifiers by the carrier.
     */
    tracking_number?: string | undefined;

    /**
     * Shipping service level used for this shipment.
     *
     * Valid values include: standard (5-7 business days), express (2-3
     * business days), overnight (1 business day), or free_shipping (when
     * order qualifies for free shipping promotion).
     *
     * This field affects delivery timeline expectations and customer
     * communication about when the package will arrive.
     */
    shipping_method?: string | undefined;

    /**
     * Current processing and delivery status of the shipment.
     *
     * Valid status values track the shipment lifecycle: label_created
     * (shipping label generated but package not yet picked up), picked_up
     * (carrier collected the package), in_transit (package moving through
     * carrier network), out_for_delivery (package on delivery vehicle for
     * final delivery), delivered (package successfully delivered to
     * customer), exception (delivery issue or delay), failed_delivery
     * (delivery attempt unsuccessful).
     *
     * Sellers update this status as they receive updates from carriers or
     * when manually tracking package progress. Status changes trigger
     * customer notifications about their order delivery progress.
     */
    shipment_status?: string | undefined;

    /**
     * Carrier's estimated delivery date for the shipment.
     *
     * This timestamp represents the expected delivery date provided by the
     * shipping carrier, calculated based on the shipping method, origin
     * location, destination address, and current package location in the
     * carrier network.
     *
     * Sellers can update this date when carriers revise delivery estimates
     * due to delays, expedited processing, or changed delivery schedules.
     * Updated delivery dates trigger customer notifications to manage
     * delivery expectations.
     */
    estimated_delivery_date?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /**
     * Actual confirmed delivery timestamp when package was delivered to
     * customer.
     *
     * This field is set when the carrier confirms successful package
     * delivery, either through automated carrier API updates or manual
     * seller confirmation. The actual delivery date is used for order
     * completion workflows and payment release triggers.
     *
     * This timestamp may differ from estimated_delivery_date due to early
     * delivery, delays, or delivery exceptions that affect the actual
     * delivery timeline.
     */
    actual_delivery_date?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /**
     * Delivery signature or proof of delivery information if provided by
     * carrier.
     *
     * Some shipping methods require signature confirmation for package
     * delivery. This field stores the signature data, delivery confirmation
     * code, or proof of delivery reference provided by the carrier.
     *
     * Delivery signature information is particularly important for
     * high-value shipments, age-restricted products, or deliveries
     * requiring explicit recipient confirmation. It serves as evidence of
     * successful delivery in case of delivery disputes.
     */
    delivery_signature?: string | null | undefined;
  };
}
