import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";
import { IShoppingMallAdminSession } from "./IShoppingMallAdminSession";

/**
 * Admin account entity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAdmin = {
  /** Admin identifier. */
  id: string & tags.Format<"uuid">;

  /** Admin email. */
  email: string & tags.Format<"email">;

  /** Admin name. */
  name: string;

  /** Admin role. */
  role_level: string;

  /** Active status. */
  is_active: boolean;

  /** Email verified. */
  email_verified: boolean;

  /** MFA enabled. */
  mfa_enabled: boolean;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAdmin {
  /** Admin creation request. */
  export type ICreate = {
    /** Admin email. */
    email: string & tags.Format<"email">;

    /** Admin password (plain text). */
    password: string & tags.MinLength<8>;

    /** Admin name. */
    name: string;

    /** Admin role. */
    role_level: string;
  };

  /** Admin authentication response. */
  export type IAuthorized = {
    /** Admin identifier. */
    id: string & tags.Format<"uuid">;

    /** Admin email. */
    email: string & tags.Format<"email">;

    /** Admin name. */
    name: string;

    /** Admin role. */
    role_level: string;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Admin login credentials. */
  export type ILogin = {
    /** Admin email. */
    email: string & tags.Format<"email">;

    /** Admin password. */
    password: string;
  };

  /** Token refresh request for admins. */
  export type IRefresh = {
    /** Refresh token for generating new access token. */
    refresh_token: string;
  };

  /** Admin password reset request. */
  export type IPasswordResetRequest = {
    /** Admin's registered email address. */
    email: string & tags.Format<"email">;
  };

  /** Password reset request confirmation. */
  export type IPasswordResetRequestResponse = {
    /** Generic success confirmation message. */
    message: string;
  };

  /** Admin password reset completion request. */
  export type IPasswordReset = {
    /** Password reset token from email. */
    token: string;

    /** New password meeting security requirements. */
    new_password: string & tags.MinLength<8>;
  };

  /** Password reset completion confirmation. */
  export type IPasswordResetResponse = {
    /** Password reset success confirmation. */
    message: string;
  };

  /** Admin password change request. */
  export type IPasswordChange = {
    /** Current password for verification. */
    current_password: string;

    /** New password meeting security requirements. */
    new_password: string & tags.MinLength<8>;
  };

  /** Password change completion confirmation. */
  export type IPasswordChangeResponse = {
    /** Password change success confirmation. */
    message: string;
  };

  /** Admin logout request. */
  export type ILogout = {
    /** Refresh token of the session to terminate. */
    refresh_token: string;
  };

  /** Logout completion confirmation. */
  export type ILogoutResponse = {
    /** Logout success confirmation. */
    message: string;
  };

  /** All sessions revocation confirmation with count. */
  export type IRevokeAllSessionsResponse = {
    /** All sessions revocation confirmation. */
    message: string;

    /** Count of sessions that were revoked. */
    sessions_revoked: number & tags.Type<"int32">;
  };

  /** List of all active admin sessions. */
  export type ISessionList = {
    /** Array of active admin sessions. */
    sessions: IShoppingMallAdminSession[];

    /** Total number of active sessions. */
    total_count: number & tags.Type<"int32">;
  };

  /** Session revocation confirmation. */
  export type ISessionRevokeResponse = {
    /** Session revocation success confirmation. */
    message: string;
  };

  /** Admin search. */
  export type IRequest = {
    /** Page. */
    page?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary information for admin accounts optimized for list displays.
   *
   * Provides essential admin identification, role, and status information for
   * admin account management interfaces.
   */
  export type ISummary = {
    /** Unique identifier of the admin account. */
    id: string & tags.Format<"uuid">;

    /** Admin's email address. */
    email: string & tags.Format<"email">;

    /** Admin's full name. */
    name: string;

    /**
     * Admin role defining permission level.
     *
     * Valid values: super_admin, order_manager, content_moderator,
     * support_admin
     */
    role_level: string;

    /** Whether the admin account is currently active. */
    is_active: boolean;

    /** Timestamp when the admin account was created. */
    created_at: string & tags.Format<"date-time">;
  };

  /** Admin update. */
  export type IUpdate = {
    /** Name. */
    name?: string | undefined;
  };
}
