{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"discussion_board_categories","description":"Foundational organizational structure for classifying discussion topics into Economics and Politics domains. Categories provide the primary taxonomy for content organization, supporting hierarchical structures with parent-child relationships (e.g., Economics > Macroeconomics). This table enables users to browse organized discussions and administrators to manage the discussion board's organizational structure. Categories are independently managed entities that support the platform's dual focus on economic and political discourse.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"parent_category_id","type":"uuid","description":"Parent category for hierarchical organization. Null for top-level categories (Economics, Politics), references parent for subcategories (Macroeconomics references Economics). Enables multi-level category taxonomy. {@link discussion_board_categories.id}","relation":{"name":"parentCategory","targetModel":"discussion_board_categories","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"name","type":"string","description":"Category name displayed throughout the platform (e.g., 'Economics', 'Macroeconomics', 'Politics', 'International Relations'). Must be unique across all categories. Length: 3-50 characters per business rules. Used in navigation menus, category selection, and content organization.","nullable":false},{"name":"slug","type":"string","description":"URL-friendly identifier derived from category name. Used for clean, readable category URLs (e.g., '/category/macroeconomics'). Must be unique for proper routing. Lowercase alphanumeric with hyphens.","nullable":false},{"name":"description","type":"string","description":"Detailed explanation of the category's purpose and scope. Helps users understand what discussion topics belong in this category. Displayed on category pages and selection interfaces. Optional but recommended for user clarity.","nullable":true},{"name":"display_order","type":"int","description":"Controls the order in which categories appear in listings and navigation menus. Lower numbers appear first, enabling administrators to prioritize category display (e.g., Economics=1, Politics=2). Allows custom organization beyond alphabetical sorting.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether the category is currently visible and available for use. Inactive categories (false) are hidden from category selection but existing topics remain accessible. Allows temporary disabling without deletion. Default: true.","nullable":false},{"name":"topic_count","type":"int","description":"Number of discussion topics currently assigned to this category. Updated when topics are created or deleted. Used for displaying category activity levels and helping users identify active discussion areas. Maintained via application logic or triggers. Default: 0.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the category was created. Used for audit trail and tracking category establishment history. Automatically set on record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the most recent modification to category information (name, description, status, etc.). Used for audit trail and change tracking. Automatically updated on record modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling category recovery. When set, category is hidden from active use but preserved for audit trail and data integrity. Null for active categories. Supports 30-day recovery window per platform policy.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true},{"fieldNames":["slug"],"unique":true}],"plainIndexes":[{"fieldNames":["parent_category_id","display_order"]},{"fieldNames":["is_active","display_order"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"discussion_board_guests","description":"Represents unauthenticated visitors to the discussion board platform. Guests can browse public content but cannot create topics, post replies, or vote. Tracked for analytics, conversion metrics, and potential newsletter signups. Guest sessions are temporary and may convert to member accounts upon registration.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"session_id","type":"string","description":"Temporary session identifier for tracking guest browsing activity during their visit. Must be unique across all guest sessions.","nullable":false},{"name":"email","type":"string","description":"Optional email address if guest subscribes to newsletter or creates account later. Used for conversion tracking and marketing outreach. Not unique - same email may be entered across different guest sessions.","nullable":true},{"name":"ip_address","type":"string","description":"IP address of the guest for analytics, abuse prevention, and geographic tracking. IPv4 or IPv6 format.","nullable":true},{"name":"user_agent","type":"string","description":"Browser user agent string for device type identification and compatibility analysis.","nullable":true},{"name":"first_visit","type":"datetime","description":"Timestamp of the guest's first visit to the platform for conversion funnel analysis.","nullable":false},{"name":"last_visit","type":"datetime","description":"Timestamp of the guest's most recent activity on the platform. Updated on each page view.","nullable":false},{"name":"page_views","type":"int","description":"Count of pages viewed during all guest sessions for engagement metrics.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this guest record was created in the system.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this guest record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for guest session termination. Preserves historical analytics data while marking session as ended. Null for active guest sessions.","nullable":true}],"uniqueIndexes":[{"fieldNames":["session_id"],"unique":true}],"plainIndexes":[{"fieldNames":["first_visit"]},{"fieldNames":["last_visit"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["email","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_members","description":"Represents registered, authenticated users who are the core participants of the discussion board. Members can create topics, post replies, vote on content, customize their profiles, report violations, and manage preferences. This is the primary user role after email verification. Members accumulate reputation through quality contributions and can progress to moderator status when appointed by administrators.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","description":"Unique username chosen during registration, immutable after account creation. 3-30 characters, alphanumeric with hyphens and underscores. Used for @mentions and profile URLs.","nullable":false},{"name":"email","type":"string","description":"Email address for authentication, notifications, and account recovery. Must be verified before full platform access.","nullable":false},{"name":"password_hash","type":"string","description":"Cryptographically hashed password using bcrypt with minimum cost factor 12. Never stored in plain text.","nullable":false},{"name":"display_name","type":"string","description":"User's preferred public display name, can differ from username. 1-50 characters, supports Unicode, can be changed anytime.","nullable":true},{"name":"bio","type":"string","description":"User biography or about me section. Maximum 500 characters, plain text with auto-detected links.","nullable":true},{"name":"avatar_url","type":"uri","description":"URL to user's profile picture. Either uploaded image or default avatar generated from username.","nullable":true},{"name":"location","type":"string","description":"Optional geographic location (country/city) displayed on user profile. Maximum 100 characters.","nullable":true},{"name":"website","type":"uri","description":"Optional personal website or blog URL displayed on user profile. Must be valid HTTP/HTTPS URL.","nullable":true},{"name":"email_verified","type":"boolean","description":"Whether the user has verified their email address by clicking verification link. Required for full posting privileges.","nullable":false},{"name":"email_verified_at","type":"datetime","description":"Timestamp when email verification was completed. Null if not yet verified.","nullable":true},{"name":"account_status","type":"string","description":"Current operational status of the account: active (normal operation), pending_verification (email not verified), suspended (temporary restriction), banned (permanent block), or deactivated (user-initiated). Provides single source of truth for account state.","nullable":false},{"name":"profile_visibility","type":"string","description":"Privacy setting for profile page: public (visible to all), members_only (authenticated users), or private (hidden from search).","nullable":false},{"name":"activity_visibility","type":"string","description":"Privacy setting for activity history: public, members_only, or private. Independent from profile visibility.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the member account was created (registration date).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the member account was last updated (profile changes, settings modifications).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. When set, account is marked for deletion but retained for 30-day recovery period. Null for active accounts.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the user's most recent successful login for activity tracking and retention analysis.","nullable":true},{"name":"last_activity_at","type":"datetime","description":"Timestamp of the user's most recent platform activity (any authenticated action). Used for accurate engagement tracking and identifying truly active users versus dormant accounts.","nullable":true},{"name":"timezone","type":"string","description":"User's preferred timezone for displaying timestamps. Standard timezone identifier (e.g., 'America/New_York', 'Europe/London').","nullable":true},{"name":"language","type":"string","description":"User's preferred interface language. ISO 639-1 language code (e.g., 'en', 'es', 'de').","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["account_status","created_at"]},{"fieldNames":["email_verified","created_at"]},{"fieldNames":["deleted_at"]},{"fieldNames":["last_activity_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"discussion_board_moderators","description":"Represents trusted community members elevated to help maintain discourse standards and enforce community guidelines. Moderators can review reported content, hide or remove inappropriate posts, issue warnings, temporarily suspend users, lock discussions, and feature quality topics. Appointed by administrators based on contribution history, reputation, and demonstrated understanding of guidelines. All moderator actions are logged for accountability and administrator review.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"appointed_by_admin_id","type":"uuid","description":"Administrator who appointed this user as moderator. References {@link discussion_board_administrators.id}.","relation":{"name":"appointedByAdmin","targetModel":"discussion_board_administrators"},"unique":false,"nullable":false}],"plainFields":[{"name":"username","type":"string","description":"Unique username for the moderator account. 3-30 characters, alphanumeric with hyphens and underscores.","nullable":false},{"name":"email","type":"string","description":"Email address for moderator authentication and official communications about moderation duties.","nullable":false},{"name":"password_hash","type":"string","description":"Cryptographically hashed password using bcrypt with minimum cost factor 12. Never stored in plain text.","nullable":false},{"name":"display_name","type":"string","description":"Moderator's preferred public display name shown on moderation actions and communications.","nullable":true},{"name":"bio","type":"string","description":"Moderator biography or description. May include areas of expertise or moderation focus.","nullable":true},{"name":"avatar_url","type":"uri","description":"URL to moderator's profile picture with moderator badge overlay.","nullable":true},{"name":"email_verified","type":"boolean","description":"Whether the moderator has verified their email address. Required for moderation duties.","nullable":false},{"name":"account_status","type":"string","description":"Current operational status of the moderator account: active (normal moderation duties), suspended (temporarily restricted), or deactivated (no longer serving as moderator). Provides single source of truth for moderator account state.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the moderator account was initially created in the system.","nullable":false},{"name":"appointed_at","type":"datetime","description":"Timestamp when this user was promoted to moderator role by an administrator. May differ from created_at if account existed before moderator appointment.","nullable":false},{"name":"moderation_notes","type":"string","description":"Internal notes about this moderator's appointment, performance, or areas of responsibility. Visible only to administrators.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether this moderator account is currently active and has moderation privileges. False if temporarily suspended from moderation duties.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the moderator account was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. When set, moderator privileges are revoked but account history is retained for audit purposes.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the moderator's most recent login for activity monitoring.","nullable":true},{"name":"last_activity_at","type":"datetime","description":"Timestamp of the moderator's most recent platform activity including moderation actions. Used for tracking moderator engagement and identifying inactive moderators.","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["appointed_at"]},{"fieldNames":["account_status","is_active"]},{"fieldNames":["email_verified","created_at"]},{"fieldNames":["appointed_by_admin_id","appointed_at"]},{"fieldNames":["deleted_at"]},{"fieldNames":["last_activity_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"discussion_board_administrators","description":"Represents platform operators with full system control and ultimate authority over all operations. Administrators can appoint and remove moderators, permanently ban users, manage categories and site-wide settings, access all audit logs, configure platform parameters, and override any moderation decisions. This role is limited to platform owners and senior staff. All administrator actions are logged for security and accountability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","description":"Unique username for the administrator account. 3-30 characters, alphanumeric with hyphens and underscores.","nullable":false},{"name":"email","type":"string","description":"Email address for administrator authentication and critical system notifications.","nullable":false},{"name":"password_hash","type":"string","description":"Cryptographically hashed password using bcrypt with minimum cost factor 12. Never stored in plain text.","nullable":false},{"name":"display_name","type":"string","description":"Administrator's preferred public display name shown on administrative communications and actions.","nullable":true},{"name":"bio","type":"string","description":"Administrator biography or description. May include role and responsibilities.","nullable":true},{"name":"avatar_url","type":"uri","description":"URL to administrator's profile picture with administrator badge overlay.","nullable":true},{"name":"email_verified","type":"boolean","description":"Whether the administrator has verified their email address. Required for administrative operations.","nullable":false},{"name":"account_status","type":"string","description":"Current operational status of the administrator account: active (normal operations), suspended (temporarily restricted), or deactivated (no longer serving as administrator). Provides single source of truth for admin account state.","nullable":false},{"name":"is_super_admin","type":"boolean","description":"Whether this administrator has super admin privileges (platform owner). Super admins can create other administrators and have unrestricted access.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the administrator account was created in the system.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the administrator account was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. When set, administrative privileges are revoked but account is retained for complete audit trail.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the administrator's most recent login for security monitoring and activity tracking.","nullable":true},{"name":"last_activity_at","type":"datetime","description":"Timestamp of the administrator's most recent platform activity including administrative actions. Used for tracking administrator engagement and security monitoring.","nullable":true},{"name":"timezone","type":"string","description":"Administrator's preferred timezone for displaying timestamps in admin interfaces. Standard timezone identifier.","nullable":true},{"name":"language","type":"string","description":"Administrator's preferred interface language. ISO 639-1 language code.","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["is_super_admin"]},{"fieldNames":["account_status","created_at"]},{"fieldNames":["email_verified","created_at"]},{"fieldNames":["deleted_at"]},{"fieldNames":["last_activity_at"]}],"ginIndexes":[{"fieldName":"display_name"}]}]},{"filename":"schema-03-authentication.prisma","namespace":"Authentication","models":[{"name":"discussion_board_sessions","description":"Active user sessions for authenticated users. Each session represents a logged-in user on a specific device with an associated JWT access token. Sessions track device information, location, and activity for security monitoring. Users can view and revoke their own sessions across multiple devices. This is a PRIMARY stance table as users independently manage their active sessions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Reference to the member who owns this session. {@link discussion_board_members.id}. Null if session belongs to moderator or administrator.","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":true},{"name":"discussion_board_moderator_id","type":"uuid","description":"Reference to the moderator who owns this session. {@link discussion_board_moderators.id}. Null if session belongs to member or administrator.","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"discussion_board_administrator_id","type":"uuid","description":"Reference to the administrator who owns this session. {@link discussion_board_administrators.id}. Null if session belongs to member or moderator.","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"access_token_hash","type":"string","description":"Hashed JWT access token identifier for secure token validation. Never store plain tokens. Used to identify and validate active sessions.","nullable":false},{"name":"device_type","type":"string","description":"Type of device used for this session. Examples: Desktop, Mobile, Tablet. Extracted from user agent string.","nullable":false},{"name":"browser_info","type":"string","description":"Browser name and version information extracted from user agent. Examples: Chrome 120.0, Firefox 121.0, Safari 17.0.","nullable":false},{"name":"ip_address","type":"string","description":"IP address from which the session was created. Used for security monitoring and location approximation.","nullable":false},{"name":"location","type":"string","description":"Approximate geographic location based on IP address. City-level precision. Example: New York, USA. May be null if location cannot be determined.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether this session is currently active. False when session is revoked by user or invalidated by system (logout, password change, expiration).","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when the access token expires. Access tokens expire after 30 minutes. Session must use refresh token to obtain new access token after expiration.","nullable":false},{"name":"last_activity_at","type":"datetime","description":"Timestamp of the last activity in this session. Updated on each authenticated request. Used to track session usage and identify inactive sessions.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the session was created (user logged in).","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when the session was revoked. Null if session is still active. Sessions can be revoked by user logout, password change, or administrator action.","nullable":true}],"uniqueIndexes":[{"fieldNames":["access_token_hash"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_member_id","is_active"]},{"fieldNames":["discussion_board_moderator_id","is_active"]},{"fieldNames":["discussion_board_administrator_id","is_active"]},{"fieldNames":["expires_at"]},{"fieldNames":["ip_address","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_refresh_tokens","description":"Refresh tokens for obtaining new access tokens without re-authentication. Each refresh token is associated with exactly one session and allows the client to request new access tokens when the current access token expires. Refresh tokens have longer expiration (7-30 days) than access tokens (30 minutes). This is a SUBSIDIARY stance table as tokens are managed automatically through the session lifecycle.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_session_id","type":"uuid","description":"Reference to the session this refresh token belongs to. {@link discussion_board_sessions.id}. One-to-one relationship - each session has exactly one refresh token.","relation":{"name":"session","targetModel":"discussion_board_sessions"},"unique":true,"nullable":false}],"plainFields":[{"name":"refresh_token_hash","type":"string","description":"Hashed refresh token for secure validation. Never store plain tokens. Used to authenticate refresh token requests and issue new access tokens.","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when the refresh token expires. Standard expiration is 7 days. Extended to 30 days when user selects Remember Me option during login.","nullable":false},{"name":"is_revoked","type":"boolean","description":"Whether this refresh token has been revoked. True when session ends, user logs out, password changes, or token is compromised. Revoked tokens cannot be used to obtain new access tokens.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the refresh token was created (same as session creation).","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when the refresh token was revoked. Null if token is still valid. Set when session is terminated or security event occurs.","nullable":true}],"uniqueIndexes":[{"fieldNames":["refresh_token_hash"],"unique":true}],"plainIndexes":[{"fieldNames":["expires_at","is_revoked"]}],"ginIndexes":[]},{"name":"discussion_board_login_history","description":"Comprehensive audit trail of all login attempts including successful logins and failed authentication attempts. Records device information, IP address, location, and failure reasons for security monitoring and breach detection. Used to implement account lockout after repeated failures and alert users to suspicious login activity. This is a SNAPSHOT stance table as it provides immutable historical audit data.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Reference to the member account associated with this login attempt. {@link discussion_board_members.id}. Null if login attempt was for moderator or administrator account.","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":true},{"name":"discussion_board_moderator_id","type":"uuid","description":"Reference to the moderator account associated with this login attempt. {@link discussion_board_moderators.id}. Null if login attempt was for member or administrator account.","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"discussion_board_administrator_id","type":"uuid","description":"Reference to the administrator account associated with this login attempt. {@link discussion_board_administrators.id}. Null if login attempt was for member or moderator account.","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"email_attempted","type":"string","description":"Email address used in the login attempt. Stored even for failed attempts to track brute force attacks and credential stuffing attempts.","nullable":false},{"name":"is_successful","type":"boolean","description":"Whether the login attempt was successful. True for successful authentication, false for failed attempts (wrong password, account locked, etc.).","nullable":false},{"name":"failure_reason","type":"string","description":"Reason for login failure. Examples: incorrect_password, account_locked, account_suspended, email_not_verified, account_not_found. Null for successful logins.","nullable":true},{"name":"ip_address","type":"string","description":"IP address from which the login attempt was made. Critical for security monitoring and identifying suspicious patterns.","nullable":false},{"name":"device_type","type":"string","description":"Type of device used for login attempt. Examples: Desktop, Mobile, Tablet. Extracted from user agent string.","nullable":false},{"name":"browser_info","type":"string","description":"Browser name and version information. Examples: Chrome 120.0, Firefox 121.0. Used to identify login from new or unfamiliar devices.","nullable":false},{"name":"location","type":"string","description":"Approximate geographic location based on IP address. City-level precision. Example: London, UK. May be null if location cannot be determined.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the login attempt occurred. Used for security analysis and identifying attack patterns over time.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discussion_board_member_id","created_at"]},{"fieldNames":["discussion_board_moderator_id","created_at"]},{"fieldNames":["discussion_board_administrator_id","created_at"]},{"fieldNames":["email_attempted","is_successful","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["is_successful","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_password_resets","description":"Temporary tokens for secure password reset workflow. When a user forgets their password, a unique reset token is generated and emailed to them. Tokens are single-use with 15-minute expiration for security. After successful password reset, the token is marked as used to prevent reuse. This is a SNAPSHOT stance table as password reset tokens capture historical security events in an append-only pattern.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Reference to the member requesting password reset. {@link discussion_board_members.id}. Null if password reset is for moderator or administrator account.","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":true},{"name":"discussion_board_moderator_id","type":"uuid","description":"Reference to the moderator requesting password reset. {@link discussion_board_moderators.id}. Null if password reset is for member or administrator account.","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"discussion_board_administrator_id","type":"uuid","description":"Reference to the administrator requesting password reset. {@link discussion_board_administrators.id}. Null if password reset is for member or moderator account.","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"reset_token_hash","type":"string","description":"Hashed password reset token for secure validation. Never store plain tokens. Cryptographically random token (minimum 32 bytes) sent to user email and validated when they submit new password.","nullable":false},{"name":"email","type":"string","description":"Email address to which the reset token was sent. Used to verify the reset request targets the correct account and prevent enumeration attacks.","nullable":false},{"name":"is_used","type":"boolean","description":"Whether this reset token has been used to successfully reset the password. True after password reset completes. Used tokens cannot be reused even if still within expiration window.","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when the reset token expires. Tokens are valid for 15 minutes from creation for security. Expired tokens are rejected even if unused.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the password reset was requested and token was generated. Used to enforce 15-minute expiration window.","nullable":false},{"name":"used_at","type":"datetime","description":"Timestamp when the reset token was successfully used to reset password. Null if token has not been used yet. Set when user completes password reset flow.","nullable":true}],"uniqueIndexes":[{"fieldNames":["reset_token_hash"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_member_id","created_at"]},{"fieldNames":["discussion_board_moderator_id","created_at"]},{"fieldNames":["discussion_board_administrator_id","created_at"]},{"fieldNames":["expires_at","is_used"]},{"fieldNames":["email","is_used","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-04-discussions.prisma","namespace":"Discussions","models":[{"name":"discussion_board_topics","description":"Discussion topics created by members on economic and political subjects. Represents the primary content entities that initiate conversations. Topics are organized by category, can have various states (active, locked, archived, deleted), and support pinning for important discussions. Tracks view counts and reply counts for engagement metrics. References category for organization and member for authorship.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_category_id","type":"uuid","description":"Category this topic belongs to. Target category's {@link discussion_board_categories.id}.","relation":{"name":"category","targetModel":"discussion_board_categories"},"unique":false,"nullable":false},{"name":"discussion_board_member_id","type":"uuid","description":"Author who created this topic. Target member's {@link discussion_board_members.id}.","relation":{"name":"author","targetModel":"discussion_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Topic title between 10 and 200 characters. Displayed in topic listings and search results.","nullable":false},{"name":"body","type":"string","description":"Topic body content between 20 and 50,000 characters. Supports Markdown formatting for rich text discussion content.","nullable":false},{"name":"status","type":"string","description":"Current status of the topic: active (open for replies), locked (no new replies allowed), archived (old inactive topic), or deleted (soft deleted topic).","nullable":false},{"name":"view_count","type":"int","description":"Number of times this topic has been viewed. Incremented once per user per 24 hours to prevent artificial inflation.","nullable":false},{"name":"reply_count","type":"int","description":"Total number of replies to this topic. Updated when replies are created or deleted.","nullable":false},{"name":"is_pinned","type":"boolean","description":"Whether this topic is pinned to the top of category listings by moderators or administrators.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the topic was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the topic was last updated (edited or received new reply).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the topic was soft deleted. Null for active topics. Supports 30-day recovery window.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discussion_board_category_id","created_at"]},{"fieldNames":["discussion_board_member_id","created_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["is_pinned","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discussion_board_replies","description":"Threaded replies to discussion topics and other replies. Supports hierarchical conversations up to 10 levels deep. Each reply belongs to a topic and optionally references a parent reply for threading. Tracks depth level to enforce maximum nesting constraints. Content length ranges from 1 to 10,000 characters. References topic for the parent discussion and member for authorship. Self-referential parent relationship enables threaded discussion structure.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_topic_id","type":"uuid","description":"Topic this reply belongs to. Target topic's {@link discussion_board_topics.id}.","relation":{"name":"topic","targetModel":"discussion_board_topics"},"unique":false,"nullable":false},{"name":"discussion_board_member_id","type":"uuid","description":"Member who authored this reply. Target member's {@link discussion_board_members.id}.","relation":{"name":"author","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"parent_reply_id","type":"uuid","description":"Parent reply this is responding to for threaded conversations. Null for top-level replies directly to the topic. Self-referential to {@link discussion_board_replies.id}.","relation":{"name":"parent","targetModel":"discussion_board_replies","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"Reply content between 1 and 10,000 characters. Supports Markdown formatting.","nullable":false},{"name":"depth_level","type":"int","description":"Nesting depth of this reply in the thread hierarchy. 0 for top-level replies to topic, increments for each nested level. Maximum depth is 10.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the reply was posted.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the reply was last edited.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the reply was soft deleted. Null for active replies. Supports recovery and maintains thread structure.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discussion_board_topic_id","created_at"]},{"fieldNames":["discussion_board_member_id","created_at"]},{"fieldNames":["parent_reply_id","created_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"discussion_board_edit_history","description":"Audit trail tracking all edits to topics and replies for transparency and accountability. Captures snapshots of content before and after each modification. Polymorphic relationship through entity_type and entity_id fields allows tracking edits for both topics and replies. Records who made each edit and when. Optional edit_reason provides context for modifications. Implements append-only pattern for audit integrity. References member for editor identification.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member who performed this edit. Target member's {@link discussion_board_members.id}.","relation":{"name":"editor","targetModel":"discussion_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"entity_type","type":"string","description":"Type of entity being edited: topic or reply. Used with entity_id to reference the edited content.","nullable":false},{"name":"entity_id","type":"uuid","description":"ID of the edited entity. References either discussion_board_topics.id or discussion_board_replies.id based on entity_type.","nullable":false},{"name":"previous_content","type":"string","description":"Snapshot of content before the edit. Preserves historical state for audit and potential rollback.","nullable":false},{"name":"new_content","type":"string","description":"Snapshot of content after the edit. Shows what changed in this modification.","nullable":false},{"name":"edit_reason","type":"string","description":"Optional explanation for why the edit was made. Provides context for content modifications.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this edit occurred. Represents the moment the content was modified.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp if this edit history record is soft deleted. Normally null as edit history is preserved.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["entity_type","entity_id","created_at"]},{"fieldNames":["discussion_board_member_id","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-engagement.prisma","namespace":"Engagement","models":[{"name":"discussion_board_votes","description":"Tracks upvotes and downvotes on discussion content (topics and replies). Each vote records which user voted, what they voted on, and the vote direction. Users can only cast one vote per content item, and can change their vote within allowed time windows. Vote data drives content ranking algorithms and user reputation calculations. Supports polymorphic voting pattern to handle both topics and replies efficiently.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member who cast this vote. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"votable_type","type":"string","description":"Type of content being voted on. Either 'topic' or 'reply' to support polymorphic voting on different content types.","nullable":false},{"name":"votable_id","type":"uuid","description":"ID of the content being voted on (references either discussion_board_topics.id or discussion_board_replies.id depending on votable_type).","nullable":false},{"name":"vote_type","type":"string","description":"Direction of the vote. Either 'upvote' (positive, agrees/supports content) or 'downvote' (negative, disagrees/low quality content).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote was cast. Used for vote change time window validation and activity tracking.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote was last modified (vote direction changed). Used for audit trail and tracking vote changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling vote recovery if content is restored. Null for active votes. Supports 30-day recovery window per platform policy.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id","votable_type","votable_id"],"unique":true}],"plainIndexes":[{"fieldNames":["votable_type","votable_id","vote_type"]}],"ginIndexes":[]},{"name":"discussion_board_favorites","description":"Tracks user bookmarks/favorites on discussion topics. Allows users to save topics for later reference and quick access. Favorited topics appear in user's personal collection and may trigger notifications for new activity based on user preferences. Supports soft deletion for recovery of accidentally removed bookmarks.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member who favorited the topic. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"discussion_board_topic_id","type":"uuid","description":"Topic that was favorited. {@link discussion_board_topics.id}","relation":{"name":"topic","targetModel":"discussion_board_topics"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the topic was favorited. Used for sorting user's favorites by recency.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the favorite record was last modified. Used for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling bookmark recovery. Null for active favorites. Supports accidental removal recovery.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id","discussion_board_topic_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_member_id","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_tags","description":"Master tag vocabulary for categorizing and organizing discussion topics. Tags provide additional categorization beyond primary categories, enabling cross-category topic discovery. Users can search, filter, and follow tags. Tags are created through topic creation workflow and managed by moderators. Tag lifecycle includes active, pending review, disabled, and merged states.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Tag name, normalized to lowercase for consistency. Must be unique across all tags. Length 2-30 characters, alphanumeric with spaces and hyphens allowed.","nullable":false},{"name":"description","type":"string","description":"Optional description explaining what this tag represents and when to use it. Helps users apply tags consistently.","nullable":true},{"name":"status","type":"string","description":"Tag lifecycle status: active (available for use), pending_review (awaiting moderator approval), disabled (hidden from selection), merged (consolidated into another tag).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the tag was first created. Used for tracking tag evolution and identifying emerging tags.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the tag was last modified (name, description, or status change). Used for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling tag recovery. Null for active tags. Supports 30-day recovery window per platform policy.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["status","created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"discussion_board_topic_tags","description":"Junction table establishing many-to-many relationship between topics and tags. Allows topics to be tagged with multiple relevant tags (up to 5 per topic per business rules), and tags to be applied to many topics. Supports topic discovery through tag-based filtering and search.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_topic_id","type":"uuid","description":"Topic being tagged. {@link discussion_board_topics.id}","relation":{"name":"topic","targetModel":"discussion_board_topics"},"unique":false,"nullable":false},{"name":"discussion_board_tag_id","type":"uuid","description":"Tag applied to the topic. {@link discussion_board_tags.id}","relation":{"name":"tag","targetModel":"discussion_board_tags"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the tag was applied to the topic. Used for tracking tag application history.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the topic-tag association was last modified. Used for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling tag association recovery. Null for active associations. Supports recovery if tags removed accidentally.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_topic_id","discussion_board_tag_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_tag_id","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_followed_tags","description":"Tracks which tags users follow for personalized content recommendations and notifications. When users follow tags, they receive notifications about new topics with those tags and see followed tags prioritized in their feed. Supports user interest management and content personalization. Maximum 50 followed tags per user per business rules.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member following the tag. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"discussion_board_tag_id","type":"uuid","description":"Tag being followed by the member. {@link discussion_board_tags.id}","relation":{"name":"tag","targetModel":"discussion_board_tags"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the user started following this tag. Used for tracking user interest evolution and follow recency.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the follow relationship was last modified. Used for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling follow relationship recovery. Null for active follows. Supports unfollow recovery.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id","discussion_board_tag_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_member_id"]}],"ginIndexes":[]},{"name":"discussion_board_watched_topics","description":"Tracks topics users are watching for notifications on new activity (new replies, votes, etc.). Users can explicitly watch topics they're interested in to receive updates. Includes last_read_at timestamp to detect new activity since last view and show 'unread' indicators. Supports notification batching to prevent overwhelming users with excessive alerts.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member watching the topic. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"discussion_board_topic_id","type":"uuid","description":"Topic being watched. {@link discussion_board_topics.id}","relation":{"name":"topic","targetModel":"discussion_board_topics"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the user started watching this topic. Used for tracking watch duration.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the watch relationship was last modified (last_read_at updated). Used for audit trail.","nullable":false},{"name":"last_read_at","type":"datetime","description":"Timestamp when the user last viewed this topic. Used to determine if there is new activity (replies, votes) since their last visit to show unread indicators and notification triggers.","nullable":true},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling watch relationship recovery. Null for active watches. Supports unwatch recovery.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id","discussion_board_topic_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discussion_board_member_id"]},{"fieldNames":["discussion_board_topic_id"]}],"ginIndexes":[]},{"name":"discussion_board_blocked_users","description":"Tracks user blocking relationships for content filtering. When user A blocks user B, A no longer sees B's topics, replies, or receives notifications from B. Blocking is asymmetric (A blocking B does not mean B blocks A). Includes optional reason for accountability and support purposes. Maximum 100 blocked users per account per business rules.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"blocker_id","type":"uuid","description":"Member who initiated the block. {@link discussion_board_members.id}","relation":{"name":"blocker","targetModel":"discussion_board_members","mappingName":"discussion_board_blocked_users_of_blocker_id"},"unique":false,"nullable":false},{"name":"blocked_id","type":"uuid","description":"Member who is being blocked. {@link discussion_board_members.id}","relation":{"name":"blocked","targetModel":"discussion_board_members","mappingName":"discussion_board_blocked_users_of_blocked_id"},"unique":false,"nullable":false}],"plainFields":[{"name":"reason","type":"string","description":"Optional user-provided reason for blocking this user. Helps support team if blocking is reported as abuse, and helps user remember why they blocked someone.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the block was created. Used for tracking block duration and history.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the block relationship was last modified. Used for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp enabling block relationship recovery (unblock recovery). Null for active blocks. Supports accidental unblock recovery.","nullable":true}],"uniqueIndexes":[{"fieldNames":["blocker_id","blocked_id"],"unique":true}],"plainIndexes":[{"fieldNames":["blocker_id"]}],"ginIndexes":[]},{"name":"discussion_board_user_reputation","description":"Aggregated reputation score for each user based on community voting on their content. Reputation represents contribution quality and community trust. Calculated from upvotes/downvotes received on topics and replies. Denormalized for performance to enable reputation-based features (leaderboards, privilege unlocking) without expensive vote aggregation queries. Updated when votes are cast, changed, or removed.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member whose reputation is tracked. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"total_score","type":"int","description":"Total reputation score calculated from all votes on user's content. Weighted formula: (topic upvotes × 5) - (topic downvotes × 2) + (reply upvotes × 2) - (reply downvotes × 1). Used for leaderboards and privilege unlocking.","nullable":false},{"name":"upvotes_received","type":"int","description":"Total number of upvotes received across all user's topics and replies. Used for reputation calculation and user statistics display.","nullable":false},{"name":"downvotes_received","type":"int","description":"Total number of downvotes received across all user's topics and replies. Used for reputation calculation and quality monitoring.","nullable":false},{"name":"topics_score","type":"int","description":"Reputation score derived from votes on user's topics only. Allows separate tracking of topic quality vs reply quality.","nullable":false},{"name":"replies_score","type":"int","description":"Reputation score derived from votes on user's replies only. Allows separate tracking of reply quality vs topic quality.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when reputation was last recalculated. Used for cache invalidation and tracking reputation changes over time.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["total_score"]}],"ginIndexes":[]},{"name":"mv_discussion_board_user_reputation","description":"Materialized view aggregating reputation scores for each user based on community voting on their content. Reputation represents contribution quality and community trust. Calculated from votes received on topics and replies using weighted formula: (topic upvotes × 5) - (topic downvotes × 2) + (reply upvotes × 2) - (reply downvotes × 1). This denormalized view enables reputation-based features (leaderboards, privilege unlocking, reputation badges) without expensive real-time vote aggregation queries. Refreshed periodically or on vote events.","material":true,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_member_id","type":"uuid","description":"Member whose reputation is tracked. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"total_score","type":"int","description":"Total reputation score calculated from all votes on user's content. Weighted formula: (topic upvotes × 5) - (topic downvotes × 2) + (reply upvotes × 2) - (reply downvotes × 1). Used for leaderboards and privilege unlocking.","nullable":false},{"name":"upvotes_received","type":"int","description":"Total number of upvotes received across all user's topics and replies. Used for reputation calculation and user statistics display.","nullable":false},{"name":"downvotes_received","type":"int","description":"Total number of downvotes received across all user's topics and replies. Used for reputation calculation and quality monitoring.","nullable":false},{"name":"topics_score","type":"int","description":"Reputation score derived from votes on user's topics only. Allows separate tracking of topic quality vs reply quality.","nullable":false},{"name":"replies_score","type":"int","description":"Reputation score derived from votes on user's replies only. Allows separate tracking of reply quality vs topic quality.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when reputation was last recalculated. Used for cache invalidation and tracking reputation changes over time.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussion_board_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["total_score"]}],"ginIndexes":[]},{"name":"mv_discussion_board_tag_statistics","description":"Materialized view providing aggregated statistics for tags including usage counts, trending metrics, and activity indicators. Denormalizes data from topic_tags junction table for efficient tag cloud generation, popular tags display, and tag discovery features. Refreshed periodically to reflect current tag usage patterns without impacting normalized base tables.","material":true,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"discussion_board_tag_id","type":"uuid","description":"Tag for which statistics are calculated. {@link discussion_board_tags.id}","relation":{"name":"tag","targetModel":"discussion_board_tags"},"unique":true,"nullable":false}],"plainFields":[{"name":"usage_count","type":"int","description":"Number of topics currently tagged with this tag. Aggregated from topic_tags junction table. Used for popular tags display and tag cloud generation.","nullable":false},{"name":"recent_usage_count","type":"int","description":"Number of topics tagged in the last 7 days. Used for identifying trending tags and emerging topics.","nullable":false},{"name":"total_votes","type":"int","description":"Sum of all votes (upvotes + downvotes) on topics with this tag. Indicates tag engagement level.","nullable":false},{"name":"follower_count","type":"int","description":"Number of users following this tag. Aggregated from followed_tags junction table. Indicates tag popularity.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when these statistics were last recalculated. Used for cache invalidation and refresh scheduling.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussion_board_tag_id"],"unique":true}],"plainIndexes":[{"fieldNames":["usage_count"]},{"fieldNames":["recent_usage_count"]}],"ginIndexes":[]}]},{"filename":"schema-06-moderation.prisma","namespace":"Moderation","models":[{"name":"discussion_board_reports","description":"Content reports submitted by members flagging topics or replies that violate community guidelines. Each report captures the violation category, reporter's explanation, and resolution status. Reports feed into the moderation queue for review by moderators and administrators.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporter_member_id","type":"uuid","description":"Member who submitted the report. {@link discussion_board_members.id}","relation":{"name":"reporter","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"reported_topic_id","type":"uuid","description":"Reported topic if violation is in a topic. {@link discussion_board_topics.id}","relation":{"name":"reportedTopic","targetModel":"discussion_board_topics"},"unique":false,"nullable":true},{"name":"reported_reply_id","type":"uuid","description":"Reported reply if violation is in a reply. {@link discussion_board_replies.id}","relation":{"name":"reportedReply","targetModel":"discussion_board_replies"},"unique":false,"nullable":true},{"name":"assigned_moderator_id","type":"uuid","description":"Moderator assigned to review this report. {@link discussion_board_moderators.id}","relation":{"name":"assignedModerator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true}],"plainFields":[{"name":"violation_category","type":"string","description":"Category of violation reported: personal_attack, hate_speech, misinformation, spam, offensive_language, off_topic, threats, doxxing, trolling, or other.","nullable":false},{"name":"severity_level","type":"string","description":"Severity level of the violation: critical, high, medium, or low. Used for prioritization in moderation queue.","nullable":false},{"name":"reporter_explanation","type":"string","description":"Optional additional context provided by the reporter explaining why this content violates guidelines. Maximum 500 characters.","nullable":true},{"name":"status","type":"string","description":"Current status of the report: pending, under_review, resolved, or dismissed.","nullable":false},{"name":"resolution_notes","type":"string","description":"Moderator's notes explaining the resolution decision. Required when status changes to resolved or dismissed.","nullable":true},{"name":"dismissal_reason","type":"string","description":"Reason for dismissal if report was dismissed: no_violation, within_guidelines, malicious_report, insufficient_evidence, or other.","nullable":true},{"name":"resolved_at","type":"datetime","description":"Timestamp when the report was resolved or dismissed by a moderator.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the report was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the report was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["status","severity_level","created_at"]},{"fieldNames":["reporter_member_id","created_at"]},{"fieldNames":["assigned_moderator_id","status"]}],"ginIndexes":[]},{"name":"discussion_board_moderation_actions","description":"Comprehensive log of all moderation actions taken by moderators and administrators. Each action records what was done, to whom, by whom, and why. This table serves as the central audit trail for all content governance activities on the platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Moderator who performed the action. {@link discussion_board_moderators.id}","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"administrator_id","type":"uuid","description":"Administrator who performed the action. {@link discussion_board_administrators.id}","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true},{"name":"target_member_id","type":"uuid","description":"Member who is the target of this moderation action. {@link discussion_board_members.id}","relation":{"name":"targetMember","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"related_report_id","type":"uuid","description":"Report that triggered this moderation action, if applicable. {@link discussion_board_reports.id}","relation":{"name":"relatedReport","targetModel":"discussion_board_reports"},"unique":false,"nullable":true},{"name":"content_topic_id","type":"uuid","description":"Topic that was subject to moderation action. {@link discussion_board_topics.id}","relation":{"name":"contentTopic","targetModel":"discussion_board_topics"},"unique":false,"nullable":true},{"name":"content_reply_id","type":"uuid","description":"Reply that was subject to moderation action. {@link discussion_board_replies.id}","relation":{"name":"contentReply","targetModel":"discussion_board_replies"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action: hide_content, delete_content, issue_warning, suspend_user, ban_user, restore_content, or dismiss_report.","nullable":false},{"name":"reason","type":"string","description":"Detailed explanation of why this moderation action was taken. Minimum 20 characters required for accountability.","nullable":false},{"name":"violation_category","type":"string","description":"Category of guideline violation that prompted this action. Same categories as reports.","nullable":true},{"name":"content_snapshot","type":"string","description":"Preserved snapshot of the content exactly as it appeared when the action was taken. Maintained even if user edits or deletes later.","nullable":true},{"name":"is_reversed","type":"boolean","description":"Whether this moderation action was reversed on appeal or administrative review.","nullable":false},{"name":"reversed_at","type":"datetime","description":"Timestamp when the action was reversed, if applicable.","nullable":true},{"name":"reversal_reason","type":"string","description":"Explanation for why the action was reversed.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderation action was taken.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the moderation action record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["target_member_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["moderator_id","created_at"]},{"fieldNames":["administrator_id","created_at"]}],"ginIndexes":[]},{"name":"discussion_board_warnings","description":"Formal warnings issued to members for guideline violations. Implements a three-tier escalation system (first, second, final) with automatic expiration. Warnings escalate to suspensions and potential bans if violations continue within the warning period.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Member who received the warning. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"moderation_action_id","type":"uuid","description":"Moderation action that issued this warning. {@link discussion_board_moderation_actions.id}","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":true,"nullable":false},{"name":"content_topic_id","type":"uuid","description":"Topic that triggered the warning. {@link discussion_board_topics.id}","relation":{"name":"contentTopic","targetModel":"discussion_board_topics"},"unique":false,"nullable":true},{"name":"content_reply_id","type":"uuid","description":"Reply that triggered the warning. {@link discussion_board_replies.id}","relation":{"name":"contentReply","targetModel":"discussion_board_replies"},"unique":false,"nullable":true}],"plainFields":[{"name":"warning_level","type":"string","description":"Level of warning in escalation system: first_warning, second_warning, or final_warning.","nullable":false},{"name":"violation_category","type":"string","description":"Category of guideline violation that prompted the warning.","nullable":false},{"name":"moderator_notes","type":"string","description":"Internal notes from the moderator explaining the warning decision and context.","nullable":false},{"name":"expiration_date","type":"datetime","description":"Date when this warning expires. First warnings expire after 90 days, second after 180 days, final warnings may not expire.","nullable":true},{"name":"is_active","type":"boolean","description":"Whether this warning is currently active and counts toward escalation. False if expired or user account in good standing.","nullable":false},{"name":"expired_at","type":"datetime","description":"Timestamp when the warning expired naturally without further violations.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the warning was issued.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the warning record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id","is_active","created_at"]},{"fieldNames":["warning_level","is_active"]},{"fieldNames":["expiration_date"]}],"ginIndexes":[]},{"name":"discussion_board_suspensions","description":"Temporary account suspensions that restrict member posting privileges for a specified duration. Suspensions prevent content creation and voting while allowing read access. Automatically expire and restore full privileges when the suspension period ends.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Member who is suspended. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"moderation_action_id","type":"uuid","description":"Moderation action that initiated this suspension. {@link discussion_board_moderation_actions.id}","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":true,"nullable":false},{"name":"moderator_id","type":"uuid","description":"Moderator who issued the suspension. {@link discussion_board_moderators.id}","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"administrator_id","type":"uuid","description":"Administrator who issued the suspension if it was an admin action. {@link discussion_board_administrators.id}","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"suspension_reason","type":"string","description":"Detailed explanation of why the member was suspended. Shown to the suspended user.","nullable":false},{"name":"duration_days","type":"int","description":"Length of suspension in days. Common durations: 1, 7, 14, or 30 days based on violation severity.","nullable":false},{"name":"start_date","type":"datetime","description":"Timestamp when the suspension begins and restrictions take effect.","nullable":false},{"name":"end_date","type":"datetime","description":"Timestamp when the suspension expires and full privileges are automatically restored.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this suspension is currently in effect. False if expired or manually lifted.","nullable":false},{"name":"lifted_early","type":"boolean","description":"Whether the suspension was manually lifted before the scheduled end date.","nullable":false},{"name":"lifted_at","type":"datetime","description":"Timestamp when the suspension was manually lifted by a moderator or administrator.","nullable":true},{"name":"lifted_reason","type":"string","description":"Explanation for why the suspension was lifted early.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the suspension was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the suspension record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id","is_active"]},{"fieldNames":["end_date","is_active"]},{"fieldNames":["start_date","is_active"]}],"ginIndexes":[]},{"name":"discussion_board_bans","description":"Permanent account bans that completely prevent platform access. Issued only by administrators for severe or repeated violations. Bans may be appealable or non-appealable based on violation severity. All user content is hidden but preserved for audit purposes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Member who is permanently banned. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":true,"nullable":false},{"name":"administrator_id","type":"uuid","description":"Administrator who issued the permanent ban. {@link discussion_board_administrators.id}","relation":{"name":"administrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":false},{"name":"moderation_action_id","type":"uuid","description":"Moderation action that initiated this ban. {@link discussion_board_moderation_actions.id}","relation":{"name":"moderationAction","targetModel":"discussion_board_moderation_actions"},"unique":true,"nullable":false}],"plainFields":[{"name":"ban_reason","type":"string","description":"Comprehensive justification for the permanent ban. Minimum 100 characters required due to severity of action.","nullable":false},{"name":"violation_summary","type":"string","description":"Summary of all violations that led to the ban decision. Provides historical context.","nullable":false},{"name":"is_appealable","type":"boolean","description":"Whether the banned user is permitted to submit an appeal. False for severe violations like illegal content or threats.","nullable":false},{"name":"appeal_window_days","type":"int","description":"Number of days the user has to submit an appeal if ban is appealable. Typically 30 days.","nullable":true},{"name":"ip_address_banned","type":"string","description":"IP address at time of ban to help prevent re-registration attempts.","nullable":true},{"name":"email_banned","type":"string","description":"Email address banned from future registration to prevent account recreation.","nullable":false},{"name":"is_reversed","type":"boolean","description":"Whether the ban was reversed after successful appeal or administrative review.","nullable":false},{"name":"reversed_at","type":"datetime","description":"Timestamp when the ban was reversed and account access restored.","nullable":true},{"name":"reversal_reason","type":"string","description":"Explanation for why the ban was reversed.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the ban was issued.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the ban record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["is_appealable","created_at"]},{"fieldNames":["is_reversed"]}],"ginIndexes":[{"fieldName":"email_banned"}]},{"name":"discussion_board_appeals","description":"Appeals submitted by users contesting moderation decisions including warnings, suspensions, bans, and content removals. Each appeal provides user explanation and goes through administrator review. Appeals can be approved (reversing the decision), denied (upholding the decision), or result in modified penalties.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Member submitting the appeal. {@link discussion_board_members.id}","relation":{"name":"member","targetModel":"discussion_board_members"},"unique":false,"nullable":false},{"name":"appealed_moderation_action_id","type":"uuid","description":"Moderation action being appealed. {@link discussion_board_moderation_actions.id}","relation":{"name":"appealedModerationAction","targetModel":"discussion_board_moderation_actions"},"unique":false,"nullable":true},{"name":"appealed_warning_id","type":"uuid","description":"Warning being appealed. {@link discussion_board_warnings.id}","relation":{"name":"appealedWarning","targetModel":"discussion_board_warnings"},"unique":false,"nullable":true},{"name":"appealed_suspension_id","type":"uuid","description":"Suspension being appealed. {@link discussion_board_suspensions.id}","relation":{"name":"appealedSuspension","targetModel":"discussion_board_suspensions"},"unique":false,"nullable":true},{"name":"appealed_ban_id","type":"uuid","description":"Ban being appealed. {@link discussion_board_bans.id}","relation":{"name":"appealedBan","targetModel":"discussion_board_bans"},"unique":false,"nullable":true},{"name":"reviewing_administrator_id","type":"uuid","description":"Administrator assigned to review this appeal. {@link discussion_board_administrators.id}","relation":{"name":"reviewingAdministrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"appeal_explanation","type":"string","description":"User's written explanation of why the moderation decision should be reversed. Between 100 and 1000 characters required.","nullable":false},{"name":"additional_evidence","type":"string","description":"Optional additional context or evidence the user provides to support their appeal.","nullable":true},{"name":"status","type":"string","description":"Current status of the appeal: pending_review, under_review, approved, denied, or modified.","nullable":false},{"name":"decision","type":"string","description":"Administrator's decision on the appeal: uphold_original (deny), reverse_decision (approve), or modify_penalty.","nullable":true},{"name":"decision_reasoning","type":"string","description":"Detailed explanation from administrator about why the appeal was approved, denied, or modified. Minimum 50 characters.","nullable":true},{"name":"corrective_action_taken","type":"string","description":"Description of any corrective actions taken if appeal was approved (content restored, warning removed, suspension lifted, etc.).","nullable":true},{"name":"submitted_at","type":"datetime","description":"Timestamp when the user submitted the appeal.","nullable":false},{"name":"reviewed_at","type":"datetime","description":"Timestamp when the administrator completed their review and made a decision.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the appeal record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the appeal record was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id","status"]},{"fieldNames":["status","submitted_at"]},{"fieldNames":["reviewing_administrator_id","status"]}],"ginIndexes":[]}]},{"filename":"schema-07-notifications.prisma","namespace":"Notifications","models":[{"name":"discussion_board_notifications","description":"Stores individual notification records delivered to users for various platform events including replies, mentions, votes, moderation actions, and system announcements. Each notification represents a discrete event that users can view, mark as read, and interact with through the notification center. Notifications support both in-app and email delivery channels with separate tracking for each. Uses explicit foreign keys instead of polymorphic pattern to ensure referential integrity with discussion topics, replies, moderation actions, and triggering users (members, moderators, administrators).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Recipient user who receives this notification. {@link discussion_board_members.id}","relation":{"name":"recipient","targetModel":"discussion_board_members","mappingName":"discussion_board_notifications_of_user_id"},"unique":false,"nullable":false},{"name":"triggering_member_id","type":"uuid","description":"Member whose action triggered this notification (e.g., posted reply, cast vote). Null for moderator/admin actions or system notifications. {@link discussion_board_members.id}","relation":{"name":"triggeringMember","targetModel":"discussion_board_members","mappingName":"discussion_board_notifications_of_triggering_member_id"},"unique":false,"nullable":true},{"name":"triggering_moderator_id","type":"uuid","description":"Moderator whose action triggered this notification (e.g., moderation action). Null for member/admin actions. {@link discussion_board_moderators.id}","relation":{"name":"triggeringModerator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"triggering_administrator_id","type":"uuid","description":"Administrator whose action triggered this notification (e.g., system announcement, admin moderation). Null for member/moderator actions. {@link discussion_board_administrators.id}","relation":{"name":"triggeringAdministrator","targetModel":"discussion_board_administrators"},"unique":false,"nullable":true},{"name":"related_topic_id","type":"uuid","description":"Discussion topic related to this notification (for reply_to_topic, topic-related events). Null if notification not topic-related. {@link discussion_board_topics.id}","relation":{"name":"relatedTopic","targetModel":"discussion_board_topics"},"unique":false,"nullable":true},{"name":"related_reply_id","type":"uuid","description":"Discussion reply related to this notification (for reply_to_comment, reply-related events). Null if notification not reply-related. {@link discussion_board_replies.id}","relation":{"name":"relatedReply","targetModel":"discussion_board_replies"},"unique":false,"nullable":true},{"name":"related_moderation_action_id","type":"uuid","description":"Moderation action related to this notification (for moderation_action type notifications). Null for non-moderation notifications. {@link discussion_board_moderation_actions.id}","relation":{"name":"relatedModerationAction","targetModel":"discussion_board_moderation_actions"},"unique":false,"nullable":true}],"plainFields":[{"name":"notification_type","type":"string","description":"Type of notification: reply_to_topic, reply_to_comment, mention, vote_milestone, moderation_action, system_announcement, watched_topic_update, welcome","nullable":false},{"name":"title","type":"string","description":"Notification headline displayed to user (e.g., 'New reply to your topic', 'You were mentioned')","nullable":false},{"name":"message","type":"string","description":"Notification content preview or detailed message (first 200 characters of reply, moderation reason, etc.)","nullable":false},{"name":"link_url","type":"uri","description":"Deep link URL to the relevant content (topic, reply, profile, etc.). Null for notifications without specific target content.","nullable":true},{"name":"is_read","type":"boolean","description":"Whether user has marked this notification as read (clicked or explicitly marked read)","nullable":false},{"name":"is_seen","type":"boolean","description":"Whether user has seen this notification in the notification center (viewed but not necessarily read)","nullable":false},{"name":"delivered_in_app","type":"boolean","description":"Whether this notification was delivered through in-app notification center","nullable":false},{"name":"delivered_via_email","type":"boolean","description":"Whether this notification was delivered via email to user's registered address","nullable":false},{"name":"email_sent_at","type":"datetime","description":"Timestamp when email notification was successfully sent. Null if email not sent or delivery failed.","nullable":true},{"name":"email_delivery_status","type":"string","description":"Email delivery status: queued, sent, failed, bounced. Null if email delivery not attempted.","nullable":true},{"name":"email_failure_reason","type":"string","description":"Reason for email delivery failure if status is failed or bounced. Null for successful deliveries.","nullable":true},{"name":"email_retry_count","type":"int","description":"Number of email delivery retry attempts. Incremented on each retry, maximum 3 retries per requirements.","nullable":false},{"name":"read_at","type":"datetime","description":"Timestamp when user marked notification as read. Null if unread.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when notification was created and queued for delivery","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when notification record was last updated (status changes, read status, etc.)","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for user-deleted notifications. Supports 90-day retention window before permanent cleanup. Null for active notifications.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["user_id","is_read"]},{"fieldNames":["user_id","notification_type"]},{"fieldNames":["notification_type","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_notification_preferences","description":"Stores user notification preferences controlling which events trigger notifications and through which channels (in-app, email). Supports granular per-event-type configuration, digest modes (hourly, daily, weekly), and quiet hours settings. Each user has exactly one preference record with default values applied at registration.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who owns these notification preferences. {@link discussion_board_members.id}","relation":{"name":"user","targetModel":"discussion_board_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"reply_to_topic_in_app","type":"boolean","description":"Enable in-app notifications when someone replies to user's topic","nullable":false},{"name":"reply_to_topic_email","type":"boolean","description":"Enable email notifications when someone replies to user's topic","nullable":false},{"name":"reply_to_comment_in_app","type":"boolean","description":"Enable in-app notifications when someone replies to user's comment","nullable":false},{"name":"reply_to_comment_email","type":"boolean","description":"Enable email notifications when someone replies to user's comment","nullable":false},{"name":"mention_in_app","type":"boolean","description":"Enable in-app notifications when user is mentioned with @username","nullable":false},{"name":"mention_email","type":"boolean","description":"Enable email notifications when user is mentioned with @username","nullable":false},{"name":"vote_milestone_in_app","type":"boolean","description":"Enable in-app notifications when user's content reaches vote milestones (10, 25, 50, 100, etc.)","nullable":false},{"name":"vote_milestone_email","type":"boolean","description":"Enable email notifications when user's content reaches vote milestones","nullable":false},{"name":"moderation_action_in_app","type":"boolean","description":"Enable in-app notifications for moderation actions affecting user (warnings, suspensions, content removal)","nullable":false},{"name":"moderation_action_email","type":"boolean","description":"Enable email notifications for moderation actions affecting user","nullable":false},{"name":"watched_topic_in_app","type":"boolean","description":"Enable in-app notifications for updates to topics user is watching","nullable":false},{"name":"watched_topic_email","type":"boolean","description":"Enable email notifications for updates to topics user is watching","nullable":false},{"name":"system_announcement_in_app","type":"boolean","description":"Enable in-app notifications for system-wide announcements from administrators","nullable":false},{"name":"system_announcement_email","type":"boolean","description":"Enable email notifications for system-wide announcements","nullable":false},{"name":"digest_frequency","type":"string","description":"Email notification batching frequency: realtime (immediate), hourly, daily, weekly","nullable":false},{"name":"quiet_hours_enabled","type":"boolean","description":"Whether quiet hours are active (suppress email notifications during specified hours)","nullable":false},{"name":"quiet_hours_start","type":"string","description":"Quiet hours start time in HH:mm format (24-hour). Null if quiet hours disabled.","nullable":true},{"name":"quiet_hours_end","type":"string","description":"Quiet hours end time in HH:mm format (24-hour). Null if quiet hours disabled.","nullable":true},{"name":"timezone","type":"string","description":"User's timezone for digest scheduling and quiet hours calculation (IANA timezone identifier)","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when preference record was created (typically at user registration)","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when preferences were last modified by user","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discussion_board_notification_batches","description":"Tracks batched and digest notifications to optimize delivery and prevent duplicate notifications. System creates batch records for hourly/daily/weekly digests and for similar notifications occurring within batching windows. Batch records track which individual notifications are included, delivery status, and scheduling information. Uses JSONB for efficient storage and querying of notification ID arrays.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User receiving this batched notification delivery. {@link discussion_board_members.id}","relation":{"name":"user","targetModel":"discussion_board_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"batch_type","type":"string","description":"Type of batch: hourly_digest, daily_digest, weekly_digest, batched_replies, batched_mentions, batched_watched_topic","nullable":false},{"name":"notification_ids","type":"string","description":"JSONB array of notification UUIDs included in this batch. Stored as JSONB for efficient querying and indexing. Example: [\"uuid1\", \"uuid2\", \"uuid3\"]","nullable":false},{"name":"notification_count","type":"int","description":"Total number of individual notifications combined in this batch","nullable":false},{"name":"sent_at","type":"datetime","description":"Timestamp when batch notification was successfully delivered. Null if pending or failed.","nullable":true},{"name":"scheduled_for","type":"datetime","description":"Timestamp when batch is scheduled for delivery (considering user preferences, quiet hours, digest frequency)","nullable":false},{"name":"status","type":"string","description":"Batch delivery status: pending (not yet sent), sent (successfully delivered), failed (delivery failed after retries)","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when batch record was created","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when batch record was last updated (status changes, delivery attempts)","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","scheduled_for"]},{"fieldNames":["user_id","batch_type","status"]},{"fieldNames":["status","scheduled_for"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-08-audit.prisma","namespace":"Audit","models":[{"name":"discussion_board_audit_logs","description":"General audit trail for all significant user and system actions across the platform. Records create, update, delete operations on topics, replies, votes, and user profile changes. Provides comprehensive activity tracking for compliance, security analysis, and user activity monitoring. Immutable records ensure audit integrity.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who performed the action. {@link discussion_board_members.id}. Nullable for system-initiated events.","relation":{"name":"user","targetModel":"discussion_board_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of action performed (e.g., topic_created, reply_posted, vote_cast, profile_updated, content_deleted).","nullable":false},{"name":"entity_type","type":"string","description":"Type of entity affected by the action (e.g., topic, reply, vote, user, tag).","nullable":false},{"name":"entity_id","type":"uuid","description":"UUID of the affected entity. Nullable if action does not target a specific entity.","nullable":true},{"name":"description","type":"string","description":"Human-readable description of the action for audit review and reporting.","nullable":false},{"name":"metadata","type":"string","description":"JSON blob containing additional context about the action (before/after values, affected fields, request parameters).","nullable":true},{"name":"ip_address","type":"string","description":"IP address from which the action was performed. Nullable for system-initiated actions.","nullable":true},{"name":"user_agent","type":"string","description":"Browser user agent string for device and browser tracking. Nullable for API or system actions.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the audit log entry was created. Immutable audit records have no updated_at.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["entity_type","entity_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_security_logs","description":"Security-specific event logging for authentication attempts, permission denials, account lockouts, and suspicious activities. Tracks login successes and failures, account security events, rate limit violations, and potential security threats. Critical for security monitoring, incident response, and compliance with security audit requirements.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User associated with the security event. {@link discussion_board_members.id}. Nullable for failed login attempts with invalid credentials.","relation":{"name":"user","targetModel":"discussion_board_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of security event (e.g., login_success, login_failed, account_locked, permission_denied, suspicious_activity, rate_limit_exceeded).","nullable":false},{"name":"severity","type":"string","description":"Severity level of the security event: low, medium, high, or critical. Used for prioritizing security response.","nullable":false},{"name":"ip_address","type":"string","description":"IP address from which the security event originated. Required for security analysis and IP-based blocking.","nullable":false},{"name":"user_agent","type":"string","description":"Browser user agent string for device fingerprinting and bot detection. Nullable for some automated events.","nullable":true},{"name":"description","type":"string","description":"Human-readable description of the security event for incident review and reporting.","nullable":false},{"name":"metadata","type":"string","description":"JSON blob containing detailed security event context (failed login reason, permission attempted, threat indicators).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the security event occurred. Used for security timeline analysis and incident investigation.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["event_type","created_at"]},{"fieldNames":["severity","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_moderation_audit_logs","description":"Comprehensive audit trail of all moderation actions for accountability, transparency, and appeals processing. Logs content removal, user warnings, suspensions, bans, and moderator interventions. Includes moderator identity, target user/content, action rationale, and preserved content snapshots. Essential for moderator performance review and user appeal investigations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"moderator_id","type":"uuid","description":"Moderator who performed the action. {@link discussion_board_moderators.id}. Nullable for automated moderation actions.","relation":{"name":"moderator","targetModel":"discussion_board_moderators"},"unique":false,"nullable":true},{"name":"target_user_id","type":"uuid","description":"User targeted by the moderation action. {@link discussion_board_members.id}. Nullable for content-only actions.","relation":{"name":"targetUser","targetModel":"discussion_board_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action (e.g., content_hidden, content_removed, warning_issued, user_suspended, user_banned, appeal_approved).","nullable":false},{"name":"target_content_id","type":"uuid","description":"UUID of the content affected by moderation. Nullable for user-level actions without specific content.","nullable":true},{"name":"target_content_type","type":"string","description":"Type of content affected (topic or reply). Nullable for user-level actions.","nullable":true},{"name":"reason","type":"string","description":"Moderator's explanation for the action. Required for transparency and appeals process.","nullable":false},{"name":"metadata","type":"string","description":"JSON blob containing additional context (original content snapshot, violation category, previous warnings, action duration for suspensions).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderation action was performed. Immutable for audit integrity.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["moderator_id","created_at"]},{"fieldNames":["target_user_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussion_board_search_history","description":"Tracks user search queries for search analytics, query improvement, and personalized recommendations. Records search terms, applied filters, result counts, and user engagement with results. Used for identifying common search patterns, improving search algorithms, and understanding user information needs. Supports both authenticated users and guest searches.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who performed the search. {@link discussion_board_members.id}. Nullable for guest searches.","relation":{"name":"user","targetModel":"discussion_board_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"search_query","type":"string","description":"The actual search text entered by the user. Used for search analytics and query pattern identification.","nullable":false},{"name":"filters_applied","type":"string","description":"JSON blob containing search filters (category, date range, vote threshold, tag filters). Nullable if no filters used.","nullable":true},{"name":"results_count","type":"int","description":"Number of search results returned. Used to identify zero-result queries and search effectiveness.","nullable":false},{"name":"clicked_result_id","type":"uuid","description":"UUID of the search result the user clicked on. Nullable if user did not click any result. Used for relevance tracking.","nullable":true},{"name":"session_id","type":"string","description":"Session identifier to track related searches within a session. Nullable for one-off searches.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the search was performed. Used for search trend analysis over time.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"search_query"}]}]}]}