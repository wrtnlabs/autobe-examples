import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getDiscussionBoardTagsTagIdStatistics } from "../../../../providers/getDiscussionBoardTagsTagIdStatistics";

import { IDiscussionBoardTagStatistics } from "../../../../api/structures/IDiscussionBoardTagStatistics";

@Controller("/discussionBoard/tags/:tagId/statistics")
export class DiscussionboardTagsStatisticsController {
  /**
   * Retrieve aggregated statistics for a specific discussion board tag.
   *
   * This operation retrieves comprehensive statistical information about a
   * specific tag from the mv_discussion_board_tag_statistics materialized view
   * in the Prisma schema. The statistics provide valuable insights into tag
   * usage patterns, popularity, and engagement metrics that help administrators
   * manage the tag taxonomy and help users understand which tags are actively
   * used in the community.
   *
   * The operation returns aggregated data including the total number of topics
   * currently tagged with this tag (usage_count), the number of topics tagged
   * in the last 7 days (recent_usage_count) which identifies trending tags, the
   * sum of all votes on topics with this tag (total_votes) indicating community
   * engagement, and the number of users following this tag (follower_count)
   * showing tag popularity. These metrics are pre-calculated in the
   * materialized view for optimal performance.
   *
   * Security and access control considerations allow this endpoint to be
   * publicly accessible since tag statistics are non-sensitive aggregate data
   * that helps all users understand tag usage patterns. No authentication is
   * required, making this information available to guests, members, moderators,
   * and administrators alike. The read-only nature of this operation ensures
   * data integrity.
   *
   * The statistics data is refreshed periodically according to the platform's
   * materialized view refresh schedule, so the returned metrics represent a
   * recent snapshot rather than real-time values. The updated_at timestamp in
   * the response indicates when the statistics were last recalculated, allowing
   * consumers to understand data freshness.
   *
   * This operation integrates with tag management workflows where
   * administrators review tag usage before making decisions about tag
   * consolidation, deletion, or promotion. It also supports tag discovery
   * features where users browse popular and trending tags to find relevant
   * discussions. The relationship to the base discussion_board_tags table is
   * maintained through the discussion_board_tag_id foreign key in the
   * materialized view.
   *
   * Error handling includes validation that the specified tagId exists in the
   * system. If the tag does not exist or has been deleted, the operation
   * returns an appropriate error response. If statistics have not yet been
   * calculated for a newly created tag, the operation may return zero values
   * for all metrics.
   *
   * @param connection
   * @param tagId Unique identifier of the tag for which statistics are
   *   requested
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("tagId")
    tagId: string & tags.Format<"uuid">,
  ): Promise<IDiscussionBoardTagStatistics> {
    try {
      return await getDiscussionBoardTagsTagIdStatistics({
        tagId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
