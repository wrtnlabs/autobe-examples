import { tags } from "typia";

/**
 * Vote record for community-driven content assessment.
 *
 * Represents member votes on discussion topics and replies, forming the
 * foundation of the platform's democratic content curation system. Votes drive
 * content ranking algorithms (Hot, Top, Controversial), influence author
 * reputation scores, and enable community-driven quality control for economic
 * and political discourse.
 *
 * SECURITY: The discussion_board_member_id field from the Prisma schema is
 * intentionally excluded from this response type. Vote ownership is managed
 * server-side through JWT authentication and should never be exposed in
 * responses to prevent unauthorized vote manipulation.
 *
 * Vote records enforce business rules including self-voting prohibition, one
 * vote per user per content item, time-limited modification windows (5
 * minutes), and rate limiting (200 votes/hour). The polymorphic design through
 * votable_type/votable_id enables unified vote tracking across topics and
 * replies without schema duplication.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardVote = {
  /**
   * Unique identifier of the vote record.
   *
   * Primary key enabling precise vote tracking, modification operations, and
   * referential integrity across the voting system. Each vote cast receives a
   * unique identifier for vote change workflows and fraud detection
   * analysis.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Type of content being voted on.
   *
   * Discriminator indicating whether the vote targets a discussion topic or a
   * threaded reply. Determines which content table the votable_id references
   * in the polymorphic voting system.
   */
  votable_type: "topic" | "reply";

  /**
   * Unique identifier of the voted content.
   *
   * References either discussion_board_topics.id or
   * discussion_board_replies.id based on votable_type. Establishes the
   * vote-to-content relationship for ranking algorithms and reputation
   * calculations.
   */
  votable_id: string & tags.Format<"uuid">;

  /**
   * Vote direction indicating content assessment.
   *
   * Upvote signals valuable, well-reasoned contributions to economic or
   * political discourse. Downvote indicates low-quality, off-topic, or
   * unconstructive content. Direction affects content ranking and author
   * reputation.
   */
  vote_type: "upvote" | "downvote";

  /**
   * Timestamp when the vote was cast.
   *
   * Immutable creation timestamp used for enforcing the 5-minute vote change
   * window, tracking voting velocity for fraud detection, and analyzing
   * temporal voting patterns across the platform.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last vote modification.
   *
   * Updated when users change vote direction within the 5-minute modification
   * window. Tracks vote changes for audit trail and vote manipulation pattern
   * analysis.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardVote {
  /**
   * Vote creation request for democratic content curation.
   *
   * Enables authenticated members to cast upvotes or downvotes on discussion
   * topics and replies. The voting system is fundamental to community-driven
   * quality control, surfacing valuable economic and political discourse
   * while suppressing low-quality contributions.
   *
   * SECURITY: The discussion_board_member_id field is NOT included in this
   * request type. Vote ownership is automatically captured from the
   * authenticated user's JWT token server-side, preventing vote manipulation
   * and ensuring vote attribution integrity.
   *
   * Validation enforces minimum reputation requirements (10 points for
   * upvoting, 50 for downvoting), self-voting prohibition, single vote per
   * user per content, and rate limits (200 votes/hour, 1,000/day). System
   * validates referenced content exists and is accessible before accepting
   * votes.
   */
  export type ICreate = {
    /**
     * Type of content being voted on.
     *
     * Specifies whether the vote targets a discussion topic or threaded
     * reply. This discriminator determines which content table
     * (discussion_board_topics or discussion_board_replies) the votable_id
     * references in the polymorphic voting system.
     */
    votable_type: "topic" | "reply";

    /**
     * Unique identifier of the content being voted on.
     *
     * References either discussion_board_topics.id or
     * discussion_board_replies.id depending on votable_type. System
     * validates content exists and is accessible before creating vote
     * record.
     */
    votable_id: string & tags.Format<"uuid">;

    /**
     * Direction of the vote being cast.
     *
     * Upvote indicates valuable, well-reasoned content contributing to
     * discourse. Downvote signals low-quality, off-topic, or misleading
     * content. Vote direction affects ranking algorithms and triggers
     * reputation adjustments for content authors.
     */
    vote_type: "upvote" | "downvote";
  };

  /**
   * Update data for modifying an existing vote within the allowed time
   * window.
   *
   * Enables members to change their vote direction (upvote to downvote or
   * vice versa) within 5 minutes of the original vote casting per business
   * rules. Vote modifications immediately affect content net scores and
   * author reputation calculations, supporting dynamic community assessment
   * of discussion quality.
   *
   * All vote updates are validated against the time-based modification
   * window. After 5 minutes from the original vote timestamp, votes are
   * locked and cannot be changed. The system enforces that only the original
   * voter can modify their own votes, preventing unauthorized vote
   * manipulation. Vote changes are tracked for audit trail and pattern
   * analysis.
   *
   * Update operations also support vote removal scenarios where members
   * retract their vote entirely, returning to a neutral state. In removal
   * cases, the vote record is deleted from the database rather than modified,
   * and content scores and reputation are recalculated without that vote's
   * contribution.
   */
  export type IUpdate = {
    /**
     * New vote direction when changing an existing vote.
     *
     * Allows members to change their vote from upvote to downvote or vice
     * versa within the 5-minute modification window defined in business
     * rules. Vote changes trigger immediate recalculation of content scores
     * (change from upvote to downvote decrements net score by 2) and author
     * reputation adjustments (reversing original reputation change and
     * applying new change).
     *
     * This field is optional because vote updates can also represent vote
     * removal, where the vote record is deleted entirely rather than
     * changed to a different direction. When present, must be different
     * from the current vote_type to represent a meaningful vote change.
     */
    vote_type?: "upvote" | "downvote" | undefined;
  };
}
