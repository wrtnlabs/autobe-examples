import { tags } from "typia";

import { IDiscussionBoardTopic } from "./IDiscussionBoardTopic";

/**
 * Complete representation of a favorite/bookmark relationship between a member
 * and a discussion topic.
 *
 * This entity represents a saved bookmark where a user has marked a discussion
 * topic as a favorite for later reference, continued engagement, or personal
 * interest tracking. Favorites enable users to build personal libraries of
 * valuable economic and political discussions they want to revisit.
 *
 * The favorite relationship supports several key user experiences: quick access
 * to saved discussions through the user's favorites collection, chronological
 * organization showing when topics were bookmarked, and potential notification
 * preferences for activity on favorited topics. Users can favorite topics they
 * find particularly insightful, controversial, or relevant to their interests
 * in economic and political subjects.
 *
 * This entity integrates with the discussion management system by referencing
 * topics, the user profile system through member ownership, and potentially the
 * notification system if users opt to receive updates on favorited topic
 * activity. The favorites collection is private by default but users can
 * optionally make their favorites public through activity visibility settings.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardFavorite = {
  /**
   * Unique identifier for this favorite/bookmark relationship.
   *
   * This is the primary key for the discussion_board_favorites table,
   * uniquely identifying each instance where a member has bookmarked a
   * discussion topic. The ID is system-generated upon favorite creation and
   * remains immutable.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique identifier of the discussion topic that was favorited.
   *
   * References the discussion_board_topics table to identify which discussion
   * was bookmarked. This enables retrieval of complete topic information when
   * displaying the user's favorites list and supports navigation from
   * favorites to the full discussion view.
   */
  discussion_board_topic_id: string & tags.Format<"uuid">;

  /**
   * Summary information about the favorited discussion topic including title,
   * category, author, and engagement metrics.
   *
   * This nested object provides essential topic details for displaying the
   * user's favorites collection without requiring separate topic retrieval
   * queries. The summary includes enough information to render favorites
   * lists with meaningful context about each bookmarked discussion.
   */
  topic: IDiscussionBoardTopic.ISummary;

  /**
   * Timestamp when the member added this topic to their favorites.
   *
   * Records the exact moment the bookmark was created, enabling chronological
   * organization of favorites, sorting by recently favorited topics, and
   * tracking user engagement patterns over time. This timestamp helps users
   * remember when they found discussions interesting.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this favorite record was last modified.
   *
   * Tracks any updates to the favorite relationship, though favorites are
   * typically created or deleted rather than modified. Used for audit trail
   * and maintaining data integrity across favorite management operations.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IDiscussionBoardFavorite {
  /**
   * Request body for creating a new favorite/bookmark relationship between a
   * user and a discussion topic.
   *
   * This DTO represents the minimal information required to add a discussion
   * topic to a user's favorites collection. When a member bookmarks a topic,
   * they are expressing explicit interest in saving that economic or
   * political discussion for easy access and future reference.
   *
   * The creation process validates that the topic exists and is accessible,
   * enforces the unique constraint preventing duplicate favorites of the same
   * topic, and creates the favorite record with the current timestamp. The
   * authenticated user's ID is derived from the JWT token and automatically
   * set as the discussion_board_member_id, never accepted from the request
   * body for security reasons.
   *
   * Business rules enforced during favorite creation include verifying the
   * topic is not deleted, confirming the user has not already favorited this
   * topic, and ensuring the user is an authenticated member with active
   * account status. While the platform allows unlimited favorites in the
   * initial implementation, soft limits may be introduced in future
   * versions.
   */
  export type ICreate = {
    /**
     * Unique identifier of the discussion topic to add to the user's
     * favorites collection.
     *
     * This field references the discussion_board_topics table and must
     * correspond to an existing, accessible discussion topic that the user
     * has permission to view. The topic cannot already be favorited by the
     * same user due to the unique constraint on the member-topic pair.
     *
     * The system validates that the referenced topic exists, is not deleted
     * (deleted_at is null), and is accessible to the authenticated user
     * based on topic visibility rules and content access controls.
     */
    discussion_board_topic_id: string & tags.Format<"uuid">;
  };

  /**
   * Request parameters for searching and filtering a user's favorited
   * discussion topics.
   *
   * Supports pagination and sorting to help users organize and discover their
   * saved discussions on economic and political topics. Users can navigate
   * their favorites collection with configurable page sizes and sort by
   * various criteria including date favorited, topic activity, or vote
   * score.
   *
   * This request structure enables users to maintain a personal library of
   * valuable discussions they want to revisit for research, reference, or
   * continued engagement.
   */
  export type IRequest = {
    /**
     * Page number for pagination of favorite results.
     *
     * Determines which page of results to return when the user's favorites
     * collection spans multiple pages. Starts at 1 for the first page.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of favorite records to return per page.
     *
     * Configurable page size allowing users to control result density.
     * Default typically 20-25 items per page. Maximum 100 to prevent
     * excessive data transfer.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Keyword search within favorited topic titles and content.
     *
     * Enables users to find specific favorited discussions by searching
     * across topic titles and body content. Supports full-text search for
     * locating bookmarked discussions containing particular terms,
     * arguments, or economic/political concepts.
     */
    search?: string | undefined;

    /**
     * Sorting criteria for organizing favorite results.
     *
     * Options: date_favorited_desc (newest bookmarks first),
     * date_favorited_asc (oldest bookmarks first), topic_created_desc
     * (recently created topics first), topic_activity_desc (recently active
     * topics first), vote_score_desc (highest voted topics first),
     * reply_count_desc (most discussed topics first).
     *
     * Default: date_favorited_desc for showing most recently bookmarked
     * discussions.
     */
    sort_by?:
      | "date_favorited_desc"
      | "date_favorited_asc"
      | "topic_created_desc"
      | "topic_activity_desc"
      | "vote_score_desc"
      | "reply_count_desc"
      | undefined;
  };
}
