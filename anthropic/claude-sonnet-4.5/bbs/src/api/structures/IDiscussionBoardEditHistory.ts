import { tags } from "typia";

/**
 * Complete edit history record tracking modifications to discussion topics and
 * replies for transparency and accountability.
 *
 * This entity captures comprehensive snapshots of content before and after each
 * modification, maintaining an immutable audit trail of all edits made to
 * discussion content. Edit history supports the platform's commitment to
 * transparent discussions on economic and political topics by allowing users to
 * see how arguments and statements have evolved over time.
 *
 * Each edit record preserves the complete previous and new content states,
 * identifies who made the edit, records when the modification occurred, and
 * optionally captures the editor's explanation for the change. This data
 * enables users to track content evolution, verify the context of discussions,
 * and ensure that edits don't fundamentally change the meaning of content after
 * other users have responded.
 *
 * Edit history is particularly important for political and economic discussions
 * where precision and context matter significantly. Users can review edit
 * trails to understand how positions have evolved, verify that edits represent
 * clarifications rather than reversals, and maintain trust in the integrity of
 * ongoing debates.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardEditHistory = {
  /**
   * Unique identifier of the edit history record.
   *
   * This UUID serves as the primary key in the discussion_board_edit_history
   * table and uniquely identifies each edit event in the audit trail.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the member who performed this edit.
   *
   * Links to discussion_board_members.id to identify the user who modified
   * the content. This attribution ensures accountability for all content
   * modifications and enables tracking of editing patterns across users.
   *
   * Required for audit trail and edit transparency in discussion contexts.
   */
  discussion_board_member_id: string & tags.Format<"uuid">;

  /**
   * Type of entity that was edited.
   *
   * Indicates whether the edited content was a discussion topic or a reply.
   * Valid values are 'topic' (for discussion_board_topics) and 'reply' (for
   * discussion_board_replies).
   *
   * Used in conjunction with entity_id to reference the specific content item
   * that was modified through a polymorphic relationship pattern.
   */
  entity_type: string;

  /**
   * Unique identifier of the edited entity.
   *
   * References either discussion_board_topics.id or
   * discussion_board_replies.id depending on the entity_type value. This
   * polymorphic reference allows the edit history table to track
   * modifications to both topics and replies efficiently.
   *
   * Combined with entity_type, this field provides the complete reference to
   * the edited content item.
   */
  entity_id: string & tags.Format<"uuid">;

  /**
   * Complete snapshot of content before the edit was applied.
   *
   * Preserves the exact state of the topic title/body or reply content as it
   * existed prior to modification. This snapshot is critical for audit
   * purposes, appeal investigations, and understanding content evolution over
   * time.
   *
   * Stored in its entirety regardless of length to maintain accurate
   * historical records. Users can compare previous_content with new_content
   * to see exactly what changed in each edit.
   */
  previous_content: string;

  /**
   * Complete snapshot of content after the edit was applied.
   *
   * Captures the modified state of the topic title/body or reply content
   * following the edit. Shows what the content became after the user's
   * modifications were saved.
   *
   * Stored alongside previous_content to enable complete before-and-after
   * comparison for transparency in discussions.
   */
  new_content: string;

  /**
   * Optional explanation provided by the editor describing why the
   * modification was made.
   *
   * Provides context for content changes, helping other users understand the
   * purpose of edits. Common edit reasons include 'Fixed typo', 'Added
   * additional context', 'Corrected factual error', or 'Clarified argument'.
   *
   * While optional, edit reasons are encouraged to maintain transparency in
   * discussions and help readers understand whether edits represent minor
   * corrections or substantive changes to arguments.
   */
  edit_reason?: string | null | undefined;

  /**
   * Timestamp when this edit occurred and the history record was created.
   *
   * Represents the precise moment the content modification was saved. Used
   * for displaying edit timestamps (e.g., 'Edited 3 hours ago'), sorting edit
   * history chronologically, and enforcing time-based edit restrictions
   * defined in business rules.
   *
   * Formatted as ISO 8601 date-time string with timezone information for
   * accurate cross-timezone tracking.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp marking when this edit history record was deleted.
   *
   * Typically null as edit history records are preserved for audit integrity.
   * In rare cases where edit history must be removed (such as when content
   * contains illegal material or personal identifying information), this
   * timestamp marks the record as deleted while preserving it in the
   * database.
   *
   * Null for all active edit history records. Non-null values indicate the
   * record is hidden from normal queries but retained for administrative
   * audit purposes.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
