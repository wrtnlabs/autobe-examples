import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getRedditLikeUsersUserIdProfile } from "../../../../providers/getRedditLikeUsersUserIdProfile";

import { IRedditLikeUser } from "../../../../api/structures/IRedditLikeUser";

@Controller("/redditLike/users/:userId/profile")
export class RedditlikeUsersProfileController {
  /**
   * Retrieve detailed profile information for a specific user.
   *
   * Retrieve comprehensive profile information for a specific user identified
   * by their unique user ID. This operation returns detailed user profile data
   * from the reddit_like_users table including username, account creation date,
   * karma scores (post karma and comment karma separately), profile biography,
   * avatar URL, and privacy settings.
   *
   * This endpoint serves multiple critical use cases across the platform. When
   * users click on a username anywhere in the platform (posts, comments,
   * community member lists), they navigate to that user's profile to understand
   * the user's participation history, reputation, and community standing. New
   * users discovering a community can review moderator profiles to understand
   * who manages the community. Users evaluating the credibility of a post or
   * comment can check the author's karma score and account age. The profile
   * serves as the public face of each user's platform identity.
   *
   * The operation respects user privacy settings stored in the profile_privacy
   * field. When a user has set their profile to 'members_only', the system
   * requires authentication to view the profile and returns an error for guest
   * requests. When a user has set their profile to 'private', the system denies
   * access to all users except the profile owner themselves. When the profile
   * is 'public' (default), all users including unauthenticated guests can view
   * the profile information. Additionally, individual privacy flags like
   * show_karma_publicly and show_subscriptions_publicly control visibility of
   * specific profile elements.
   *
   * The response includes calculated total karma (sum of post_karma and
   * comment_karma) alongside the separate post and comment karma values,
   * enabling users to understand the user's contribution patterns. Account age
   * is calculated from the created_at timestamp and displayed in human-readable
   * format. The operation performs no mutations and has no side effects, making
   * it safe for repeated access and caching.
   *
   * This operation integrates with the user roles and authentication system
   * defined in requirement document 02-user-roles-authentication.md, respecting
   * the four-tier role hierarchy. It also integrates with the karma system
   * defined in document 07-karma-system.md, displaying karma scores calculated
   * from voting activity. Profile privacy controls are specified in document
   * 09-user-profiles-feeds.md section on privacy settings.
   *
   * @param connection
   * @param userId Unique identifier of the target user whose profile
   *   information is being retrieved
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("userId")
    userId: string & tags.Format<"uuid">,
  ): Promise<IRedditLikeUser.IProfile> {
    try {
      return await getRedditLikeUsersUserIdProfile({
        userId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
