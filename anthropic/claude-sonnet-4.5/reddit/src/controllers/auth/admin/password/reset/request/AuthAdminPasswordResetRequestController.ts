import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postAuthAdminPasswordResetRequest } from "../../../../../../providers/postAuthAdminPasswordResetRequest";

import { IRedditLikeAdmin } from "../../../../../../api/structures/IRedditLikeAdmin";

@Controller("/auth/admin/password/reset/request")
export class AuthAdminPasswordResetRequestController {
  /**
   * Request password reset email for admin account.
   *
   * Initiates the password reset workflow for administrators who have forgotten
   * their password by generating a time-limited password reset token and
   * sending a reset email to the registered email address. This endpoint
   * implements the 'Forgot Password' mechanism accessible from the login page,
   * enabling account recovery without requiring the current password.
   *
   * The operation validates the provided email address exists in the
   * reddit_like_admins table as a registered administrator account. If the
   * email address is found, the system generates a unique cryptographically
   * secure reset token using secure random number generation, creates a
   * password reset record in reddit_like_password_resets with the admin's user
   * ID, email address, reset token, and expiration timestamp set to 1 hour from
   * creation time per authentication requirements. The reset token is a
   * one-time use token tracked via the used_at field.
   *
   * Within 5 minutes of receiving a valid password reset request, the system
   * sends a password reset email to the registered email address containing a
   * unique password reset link with the embedded reset token. The email
   * explains the reset process, includes the clickable reset link, warns that
   * the link expires in 1 hour, and provides instructions for requesting a new
   * reset link if needed. If the provided email address does not match any
   * admin account, the system still displays a success message to prevent
   * account enumeration attacks, but does not send an email.
   *
   * The password reset record in reddit_like_password_resets includes the
   * reddit_like_user_id linking to the reddit_like_users table (which
   * consolidates all user types including admins), the email address for
   * validation, the unique reset_token, expires_at timestamp (1 hour from
   * creation), used_at initially set to null (marks token as unused), and
   * created_at timestamp. The reset token can only be used once - after
   * successful password reset, the used_at field is updated to prevent token
   * reuse.
   *
   * This operation is the first step in the two-step password reset workflow.
   * After receiving the email, the administrator clicks the reset link (which
   * contains the token), navigates to the password reset form, enters their new
   * password meeting all validation requirements (minimum 8 characters with
   * uppercase, lowercase, number, and special character), and submits the new
   * password along with the token to complete the reset process. If the reset
   * link expires before use, the system displays an error message and offers to
   * resend a new reset link.
   *
   * @param connection
   * @param body Email address of the admin account requesting password reset.
   *   System validates this email exists in admin accounts before sending reset
   *   link.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async requestPasswordReset(
    @TypedBody()
    body: IRedditLikeAdmin.IPasswordResetRequest,
  ): Promise<IRedditLikeAdmin.IPasswordResetRequestResponse> {
    try {
      return await postAuthAdminPasswordResetRequest({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
