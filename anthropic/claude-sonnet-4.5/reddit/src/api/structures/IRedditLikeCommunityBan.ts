import { tags } from "typia";

/**
 * Community ban record.
 *
 * Represents a member banned from a specific community.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditLikeCommunityBan = {
  /** Unique ban identifier. */
  id: string & tags.Format<"uuid">;

  /** Banned member. */
  banned_member_id: string & tags.Format<"uuid">;

  /** Community from which banned. */
  community_id: string & tags.Format<"uuid">;

  /** Ban reason category. */
  ban_reason_category: string;

  /** Detailed ban reason. */
  ban_reason_text: string;

  /** Whether ban is permanent. */
  is_permanent: boolean;

  /** Expiration date for temporary bans. */
  expiration_date?: (string & tags.Format<"date-time">) | undefined;

  /** Whether ban is currently active. */
  is_active: boolean;

  /** Ban issuance timestamp. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IRedditLikeCommunityBan {
  /** Community ban creation request. */
  export type ICreate = {
    /** Member to ban. */
    banned_member_id: string & tags.Format<"uuid">;

    /** Reason category. */
    ban_reason_category: string;

    /** Detailed reason. */
    ban_reason_text: string;

    /** Private notes. */
    internal_notes?: string | undefined;

    /** Whether permanent. */
    is_permanent: boolean;

    /** Expiration for temporary bans. */
    expiration_date?: (string & tags.Format<"date-time">) | undefined;
  };

  /** Community ban search parameters. */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Filter by active status. */
    is_active?: boolean | undefined;

    /** Filter by permanence. */
    is_permanent?: boolean | undefined;
  };
}
