import { tags } from "typia";

/**
 * Moderation action record.
 *
 * Documents moderator/admin actions on content.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditLikeModerationAction = {
  /** Unique action identifier. */
  id: string & tags.Format<"uuid">;

  /**
   * Action: 'remove', 'approve', 'dismiss_report', 'escalate', 'restore',
   * 'lock'.
   */
  action_type: string;

  /** Content type: 'post' or 'comment'. */
  content_type: string;

  /** Removal scope if applicable. */
  removal_type?: string | undefined;

  /** Predefined reason category. */
  reason_category: string;

  /** Detailed explanation. */
  reason_text: string;

  /** Action status: 'completed', 'reversed', 'appealed'. */
  status: string;

  /** Action timestamp. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IRedditLikeModerationAction {
  /**
   * Moderation action creation.
   *
   * Specifies action details and reasoning.
   */
  export type ICreate = {
    /** Triggering report. */
    report_id?: (string & tags.Format<"uuid">) | undefined;

    /** Post being acted upon. */
    affected_post_id?: (string & tags.Format<"uuid">) | undefined;

    /** Comment being acted upon. */
    affected_comment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Community context. */
    community_id: string & tags.Format<"uuid">;

    /** Action type. */
    action_type: string;

    /** Content type. */
    content_type: string;

    /** Removal scope. */
    removal_type?: string | undefined;

    /** Reason category. */
    reason_category: string;

    /** Detailed explanation. */
    reason_text: string;

    /** Private notes. */
    internal_notes?: string | undefined;
  };

  /** Moderation action search parameters. */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Filter by action type. */
    action_type?: string | undefined;

    /** Filter by status. */
    status?: string | undefined;

    /** Filter by community. */
    community_id?: (string & tags.Format<"uuid">) | undefined;
  };
}
