import { tags } from "typia";

/**
 * Content report record.
 *
 * User-submitted report for potentially inappropriate content.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditLikeContentReport = {
  /** Unique report identifier. */
  id: string & tags.Format<"uuid">;

  /** Type: 'post' or 'comment'. */
  content_type: string;

  /** Comma-separated violation categories. */
  violation_categories: string;

  /** Reporter's explanation. */
  additional_context?: string | undefined;

  /** Review status: 'pending', 'reviewed', 'dismissed'. */
  status: string;

  /** Whether submitted by guest. */
  is_anonymous_report: boolean;

  /** Auto-flagged priority. */
  is_high_priority: boolean;

  /** Report submission timestamp. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IRedditLikeContentReport {
  /**
   * Content report submission.
   *
   * Either post or comment must be specified based on content_type.
   */
  export type ICreate = {
    /** Post being reported. */
    reported_post_id?: (string & tags.Format<"uuid">) | undefined;

    /** Comment being reported. */
    reported_comment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Community context. */
    community_id: string & tags.Format<"uuid">;

    /** Type: 'post' or 'comment'. */
    content_type: string;

    /** Selected violation categories. */
    violation_categories: string;

    /** Optional explanation. */
    additional_context?: (string & tags.MaxLength<500>) | undefined;
  };

  /** Content report search parameters. */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Filter by status. */
    status?: string | undefined;

    /** Filter by content type. */
    content_type?: string | undefined;

    /** Filter by community. */
    community_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by priority. */
    is_high_priority?: boolean | undefined;
  };
}
