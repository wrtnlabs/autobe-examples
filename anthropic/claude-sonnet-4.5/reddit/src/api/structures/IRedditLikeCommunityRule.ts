import { tags } from "typia";

/**
 * Community rule definition.
 *
 * Represents a community-specific rule created by moderators.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditLikeCommunityRule = {
  /** Unique rule identifier. */
  id: string & tags.Format<"uuid">;

  /** Community this rule belongs to. */
  community_id: string & tags.Format<"uuid">;

  /** Rule title. */
  title: string;

  /** Detailed rule explanation. */
  description?: string | undefined;

  /** Rule type: 'required', 'prohibited', or 'etiquette'. */
  rule_type: string;

  /** Display order (1-15). */
  display_order: number & tags.Type<"int32">;

  /** Rule creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRedditLikeCommunityRule {
  /** Community rule creation request. */
  export type ICreate = {
    /** Rule title. */
    title: string & tags.MinLength<3> & tags.MaxLength<100>;

    /** Optional detailed explanation. */
    description?: (string & tags.MaxLength<500>) | undefined;

    /** Rule type: 'required', 'prohibited', or 'etiquette'. */
    rule_type: string;

    /** Display order. */
    display_order: number &
      tags.Type<"int32"> &
      tags.Minimum<1> &
      tags.Maximum<15>;
  };

  /**
   * Community rule update request.
   *
   * All fields optional for partial updates.
   */
  export type IUpdate = {
    /** Updated rule title. */
    title?: (string & tags.MinLength<3> & tags.MaxLength<100>) | undefined;

    /** Updated description. */
    description?: (string & tags.MaxLength<500>) | undefined;

    /** Updated rule type. */
    rule_type?: string | undefined;

    /** Updated display order. */
    display_order?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<15>)
      | undefined;
  };
}
