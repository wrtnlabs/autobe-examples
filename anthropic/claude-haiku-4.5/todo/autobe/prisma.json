{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"todo_app_system_settings","description":"System configuration and application settings that control system behavior and initialization. This table stores key-value configuration pairs that enable system customization, feature flags, and operational parameters. Settings are typically set during system initialization and modified only by administrators through configuration interfaces. These settings persist across application restarts and sessions, providing consistent system behavior.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"setting_key","type":"string","description":"Unique configuration key identifier such as 'max_todos_per_user', 'session_timeout_minutes', 'app_version', 'maintenance_mode_enabled', or 'feature_flag_offline_sync'. This key uniquely identifies each configuration setting.","nullable":false},{"name":"setting_value","type":"string","description":"Configuration value as string, allowing flexible storage of various data types (numbers, booleans, JSON objects stored as strings). Examples: '1000', 'true', '30', '{\"enabled\": true}'. Interpretation depends on setting_key context.","nullable":false},{"name":"setting_type","type":"string","description":"Data type of the setting value to guide interpretation: 'string', 'integer', 'boolean', 'json', 'float'. Helps applications parse setting values correctly without ambiguity.","nullable":false},{"name":"description","type":"string","description":"Human-readable description explaining the purpose and valid values of this setting. Examples: 'Maximum number of todos allowed per user account', 'Session timeout in minutes before automatic logout', 'Indicates if system is in maintenance mode'. Helps administrators understand settings.","nullable":true},{"name":"is_mutable","type":"boolean","description":"Whether this setting can be changed at runtime by administrators. True allows runtime modification; false indicates immutable settings that require system restart to change. Examples: app version is immutable, maintenance mode is mutable.","nullable":false},{"name":"is_encrypted","type":"boolean","description":"Whether the setting_value contains sensitive information requiring encryption at rest. True indicates the value should be encrypted; false allows plaintext storage. Examples: true for API keys, false for version numbers.","nullable":false},{"name":"modified_by_admin_id","type":"uuid","description":"UUID of the administrator who last modified this setting. Enables audit trail tracking of configuration changes. Required for compliance documentation of who changed system settings and when.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this configuration setting was first created in the system.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this configuration setting was last modified. Tracks the most recent change to the setting value or metadata.","nullable":false}],"uniqueIndexes":[{"fieldNames":["setting_key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]},{"fieldNames":["is_mutable"]},{"fieldNames":["is_encrypted"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"todo_app_error_logs","description":"System error and exception logging table capturing all error events, failures, and exceptional conditions that occur during application operation. This table records comprehensive error details including error codes, messages, stack traces, affected resources, user context, and system state at time of error. Error logs are essential for debugging, monitoring system health, diagnosing issues, and identifying patterns of recurring problems. Logs are retained for analysis and compliance purposes according to data retention policies.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"error_code","type":"string","description":"Unique error identifier following format TODOAPP-XXXX where XX represents error category (AUTH, VAL, OP, SYS, REC, EDGE) and XX is sequence number. Examples: TODOAPP-VAL-001, TODOAPP-OP-005, TODOAPP-SYS-003. Used for tracking, monitoring, and support reference.","nullable":false},{"name":"error_type","type":"string","description":"Classification of error type: 'validation', 'authentication', 'authorization', 'database', 'network', 'server', 'storage', 'concurrency', 'data_integrity', 'system'. Enables filtering and analysis of specific error categories.","nullable":false},{"name":"severity_level","type":"string","description":"Error severity classification: 'critical' (system cannot function), 'high' (operation failed, user action required), 'medium' (operation partially affected, retry possible), 'low' (minor issue, informational). Guides response priority and escalation.","nullable":false},{"name":"error_message","type":"string","description":"User-friendly error message displayed to end users, non-technical and actionable. Examples: 'Unable to create todo. Please try again.', 'Title cannot be empty. Please enter a title.', 'Connection lost. Check your internet and refresh.' Maximum 500 characters.","nullable":false},{"name":"technical_details","type":"string","description":"Technical error details for debugging: exception names, stack traces, SQL queries (sanitized), API responses, database errors. Used by developers and system administrators for troubleshooting but never shown to users. Stored as JSON for structured analysis.","nullable":true},{"name":"operation_type","type":"string","description":"Type of operation that triggered the error: 'create_todo', 'read_todos', 'update_todo', 'delete_todo', 'login', 'register', 'logout', 'database_query', 'file_write', 'network_request'. Identifies which feature/operation failed.","nullable":true},{"name":"resource_id","type":"uuid","description":"UUID of the specific resource involved in the error (todo ID, user ID, etc.) if applicable. Enables tracing error to specific record. Null if error is system-level without specific resource.","nullable":true},{"name":"resource_type","type":"string","description":"Type of resource involved in error: 'todo', 'user', 'session', 'file', 'database', 'network', 'storage'. Identifies what resource caused or was affected by the error. MUST be provided if resource_id is not null.","nullable":true},{"name":"user_context","type":"uuid","description":"UUID of the user associated with the error if applicable. Stored as user ID for association with todo_app_authenticateduser. Null for system-level errors. Used to track error frequency per user and user-specific issue patterns.","nullable":true},{"name":"request_path","type":"string","description":"HTTP request path or API endpoint where error occurred. Examples: '/api/todos', '/api/todos/123', '/auth/login'. Enables tracking which endpoints have error issues.","nullable":true},{"name":"http_status_code","type":"int","description":"HTTP response status code associated with error: 400 (bad request), 401 (unauthorized), 403 (forbidden), 404 (not found), 429 (too many requests), 500 (server error), 503 (service unavailable). Null if not HTTP-based error.","nullable":true},{"name":"is_resolved","type":"boolean","description":"Whether this error has been investigated, understood, and resolved (patched). True indicates fix deployed and error should not recur; false indicates active issue requiring attention. Used to track outstanding problems.","nullable":false},{"name":"resolved_by_admin_id","type":"uuid","description":"UUID of the administrator who resolved/investigated this error. Enables audit trail tracking of error resolution. Null if error not yet resolved or resolved by automated system.","nullable":true},{"name":"resolution_notes","type":"string","description":"Administrator notes documenting the investigation, root cause analysis, and fix applied for resolved errors. Examples: 'Caused by database connection timeout. Improved connection retry logic. Deploy to production May 15.', 'User entered invalid email format. Improved validation message clarity.'","nullable":true},{"name":"resolved_verification_at","type":"datetime","description":"Timestamp when error resolution was verified/confirmed. Indicates when fix validation was completed. Null if error not yet resolved.","nullable":true},{"name":"retention_expires_at","type":"datetime","description":"Timestamp indicating when this error log should be purged according to retention policy. Enables automatic cleanup of old error logs. Set to current_time + retention_period at creation.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the error was first recorded in the system. Essential for error trend analysis, time-based filtering, and retention policy enforcement.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["error_code"]},{"fieldNames":["created_at","severity_level"]},{"fieldNames":["created_at","error_type"]},{"fieldNames":["severity_level","is_resolved","created_at"]},{"fieldNames":["retention_expires_at"]}],"ginIndexes":[{"fieldName":"error_message"},{"fieldName":"technical_details"},{"fieldName":"resolution_notes"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"todo_app_guestuser","description":"Guest user representation for unauthenticated session tracking. Guests are temporary visitors to the application without authentication who can access public pages (registration, login). This entity tracks guest session information for the duration of their visit without requiring persistent credential storage. Guest sessions have defined expiration times and are cleaned up after inactivity.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"session_id","type":"string","nullable":false,"description":"Unique session identifier for tracking guest session across requests. Must be cryptographically random and unique."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address of the guest user for basic tracking and security purposes (optional). Used to detect suspicious access patterns."},{"name":"user_agent","type":"string","nullable":true,"description":"Browser user agent string identifying the guest's browser and device type. Used for device detection and bot prevention."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when guest session was created, recorded in UTC timezone. Marks the beginning of guest access."},{"name":"last_activity_at","type":"datetime","nullable":false,"description":"Timestamp of last guest activity, used to track session idle time for timeout management. Updated on each request."},{"name":"expired_at","type":"datetime","nullable":true,"description":"Timestamp when guest session expires, allowing cleanup of stale sessions. Set to 24 hours after creation or last activity."}],"uniqueIndexes":[{"fieldNames":["session_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["last_activity_at"]},{"fieldNames":["expired_at"]}],"ginIndexes":[]},{"name":"todo_app_authenticateduser","description":"Authenticated user account representing registered users who have successfully logged in and verified their email. These are the primary user personas managing personal todo lists. Each authenticated user has email and password-based credentials with full access to CRUD operations on their own todos, while being restricted from accessing other users' data. Users can maintain todo ownership and data isolation enforced through database relationships.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"User email address used for authentication and identification. Must be unique across the system, following RFC 5321 standard format. Used as the primary login identifier."},{"name":"password_hash","type":"string","nullable":false,"description":"Securely hashed password using bcrypt or Argon2 algorithm with unique salt (minimum 10 rounds for bcrypt). Never stored or transmitted in plaintext. Minimum 60 characters to ensure valid hash format."},{"name":"first_name","type":"string","nullable":true,"description":"User's first name for profile display and personalization (optional). Not required for account functionality."},{"name":"last_name","type":"string","nullable":true,"description":"User's last name for profile display and personalization (optional). Not required for account functionality."},{"name":"status","type":"string","nullable":false,"description":"User account status: 'active' for normal operation allowing login and all operations, 'inactive' for disabled accounts preventing login, 'locked' for temporarily locked accounts due to multiple failed login attempts."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Boolean flag indicating whether user email address has been verified through confirmation link. Defaults to false at registration. Users cannot fully activate account until this is true."},{"name":"email_verified_at","type":"datetime","nullable":true,"description":"Timestamp when user completed email verification process, enabling full account functionality. Null until verification is completed. Used for compliance audit trails."},{"name":"last_login_at","type":"datetime","nullable":true,"description":"Timestamp of user's most recent successful login for activity tracking and security monitoring. Null if user has never successfully logged in. Updated on each successful authentication."},{"name":"password_changed_at","type":"datetime","nullable":true,"description":"Timestamp of last password change for security audit trail and password expiration policies. Null if password never changed since registration. Updated whenever user changes password."},{"name":"failed_login_attempts","type":"int","nullable":false,"description":"Count of consecutive failed login attempts. Reset to zero on successful login. Used to trigger account lockout at 5 attempts within 15 minutes."},{"name":"locked_until","type":"datetime","nullable":true,"description":"Timestamp until which the account is locked due to multiple failed login attempts. Account unlocks automatically after this time. Null if account is not currently locked."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when user account was created during registration process, recorded in UTC timezone. Immutable record of account creation time."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last account modification (password change, profile update, status change), automatically updated on changes. Used to track most recent modification."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when user requested account deletion (soft delete), supporting 30-day recovery period before permanent removal. Null for active accounts. Users can recover account within 30 days of deletion."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["last_login_at"]},{"fieldNames":["locked_until"]},{"fieldNames":["deleted_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["email_verified","created_at"]}],"ginIndexes":[]},{"name":"todo_app_administrator","description":"Administrator user account representing system operators with elevated privileges for system management, monitoring, and administrative functions. Administrators have access to system status pages, logs, user management capabilities, and configuration settings. Unlike authenticated users, administrators are designated by admin_level field and can access system-wide information. Administrators also retain full todo management capabilities for their personal todos while being subject to same authorization constraints for other users' todos.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Administrator email address for authentication and identification. Must be unique across the system, following RFC 5321 standard format."},{"name":"password_hash","type":"string","nullable":false,"description":"Securely hashed password using bcrypt or Argon2 algorithm with unique salt (minimum 10 rounds for bcrypt). Never stored or transmitted in plaintext. Minimum 60 characters to ensure valid hash format."},{"name":"first_name","type":"string","nullable":true,"description":"Administrator's first name for identification and communication. Optional field for display purposes."},{"name":"last_name","type":"string","nullable":true,"description":"Administrator's last name for identification and communication. Optional field for display purposes."},{"name":"admin_level","type":"int","nullable":false,"description":"Integer 1-5 indicating scope of administrative privileges. Level 5 represents full system access with all administrative capabilities. Level 1 represents minimal admin functions. Determines which admin endpoints and functions are accessible."},{"name":"status","type":"string","nullable":false,"description":"Administrator account status: 'active' for normal operation, 'inactive' for disabled administrator accounts, 'suspended' for temporarily suspended admin access. Inactive/suspended administrators cannot access admin endpoints."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Boolean flag indicating whether administrator email address has been verified through confirmation link. Defaults to false. Admin cannot access system until verified."},{"name":"email_verified_at","type":"datetime","nullable":true,"description":"Timestamp when administrator completed email verification. Null until verification is completed. Required for admin activation."},{"name":"last_login_at","type":"datetime","nullable":true,"description":"Timestamp of administrator's most recent successful login for activity tracking and security audit. Null if never logged in. Updated on each successful authentication."},{"name":"password_changed_at","type":"datetime","nullable":true,"description":"Timestamp of last password change for security audit and compliance with password rotation policies. Null if password never changed. Updated whenever administrator changes password."},{"name":"failed_login_attempts","type":"int","nullable":false,"description":"Count of consecutive failed login attempts. Reset on successful login. Triggers account lockout at 5 attempts within 15 minutes."},{"name":"locked_until","type":"datetime","nullable":true,"description":"Timestamp until which administrator account is locked due to failed login attempts. Account unlocks automatically after this time. Null if account not currently locked."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when administrator account was created, recorded in UTC timezone. Immutable record of account creation."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last administrator account modification, automatically updated on changes. Used to track most recent modification."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when administrator account was deleted (soft delete), supporting recovery period before permanent removal. Null for active accounts. Administrators can be recovered within recovery period."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["email_verified"]},{"fieldNames":["last_login_at"]},{"fieldNames":["locked_until"]},{"fieldNames":["deleted_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["admin_level","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-todos.prisma","namespace":"Todos","models":[{"name":"todo_app_todos","description":"Primary todo entity representing individual task items. Core business table for the Todo List Application where users create, read, update, and delete their personal todos. Each todo is independent, user-owned, and supports full CRUD operations. Contains essential todo properties: unique identifier, title/description, completion status, and lifecycle timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"title","type":"string","description":"Todo title or short description of the task. Required field containing 1-255 characters. Stores the user's task description exactly as entered.","nullable":false},{"name":"description","type":"string","description":"Optional detailed description or notes about the todo. May be empty string. Maximum 2000 characters.","nullable":true},{"name":"is_completed","type":"boolean","description":"Completion status of the todo. True indicates completed task, false indicates incomplete task. Defaults to false when todo is created.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the todo was created in UTC timezone. Immutable after creation. Automatically set to current time on todo creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the todo was last modified in UTC timezone. Automatically updated whenever any todo property changes. Initially equals created_at.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp indicating soft deletion. Null for active todos. Set to current time when user deletes a todo. Enables recovery within 30-day window before permanent deletion.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]},{"fieldNames":["deleted_at"]},{"fieldNames":["is_completed","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}]},{"name":"todo_app_todo_status_history","description":"Supporting table tracking status change history for todos. Records each transition between incomplete and completed states with timestamps. Enables audit trail capabilities and historical analysis of todo state changes. Subsidiary entity managed through parent todo operations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"todo_app_todo_id","type":"uuid","description":"Reference to the parent todo's {@link todo_app_todos.id}. Associates this status change history record with the specific todo.","relation":{"name":"todo","targetModel":"todo_app_todos"},"unique":false,"nullable":false}],"plainFields":[{"name":"previous_status","type":"boolean","description":"The completion status before this change. True if was completed, false if was incomplete.","nullable":false},{"name":"new_status","type":"boolean","description":"The completion status after this change. True if marked complete, false if marked incomplete.","nullable":false},{"name":"changed_at","type":"datetime","description":"Timestamp when the status change occurred in UTC timezone. Immutable record of when transition happened.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["changed_at"]},{"fieldNames":["todo_app_todo_id","changed_at"]}],"ginIndexes":[]},{"name":"todo_app_todo_snapshots","description":"Snapshot table capturing point-in-time states of todos for audit trail and historical tracking. Records complete todo state (title, description, status) at specific moments. Implements snapshot pattern for version control and forensic capability. Each snapshot is immutable and represents the exact state at creation time.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"todo_app_todo_id","type":"uuid","description":"Reference to the original todo's {@link todo_app_todos.id}. Associates this snapshot with the todo it captures.","relation":{"name":"todo","targetModel":"todo_app_todos"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Snapshot of todo title at time of capture. Denormalized copy of title from parent todo for historical accuracy.","nullable":false},{"name":"description","type":"string","description":"Snapshot of todo description at time of capture. Denormalized copy for historical tracking of changes to description.","nullable":true},{"name":"is_completed","type":"boolean","description":"Snapshot of completion status at time of capture. Records whether todo was completed or incomplete at snapshot moment.","nullable":false},{"name":"snapshot_created_at","type":"datetime","description":"Timestamp when this snapshot was created in UTC timezone. Represents the moment-in-time being captured by this snapshot record.","nullable":false},{"name":"original_created_at","type":"datetime","description":"Original creation timestamp from parent todo at snapshot moment. Preserved for historical reference.","nullable":false},{"name":"original_updated_at","type":"datetime","description":"Last update timestamp from parent todo at snapshot moment. Shows when parent was last modified.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["snapshot_created_at"]},{"fieldNames":["todo_app_todo_id","snapshot_created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}]}]},{"filename":"schema-04-audit.prisma","namespace":"Audit","models":[{"name":"todo_app_security_events","description":"Comprehensive security event log tracking authentication failures, unauthorized access attempts, permission violations, and suspicious system activities. Used for real-time security monitoring, threat detection, and regulatory compliance reporting. Each security event represents a potential security incident requiring monitoring or investigation. MODIFIED: Added explicit user_id UUID foreign key (nullable for system-level events), added user_role field for context, improved timestamp and event tracking for forensic capability.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Reference to the security event actor's {@link todo_app_authenticateduser.id}. Nullable for system-level events that occur without user context (e.g., pre-authentication security checks).","relation":{"name":"user","targetModel":"todo_app_authenticateduser"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Classification of the security event (e.g., 'AUTHENTICATION_FAILURE', 'UNAUTHORIZED_ACCESS', 'PERMISSION_VIOLATION', 'RATE_LIMIT_EXCEEDED', 'SUSPICIOUS_ACTIVITY', 'DATA_INTEGRITY_VIOLATION'). Enables filtering and analysis of specific threat categories.","nullable":false},{"name":"severity_level","type":"string","description":"Severity classification of the event ('CRITICAL', 'HIGH', 'MEDIUM', 'LOW'). Used to prioritize security incident response and determine escalation requirements.","nullable":false},{"name":"user_email","type":"string","description":"Email address associated with the security event for display and reporting purposes. Preserved separately from user_id to support forensics even if user account is deleted.","nullable":true},{"name":"event_source","type":"string","description":"Origin of the security event (e.g., 'LOGIN_ENDPOINT', 'TODO_API', 'ADMIN_PANEL', 'UNKNOWN'). Identifies which system component generated the security alert.","nullable":false},{"name":"event_description","type":"string","description":"Detailed description of the security event explaining what triggered the alert. Examples: 'Failed login attempt with invalid credentials', 'User attempted to access unauthorized resource', 'Rate limit exceeded for API calls'.","nullable":false},{"name":"ip_address","type":"string","description":"IP address from which the security event originated if available. Used for geographic analysis and detection of coordinated attacks from specific sources.","nullable":true},{"name":"resource_involved","type":"string","description":"Identifier of the resource or todo involved in the security event if applicable (e.g., todo ID, API endpoint). Null for authentication-level events.","nullable":true},{"name":"action_taken","type":"string","description":"System response to the security event (e.g., 'ACCOUNT_LOCKED', 'REQUEST_BLOCKED', 'THROTTLED', 'LOGGED_ONLY'). Documents what preventive action was executed.","nullable":true},{"name":"metadata","type":"string","description":"JSON-encoded additional context about the security event (e.g., failed login attempt count, time since last successful login, geographic information). Stored as JSON string for flexible schema.","nullable":true},{"name":"created_at","type":"datetime","description":"ISO 8601 UTC timestamp when the security event occurred and was recorded. Used for chronological analysis and correlation with other events.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["event_type","created_at"]},{"fieldNames":["severity_level","created_at"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["event_source"]},{"fieldNames":["severity_level","user_id","created_at"]},{"fieldNames":["event_type","severity_level","created_at"]}],"ginIndexes":[{"fieldName":"event_description"}]},{"name":"todo_app_audit_logs","description":"Complete audit trail for all todo operations (create, read, update, delete) and administrative actions. Provides comprehensive compliance documentation for GDPR, CCPA, and other regulatory requirements. Every operation on todos is recorded with complete context for forensic investigation and compliance reporting. MODIFIED: Added explicit actor_id UUID foreign key with actor_type discrimination field, improved entity relationship handling with constraint support.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_id","type":"uuid","description":"Reference to the actor performing the action. For user actions, references {@link todo_app_authenticateduser.id}. For admin actions, references {@link todo_app_administrator.id}. For system actions, may be null or system identifier.","relation":{"name":"actor","targetModel":"todo_app_authenticateduser"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of action performed ('CREATE', 'READ', 'UPDATE', 'DELETE', 'COMPLETE_TOGGLE', 'EXPORT', 'ARCHIVE'). Categorizes what operation was executed on a todo.","nullable":false},{"name":"entity_type","type":"string","description":"Type of entity affected by the audit action (e.g., 'TODO', 'USER_ACCOUNT', 'ADMIN_SETTING', 'SYSTEM_SETTING'). Identifies what object the action targeted.","nullable":false},{"name":"entity_id","type":"string","description":"Unique identifier of the entity being audited (e.g., todo ID, user ID, setting ID). Links the audit record to the specific object involved. Combined with entity_type for polymorphic relationship validation.","nullable":false},{"name":"actor_type","type":"string","description":"Type of actor performing the action ('authenticatedUser', 'administrator', 'system'). Enables proper interpretation of actor_id and supports role-based audit analysis.","nullable":false},{"name":"old_value","type":"string","description":"Previous value before the action (for UPDATE operations). Stored as JSON or string representation for tracking what changed. Null for CREATE, READ, DELETE operations.","nullable":true},{"name":"new_value","type":"string","description":"New value after the action (for UPDATE operations). Stored as JSON or string representation showing what the entity became. Null for READ and DELETE operations.","nullable":true},{"name":"operation_status","type":"string","description":"Success status of the operation ('SUCCESS', 'FAILURE', 'PARTIAL_SUCCESS'). Indicates whether the action completed as intended or encountered errors.","nullable":false},{"name":"failure_reason","type":"string","description":"Description of why operation failed if status is FAILURE or PARTIAL_SUCCESS. Null for successful operations. Documents the reason for operation failure.","nullable":true},{"name":"ip_address","type":"string","description":"IP address from which the action was initiated. Used for geographic and security analysis of operation origins.","nullable":true},{"name":"user_agent","type":"string","description":"HTTP User-Agent string identifying the client/browser used for the action. Useful for detecting automated tools or unusual client types.","nullable":true},{"name":"session_id","type":"string","description":"Session identifier associated with the action if available. Helps correlate multiple actions from the same session or suspicious session patterns.","nullable":true},{"name":"duration_ms","type":"int","description":"Time in milliseconds for the operation to complete. Used for performance analysis and detecting anomalously slow operations.","nullable":true},{"name":"metadata","type":"string","description":"JSON-encoded additional context (e.g., browser details, device fingerprint, request parameters). Provides flexibility for capturing operation-specific details.","nullable":true},{"name":"created_at","type":"datetime","description":"ISO 8601 UTC timestamp when the audit log entry was created. Represents when the audited action occurred, used for chronological analysis.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["entity_type","entity_id","created_at"]},{"fieldNames":["actor_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["operation_status","created_at"]},{"fieldNames":["actor_type","actor_id","created_at"]},{"fieldNames":["operation_status","actor_type","created_at"]}],"ginIndexes":[{"fieldName":"failure_reason"}]},{"name":"todo_app_failed_login_attempts","description":"Dedicated tracking of failed login attempts for security monitoring and account protection. Used to detect brute force attacks, implement account lockout mechanisms, and investigate unauthorized access attempts. Critical for both real-time threat detection and forensic security analysis. MODIFIED: Added explicit user_id UUID foreign key for proper referential integrity, maintains email history for forensics.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Reference to the user account's {@link todo_app_authenticateduser.id} if login attempt matched an existing account. Null if email address does not exist in system, preserving forensics for non-existent account attacks.","relation":{"name":"user","targetModel":"todo_app_authenticateduser"},"unique":false,"nullable":true}],"plainFields":[{"name":"email_address","type":"string","description":"Email address used in the failed login attempt. May be invalid or non-existent, but captures what the attacker tried to use. Preserved for forensic analysis.","nullable":false},{"name":"failure_reason","type":"string","description":"Reason for login failure ('INVALID_EMAIL', 'INVALID_PASSWORD', 'ACCOUNT_LOCKED', 'ACCOUNT_DISABLED', 'INVALID_MFA'). Categorizes the type of authentication failure.","nullable":false},{"name":"ip_address","type":"string","description":"IP address from which the login attempt originated. Used for geographic analysis and detection of coordinated brute force attacks from specific sources.","nullable":true},{"name":"user_agent","type":"string","description":"HTTP User-Agent string from the login attempt. Helps identify automated attacks and unusual client types.","nullable":true},{"name":"attempt_number_in_window","type":"int","description":"Sequential attempt number within the current time window (e.g., attempt 1 of 5 in last 15 minutes). Used to implement and track rate limiting.","nullable":false},{"name":"lockout_status","type":"string","description":"Current account lockout status ('LOCKED', 'LOCKED_WITH_EMAIL_NOTIFICATION', 'LOCKOUT_TIMER_ACTIVE', null for not locked). Documents any protective actions taken in response to failed attempts.","nullable":true},{"name":"lockout_expires_at","type":"datetime","description":"ISO 8601 UTC timestamp when the account lockout expires and login can be retried. Null if account is not currently locked.","nullable":true},{"name":"metadata","type":"string","description":"JSON-encoded additional context (e.g., geolocation, device fingerprint, referrer, request path). Provides forensic details for security investigation.","nullable":true},{"name":"created_at","type":"datetime","description":"ISO 8601 UTC timestamp when the failed login attempt occurred. Used for chronological analysis and rate limiting calculations.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["email_address","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["failure_reason","created_at"]},{"fieldNames":["lockout_status"]},{"fieldNames":["ip_address","email_address","created_at"]}],"ginIndexes":[]}]}]}