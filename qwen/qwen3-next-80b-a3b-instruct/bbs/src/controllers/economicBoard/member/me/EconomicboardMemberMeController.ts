import { Controller } from "@nestjs/common";
import { TypedRoute } from "@nestia/core";
import typia from "typia";
import { getEconomicBoardMemberMe } from "../../../../providers/getEconomicBoardMemberMe";
import { MemberAuth } from "../../../../decorators/MemberAuth";
import { MemberPayload } from "../../../../decorators/payload/MemberPayload";

import { IEconomicBoardMember } from "../../../../api/structures/IEconomicBoardMember";

@Controller("/economicBoard/member/me")
export class EconomicboardMemberMeController {
  /**
   * Retrieve own member profile.
   *
   * This operation retrieves the complete profile information of the currently
   * authenticated member from the economic discussion board system. The
   * operation queries the economic_board_member table to obtain details
   * including email address, account creation timestamp, last login date, and
   * active status. The user must be authenticated as the member whose profile
   * is being retrieved. This endpoint uses the '/me' convention, which enforces
   * that the user can only retrieve their own profile, not others'.
   *
   * The response does not include sensitive data like password_hash or
   * auth_jwt_id, ensuring adherences to security best practices. For privacy,
   * the email address is returned in its full form, but system tokens and
   * identifiers are omitted.
   *
   * Error handling ensures that unauthorized access attempts return HTTP 403
   * Forbidden. This operation is essential for the member's self-service
   * profile management experience.
   *
   * @param connection
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @MemberAuth()
    member: MemberPayload,
  ): Promise<IEconomicBoardMember> {
    try {
      return await getEconomicBoardMemberMe({
        member,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
