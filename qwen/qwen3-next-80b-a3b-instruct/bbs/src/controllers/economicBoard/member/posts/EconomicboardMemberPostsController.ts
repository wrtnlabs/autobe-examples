import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { postEconomicBoardMemberPosts } from "../../../../providers/postEconomicBoardMemberPosts";
import { MemberAuth } from "../../../../decorators/MemberAuth";
import { MemberPayload } from "../../../../decorators/payload/MemberPayload";
import { putEconomicBoardMemberPostsPostId } from "../../../../providers/putEconomicBoardMemberPostsPostId";

import { IEconomicBoardPost } from "../../../../api/structures/IEconomicBoardPost";

@Controller("/economicBoard/member/posts")
export class EconomicboardMemberPostsController {
  /**
   * Create a new economic/political discussion post.
   *
   * This operation allows authenticated members to submit a new economic or
   * political discussion post. The system automatically assigns this post to
   * 'pending' moderation status, ensuring it remains invisible to all users
   * until approved by an administrator, following the platform's civil
   * discourse principles.
   *
   * When a member submits a new post, the system requires a specific topic from
   * the seven predefined categories: 'Inflation', 'Tax Policy', 'Elections',
   * 'Global Trade', 'Monetary Policy', 'Labor Markets', or 'Fiscal Policy'. The
   * post must include a subject between 5 and 120 characters and content
   * between 10 and 5,000 characters. The system automatically assigns the
   * current UTC timestamp as the creation date and sets the moderation status
   * to 'pending'.
   *
   * The request body includes the topic identifier and content, with
   * authentication handled through a JWT token. The system uses the
   * authenticated member's internal identifier to create a system-generated
   * author_hash that ensures anonymization of the author in all public-facing
   * outputs, with no access to personal identifiers by the public. No admin_id
   * or moderation_reason fields are populated during submission - these are
   * exclusively managed during subsequent admin moderation actions.
   *
   * Posts that fail validation (empty content, wrong topic format, exceeding
   * character limits) are rejected immediately with appropriate error messages.
   * The post is preserved in the database with complete metadata for audit
   * purposes, but direct manipulation of moderation status is performed through
   * separate, admin-only operations.
   *
   * All responses are consistent with the anonymous posting model of the
   * platform - no identifying information about the author is exposed to other
   * users, and all public statistics reflect anonymous contributions only.
   *
   * @param connection
   * @param body Creation data for a new discussion post including topic
   *   reference and content
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @MemberAuth()
    member: MemberPayload,
    @TypedBody()
    body: IEconomicBoardPost.ICreate,
  ): Promise<IEconomicBoardPost> {
    try {
      return await postEconomicBoardMemberPosts({
        member,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Update an existing economic board post.
   *
   * This operation allows authorized users to modify the content or subject of
   * an existing economic board post.
   *
   * The post must be in either 'published' or 'rejected' status to be eligible
   * for modification. Posts with 'deleted' status cannot be updated, and
   * attempts to update them will result in a 404 Not Found response, as the
   * record is permanently removed from active system state.
   *
   * For members, updates are only permitted within 24 hours of the post's
   * original creation timestamp. If the 24-hour window has expired, the update
   * request will be denied with a 403 Forbidden response, regardless of the
   * content changes being requested. This restriction enforces the system's
   * business rule of limiting post editing to a brief period after submission.
   *
   * Administrators have broader permissions and can update any post's content,
   * subject, or moderation status at any time. When an admin updates a post's
   * status (e.g., from 'rejected' to 'published'), the system records the admin
   * ID and any moderation_reason provided in the request. The moderation_reason
   * field can be used to document the rationale for status changes.
   *
   * The system automatically sets the updated_at timestamp to the current UTC
   * time and sets the edited flag to true when content or subject fields are
   * modified. If the original poster's user ID is provided in the JWT token,
   * the system performs ownership verification against the author_hash or
   * member association before allowing the update.
   *
   * This operation is critical for maintaining content integrity while
   * respecting both user edit windows and administrative authority. It supports
   * the platform's core principle of structured, time-limited editing balanced
   * with authoritative moderation.
   *
   * @param connection
   * @param postId Unique identifier of the target economic board post to
   *   update. Must match an existing record in the economic_board_posts table.
   *   The system validates that the post exists and is not in 'deleted' status
   *   before allowing modification.
   * @param body Update details for the economic board post including content,
   *   subject, and optional moderation state changes.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put(":postId")
  public async update(
    @MemberAuth()
    member: MemberPayload,
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IEconomicBoardPost.IUpdate,
  ): Promise<IEconomicBoardPost> {
    try {
      return await putEconomicBoardMemberPostsPostId({
        member,
        postId,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
