import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteEconomicBoardAdminPostsPostIdRepliesReplyId } from "../../../../../providers/deleteEconomicBoardAdminPostsPostIdRepliesReplyId";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

@Controller("/economicBoard/admin/posts/:postId/replies/:replyId")
export class EconomicboardAdminPostsRepliesController {
  /**
   * Permanently delete a specific reply to a post.
   *
   * This operation permanently removes a specific reply to a post from the
   * system. This is a hard delete operation, meaning the reply data is
   * completely removed from the database with no possibility of recovery. The
   * economic_board_replies table schema lacks any soft-delete columns (such as
   * deleted_at or is_deleted), so removal is final and irreversible.
   *
   * The deletion is subject to system authorization rules: only administrators
   * are permitted to initiate this deletion. The system maintains no mechanism
   * for users to delete replies they have posted. This design ensures that once
   * a reply (which is automatically published without moderation) appears on
   * the forum, it becomes part of the permanent public record unless removed by
   * an administrator for policy violations.
   *
   * When a reply is deleted, the system automatically decrements the
   * reply_count field in the corresponding parent economic_board_posts record
   * to maintain data integrity. The deletion process removes all associated
   * metadata including the original content, timestamps, and references to the
   * guest author.
   *
   * This operation is designed for administrative moderation only and cannot be
   * initiated by guests or registered members. It represents the ultimate
   * enforcement mechanism for removing content that violates community
   * standards after publication. There is no notification sent to the author
   * whose reply is deleted, maintaining the principle of anonymous
   * participation.
   *
   * The system does not archive or log the deleted content for later recovery;
   * complete removal is the intended behavior to prevent abuse and preserve
   * system integrity.
   *
   * @param connection
   * @param postId Unique identifier of the parent post to which the reply
   *   belongs
   * @param replyId Unique identifier of the reply to be deleted
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
    @TypedParam("replyId")
    replyId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteEconomicBoardAdminPostsPostIdRepliesReplyId({
        admin,
        postId,
        replyId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
