{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_platform_communities","description":"Core entity representing each community on the platform. Contains essential metadata for community identification and discovery. This is a primary entity as users directly interact with communities by subscribing, viewing content, and participating.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","nullable":false,"description":"The unique, case-insensitive name identifier for the community (e.g., 'technology', 'gaming'). Must be unique across the platform and follow naming conventions (alphanumeric and hyphens only)."},{"name":"description","type":"string","nullable":true,"description":"A brief description of the community's purpose and rules, displayed to users."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp indicating when the community was created."},{"name":"is_public","type":"boolean","nullable":false,"description":"Flag indicating whether the community is publicly visible and joinable. True for public communities, false for restricted communities."},{"name":"nsfw","type":"boolean","nullable":false,"description":"Flag indicating whether the community contains Not Safe For Work content. Requires explicit user settings to view."},{"name":"post_review_mode","type":"boolean","nullable":false,"description":"Flag indicating whether all new posts in this community require moderator approval before being published."},{"name":"comment_review_mode","type":"boolean","nullable":false,"description":"Flag indicating whether all new comments in this community require moderator approval before being published."},{"name":"member_count","type":"int","nullable":false,"description":"The current number of users subscribed to this community. Updated on subscription/unsubscription."},{"name":"post_count","type":"int","nullable":false,"description":"The total number of posts created in this community. Updated on post creation."}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["is_public"]},{"fieldNames":["nsfw"]},{"fieldNames":["post_review_mode"]},{"fieldNames":["comment_review_mode"]},{"fieldNames":["member_count"]},{"fieldNames":["post_count"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_community_settings","description":"Configuration settings that customize the behavior and appearance of each community. These settings are specific to each community and govern moderation, visibility, and user experience. This is a subsidiary entity as it is always governed by and accessed through its parent community entity.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"The community this setting belongs to. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":true,"nullable":false}],"plainFields":[{"name":"title","type":"string","nullable":true,"description":"Custom display title for the community, which may differ from the public 'name'. Used for branding."},{"name":"banner_url","type":"uri","nullable":true,"description":"URL to the community's banner image, displayed prominently on the community page."},{"name":"icon_url","type":"uri","nullable":true,"description":"URL to the community's icon/logo, used as visual identifier in lists."},{"name":"rules","type":"string","nullable":true,"description":"Detailed rules and guidelines for the community, more comprehensive than the basic description."},{"name":"moderator_invite_only","type":"boolean","nullable":false,"description":"Flag indicating whether only admins can invite new moderators. If false, existing moderators can invite others."},{"name":"allow_self_post","type":"boolean","nullable":false,"description":"Flag indicating whether new members can immediately create posts upon joining, or if a waiting period is required."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp indicating when these settings were initially configured."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp indicating when these settings were last updated."}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[{"fieldName":"rules"},{"fieldName":"title"}]},{"name":"community_platform_platform_settings","description":"Global platform-wide configuration settings that govern behavior across all communities. These are system-level parameters set by administrators to ensure consistency and compliance with platform policies. This is a subsidiary entity as it is not directly interacted with by users but governs system-wide functions.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"max_community_members","type":"int","nullable":false,"description":"Maximum number of users allowed to subscribe to any single community. Helps manage server load and community focus."},{"name":"max_post_votes","type":"int","nullable":false,"description":"Maximum number of votes (upvotes and downvotes combined) that will be counted for any single post. Higher thresholds are capped to prevent karma inflation."},{"name":"max_comment_depth","type":"int","nullable":false,"description":"Maximum depth (nested levels) allowed for comment threads. Reduces performance overhead for deeply nested conversations."},{"name":"post_edit_window_minutes","type":"int","nullable":false,"description":"Number of minutes after posting that the original author can edit their post. Set to 15 minutes as per business rules."},{"name":"comment_edit_window_minutes","type":"int","nullable":false,"description":"Number of minutes after commenting that the original author can edit their comment. Set to 10 minutes as per business rules."},{"name":"max_posts_per_hour","type":"int","nullable":false,"description":"Maximum number of posts a user can create in any given hour. Prevents spam and bot behavior."},{"name":"max_comments_per_hour","type":"int","nullable":false,"description":"Maximum number of comments a user can create in any given hour. Prevents spam and bot behavior."},{"name":"max_reports_per_day","type":"int","nullable":false,"description":"Maximum number of reports a user can submit in a 24-hour period. Prevents report abuse."},{"name":"max_community_creation_daily","type":"int","nullable":false,"description":"Maximum number of communities a single user can create in a 24-hour period. Prevents community spam."},{"name":"image_upload_max_size_mb","type":"int","nullable":false,"description":"Maximum file size (in MB) allowed for image uploads. Aligns with external image hosting integration constraints."},{"name":"default_sort_algorithm","type":"string","nullable":false,"description":"Default post sorting algorithm to use for community feeds. Value must be one of: 'new', 'hot', 'top', 'controversial'."},{"name":"karma_decay_rate","type":"double","nullable":false,"description":"Daily rate at which karma points decay for inactive users (e.g., 0.01 means 1% per day). Used to encourage ongoing participation. Currently set to 0.0."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp indicating when this platform-wide setting was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp indicating when this platform-wide setting was last updated."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]},{"name":"community_platform_report_categories","description":"Enumeration of predefined categories for user-initiated content reports. This table defines the options users can select when reporting a post or comment. This is a subsidiary entity as it provides reference data for the reporting mechanism but is not a primary business entity that users manage directly.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","nullable":false,"description":"The internal, unique identifier for the report category (e.g., 'spam', 'harassment')."},{"name":"display_name","type":"string","nullable":false,"description":"The human-readable name displayed to users when selecting a report reason (e.g., 'Spam or advertisements')."},{"name":"description","type":"string","nullable":true,"description":"An optional detailed description explaining the types of content this category applies to."},{"name":"is_active","type":"boolean","nullable":false,"description":"Flag indicating whether this report category is currently active and available for users to select. Used to disable categories without deleting them."},{"name":"priority","type":"int","nullable":false,"description":"A ranking value to determine the order in which report categories are displayed to users in the UI (0=lowest, 999=highest)."}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active"]},{"fieldNames":["priority"]}],"ginIndexes":[{"fieldName":"display_name"},{"fieldName":"description"}]},{"name":"community_platform_banned_words","description":"List of prohibited words, phrases, and patterns that are filtered from user submissions (posts, comments) by automated moderation systems. This table defines terms that trigger automatic flagging or rejection based on AI moderation analysis. This is a subsidiary entity as it provides a lookup list for the moderation system and is not a primary business entity.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"word","type":"string","nullable":false,"description":"The exact word, phrase, or regex pattern to be flagged or blocked. Must be in lowercase for case-insensitive matching."},{"name":"type","type":"string","nullable":false,"description":"The category of prohibited content this word belongs to. Values: 'spam', 'harassment', 'nsfw', 'illegal', 'impersonation', 'other'."},{"name":"is_regex","type":"boolean","nullable":false,"description":"Flag indicating if the 'word' field contains a regular expression pattern, rather than a literal string to match."},{"name":"is_exact_match","type":"boolean","nullable":false,"description":"Flag indicating if the match should be for an exact word boundary (e.g., 'win' should not match 'winner')."},{"name":"action","type":"string","nullable":false,"description":"The automated action to take when this word is detected. Values: 'flag', 'block', 'warn'."},{"name":"description","type":"string","nullable":true,"description":"Explanation noting why this term was added and its intended target."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp indicating when this banned word was added to the system."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp indicating when this banned word was last modified."},{"name":"is_active","type":"boolean","nullable":false,"description":"Flag indicating whether this entry is currently enforced. Used to disable words without deleting them."}],"uniqueIndexes":[{"fieldNames":["word","type"],"unique":true}],"plainIndexes":[{"fieldNames":["type"]},{"fieldNames":["action"]},{"fieldNames":["is_active"]},{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[{"fieldName":"word"},{"fieldName":"description"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_guest","description":"Guest users who are not authenticated and have limited viewing privileges on the platform. Represents anonymous visitors before registration or login.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the guest session was initiated."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address of the guest user, useful for analytics and abuse detection."},{"name":"user_agent","type":"string","nullable":true,"description":"The browser/user agent string of the guest visitor, used for device and browser identification."},{"name":"last_active","type":"datetime","nullable":true,"description":"Timestamp of the last page view or interaction by this guest."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["ip_address"]},{"fieldNames":["last_active"]}],"ginIndexes":[]},{"name":"community_platform_member","description":"Authenticated members who have completed email verification and can participate in the community by posting, commenting, and voting. Represents the core user base of the platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address for authentication and notifications. Required for all members."},{"name":"username","type":"string","nullable":false,"description":"Display username that appears in posts and comments. Must be unique across the platform."},{"name":"password_hash","type":"string","nullable":false,"description":"BCrypt hashed password for authentication. Never stored in plaintext."},{"name":"is_verified","type":"boolean","nullable":false,"description":"Flag indicating whether email verification is complete. Initially false until verification link is clicked."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the member account was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the member account was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp. If null, account is active. If set, account is deactivated."},{"name":"karma","type":"int","nullable":false,"description":"Total karma score calculated from upvotes minus downvotes on all posts and comments. Minimum value is 0."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["is_verified"]},{"fieldNames":["deleted_at"]},{"fieldNames":["karma"]}],"ginIndexes":[]},{"name":"community_platform_moderator","description":"A member assigned to moderate one or more specific communities. Has administrative rights only within assigned communities. Represents the community-level governance layer.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"The member who is granted moderator privileges. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":true},{"name":"community_id","type":"uuid","description":"The community where this user serves as moderator. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"nullable":false,"unique":false}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when moderator privileges were assigned."},{"name":"notes","type":"string","nullable":true,"description":"Internal notes for administrators about this moderator assignment."}],"uniqueIndexes":[{"fieldNames":["member_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["community_id"]}],"ginIndexes":[]},{"name":"community_platform_admin","description":"Platform-wide administrators with full system access, including user management, content moderation across communities, and configuration of system-wide settings.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"The member who is granted admin privileges. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":true}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when admin privileges were granted."},{"name":"access_level","type":"string","nullable":false,"description":"The level of administrative access. Values: 'standard', 'super' (super admins can manage other admins)."},{"name":"notes","type":"string","nullable":true,"description":"Administrative notes about this admin's role and responsibilities."}],"uniqueIndexes":[{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["access_level"]}],"ginIndexes":[]},{"name":"community_platform_user_profiles","description":"Detailed profile information for members, including display name, avatar, bio, and join date. Used to separate identity data from authentication data for better security and flexibility.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Primary link to the member account that owns this profile. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":true}],"plainFields":[{"name":"display_name","type":"string","nullable":true,"description":"Custom display name shown instead of username in UI. Can be null, in which case username is used."},{"name":"bio","type":"string","nullable":true,"description":"Short biography or description of the user. Limited to 400 characters."},{"name":"avatar_url","type":"uri","nullable":true,"description":"URL to the user's profile avatar image, stored in Cloudinary or similar service."},{"name":"join_date","type":"datetime","nullable":false,"description":"Date when the user registered on the platform. Set at account creation and never changed."},{"name":"location","type":"string","nullable":true,"description":"Geographic location entered by user, useful for local community discovery."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["display_name"]},{"fieldNames":["join_date"]}],"ginIndexes":[{"fieldName":"bio"}]},{"name":"community_platform_user_sessions","description":"Active authentication sessions for members holding JWT tokens. Used for managing user login states and enforcing session expiration.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"The member associated with this session. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":false}],"plainFields":[{"name":"refresh_token_hash","type":"string","nullable":false,"description":"Hashed refresh token for validating session renewals. Never stored in plaintext."},{"name":"access_token_hash","type":"string","nullable":false,"description":"Hashed access token for validating short-lived sessions. Never stored in plaintext."},{"name":"ip_address","type":"string","nullable":false,"description":"The IP address from which the session was initiated."},{"name":"user_agent","type":"string","nullable":false,"description":"The browser user agent string when the session was created."},{"name":"session_start","type":"datetime","nullable":false,"description":"Timestamp when the session was created."},{"name":"session_expiry","type":"datetime","nullable":false,"description":"Timestamp when the session expires. Controls automatic logout."},{"name":"is_active","type":"boolean","nullable":false,"description":"Indicates if the session is currently active (true) or invalidated (false)."},{"name":"device_type","type":"string","nullable":true,"description":"Classification of device (web, ios, android, desktop) based on user-agent analysis."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id"]},{"fieldNames":["session_expiry"]},{"fieldNames":["is_active"]},{"fieldNames":["ip_address"]},{"fieldNames":["session_start"]}],"ginIndexes":[]},{"name":"community_platform_email_verifications","description":"Records email verification tokens used during user registration and re-verification processes. Ensures email ownership before granting posting privileges.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"The member requiring email verification. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":true}],"plainFields":[{"name":"token","type":"string","nullable":false,"description":"Unique, randomly generated verification token sent via email."},{"name":"token_hash","type":"string","nullable":false,"description":"Hashed version of the verification token for secure storage in database."},{"name":"expires_at","type":"datetime","nullable":false,"description":"Expiration timestamp of the verification token. Tokens are valid for 24 hours."},{"name":"sent_at","type":"datetime","nullable":false,"description":"Timestamp when the verification email was sent to the user."},{"name":"is_used","type":"boolean","nullable":false,"description":"Flag indicating if the token has been successfully used to verify the email."}],"uniqueIndexes":[{"fieldNames":["token_hash"],"unique":true},{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["expires_at"]},{"fieldNames":["is_used"]},{"fieldNames":["sent_at"]}],"ginIndexes":[]},{"name":"community_platform_password_resets","description":"Stores password reset tokens for users who have forgotten their passwords. Includes expiration and usage tracking to prevent brute force and replay attacks.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"The member requesting a password reset. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"nullable":false,"unique":true}],"plainFields":[{"name":"token","type":"string","nullable":false,"description":"Unique, randomly generated reset token sent via email."},{"name":"token_hash","type":"string","nullable":false,"description":"Hashed version of the reset token for secure storage in database."},{"name":"expires_at","type":"datetime","nullable":false,"description":"Expiration timestamp of the reset token. Tokens are valid for 15 minutes."},{"name":"requested_at","type":"datetime","nullable":false,"description":"Timestamp when the password reset request was initiated by the user."},{"name":"is_used","type":"boolean","nullable":false,"description":"Flag indicating if the reset token has been used to change the password."}],"uniqueIndexes":[{"fieldNames":["token_hash"],"unique":true},{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["expires_at"]},{"fieldNames":["is_used"]},{"fieldNames":["requested_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"community_platform_posts","description":"Core content entity representing user posts in communities. Stores the main content data including text, link, or image types, with metadata for ranking algorithms and lifecycle tracking. Relationships with post images, links, comments, votes, and snapshots ensure comprehensive content management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"The community this post belongs to. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"nullable":false,"unique":false},{"name":"author_id","type":"uuid","description":"The user who created this post. {@link community_platform_member.id}.","relation":{"name":"author","targetModel":"community_platform_member"},"nullable":false,"unique":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the post, limited to 300 characters. Must be present for all post types.","nullable":false},{"name":"content","type":"string","description":"The main body text of the post, limited to 10,000 characters. Used for text posts.","nullable":true},{"name":"post_type","type":"string","description":"The type of post: 'text', 'link', or 'image'. Determines which additional fields are relevant.","nullable":false},{"name":"vote_count","type":"int","description":"The total vote score calculated as upvotes minus downvotes for ranking purposes.","nullable":false},{"name":"comment_count","type":"int","description":"The total number of direct comments on this post.","nullable":false},{"name":"status","type":"string","description":"The moderation status: 'published', 'unreviewed', 'removed', or 'archived'. Determines visibility.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the post was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the post was last modified (e.g., edit, promotion).","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the post was soft-deleted. Null if still active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["status","created_at"]},{"fieldNames":["vote_count","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"community_platform_post_images","description":"Entity to store image metadata for posts. Associates uploaded image files with their parent posts, preserving file information for display and CDN serving. Normalized to avoid duplication of image data across posts.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"The post this image is associated with. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"nullable":false,"unique":true}],"plainFields":[{"name":"image_url","type":"uri","description":"The CDN URL where the image is hosted. Generated by external service (e.g., Cloudinary).","nullable":false},{"name":"file_name","type":"string","description":"The original filename as uploaded by the user.","nullable":false},{"name":"file_size","type":"int","description":"The size of the image file in bytes.","nullable":false},{"name":"file_type","type":"string","description":"The MIME type of the image file (e.g., 'image/jpeg').","nullable":false},{"name":"width","type":"int","description":"The width of the image in pixels.","nullable":true},{"name":"height","type":"int","description":"The height of the image in pixels.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the image was uploaded and associated with the post.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["file_size"]}],"ginIndexes":[]},{"name":"community_platform_post_links","description":"Entity to store link metadata for posts. Holds URL and metadata for link-type posts, enabling link validation, preview generation, and domain-based filtering. Normalized to allow multiple links per post if needed in future.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"The post this link is associated with. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"nullable":false,"unique":true}],"plainFields":[{"name":"url","type":"uri","description":"The full URL of the linked resource. Must be a valid HTTP/HTTPS URL.","nullable":false},{"name":"domain","type":"string","description":"The extracted domain name of the URL for categorization and filtering.","nullable":false},{"name":"title","type":"string","description":"The title of the linked page, extracted from its HTML <title> tag.","nullable":true},{"name":"description","type":"string","description":"A short description of the linked page, extracted from its meta description tag.","nullable":true},{"name":"is_valid","type":"boolean","description":"Indicates whether the URL responds with a 2xx status code during validation.","nullable":false},{"name":"last_checked","type":"datetime","description":"The timestamp when the link was last validated for accessibility.","nullable":true},{"name":"created_at","type":"datetime","description":"The timestamp when the link was submitted and associated with the post.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["domain"]},{"fieldNames":["last_checked"]},{"fieldNames":["is_valid"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"description"}]},{"name":"community_platform_comments","description":"Entity representing user comments on posts and other comments. Supports nested replies up to 8 levels, forming comment threads. Each comment is linked to its post and parent comment (if nested), enabling hierarchical display and evaluation.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"The post this comment belongs to. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"nullable":false,"unique":false},{"name":"author_id","type":"uuid","description":"The user who created this comment. {@link community_platform_member.id}.","relation":{"name":"author","targetModel":"community_platform_member"},"nullable":false,"unique":false},{"name":"parent_comment_id","type":"uuid","description":"The parent comment this is a reply to. {@link community_platform_comments.id}. Null for top-level comments.","relation":{"name":"parent","targetModel":"community_platform_comments","mappingName":"recursive"},"nullable":true,"unique":false},{"name":"parent_post_snapshot_id","type":"uuid","description":"Reference to the post's snapshot at time of comment. {@link community_platform_post_snapshots.id}.","relation":{"name":"postSnapshot","targetModel":"community_platform_post_snapshots"},"nullable":true,"unique":false}],"plainFields":[{"name":"content","type":"string","description":"The text content of the comment, limited to 2,000 characters.","nullable":false},{"name":"vote_count","type":"int","description":"The total vote score calculated as upvotes minus downvotes for ranking purposes.","nullable":false},{"name":"depth_level","type":"int","description":"The nesting depth of this comment, with 1 being top-level and 8 being maximum allowed.","nullable":false},{"name":"status","type":"string","description":"The moderation status: 'published', 'unreviewed', 'removed', or 'archived'. Determines visibility.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when the comment was submitted.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the comment was last modified (e.g., edit).","nullable":false},{"name":"deleted_at","type":"datetime","description":"The timestamp when the comment was soft-deleted. Null if still active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["parent_comment_id"]},{"fieldNames":["depth_level"]},{"fieldNames":["status","created_at"]},{"fieldNames":["vote_count","created_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"community_platform_post_snapshots","description":"Historical snapshot of a post's state at any point in time. Captures the full data of a post at the moment of significant change (edit, report, moderation) to preserve audit trail. All fields are denormalized copies of the original post, ensuring complete historical accuracy, with additional snapshot metadata.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"The original post this snapshot is based on. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"nullable":false,"unique":false},{"name":"moderator_id","type":"uuid","description":"The moderator who triggered this snapshot (if any). {@link community_platform_moderator.id}.","relation":{"name":"moderator","targetModel":"community_platform_moderator"},"nullable":true,"unique":false},{"name":"author_id","type":"uuid","description":"The author of the post at the time of this snapshot. {@link community_platform_member.id}.","relation":{"name":"author","targetModel":"community_platform_member"},"nullable":false,"unique":false}],"plainFields":[{"name":"title","type":"string","description":"The title of the post at the time of this snapshot.","nullable":false},{"name":"content","type":"string","description":"The main body text of the post at the time of this snapshot.","nullable":true},{"name":"post_type","type":"string","description":"The type of post at the time of this snapshot: 'text', 'link', or 'image'.","nullable":false},{"name":"vote_count","type":"int","description":"The vote score of the post at the time of this snapshot.","nullable":false},{"name":"comment_count","type":"int","description":"The number of comments on the post at the time of this snapshot.","nullable":false},{"name":"status","type":"string","description":"The moderation status of the post at the time of this snapshot.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when this snapshot was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the original post was last modified before this snapshot.","nullable":false},{"name":"snapshot_reason","type":"string","description":"The reason for creating this snapshot: 'edit', 'report', 'moderation', 'system', or 'publish'.","nullable":false},{"name":"ip_address","type":"string","description":"The IP address of the user who triggered this snapshot (if applicable).","nullable":true},{"name":"user_agent","type":"string","description":"The user agent string of the client that triggered this snapshot.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["snapshot_reason"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"community_platform_comment_snapshots","description":"Historical snapshot of a comment's state at any point in time. Captures the full data of a comment at the moment of significant change (edit, report, moderation) to preserve audit trail. All fields are denormalized copies of the original comment, ensuring complete historical accuracy, with additional snapshot metadata.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"The original comment this snapshot is based on. {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"nullable":false,"unique":false},{"name":"moderator_id","type":"uuid","description":"The moderator who triggered this snapshot (if any). {@link community_platform_moderator.id}.","relation":{"name":"moderator","targetModel":"community_platform_moderator"},"nullable":true,"unique":false},{"name":"author_id","type":"uuid","description":"The author of the comment at the time of this snapshot. {@link community_platform_member.id}.","relation":{"name":"author","targetModel":"community_platform_member"},"nullable":false,"unique":false}],"plainFields":[{"name":"content","type":"string","description":"The text content of the comment at the time of this snapshot.","nullable":false},{"name":"vote_count","type":"int","description":"The vote score of the comment at the time of this snapshot.","nullable":false},{"name":"depth_level","type":"int","description":"The nesting depth of this comment at the time of this snapshot.","nullable":false},{"name":"status","type":"string","description":"The moderation status of the comment at the time of this snapshot.","nullable":false},{"name":"created_at","type":"datetime","description":"The timestamp when this snapshot was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"The timestamp when the original comment was last modified before this snapshot.","nullable":false},{"name":"snapshot_reason","type":"string","description":"The reason for creating this snapshot: 'edit', 'report', 'moderation', 'system', or 'publish'.","nullable":false},{"name":"ip_address","type":"string","description":"The IP address of the user who triggered this snapshot (if applicable).","nullable":true},{"name":"user_agent","type":"string","description":"The user agent string of the client that triggered this snapshot.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["author_id","created_at"]},{"fieldNames":["snapshot_reason"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"community_platform_reports","description":"Primary entity representing user-submitted reports on content. Tracks the lifecycle of content moderation requests with anonymized reporter identity and status tracking. Reports are linked to either a post or comment through foreign keys. This table serves as the central hub for the moderation workflow, connecting reporters with content and subsequent actions. It is referenced by the subsidiary tables community_platform_report_actions and community_platform_report_comments. This is a primary stance table because users directly create reports, they have independent statuses (pending, dismissed, removed), and the system must provide reporting, filtering, and resolution workflows for these reports across the entire platform.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reported_content_id","type":"uuid","description":"The post or comment being reported. Used to identify the target of the report. {@link community_platform_posts.id} or {@link community_platform_comments.id}","relation":{"name":"reportedContent","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"reported_comment_id","type":"uuid","description":"The specific comment being reported, if the report targets a comment rather than a post. Used when report targets a comment. {@link community_platform_comments.id}","relation":{"name":"reportedComment","targetModel":"community_platform_comments"},"unique":false,"nullable":true},{"name":"reporter_id","type":"uuid","description":"The user who submitted this report. The reporter's identity is anonymized from the content author but stored for audit. {@link community_platform_member.id}","relation":{"name":"reporter","targetModel":"community_platform_member"},"unique":false,"nullable":false},{"name":"target_type","type":"uuid","description":"Discriminator indicating whether the report targets a 'post' or 'comment'. Required to disambiguate the foreign key relationship. Values: 'post', 'comment'.","relation":{"name":"targetType","targetModel":"community_platform_report_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"status","type":"string","description":"Current status of the report. Values: 'pending', 'dismissed', 'removed', 'escalated'. This field controls moderation workflow progression.","nullable":false},{"name":"report_reason","type":"string","description":"The category of reason selected by the reporter. Values: 'spam', 'harassment', 'inappropriate', 'other'. This provides initial categorization for moderator triage.","nullable":false},{"name":"report_notes","type":"string","description":"Optional additional context provided by the reporter about why they are reporting the content. Limited to 500 characters.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the report was initially submitted by the user. Used for audit trail and prioritization.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last status update to this report. Used for tracking resolution time and Moderation workflow progression.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["reported_content_id"]},{"fieldNames":["reported_comment_id"]},{"fieldNames":["reporter_id"]},{"fieldNames":["created_at"]},{"fieldNames":["target_type"]}],"ginIndexes":[]},{"name":"community_platform_vote_logs","description":"A specialized log table that records every vote change event for audit and debugging purposes. This complements the primary vote tables by capturing full history including retractions and flips.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"The user who performed the voting action. {@link community_platform_user_profiles.id}.","relation":{"name":"user","targetModel":"community_platform_user_profiles"},"unique":false,"nullable":false},{"name":"community_platform_post_id","type":"uuid","description":"The post affected by the vote action. {@link community_platform_posts.id}. Nullable if action was on a comment.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comment_id","type":"uuid","description":"The comment affected by the vote action. {@link community_platform_comments.id}. Nullable if action was on a post.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true},{"name":"target_type","type":"uuid","description":"Discriminator indicating whether the vote action targets a 'post' or 'comment'. Required to disambiguate the foreign key relationship. Values: 'post', 'comment'.","relation":{"name":"targetType","targetModel":"community_platform_report_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"action","type":"string","description":"Type of vote action: 'upvote', 'downvote', 'flip_to_upvote', 'flip_to_downvote', 'retract'.","nullable":false},{"name":"prev_vote_type","type":"string","description":"The previous vote type before the action (if applicable). 'upvote', 'downvote', or null for first vote.","nullable":true},{"name":"new_vote_type","type":"string","description":"The resulting vote type after the action: 'upvote' or 'downvote'.","nullable":false},{"name":"logged_at","type":"datetime","description":"Timestamp when the logging event occurred.","nullable":false},{"name":"ip_address","type":"string","description":"IP address of the client that performed the action (for abuse detection).","nullable":true},{"name":"user_agent","type":"string","description":"User agent string of the client device.","nullable":true},{"name":"meta_data","type":"string","description":"JSON string containing additional context about the event, e.g., in-browser timing, fencing meta, etc.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_user_id","logged_at"]},{"fieldNames":["community_platform_post_id","logged_at"]},{"fieldNames":["community_platform_comment_id","logged_at"]},{"fieldNames":["action","logged_at"]},{"fieldNames":["ip_address","logged_at"]},{"fieldNames":["logged_at"]},{"fieldNames":["target_type"]}],"ginIndexes":[]}]},{"filename":"schema-04-votes.prisma","namespace":"Votes","models":[{"name":"community_platform_post_votes","description":"Tracks upvotes and downvotes on posts. Each vote is uniquely associated with a user and post, enabling accurate ranking algorithms and preventing duplicate voting.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","relation":{"name":"user","targetModel":"community_platform_user_profiles"},"unique":false,"nullable":false,"description":"The user who cast the vote. {@link community_platform_user_profiles.id}."},{"name":"community_platform_post_id","type":"uuid","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false,"description":"The post being voted on. {@link community_platform_posts.id}."}],"plainFields":[{"name":"vote_type","type":"string","nullable":false,"description":"The type of vote: 'upvote' or 'downvote'."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the vote was cast."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the vote was last modified (e.g., flipped)."}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_post_id","vote_type"]},{"fieldNames":["community_platform_user_id","vote_type"]}],"ginIndexes":[]},{"name":"community_platform_comment_votes","description":"Tracks upvotes and downvotes on comments. Each vote is uniquely associated with a user and comment, enabling accurate ranking and preventing duplicate voting.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","relation":{"name":"user","targetModel":"community_platform_user_profiles"},"unique":false,"nullable":false,"description":"The user who cast the vote. {@link community_platform_user_profiles.id}."},{"name":"community_platform_comment_id","type":"uuid","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":false,"description":"The comment being voted on. {@link community_platform_comments.id}."}],"plainFields":[{"name":"vote_type","type":"string","nullable":false,"description":"The type of vote: 'upvote' or 'downvote'."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the vote was cast."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the vote was last modified (e.g., flipped)."}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_comment_id","vote_type"]},{"fieldNames":["community_platform_user_id","vote_type"]}],"ginIndexes":[]}]},{"filename":"schema-05-karma.prisma","namespace":"Karma","models":[{"name":"community_platform_user_karma","description":"Read-only derived value representing total karma score based on aggregated upvotes minus downvotes on user's posts and comments. This table exists for performance optimization to avoid expensive recomputation during profile displays. Updated via background jobs or database triggers when votes change. Never modified directly by users or API calls.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Reference to the user this karma score belongs to. {@link community_platform_user_profiles.id}.","relation":{"name":"user","targetModel":"community_platform_user_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"karma_score","type":"int","description":"Total karma points calculated as sum of all upvotes minus downvotes received on user's posts and comments. Never negative - max 1,000,000 per business rules.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this karma record was first calculated and stored. Immutable.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this karma score was last recalculated. Updated via background job when votes change.","nullable":false}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["karma_score"]}],"ginIndexes":[]}]},{"filename":"schema-06-subscriptions.prisma","namespace":"Subscriptions","models":[{"name":"community_platform_subscriptions","description":"Junction table establishing many-to-many relationship between users and communities. This table tracks which communities each member subscribes to, enabling personalized content feeds prioritizing subscribed communities and enforcing subscription limits (max 1,000 per user). Each subscription represents a user's active preference to receive content from a community. Prohibited from duplicate subscriptions (unique constraint on user_id + community_id). This is a primary entity because users need to independently manage their subscriptions through profile interfaces, search for subscribed communities, and the platform must efficiently query \"all communities subscribed to by user X\" and \"all users subscribed to community Y\" for feed prioritization logic. This cannot be handled solely through parent entities - it requires dedicated CRUD operations and indexing strategy for performance.\n\nReferences: {@link community_platform_member.id} and {@link community_platform_communities.id}","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Reference to the subscribing member. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"unique":false,"nullable":false},{"name":"community_platform_communities_id","type":"uuid","description":"Reference to the subscribed community. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the subscription was created. Used for sorting subscriptions by recency."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the subscription was last updated. Used for tracking changes to subscription state."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp. When set, the subscription is considered inactive and should be excluded from active feed queries. Null indicates an active subscription."},{"name":"active","type":"boolean","nullable":false,"description":"Current status of the subscription. True when subscription is active and user can receive content from the community. False when subscription has been deactivated (usually by user request or system cleanup). This flag enables efficient filtering without needing to check deleted_at."}],"uniqueIndexes":[{"fieldNames":["community_platform_member_id","community_platform_communities_id"],"unique":true},{"fieldNames":["deleted_at","community_platform_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_member_id"]},{"fieldNames":["community_platform_communities_id"]},{"fieldNames":["active"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-07-reports.prisma","namespace":"Reports","models":[{"name":"community_platform_report_actions","description":"Records moderation actions taken on submitted reports. Contains audit trail of moderator decisions (removal, dismissal, warning) performed on reports. This table is strictly subsidiary - actions are created automatically when moderators act on reports, not by users directly. It links reports to the moderator who took action and captures the decision type and optional notes. This table supports reporting KPIs like report resolution time.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"report_id","type":"uuid","description":"The report this action was taken on. Required to link the action to the original report. {@link community_platform_reports.id}","relation":{"name":"report","targetModel":"community_platform_reports"},"nullable":false,"unique":false},{"name":"moderator_id","type":"uuid","description":"The user who took this moderation action. The moderator responsible for the decision. {@link community_platform_moderator.id}","relation":{"name":"moderator","targetModel":"community_platform_moderator"},"nullable":false,"unique":false}],"plainFields":[{"name":"action_type","type":"string","description":"The type of moderation action taken. Values: 'remove', 'dismiss', 'warn'. Records the decision made by the moderator.","nullable":false},{"name":"action_notes","type":"string","description":"Optional internal notes from the moderator about why they took this action. May include additional context not included in the report.","nullable":true},{"name":"acted_at","type":"datetime","description":"The exact timestamp when the moderator performed this action. Used to calculate resolution time and audit trail.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["report_id"]},{"fieldNames":["moderator_id"]},{"fieldNames":["action_type"]},{"fieldNames":["acted_at"]}],"ginIndexes":[]},{"name":"community_platform_report_comments","description":"Stores optional additional text comments provided by reporters when submitting a report. This supporting table provides context that supplements the main report entity. These comments are displayed only to moderators for better incident analysis and are not visible to the content author or public. The table may be referenced from the primary report to retrieve supplementary context but has no independent business purpose beyond supporting the main report workflow.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"report_id","type":"uuid","description":"The report this comment belongs to. Required to link the comment to its parent report. {@link community_platform_reports.id}","relation":{"name":"report","targetModel":"community_platform_reports"},"nullable":false,"unique":false}],"plainFields":[{"name":"comment_text","type":"string","description":"The text of the comment provided by the reporter during report submission. Limited to 200 characters to maintain focus.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this comment was added by the reporter. Used for chronological ordering of reporter context.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["report_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-08-logs.prisma","namespace":"Logs","models":[{"name":"community_platform_audit_logs","description":"Audit logs capturing all administrative and system actions for compliance and forensic analysis. This table maintains an immutable record of all system-level changes including user role modifications, admin actions, and critical system events. Each log entry is associated with an actor (user or system) and includes context about the action performed.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_user_id","type":"uuid","description":"The user who performed the action. {@link community_platform_member.id} or {@link community_platform_admin.id}.","relation":{"name":"actorUser","targetModel":"community_platform_member","mappingName":"community_platform_audit_logs_of_actor_user_id"},"nullable":true,"unique":false},{"name":"target_user_id","type":"uuid","description":"The user targeted by the action. {@link community_platform_member.id} or {@link community_platform_admin.id}.","relation":{"name":"targetUser","targetModel":"community_platform_member","mappingName":"community_platform_audit_logs_of_target_user_id"},"nullable":true,"unique":false},{"name":"target_community_id","type":"uuid","description":"The community targeted by the action. {@link community_platform_communities.id}.","relation":{"name":"targetCommunity","targetModel":"community_platform_communities"},"nullable":true,"unique":false},{"name":"target_post_id","type":"uuid","description":"The post targeted by the action. {@link community_platform_posts.id}.","relation":{"name":"targetPost","targetModel":"community_platform_posts"},"nullable":true,"unique":false},{"name":"target_comment_id","type":"uuid","description":"The comment targeted by the action. {@link community_platform_comments.id}.","relation":{"name":"targetComment","targetModel":"community_platform_comments"},"nullable":true,"unique":false},{"name":"target_report_id","type":"uuid","description":"The report targeted by the action. {@link community_platform_reports.id}.","relation":{"name":"targetReport","targetModel":"community_platform_reports"},"nullable":true,"unique":false},{"name":"action_type_id","type":"uuid","description":"The type of action performed. {@link community_platform_report_categories.id}.","relation":{"name":"actionType","targetModel":"community_platform_report_categories"},"nullable":false,"unique":false}],"plainFields":[{"name":"action_description","type":"string","description":"Human-readable description of the action performed. Example: 'User banned from community' or 'Admin modified community settings'.","nullable":false},{"name":"ip_address","type":"string","description":"Client IP address from which the action was initiated. Used for security analysis and geolocation tracking.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string from the client device that initiated the action. Helps identify browser and device types.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the audit log entry was created. Records the exact moment the action occurred.","nullable":false},{"name":"is_system_action","type":"boolean","description":"Indicates whether the action was performed by the system (true) or by a user (false). System actions include automated cleanup tasks, scheduled maintenance, and automated moderation.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["actor_user_id","created_at"]},{"fieldNames":["target_user_id","created_at"]},{"fieldNames":["target_community_id","created_at"]},{"fieldNames":["action_type_id","created_at"]},{"fieldNames":["is_system_action","created_at"]}],"ginIndexes":[{"fieldName":"action_description"}]},{"name":"community_platform_security_logs","description":"Security logs capturing authentication events, failed login attempts, session activities, and system security alerts. This table is critical for detecting unauthorized access attempts, brute force attacks, and potential security breaches. All security events are logged with high fidelity to support forensic investigations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"The user associated with this security event. {@link community_platform_member.id}. Null for guest sessions.","relation":{"name":"user","targetModel":"community_platform_member"},"nullable":true,"unique":false},{"name":"session_id","type":"uuid","description":"The user session that triggered this event. {@link community_platform_user_sessions.id}.","relation":{"name":"session","targetModel":"community_platform_user_sessions"},"nullable":false,"unique":false}],"plainFields":[{"name":"event_type","type":"string","description":"Type of security event. Enumerated values: 'login_attempt', 'login_success', 'login_failure', 'session_created', 'session_terminated', 'password_change', '2fa_enabled', '2fa_disabled'.","nullable":false},{"name":"event_details","type":"string","description":"Detailed description of the security event including error codes, device fingerprints, and authentication method used. Example: 'Invalid password', '2FA code rejected', 'New device: iPhone 13'.","nullable":false},{"name":"ip_address","type":"string","description":"Client IP address from which the security event originated.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string from the client device that generated the security event.","nullable":false},{"name":"geolocation","type":"string","description":"Geographic location inferred from IP address (country, city) for security context.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the security event occurred.","nullable":false},{"name":"success","type":"boolean","description":"Whether the security event was successful (true) or failed (false). For login attempts: true = successful login, false = failed login.","nullable":false},{"name":"action_taken","type":"string","description":"Action taken by the system in response to this security event (if any). Example: 'account_locked', 'otp_sent', 'session_terminated', 'none'.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["event_type","created_at"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["event_type","ip_address","created_at"]},{"fieldNames":["session_id","created_at"]},{"fieldNames":["success","created_at"]}],"ginIndexes":[{"fieldName":"event_details"}]},{"name":"community_platform_api_access_logs","description":"API access logs recording every HTTP request made to the platform's REST API endpoints. This table is essential for monitoring API usage patterns, detecting abuse, and identifying performance bottlenecks. All external API calls are logged with complete request and response metadata.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"The authenticated user who made the API request. {@link community_platform_member.id} or {@link community_platform_admin.id}. Null for unauthenticated requests.","relation":{"name":"user","targetModel":"community_platform_member"},"nullable":true,"unique":false}],"plainFields":[{"name":"method","type":"string","description":"HTTP method used in the request (GET, POST, PUT, DELETE, PATCH).","nullable":false},{"name":"endpoint","type":"string","description":"API endpoint that was accessed, including path parameters. Example: '/api/v1/communities/r/{community_name}/posts'.","nullable":false},{"name":"status_code","type":"int","description":"HTTP status code returned to the client (e.g., 200, 401, 403, 429).","nullable":false},{"name":"response_time_ms","type":"int","description":"Time in milliseconds that the server took to process the request and generate a response.","nullable":false},{"name":"request_size_bytes","type":"int","description":"Size in bytes of the HTTP request body.","nullable":false},{"name":"response_size_bytes","type":"int","description":"Size in bytes of the HTTP response body.","nullable":false},{"name":"ip_address","type":"string","description":"Client IP address that initiated the API request.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string from the client device making the API request.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the API request was received by the server.","nullable":false},{"name":"rate_limit_remaining","type":"int","description":"Remaining requests allowed in the current rate limit window for this user/IP combination. -1 indicates no rate limiting applied.","nullable":false},{"name":"auth_method","type":"string","description":"Authentication method used: 'none', 'jwt', 'oauth', 'api_key'.","nullable":false},{"name":"query_params","type":"string","description":"String representation of the URL query parameters for the request. Example: \"sort=hot&limit=50\".","nullable":true},{"name":"headers","type":"string","description":"JSON string representation of key HTTP headers sent with the request, excluding sensitive headers like Authorization.","nullable":true},{"name":"is_authenticated","type":"boolean","description":"Whether the API request included valid authentication credentials.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["method","endpoint","created_at"]},{"fieldNames":["user_id","created_at"]},{"fieldNames":["status_code","created_at"]},{"fieldNames":["response_time_ms","created_at"]},{"fieldNames":["ip_address","created_at"]},{"fieldNames":["rate_limit_remaining","created_at"]},{"fieldNames":["is_authenticated","created_at"]},{"fieldNames":["auth_method","created_at"]}],"ginIndexes":[{"fieldName":"endpoint"},{"fieldName":"query_params"}]}]},{"filename":"schema-09-notifications.prisma","namespace":"Notifications","models":[{"name":"community_platform_notifications","description":"Records all notifications sent to users, serving as an audit trail of communication events. This table stores the core notification data including type, content, recipient, and delivery status. It links to existing user accounts through user_id and supports historical review of all communications. Referenced by community_platform_notification_preferences and community_platform_notification_queue for processing and preference management. {@link community_platform_member.id} and {@link community_platform_admin.id} provide the user context.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link community_platform_member.id} or {@link community_platform_admin.id}.","relation":{"name":"user","targetModel":"community_platform_member"},"unique":false,"nullable":false},{"name":"related_post_id","type":"uuid","description":"Reference to the post that triggered this notification, if applicable. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"related_comment_id","type":"uuid","description":"Reference to the comment that triggered this notification, if applicable. {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true},{"name":"related_report_id","type":"uuid","description":"Reference to the report that triggered this notification, if applicable. {@link community_platform_reports.id}.","relation":{"name":"report","targetModel":"community_platform_reports"},"unique":false,"nullable":true},{"name":"related_community_id","type":"uuid","description":"Reference to the community related to this notification, if applicable. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"type","type":"string","nullable":false,"description":"Notification type category (e.g., 'reply', 'karma_increase', 'moderation_action', 'system_alert')."},{"name":"title","type":"string","nullable":false,"description":"Short summary or subject line of the notification."},{"name":"content","type":"string","nullable":false,"description":"Full message content of the notification, which may include HTML/formatted text for display."},{"name":"status","type":"string","nullable":false,"description":"Delivery status of the notification: 'pending', 'sent', 'failed', 'delivery_failed', 'read'. This enables tracking of delivery state for system quality control and retry logic."},{"name":"delivery_method","type":"string","nullable":false,"description":"Method used to deliver this notification: 'in_app', 'email', 'push', or 'sms'. Corresponds to integration requirements in external integration spec."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the notification was generated and queued for delivery."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last update to the notification record (e.g., status change, read status update)."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for archival purposes. When null, the notification is active."},{"name":"metadata","type":"string","nullable":true,"description":"JSON string containing additional context data for the notification (e.g., reply_count, karma_change_amount, reason_code, priority_level)."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["status","delivery_method"]},{"fieldNames":["type","user_id"]},{"fieldNames":["related_post_id"]},{"fieldNames":["related_comment_id"]},{"fieldNames":["related_report_id"]},{"fieldNames":["related_community_id"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"content"}]},{"name":"community_platform_notification_preferences","description":"Manages user-specific preferences for notification delivery and types. This table allows users to opt-in or opt-out of specific notification categories and delivery methods. It serves as the authoritative source for determining whether a notification should be generated and delivered. Referenced by the notification system to filter which notifications to send to each user. {@link community_platform_member.id} and {@link community_platform_admin.id} identify the user whose preferences are being stored.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Target user's {@link community_platform_member.id} or {@link community_platform_admin.id}.","relation":{"name":"user","targetModel":"community_platform_member"},"unique":true,"nullable":false}],"plainFields":[{"name":"notification_type","type":"string","nullable":false,"description":"Type of notification this preference applies to (e.g., 'reply', 'karma_increase', 'moderation_action', 'system_alert')."},{"name":"enabled","type":"boolean","nullable":false,"description":"Flag indicating whether this notification type is enabled for this user (true) or disabled (false)."},{"name":"delivery_method","type":"string","nullable":false,"description":"Delivery method to which this preference applies: 'in_app', 'email', 'push', 'sms'. Allows fine-grained control per delivery channel."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when this preference was created or first set."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last update to this preference."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for archival purposes. When null, the preference is active."}],"uniqueIndexes":[{"fieldNames":["user_id","notification_type","delivery_method"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id"]},{"fieldNames":["notification_type"]},{"fieldNames":["delivery_method"]},{"fieldNames":["enabled"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[]},{"name":"community_platform_notification_queue","description":"Manages the notification delivery queue for asynchronous processing. This subsidiary table tracks notifications that have been generated but not yet delivered, including retry attempts and failure handling. It is processed by background workers that pop items from the queue and attempt delivery through configured channels (email, push, etc.). Status changes are handled in this table, while final delivery status is recorded in community_platform_notifications. This table is not directly managed by users but is essential for the notification pipeline. Used by the notification delivery system to ensure reliability and retry logic.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"notification_id","type":"uuid","description":"Reference to the notification record that is being processed. {@link community_platform_notifications.id}.","relation":{"name":"notification","targetModel":"community_platform_notifications"},"unique":true,"nullable":false}],"plainFields":[{"name":"status","type":"string","nullable":false,"description":"Queue state: 'pending', 'processing', 'failed', 'retrying'. Represents the delivery queue status during processing."},{"name":"retry_count","type":"int","nullable":false,"description":"Number of attempts made to deliver this notification. Starts at 0 and increments with each retry."},{"name":"max_retries","type":"int","nullable":false,"description":"Maximum number of retry attempts allowed before marking as permanently failed. Standard value is 3 per integration spec."},{"name":"next_retry_at","type":"datetime","nullable":false,"description":"Timestamp when the next retry attempt should be made. Uses exponential backoff based on retry_count."},{"name":"failure_reason","type":"string","nullable":true,"description":"Detailed reason for delivery failure, stored when status is 'failed'. May include error codes from external services like SendGrid or Firebase."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when this queue item was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last update to this queue item (e.g., retry count increase, status change)."},{"name":"processed_at","type":"datetime","nullable":true,"description":"Timestamp when this item was successfully processed and removed from the queue."}],"uniqueIndexes":[{"fieldNames":["notification_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["next_retry_at"]},{"fieldNames":["retry_count"]},{"fieldNames":["created_at"]},{"fieldNames":["processed_at"]}],"ginIndexes":[{"fieldName":"failure_reason"}]}]},{"filename":"schema-10-integrations.prisma","namespace":"Integrations","models":[{"name":"community_platform_stripe_customers","description":"Stores Stripe customer identifiers for platform users to enable payment processing integration. This table acts as an adapter between platform user accounts and Stripe billing system. Each record maps a platform user to their unique Stripe customer ID for recurring billing, invoice management, and payment method storage. This ensures platform can process payments without exposing Stripe internals to core business logic.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Reference to the platform user. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"unique":true,"nullable":false},{"name":"community_platform_user_profiles_id","type":"uuid","description":"Reference to the user profile. {@link community_platform_user_profiles.id}.","relation":{"name":"profile","targetModel":"community_platform_user_profiles"},"unique":true,"nullable":true}],"plainFields":[{"name":"stripe_customer_id","type":"string","description":"Unique identifier assigned by Stripe for this customer account. Must be unique across all records.","nullable":false},{"name":"payment_method_id","type":"string","description":"Identifier for the default payment method stored in Stripe. Can be null if no payment method is set.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this customer record was created in the database.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this customer record was last updated.","nullable":false},{"name":"is_active","type":"boolean","description":"Indicates if the Stripe customer account is active and can process payments.","nullable":false}],"uniqueIndexes":[{"fieldNames":["stripe_customer_id"],"unique":true},{"fieldNames":["community_platform_member_id"],"unique":true},{"fieldNames":["community_platform_user_profiles_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_stripe_subscriptions","description":"Tracks Stripe subscription relationships between users and their paid plans. Each record represents a subscription to a paid tier (Premium) in the Stripe system, linked to a specific platform user. This table enables seamless subscription management, billing cycle tracking, and churn analysis while maintaining separation between platform logic and Stripe's billing system.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Reference to the platform user who subscribed. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"unique":true,"nullable":false},{"name":"community_platform_stripe_customers_id","type":"uuid","description":"Reference to the associated Stripe customer record. {@link community_platform_stripe_customers.id}.","relation":{"name":"stripeCustomer","targetModel":"community_platform_stripe_customers"},"unique":false,"nullable":false}],"plainFields":[{"name":"stripe_subscription_id","type":"string","description":"Unique identifier assigned by Stripe for this subscription. Must be unique across all records.","nullable":false},{"name":"plan_id","type":"string","description":"The Stripe plan identifier (e.g., premium_monthly, premium_annual).","nullable":false},{"name":"status","type":"string","description":"Current status of the subscription (active, canceled, past_due, unpaid, trialing).","nullable":false},{"name":"start_date","type":"datetime","description":"When the subscription was activated.","nullable":false},{"name":"current_period_start","type":"datetime","description":"Start of the current billing period.","nullable":false},{"name":"current_period_end","type":"datetime","description":"End of the current billing period.","nullable":false},{"name":"cancel_at_period_end","type":"boolean","description":"True if subscription will be canceled at the end of the current period.","nullable":false},{"name":"canceled_at","type":"datetime","description":"When the subscription was canceled, if applicable.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this subscription record was created in the database.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this subscription record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["stripe_subscription_id"],"unique":true},{"fieldNames":["community_platform_member_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_image_hosting","description":"Stores metadata for images uploaded to external hosting services (Cloudinary or S3). This table acts as an adapter between platform posts and external image storage systems. It maps platform-generated content to external image URLs and metadata, allowing seamless integration with image hosting providers while maintaining separation of concerns.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_posts_id","type":"uuid","description":"Reference to the post containing this image. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"image_url","type":"uri","description":"The full URL to the hosted image on the external service.","nullable":false},{"name":"public_id","type":"string","description":"The unique identifier assigned by the image hosting service (Cloudinary public ID or S3 key).","nullable":false},{"name":"format","type":"string","description":"The image format (jpg, png, webp, gif).","nullable":false},{"name":"width","type":"int","description":"Original width of the image in pixels.","nullable":false},{"name":"height","type":"int","description":"Original height of the image in pixels.","nullable":false},{"name":"file_size","type":"int","description":"Size of the original file in bytes.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this image record was created in the database.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this image record was last updated.","nullable":false},{"name":"is_original","type":"boolean","description":"True if this is the original uploaded image, false if it's a processed version.","nullable":false}],"uniqueIndexes":[{"fieldNames":["public_id"],"unique":true},{"fieldNames":["image_url"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_auth0_mappings","description":"Maps platform users to their external authentication provider identities (Google, Apple, Microsoft, Twitter) via Auth0. This table enables seamless social login integration by connecting platform user accounts to their corresponding external provider identifiers while maintaining separation between platform authentication and external identity systems.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Reference to the platform user account. {@link community_platform_member.id}.","relation":{"name":"member","targetModel":"community_platform_member"},"unique":true,"nullable":false}],"plainFields":[{"name":"provider","type":"string","description":"The external authentication provider (google, apple, microsoft, twitter).","nullable":false},{"name":"provider_user_id","type":"string","description":"The unique identifier assigned by the external authentication provider to this user.","nullable":false},{"name":"email","type":"string","description":"The email address associated with this external account, used for platform account linking.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this mapping was created in the database.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this mapping was last updated.","nullable":false},{"name":"is_primary","type":"boolean","description":"True if this is the primary login method for the user, false if it's an additional connection.","nullable":false}],"uniqueIndexes":[{"fieldNames":["provider","provider_user_id"],"unique":true},{"fieldNames":["email"],"unique":true},{"fieldNames":["community_platform_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["provider"]},{"fieldNames":["provider_user_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_perspective_api_results","description":"Stores analysis results from Google's Perspective API for content moderation. This table captures toxicity scores and moderation recommendations for posts and comments to enable automated content flagging while maintaining privacy and separation from core platform logic. Represents an adapter layer between platform content and external AI moderation services.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_posts_id","type":"uuid","description":"Reference to the post that was analyzed. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comments_id","type":"uuid","description":"Reference to the comment that was analyzed. {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"toxicity_score","type":"double","description":"The toxicity score from Perspective API (0.0-1.0), where higher values indicate more offensive content.","nullable":false},{"name":"severe_toxicity_score","type":"double","description":"The severe toxicity score from Perspective API (0.0-1.0).","nullable":false},{"name":"obscene_score","type":"double","description":"The obscenity score from Perspective API (0.0-1.0).","nullable":false},{"name":"threat_score","type":"double","description":"The threat score from Perspective API (0.0-1.0).","nullable":false},{"name":"insult_score","type":"double","description":"The insult score from Perspective API (0.0-1.0).","nullable":false},{"name":"identity_attack_score","type":"double","description":"The identity attack score from Perspective API (0.0-1.0).","nullable":false},{"name":"spam_score","type":"double","description":"The spam score from Perspective API (0.0-1.0).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the API analysis was performed and record created.","nullable":false},{"name":"action_recommendation","type":"string","description":"The recommended moderation action from the API (none, flag, remove, report).","nullable":false},{"name":"api_request_id","type":"string","description":"The unique identifier for this API request to the Perspective service.","nullable":false}],"uniqueIndexes":[{"fieldNames":["api_request_id"],"unique":true},{"fieldNames":["community_platform_posts_id"],"unique":true},{"fieldNames":["community_platform_comments_id"],"unique":true}],"plainIndexes":[{"fieldNames":["toxicity_score"]},{"fieldNames":["action_recommendation"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_email_delivery_logs","description":"Tracks email delivery status and metadata for all platform notifications sent through SendGrid. This table records delivery outcomes, errors, and timestamps for every email sent, enabling monitoring of email service reliability, troubleshooting delivery issues, and compliance with email regulations. Acts as an audit trail for communication between platform and email service provider.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Reference to the recipient user account. {@link community_platform_member.id}.","relation":{"name":"recipient","targetModel":"community_platform_member"},"unique":false,"nullable":true},{"name":"community_platform_posts_id","type":"uuid","description":"Reference to the post that triggered this email (e.g., post reply notification). {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comments_id","type":"uuid","description":"Reference to the comment that triggered this email (e.g., comment reply notification). {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"recipient_email","type":"string","description":"The email address of the recipient.","nullable":false},{"name":"email_type","type":"string","description":"The type of email sent (verification, password_reset, notification, digest).","nullable":false},{"name":"subject","type":"string","description":"The email subject line.","nullable":false},{"name":"template_id","type":"string","description":"The SendGrid template identifier used for this email.","nullable":false},{"name":"status","type":"string","description":"The delivery status (sent, delivered, opened, clicked, bounced, dropped, unsubscribe, spamreport).","nullable":false},{"name":"error_code","type":"string","description":"Error code if delivery failed (if applicable).","nullable":true},{"name":"error_message","type":"string","description":"Detailed error message if delivery failed (if applicable).","nullable":true},{"name":"gateway_message_id","type":"string","description":"The unique message ID assigned by SendGrid for this email.","nullable":false},{"name":"click_count","type":"int","description":"Number of times links in the email were clicked.","nullable":false},{"name":"open_count","type":"int","description":"Number of times the email was opened.","nullable":false},{"name":"delivered_at","type":"datetime","description":"Timestamp when email was successfully delivered.","nullable":true},{"name":"sent_at","type":"datetime","description":"Timestamp when email was sent to SendGrid API.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this log record was created in the database.","nullable":false}],"uniqueIndexes":[{"fieldNames":["gateway_message_id"],"unique":true}],"plainIndexes":[{"fieldNames":["recipient_email"]},{"fieldNames":["email_type"]},{"fieldNames":["status"]},{"fieldNames":["sent_at"]},{"fieldNames":["delivered_at"]}],"ginIndexes":[]}]}]}