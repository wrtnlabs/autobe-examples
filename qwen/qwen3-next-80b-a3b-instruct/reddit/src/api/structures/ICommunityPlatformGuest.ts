import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

export namespace ICommunityPlatformGuest {
  /**
   * Authentication response containing the temporary guest JWT token and
   * session details.
   *
   * This type represents the successful response from the guest join and
   * refresh operations.
   *
   * It provides the client with the necessary credentials to maintain a
   * temporary session with limited read-only access to the platform.
   *
   * The guest session is ephemeral and cannot be used to perform
   * authenticated actions like posting, commenting, or voting â€” these require
   * a full member account.
   *
   * The system relies on the community_platform_guest table to maintain the
   * association between the guest ID and session state, ensuring security by
   * preventing permanent anonymous access.
   */
  export type IAuthorized = {
    /**
     * The unique identifier for the guest session.
     *
     * This value is generated by the system and corresponds to the id field
     * in the community_platform_guest table.
     *
     * It is used to identify the temporary guest session across multiple
     * requests during the session lifetime.
     */
    id: string & tags.Format<"uuid">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };
}
