import { tags } from "typia";

/**
 * Task entity representing individual items in the todo list. Each task belongs
 * to a single user and has a title, completion status, and creation timestamp.
 *
 * This schema definition fully represents the todo_list_task entity from the
 * Prisma schema, which defines the structure for storing personal todo list
 * items.
 *
 * The task contains six essential properties:
 *
 * - Id: Unique UUID identifier
 * - Todo_list_user_id: Reference to the single user owner
 * - Title: The task description (1-500 characters)
 * - Completed: Boolean status tracking completion state
 * - Created_at: Timestamp of task creation
 * - Updated_at: Timestamp of last modification
 *
 * The schema includes appropriate constraints: title has minLength: 1 and
 * maxLength: 500 to match Prisma validation, and both timestamps use the
 * date-time format to match the Prisma Timestamptz type.
 *
 * The x-autobe-prisma-schema field explicitly links this schema to the
 * todo_list_task model in the Prisma schema, enabling automated validation that
 * every property matches the database structure.
 *
 * All properties are documented with descriptions that reference the Prisma
 * schema comments, ensuring developers understand the business meaning and
 * technical constraints of each field. The descriptions clarify which fields
 * are client-settable, server-generated, read-only, or immutable, providing
 * complete context for implementation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoListTask = {
  /**
   * Primary Key.
   *
   * Unique identifier for each todo list task.
   *
   * This field maps directly to the id column in the todo_list_task Prisma
   * model.
   *
   * The system generates this UUID upon task creation and it is immutable.
   * All operations (toggle completion, delete) reference this identifier.
   *
   * No user input is required for this field as it is auto-generated by the
   * system.
   *
   * This field is always included in responses but never accepted in request
   * bodies (create/update).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Belongs to the user who owns this task. {@link todo_list_user.id}.
   *
   * This field establishes the ownership relationship between the task and
   * its single-user owner.
   *
   * The value is automatically set to the authenticated user's ID from the
   * session context and cannot be specified by the client.
   *
   * This field is always included in responses and is implicitly referenced
   * in create operations but never exposed as a request parameter.
   *
   * Primary key reference to the todo_list_user entity in the Prisma schema.
   */
  todo_list_user_id: string & tags.Format<"uuid">;

  /**
   * The text content of the task. Limited to 500 characters.
   *
   * This field contains the actual task description entered by the user.
   *
   * In the Prisma schema, this is stored as a String column with no default
   * value.
   *
   * The client must provide this during task creation, and it can be viewed
   * and modified in the UI.
   *
   * For the task creation request, this field is required.
   *
   * Client-side input validation prevents submission of empty or
   * whitespace-only strings, which the backend enforces with minLength: 1 and
   * maxLength: 500 constraints.
   *
   * Task titles can contain any Unicode characters, emojis, and special
   * symbols without modification or truncation.
   */
  title: string & tags.MinLength<1> & tags.MaxLength<500>;

  /**
   * Whether the task has been marked as completed. Default value is false.
   *
   * This field tracks the completion state of the todo list item.
   *
   * In the Prisma schema, this is a Boolean column with a default value of
   * false.
   *
   * The client toggles this field from true to false or false to true when
   * interacting with the task checkbox in the UI.
   *
   * The backend sets the default value to false upon creation and updates it
   * atomically on toggle requests.
   *
   * This field is included in both request and response bodies for toggle and
   * create operations.
   *
   * This field is never nullable, as tasks are always created with a definite
   * completion status.
   */
  completed: boolean;

  /**
   * Timestamp when the task was created.
   *
   * This field records when the task was first added to the system.
   *
   * Opposite to the todo_list_user entity, todo_list_task has both created_at
   * and updated_at timestamps in the Prisma schema.
   *
   * The server sets this value automatically upon creation using the current
   * server time.
   *
   * This field is read-only and is never accepted in request bodies, as task
   * creation time is immutable.
   *
   * This field appears in all response data and is used for sorting tasks in
   * chronological order (newest first).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the task was last updated.
   *
   * This field reflects the most recent time the task was modified.
   *
   * The todo_list_task entity in the Prisma schema includes the updated_at
   * timestamp, so it is valid to include.
   *
   * The server updates this field automatically whenever the task is toggled
   * (completed status changed) or edited.
   *
   * This field is read-only and never accepted in request bodies, as updates
   * are controlled by the system.
   *
   * This field appears in all response data and helps determine the most
   * recently modified tasks.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Related Prisma schema.
   *
   * This field links the OpenAPI schema to the corresponding Prisma model for
   * automated validation.
   *
   * The value "todo_list_task" exactly matches the model name in the Prisma
   * schema.
   *
   * When present, this field enables validation that all properties in this
   * schema exist in the referenced Prisma model.
   *
   * This facilitates automatic code generation and ensures interface
   * consistency with the database structure.
   *
   * This field is optional and appears on all variant schemas that directly
   * correspond to a Prisma model (ITodoListTask, ITodoListTask.ICreate,
   * ITodoListTask.IUpdate, ITodoListTask.ISummary).
   */
  "x-autobe-prisma-schema"?: "todo_list_task" | undefined;
};
export namespace ITodoListTask {
  /**
   * Request body for creating a new todo list task.
   *
   * This schema defines the data required to create a new task in the system,
   * corresponding to a POST request to /todoList/tasks.
   *
   * This is a minimal schema containing only the single required field:
   * title.
   *
   * All other fields are excluded from this request structure because they
   * are server-managed:
   *
   * - Id: auto-generated by system
   * - Todo_list_user_id: inferred from authentication context
   * - Completed: default value false is set by server
   * - Created_at: automatically set by server
   * - Updated_at: automatically set by server on creation
   *
   * The schema inherits constraints from the base entity: title has
   * minLength: 1 and maxLength: 500.
   *
   * The x-autobe-prisma-schema field is included as this request map directly
   * to the todo_list_task model, even though it only includes a subset of its
   * properties.
   *
   * Following the variant naming convention, this schema is named
   * ITodoListTask.ICreate, indicating it is the create variant of the
   * ITodoListTask entity.
   *
   * All fields are required unless explicitly stated otherwise, following the
   * principle that the server will accept only necessary data and generate
   * all other values autonomously.
   */
  export type ICreate = {
    /**
     * The text content of the task. Limited to 500 characters.
     *
     * This field contains the actual task description entered by the user.
     *
     * In the Prisma schema, this is stored as a String column with no
     * default value.
     *
     * The client must provide this during task creation, and it can be
     * viewed and modified in the UI.
     *
     * For the task creation request, this field is required.
     *
     * Client-side input validation prevents submission of empty or
     * whitespace-only strings, which the backend enforces with minLength: 1
     * and maxLength: 500 constraints.
     *
     * Task titles can contain any Unicode characters, emojis, and special
     * symbols without modification or truncation.
     */
    title: string & tags.MinLength<1> & tags.MaxLength<500>;

    /**
     * Related Prisma schema.
     *
     * This field links the OpenAPI schema to the corresponding Prisma model
     * for automated validation.
     *
     * The value "todo_list_task" exactly matches the model name in the
     * Prisma schema.
     *
     * When present, this field enables validation that all properties in
     * this schema exist in the referenced Prisma model.
     *
     * This facilitates automatic code generation and ensures interface
     * consistency with the database structure.
     *
     * This field is optional and appears on all variant schemas that
     * directly correspond to a Prisma model (ITodoListTask,
     * ITodoListTask.ICreate, ITodoListTask.IUpdate,
     * ITodoListTask.ISummary).
     */
    "x-autobe-prisma-schema"?: "todo_list_task" | undefined;
  };
}
