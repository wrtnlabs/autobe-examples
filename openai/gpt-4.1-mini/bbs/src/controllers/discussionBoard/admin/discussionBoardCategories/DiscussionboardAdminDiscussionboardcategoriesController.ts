import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { postDiscussionBoardAdminDiscussionBoardCategories } from "../../../../providers/postDiscussionBoardAdminDiscussionBoardCategories";
import { AdminAuth } from "../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../decorators/payload/AdminPayload";
import { putDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId } from "../../../../providers/putDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId";
import { deleteDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId } from "../../../../providers/deleteDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId";

import { IDiscussionBoardDiscussionBoardCategory } from "../../../../api/structures/IDiscussionBoardDiscussionBoardCategory";

@Controller("/discussionBoard/admin/discussionBoardCategories")
export class DiscussionboardAdminDiscussionboardcategoriesController {
  /**
   * Create a new discussion board category with a unique name and optional
   * description.
   *
   * This operation allows administrators or authorized users to add new
   * discussion categories which classify discussion topics into economic or
   * political themes.
   *
   * Access to this endpoint should be restricted to administrative roles as it
   * affects the supported classification structure.
   *
   * The system automatically sets timestamps for creation and last update. The
   * category's unique name enforces no duplicates.
   *
   * Once created, the category is available for posts to associate with. Soft
   * deletion is supported via the deleted_at field, but not managed in this
   * operation.
   *
   * Error handling must ensure duplicate names are rejected with clear
   * messages.
   *
   * @param connection
   * @param body Creation information for the discussion board category
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @AdminAuth()
    admin: AdminPayload,
    @TypedBody()
    body: IDiscussionBoardDiscussionBoardCategory.ICreate,
  ): Promise<IDiscussionBoardDiscussionBoardCategory> {
    try {
      return await postDiscussionBoardAdminDiscussionBoardCategories({
        admin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Update a discussion board category.
   *
   * Update an existing discussion board category identified by its ID.
   *
   * Only authorized administrators can perform this operation.
   *
   * The update payload can change the category name and description. The system
   * updates the updated_at timestamp.
   *
   * Uniqueness checks on the name field prevent duplicate category names.
   *
   * Soft deletion status is not changed by this update endpoint.
   *
   * Errors include handling of non-existent categories or duplicate names.
   *
   * @param connection
   * @param discussionBoardCategoryId Unique identifier of the discussion board
   *   category to update
   * @param body Update information for the discussion board category
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put(":discussionBoardCategoryId")
  public async update(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("discussionBoardCategoryId")
    discussionBoardCategoryId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IDiscussionBoardDiscussionBoardCategory.IUpdate,
  ): Promise<IDiscussionBoardDiscussionBoardCategory> {
    try {
      return await putDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId(
        {
          admin,
          discussionBoardCategoryId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Delete discussion board category by ID.
   *
   * This DELETE operation removes a specific discussion board category
   * identified by discussionBoardCategoryId. The category represents topical
   * classifications such as Economic or Political on the discussion board.
   *
   * Only moderators and administrators should be authorized to delete
   * categories due to the impact on all associated discussion posts. Deletion
   * is performed as a hard delete, removing the category record and all linked
   * posts permanently from the database.
   *
   * Path parameter discussionBoardCategoryId must be a valid UUID referencing
   * the category to delete. There is no request body or response body for this
   * operation beyond success/error status codes.
   *
   * Care should be exercised by client implementations to ensure that this
   * operation is used judiciously, as it impacts multiple posts and discussion
   * board content hierarchy.
   *
   * @param connection
   * @param discussionBoardCategoryId Unique identifier of the discussion board
   *   category to delete
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete(":discussionBoardCategoryId")
  public async erase(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("discussionBoardCategoryId")
    discussionBoardCategoryId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteDiscussionBoardAdminDiscussionBoardCategoriesDiscussionBoardCategoryId(
        {
          admin,
          discussionBoardCategoryId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
