import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patchDiscussionBoardDiscussionBoardPostsPostIdDiscussionBoardReplies } from "../../../../providers/patchDiscussionBoardDiscussionBoardPostsPostIdDiscussionBoardReplies";

import { IPageIDiscussionBoardDiscussionBoardReply } from "../../../../api/structures/IPageIDiscussionBoardDiscussionBoardReply";
import { IDiscussionBoardDiscussionBoardReply } from "../../../../api/structures/IDiscussionBoardDiscussionBoardReply";

@Controller(
  "/discussionBoard/discussionBoardPosts/:postId/discussionBoardReplies",
)
export class DiscussionboardDiscussionboardpostsDiscussionboardrepliesController {
  /**
   * Retrieve paginated list of replies for a discussion board post.
   *
   * This PATCH operation retrieves a filtered, paginated list of replies
   * associated with a specific discussion board post identified by postId.
   * Replies represent member-authored responses to discussion topics.
   *
   * The request body includes filtering, pagination, and sorting parameters,
   * enabling clients to request replies with constraints such as page size,
   * page number, search keywords within content, or filtering by reply status.
   *
   * The response body is a paginated summary list of replies matching the given
   * postId and filtering criteria.
   *
   * Path parameter postId must be a valid UUID of the parent discussion board
   * post.
   *
   * Authorization is generally public as replies to posts are visible to all
   * users including guests.
   *
   * @param connection
   * @param postId Unique identifier of the discussion board post to get replies
   *   for
   * @param body Search and pagination parameters for discussion board replies
   *   filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IDiscussionBoardDiscussionBoardReply.IRequest,
  ): Promise<IPageIDiscussionBoardDiscussionBoardReply.ISummary> {
    try {
      return await patchDiscussionBoardDiscussionBoardPostsPostIdDiscussionBoardReplies(
        {
          postId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
