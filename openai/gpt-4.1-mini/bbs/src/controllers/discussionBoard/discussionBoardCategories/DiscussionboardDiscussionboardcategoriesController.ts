import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchDiscussionBoardDiscussionBoardCategories } from "../../../providers/patchDiscussionBoardDiscussionBoardCategories";
import { getDiscussionBoardDiscussionBoardCategoriesDiscussionBoardCategoryId } from "../../../providers/getDiscussionBoardDiscussionBoardCategoriesDiscussionBoardCategoryId";

import { IPageIDiscussionBoardDiscussionBoardCategories } from "../../../api/structures/IPageIDiscussionBoardDiscussionBoardCategories";
import { IDiscussionBoardDiscussionBoardCategories } from "../../../api/structures/IDiscussionBoardDiscussionBoardCategories";

@Controller("/discussionBoard/discussionBoardCategories")
export class DiscussionboardDiscussionboardcategoriesController {
  /**
   * Search and retrieve paginated list of discussion board categories.
   *
   * Retrieve a filtered and paginated list of discussion board categories from
   * the system. This operation supports searching by name or description,
   * sorting, and pagination.
   *
   * The discussion_board_categories table categorizes posts to enable content
   * filtering by Economic or Political themes, among others. This operation
   * gives clients the ability to explore categories and decide under which
   * domain to post.
   *
   * Security considerations include allowing public access since categories are
   * generally not sensitive. However, the API may enforce rate limiting to
   * prevent abuse.
   *
   * This operation allows clients to retrieve category summaries and relevant
   * metadata for display in filtering UI components or selection lists.
   *
   * Expected behavior includes support for a variety of query filters and
   * configurable page sizes and offsets. Errors may arise from malformed
   * requests or database connectivity issues.
   *
   * @param connection
   * @param body Search criteria, pagination, and sorting parameters for
   *   discussion board categories
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedBody()
    body: IDiscussionBoardDiscussionBoardCategories.IRequest,
  ): Promise<IPageIDiscussionBoardDiscussionBoardCategories.ISummary> {
    try {
      return await patchDiscussionBoardDiscussionBoardCategories({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve a specific discussion board category by ID.
   *
   * Retrieve detailed information about a specific discussion board category
   * identified by its unique ID.
   *
   * This includes the category's name, optional description, creation and
   * update timestamps, and soft delete status.
   *
   * The discussion_board_categories table is central for organizing posts into
   * economic or political themes.
   *
   * No special authorization required as category information is public.
   *
   * Errors include cases where the specified ID does not exist or is malformed.
   *
   * This operation returns a single resource representing the category's full
   * details.
   *
   * @param connection
   * @param discussionBoardCategoryId Unique identifier of the target discussion
   *   board category
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":discussionBoardCategoryId")
  public async at(
    @TypedParam("discussionBoardCategoryId")
    discussionBoardCategoryId: string & tags.Format<"uuid">,
  ): Promise<IDiscussionBoardDiscussionBoardCategories> {
    try {
      return await getDiscussionBoardDiscussionBoardCategoriesDiscussionBoardCategoryId(
        {
          discussionBoardCategoryId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
