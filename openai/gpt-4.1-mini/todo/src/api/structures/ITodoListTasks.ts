import { tags } from "typia";

/**
 * Represents individual todo tasks created and managed by authenticated users.
 *
 * Each task is linked to a user by foreign key todo_list_user_id.
 *
 * Tasks have a description text, a boolean completion status, and temporal
 * fields for created, updated, and optional deleted (soft delete).
 *
 * The model supports a primary stance for independent user task management
 * requiring CRUD operations.
 *
 * This schema directly corresponds to the Prisma model todo_list_tasks.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoListTasks = {
  /**
   * Primary Key.
   *
   * Unique identifier for the todo task in UUID format.
   *
   * This field serves as the immutable primary key for the todo_list_tasks
   * table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged user's todo_list_users.id.
   *
   * Foreign key associating the task with the user who owns it.
   *
   * Represents the owner of the task in the todo_list_users table.
   */
  todo_list_user_id: string & tags.Format<"uuid">;

  /**
   * Task description text, must be non-empty and trimmed.
   *
   * Describes the content of the task the user needs to accomplish.
   *
   * This field must contain meaningful, non-empty string data representing
   * the task details.
   */
  description: string;

  /**
   * Indicates whether the task is completed (true) or pending (false).
   *
   * Tracks the completion status to differentiate between tasks that are done
   * and those still pending.
   */
  is_completed: boolean;

  /**
   * Timestamp when the task was created.
   *
   * Represents the creation time in ISO 8601 date-time format with timezone.
   *
   * Automatically set by the system when the task is inserted.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the task was last updated.
   *
   * Records the most recent modification time of the task in ISO 8601
   * date-time format.
   *
   * Automatically updated by the system upon task changes.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp, null if not deleted.
   *
   * Indicates when the task was soft deleted, or null if the task is active.
   *
   * Used for logical deletion handling without removing the record
   * permanently from the database.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoListTasks {
  /**
   * Request parameters for filtering, searching, sorting, and paginating
   * TodoList tasks belonging to the authenticated user.
   */
  export type IRequest = {
    /** Page number to retrieve; defaults to 1 when unspecified. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page; default is 100. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional text search query to filter tasks by description content. */
    search?: string | null | undefined;

    /**
     * Filter tasks by completion status: 'true' for completed, 'false' for
     * pending tasks.
     */
    isCompleted?: boolean | null | undefined;

    /**
     * Field name to order results by; allowed values could be 'created_at',
     * 'updated_at', 'description'.
     */
    orderBy?: string | null | undefined;

    /**
     * Order direction for sorting results; 'asc' for ascending, 'desc' for
     * descending, default is ascending.
     */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary view of TodoList tasks for list display purposes.
   *
   * This schema represents a lightweight version of the todo_list_tasks
   * entity, optimized for efficient rendering in task lists. It includes
   * essential fields such as task ID, description, and completion status to
   * succinctly convey task information.
   *
   * The summarized structure omits timestamps and soft delete markers for
   * brevity and focuses on the primary data points needed during search and
   * listing.
   *
   * This schema corresponds directly to the todo_list_tasks table in the
   * Prisma schema.
   */
  export type ISummary = {
    /**
     * Unique identifier of the todo_list task. This corresponds to the 'id'
     * primary key field in the todo_list_tasks Prisma table.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Task description text. Must be a non-empty string, trimmed according
     * to business validation rules.
     */
    description: string;

    /**
     * Task completion status indicating whether the task is finished (true)
     * or pending (false).
     */
    is_completed: boolean;

    /**
     * Foreign key linking this task to its owner user in the
     * todo_list_users table.
     */
    todo_list_user_id: string & tags.Format<"uuid">;
  };
}
