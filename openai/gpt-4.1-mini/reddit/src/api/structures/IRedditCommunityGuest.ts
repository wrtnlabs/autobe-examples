import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Entities representing unauthenticated users browsing redditCommunity
 * platform. Records session tracking and metadata to enable temporary guest
 * authorization and session management in the system.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditCommunityGuest = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Session identifier for tracking guest browsing sessions. */
  session_id: string;

  /** IP address of the guest user for security and logging. */
  ip_address: string;

  /** User agent string from the guest's browser or device. */
  user_agent?: string | null | undefined;

  /** Timestamp of guest creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last guest data update. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRedditCommunityGuest {
  /**
   * Request body schema for creating a new guest session user. Includes
   * session_id and IP address as required fields and optional user agent
   * information.
   */
  export type ICreate = {
    /** Session identifier for tracking guest browsing sessions. */
    session_id: string;

    /** IP address of the guest user for security and logging. */
    ip_address: string;

    /** User agent string from the guest's browser or device. */
    user_agent?: string | null | undefined;
  };

  /**
   * Authorized guest session information.
   *
   * This type represents the response after successfully creating a guest
   * session, including essential guest metadata and issued JWT authentication
   * token.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated guest user. */
    id: string & tags.Format<"uuid">;

    /** Session identifier associated with the guest session. */
    session_id: string;

    /** IP address of the guest user. */
    ip_address: string;

    /** User agent string of the guest device or browser. */
    user_agent?: string | null | undefined;

    /** Timestamp of guest creation. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp of last guest data update. */
    updated_at: string & tags.Format<"date-time">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Payload required to refresh JWT tokens for guest sessions, including the
   * refresh token string.
   */
  export type IRefresh = {
    /** Refresh token string used to obtain a new access token. */
    refresh_token: string;
  };

  /**
   * Request parameters for listing, searching, and pagination of
   * redditCommunity guests.
   */
  export type IRequest = {
    /** Session identifier for tracking guest browsing sessions. */
    session_id?: string | null | undefined;

    /** IP address of the guest user for security and logging. */
    ip_address?: string | null | undefined;

    /** User agent string from the guest's browser or device. */
    user_agent?: string | null | undefined;

    /** Page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;
  };

  /**
   * Request body schema for updating an existing guest session user. Allows
   * updating session_id, ip_address, and optional user agent string.
   */
  export type IUpdate = {
    /** Session identifier for tracking guest browsing sessions. */
    session_id?: string | undefined;

    /** IP address of the guest user for security and logging. */
    ip_address?: string | undefined;

    /** User agent string from the guest's browser or device. */
    user_agent?: string | null | undefined;
  };

  /**
   * Summary information for a guest user in the redditCommunity platform.
   *
   * This includes the unique guest ID, session tracking identifiers, IP
   * address, optional user agent string, and timestamps for creation and last
   * update.
   *
   * This simplified summary is optimized for listing guests without showing
   * sensitive or excessive details.
   */
  export type ISummary = {
    /**
     * Unique identifier of the guest record in the redditCommunity
     * platform.
     */
    id: string & tags.Format<"uuid">;

    /** Guest session identifier for tracking; unique per guest. */
    session_id: string;

    /** IP address from which the guest session originated. */
    ip_address: string;

    /** Optional user agent string from the client's browser or device. */
    user_agent?: string | null | undefined;

    /** Timestamp when the guest session was created, in ISO 8601 format. */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the guest session record was last updated, in ISO 8601
     * format.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
