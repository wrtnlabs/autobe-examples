import { tags } from "typia";

/**
 * Post entity representing user-generated content within communities.
 *
 * Supports posts authored by members or guests, with content types including
 * text, link, and single image.
 *
 * Includes metadata such as creation/update timestamps and soft deletion
 * indicators.
 *
 * The post type discriminator dictates which content field is relevant.
 *
 * Related entities include communities, comments, and votes.
 *
 * The schema accurately reflects the 'reddit_community_posts' table structure
 * in the Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditCommunityPosts = {
  /** Primary Key of the post entity. */
  id: string & tags.Format<"uuid">;

  /** The member user who authored the post, nullable for guest posts. */
  author_member_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** The guest user who authored the post, nullable for member posts. */
  author_guest_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Identifier of the community this post belongs to. */
  reddit_community_community_id: string & tags.Format<"uuid">;

  /**
   * Type of the post content: text, link, or image.
   *
   * Indicates the format of the post content.
   *
   * This field is mandatory and is the discriminator for the post content
   * variants.
   */
  post_type: string;

  /**
   * Title of the post, max 300 characters.
   *
   * Represents the headline or brief summary of the post content.
   */
  title: string;

  /**
   * Text content for text posts.
   *
   * Required if post_type is 'text'. Maximum length is 10,000 characters.
   */
  body_text?: string | null | undefined;

  /**
   * URL for link posts.
   *
   * Required if post_type is 'link'. Must be a valid HTTP or HTTPS URL.
   */
  link_url?: string | null | undefined;

  /**
   * URL to the image file for image posts.
   *
   * Required if post_type is 'image'. Must represent a valid image URL.
   */
  image_url?: string | null | undefined;

  /**
   * Creation timestamp of the post.
   *
   * Indicates when the post was initially created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of the post.
   *
   * Tracks when the post was last modified.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp.
   *
   * Null if the post is active; contains timestamp if deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Status representing lifecycle or workflow state.
   *
   * Indicates the current state such as 'draft', 'published', 'archived'.
   */
  status?: string | null | undefined;

  /**
   * Business-specific status or lifecycle state.
   *
   * Used to track domain-specific workflow stages.
   */
  business_status?: string | null | undefined;
};
export namespace IRedditCommunityPosts {
  /**
   * Request body schema for creating a new post within a community.
   *
   * Rules:
   *
   * - `author_member_id` and `author_guest_id` are not expected from client;
   *   set by backend from authenticated context.
   * - `post_type` determines which content field (`body_text`, `link_url`,
   *   `image_url`) must be populated.
   * - `title` is mandatory with a length restriction of maximum 300 characters.
   * - `body_text` used only if `post_type` is `text` with maximum 10,000
   *   characters.
   * - `link_url` used only if `post_type` is `link` and must be a valid URL.
   * - `image_url` used only if `post_type` is `image` and should reference a
   *   single image.
   *
   * This schema corresponds to the creation DTO for the
   * `reddit_community_posts` table.
   */
  export type ICreate = {
    /**
     * Authoring member's ID, nullable if guest authoring. Should not be
     * provided by client; assigned by backend from auth context.
     */
    author_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Authoring guest's ID, nullable if member authoring. Should not be
     * provided by client; assigned by backend from auth context.
     */
    author_guest_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Identifier of the community where the post is created. */
    reddit_community_community_id: string & tags.Format<"uuid">;

    /**
     * Type of post content: text, link, or image. Determines which content
     * field is required.
     */
    post_type: string;

    /** Title of the post with a maximum length of 300 characters. */
    title: string;

    /** Text content for text posts only, up to 10,000 characters. */
    body_text?: string | null | undefined;

    /** URL for link posts, must be valid http/https URL. */
    link_url?: string | null | undefined;

    /** URL for image posts, should point to a single image resource. */
    image_url?: string | null | undefined;
  };

  /**
   * Update DTO for post entity allowing partial modifications.
   *
   * All fields are optional to support partial updates.
   *
   * Ownership fields like author IDs should not be changed in practice.
   *
   * Soft deletion and status fields can be updated by authorized services.
   *
   * Reflects the 'reddit_community_posts' table with fields adapted for
   * update operations.
   *
   * No new properties outside of the Prisma model are introduced here.
   *
   * The schema precisely conveys post entity properties subject to update.
   */
  export type IUpdate = {
    /**
     * The member user who authored the post, nullable for guest posts.
     *
     * Cannot be updated to a different author to maintain ownership
     * integrity.
     */
    author_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * The guest user who authored the post, nullable for member posts.
     *
     * Cannot be updated to a different author to maintain ownership
     * integrity.
     */
    author_guest_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Identifier of the community this post belongs to.
     *
     * Updating the community of a post may impact its visibility and access
     * control.
     */
    reddit_community_community_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of the post content: text, link, or image.
     *
     * Indicates the format of the post content.
     *
     * Impacts which content field is relevant.
     *
     * Typically immutable after creation, but may be updated in rare cases.
     */
    post_type?: string | undefined;

    /**
     * Title of the post, max 300 characters.
     *
     * Represents the headline or brief summary of the post content.
     *
     * Can be updated to correct or clarify subject matter.
     */
    title?: string | undefined;

    /**
     * Text content for text posts.
     *
     * Required if post_type is 'text'. Maximum length is 10,000 characters.
     */
    body_text?: string | null | undefined;

    /**
     * URL for link posts.
     *
     * Required if post_type is 'link'. Must be a valid HTTP or HTTPS URL.
     */
    link_url?: string | null | undefined;

    /**
     * URL to the image file for image posts.
     *
     * Required if post_type is 'image'. Must represent a valid image URL.
     */
    image_url?: string | null | undefined;

    /**
     * Soft delete timestamp.
     *
     * Marked when the post is deleted, null otherwise.
     *
     * Updating this field typically performed by system mechanisms.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Status representing lifecycle or workflow state.
     *
     * Indicates the current state such as 'draft', 'published', 'archived'.
     */
    status?: string | null | undefined;

    /**
     * Business-specific status or lifecycle state.
     *
     * Used to track domain-specific workflow stages.
     */
    business_status?: string | null | undefined;
  };
}
