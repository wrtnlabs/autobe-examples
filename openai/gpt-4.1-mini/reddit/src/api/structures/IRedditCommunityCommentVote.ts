import { tags } from "typia";

/**
 * Represents a vote by a member on a reddit community comment. Tracks the value
 * of the vote (up, down, or removed), timestamps, and relations to member and
 * comment.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditCommunityCommentVote = {
  /** Unique identifier for the comment vote record. */
  id: string & tags.Format<"uuid">;

  /** ID of the member who cast the vote. */
  member_id: string & tags.Format<"uuid">;

  /** ID of the comment being voted on. */
  comment_id: string & tags.Format<"uuid">;

  /** Value of the vote: +1 for upvote, -1 for downvote, 0 for vote removed. */
  vote_value: number & tags.Type<"int32">;

  /** Timestamp when the vote was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the vote was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the vote was soft deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IRedditCommunityCommentVote {
  /**
   * Search parameters for redditCommunity comment votes including pagination
   * and sorting.
   */
  export type IRequest = {
    /** Page number. */
    page: number;

    /** Limitation of records per a page. @default 100 */
    limit: number;

    /** Sort property name */
    sort_by?: string | undefined;

    /** Sort order direction, asc or desc. */
    order_by?: "asc" | "desc" | undefined;
  };

  /**
   * Request body to create a vote on a reddit community comment. Includes
   * member ID, comment ID, and vote value (+1 upvote, -1 downvote, or 0 for
   * removing the vote). Supports timestamps and relations for auditing.
   */
  export type ICreate = {
    /** ID of the member who cast the vote. */
    member_id: string;

    /** ID of the comment being voted on. */
    comment_id: string & tags.Format<"uuid">;

    /**
     * Value of the vote: +1 for upvote, -1 for downvote, 0 for vote
     * removal.
     */
    vote_value: number & tags.Type<"int32">;

    /** Primary key of the vote record. */
    id?: (string & tags.Format<"uuid">) | undefined;

    /** Timestamp when the vote was created. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the vote was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the vote was soft deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** The member who cast the vote. */
    member?: {} | null | undefined;

    /** The comment being voted on. */
    comment?: {} | null | undefined;
  };

  /**
   * Request body to update an existing vote on a reddit community comment.
   * Allows modification of the vote value (+1 upvote, -1 downvote, 0 vote
   * removal) and timestamps for audit.
   */
  export type IUpdate = {
    /** Updated vote value: +1 for upvote, -1 for downvote, 0 to remove vote. */
    vote_value: number & tags.Type<"int32">;

    /** Primary key of the vote record. */
    id?: (string & tags.Format<"uuid">) | undefined;

    /** ID of the member who cast the vote. */
    member_id?: (string & tags.Format<"uuid">) | undefined;

    /** ID of the comment being voted on. */
    comment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Timestamp when the vote was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the vote was soft deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** The member who cast the vote. */
    member?: {} | null | undefined;

    /** The comment being voted on. */
    comment?: {} | null | undefined;
  };
}
