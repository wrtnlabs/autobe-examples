import { tags } from "typia";

/**
 * Community moderators are members assigned to manage and moderate specific
 * communities. This table links members to communities, defining their
 * moderator roles and permissions within those communities.
 *
 * This entity includes unique identifiers, membership associations, timestamps
 * for role assignment, and audit information.
 *
 * Relations reference the reddit_community_members and
 * reddit_community_communities tables.
 *
 * This type reflects the business concept of a user assigned special privileges
 * to oversee community content.
 *
 * The entity supports role-based access control and moderation workflows within
 * the platform.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditCommunityCommunityModerators = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Belonged community member's reddit_community_members.id */
  member_id: string & tags.Format<"uuid">;

  /** Belonged community's reddit_community_communities.id */
  community_id: string & tags.Format<"uuid">;

  /** Timestamp when member was assigned as moderator of the community. */
  assigned_at: string & tags.Format<"date-time">;

  /** Timestamp of moderator record creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to moderator record. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRedditCommunityCommunityModerators {
  /**
   * Request parameters for searching and filtering redditCommunity community
   * moderators with pagination and sorting options.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Limitation of records per a page.
     *
     * @default 100
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Search keyword for filtering community moderators. */
    search?: string | undefined;

    /** Filter by member UUID to find specific moderators. */
    memberId?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by community UUID to find moderators in a specific community. */
    communityId?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter for moderators assigned after this ISO datetime in UTC. */
    assignedAfter?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter for moderators assigned before this ISO datetime in UTC. */
    assignedBefore?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Update DTO for a community moderator record.
   *
   * Allows updating timestamps and associations for an existing community
   * moderator.
   *
   * Membership and community identifiers are required for identification and
   * relationship maintenance.
   *
   * Timestamps track assignment creation and last update times.
   *
   * Used in moderator management APIs.
   */
  export type IUpdate = {
    /** Timestamp when member was assigned as a moderator of the community. */
    assigned_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of moderator record creation. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Primary key of the community moderator record. */
    id: string & tags.Format<"uuid">;

    /** Member ID of the community moderator. */
    member_id: string & tags.Format<"uuid">;

    /** Timestamp of last update to moderator record. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Community ID of the community moderator record. */
    community_id: string & tags.Format<"uuid">;
  };

  /**
   * Summary view of a community moderator assignment within the
   * redditCommunity platform.
   *
   * This schema includes essential properties such as assignment ID,
   * associated member ID, community ID, and the assignment timestamp. It is
   * optimized for listing or referencing moderator assignments without full
   * detail.
   *
   * The summary omits detailed member or community properties to reduce
   * payload size and focuses on identifying the moderator and their
   * assignment within a community context.
   *
   * This type corresponds to the `reddit_community_community_moderators`
   * table in the Prisma schema and is used primarily in API responses that
   * list or summarize moderator assignments.
   */
  export type ISummary = {
    /**
     * Unique identifier of the community moderator assignment record. This
     * ID is used to reference the assignment in requests and responses.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the member user assigned as a moderator within a
     * community. This links to the member entity and defines the
     * moderator's identity.
     */
    member_id: string & tags.Format<"uuid">;

    /**
     * Identifier of the community for which the member is a moderator. This
     * links to the community entity and defines the scope of moderation
     * privileges.
     */
    community_id: string & tags.Format<"uuid">;

    /**
     * Timestamp representing the exact date and time when the member was
     * assigned as a moderator for the community. This helps in audit and
     * role duration tracking.
     */
    assigned_at: string & tags.Format<"date-time">;
  };
}
