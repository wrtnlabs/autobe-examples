import { tags } from "typia";

/**
 * User karma representing the reputation accumulated by a member based on
 * voting activity on their posts and comments. Karma values are broken down
 * into components for post upvotes, post downvotes, comment upvotes, and
 * comment downvotes. The total karma represents the overall reputation score.
 * The entity includes timestamps for creation, updates, and soft deletion
 * status, closely reflecting the underlying 'reddit_community_user_karma'
 * prisma model.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRedditCommunityUserKarma = {
  /** Primary key of the karma record. */
  id: string & tags.Format<"uuid">;

  /** Identifier of the member whose karma is recorded. */
  reddit_community_member_id: string & tags.Format<"uuid">;

  /** Accumulated karma points from upvotes on the member's posts. */
  post_upvotes_karma: number & tags.Type<"int32">;

  /** Karma points deducted due to downvotes on the member's posts. */
  post_downvotes_karma: number & tags.Type<"int32">;

  /** Accumulated karma points from upvotes on the member's comments. */
  comment_upvotes_karma: number & tags.Type<"int32">;

  /** Karma points deducted due to downvotes on the member's comments. */
  comment_downvotes_karma: number & tags.Type<"int32">;

  /** Sum of all karma points from posts and comments. */
  total_karma: number & tags.Type<"int32">;

  /** Timestamp when the karma record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the karma record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. Null if the karma record is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
