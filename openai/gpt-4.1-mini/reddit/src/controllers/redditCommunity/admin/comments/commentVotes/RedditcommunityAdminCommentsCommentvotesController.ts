import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patchRedditCommunityAdminCommentsCommentIdCommentVotes } from "../../../../../providers/patchRedditCommunityAdminCommentsCommentIdCommentVotes";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

import { IPageIRedditCommunityCommentVote } from "../../../../../api/structures/IPageIRedditCommunityCommentVote";
import { IRedditCommunityCommentVote } from "../../../../../api/structures/IRedditCommunityCommentVote";

@Controller("/redditCommunity/admin/comments/:commentId/commentVotes")
export class RedditcommunityAdminCommentsCommentvotesController {
  /**
   * Retrieve paginated list of votes on a comment.
   *
   * Retrieve a paginated list of votes on a particular comment identified by
   * commentId.
   *
   * This endpoint accesses the reddit_community_comment_votes table filtering
   * votes for given commentId.
   *
   * Supports advanced filtering, sorting, and pagination through request body
   * parameters.
   *
   * Accessible only to roles with communityModerator or admin privileges.
   *
   * The response returns a paginated collection of matching votes.
   *
   * Request Body:
   *
   * - Contains filter and pagination criteria as per
   *   IRedditCommunityCommentVote.IRequest.
   *
   * @param connection
   * @param commentId Unique identifier of the target comment
   * @param body Parameters to filter, paginate, and sort the list of comment
   *   votes
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async indexCommentVotes(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("commentId")
    commentId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IRedditCommunityCommentVote.IRequest,
  ): Promise<IPageIRedditCommunityCommentVote> {
    try {
      return await patchRedditCommunityAdminCommentsCommentIdCommentVotes({
        admin,
        commentId,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
