import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postRedditCommunityReports } from "../../../providers/postRedditCommunityReports";

import { IRedditCommunityReport } from "../../../api/structures/IRedditCommunityReport";

@Controller("/redditCommunity/reports")
export class RedditcommunityReportsController {
  /**
   * Create a content moderation report for posts, comments, or users.
   *
   * Create a report about a post, comment, or user in the redditCommunity
   * platform for content moderation purposes.
   *
   * This operation allows both guests and authenticated members to submit
   * reports. Guests must provide their guest ID if available. Members provide
   * their member ID. Reports can reference the content being reported by post
   * ID, comment ID, or user ID.
   *
   * The report category must be specified following the allowed types such as
   * spam, abuse, or other violation categories. An optional description can
   * provide additional context for moderators.
   *
   * Security checks ensure only valid identifiers and statuses are accepted.
   * Successful creation results in a report record with creation timestamp and
   * initial status.
   *
   * Related operations include updating report status or assigning moderators
   * to reports.
   *
   * Errors occur if required fields are missing or identifiers do not exist in
   * the system. Validation enforces proper data types and formats.
   *
   * @param connection
   * @param body Report creation data
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: IRedditCommunityReport.ICreate,
  ): Promise<IRedditCommunityReport> {
    try {
      return await postRedditCommunityReports({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
