import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { putRedditCommunityCommunityModeratorRedditCommunityGuestsId } from "../../../../providers/putRedditCommunityCommunityModeratorRedditCommunityGuestsId";
import { CommunitymoderatorAuth } from "../../../../decorators/CommunitymoderatorAuth";
import { CommunitymoderatorPayload } from "../../../../decorators/payload/CommunitymoderatorPayload";

import { IRedditCommunityGuest } from "../../../../api/structures/IRedditCommunityGuest";

@Controller("/redditCommunity/communityModerator/redditCommunityGuests/:id")
export class RedditcommunityCommunitymoderatorRedditcommunityguestsController {
  /**
   * Update a redditCommunityGuest by ID.
   *
   * Update the redditCommunityGuest entity specified by the unique identifier.
   * This operation modifies guest-related session data such as session
   * identifier, IP address, and user agent string used to track unauthenticated
   * user activity.
   *
   * Security constraints imply only trusted system roles or services should
   * update guest data to maintain audit integrity. The guest entity is tied to
   * posts, comments, and reports authored anonymously.
   *
   * The update payload allows changing sessionId and ipAddress, and optionally
   * userAgent. CreatedAt and updatedAt are managed by the system and should not
   * be modified manually.
   *
   * This operation relates directly to the `reddit_community_guests` table in
   * the database, which enforces uniqueness on sessionId and has indexes on IP
   * address and creation timestamp.
   *
   * Inputs requiring validation:
   *
   * - Path parameter `id`: must be a valid UUID corresponding to an existing
   *   guest
   * - Request body: must comply with input schema for guest updates
   *
   * Expected errors include 404 for unknown guest ID, 400 for invalid input,
   * and 403 for unauthorized access.
   *
   * @param connection
   * @param id Unique identifier of the target guest
   * @param body Guest update data payload
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put()
  public async update(
    @CommunitymoderatorAuth()
    communityModerator: CommunitymoderatorPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
    @TypedBody()
    body: IRedditCommunityGuest.IUpdate,
  ): Promise<IRedditCommunityGuest> {
    try {
      return await putRedditCommunityCommunityModeratorRedditCommunityGuestsId({
        communityModerator,
        id,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
