import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Guest user entity representing an unauthenticated visitor session. This
 * entity track unique session tokens, client IP, user agent, and timestamps for
 * creation and modification.
 *
 * This schema directly corresponds to the shopping_mall_guests table in the
 * Prisma database. It excludes sensitive information as guests do not have
 * authentication credentials.
 *
 * All properties have detailed descriptions referencing the original Prisma
 * schema columns.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallGuest = {
  /** Unique identifier of the guest session */
  id: string & tags.Format<"uuid">;

  /** Unique session token identifying the guest session */
  session_token: string;

  /** IP address from which the guest accessed the system, nullable */
  ip_address?: string | null | undefined;

  /** Browser or client user agent string of the guest session, nullable */
  user_agent?: string | null | undefined;

  /** Timestamp when this guest record was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this guest record was last updated */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp marking soft deletion of this guest record, null if active */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallGuest {
  /**
   * Information required to register a new guest session
   *
   * This schema defines the payload for creating a new guest session. The
   * required field is the unique session token. Optional fields include IP
   * address and user agent string to describe guest environment without
   * authenticating.
   */
  export type ICreate = {
    /** Unique session token identifying the guest session. */
    session_token: string;

    /** IP address from which the guest accessed the system. */
    ip_address?: string | null | undefined;

    /** Browser or client user agent string of the guest session. */
    user_agent?: string | null | undefined;
  };

  /**
   * Authorization response containing JWT token.
   *
   * This response is returned after successful authentication operations such
   * as guest join or token refresh.
   *
   * The guest session id uniquely identifies the session associated with the
   * tokens.
   */
  export type IAuthorized = {
    /** Unique identifier of the guest session record */
    id: string & tags.Format<"uuid">;

    /** Unique session token identifying the guest session */
    session_token: string;

    /** IP address from which the guest accessed the system, nullable */
    ip_address?: string | null | undefined;

    /** Browser or client user agent string of the guest session, nullable */
    user_agent?: string | null | undefined;

    /** Timestamp when this guest record was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when this guest record was last updated */
    updated_at: string & tags.Format<"date-time">;

    /** Timestamp marking soft deletion of this guest record, null if active */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Payload for refreshing JWT tokens for a guest session. */
  export type IRefresh = {
    /** Refresh token previously issued to the guest for session renewal. */
    refresh_token: string;
  };

  /**
   * Request parameters for listing shopping mall guest sessions with search,
   * filter, pagination, and sorting controls.
   */
  export type IRequest = {
    /** Page number for pagination, must be a positive integer */
    page: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Number of items per page, maximum allowed to prevent overload */
    limit: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>;

    /**
     * Optional search term to filter guest sessions by session token or
     * user agent
     */
    search?: string | undefined;

    /** Filter guest sessions by IP address, format IPv4 or IPv6 */
    ipAddress?: string | null | undefined;

    /** Filter guest sessions by user agent or portion thereof */
    userAgent?: string | null | undefined;

    /** Field to sort by, either created_at or updated_at */
    sortBy?: "created_at" | "updated_at" | undefined;

    /** Sort order direction */
    sortOrder?: "asc" | "desc" | undefined;
  };

  /**
   * Properties for updating an existing guest session, encompassing session
   * token, IP address, and user agent information.
   */
  export type IUpdate = {
    /** Unique session token identifying the guest session. */
    session_token: string;

    /** IP address from which the guest accessed the system. */
    ip_address?: string | null | undefined;

    /** Browser or client user agent string of the guest session. */
    user_agent?: string | null | undefined;
  };

  /**
   * Summary view of a guest session for monitoring and analytics.
   *
   * Includes primary identifiers, session token, and temporal metadata.
   *
   * Optional IP address and user agent fields support privacy-aware session
   * tracking.
   */
  export type ISummary = {
    /** Unique identifier for the guest session record. */
    id: string & tags.Format<"uuid">;

    /** Unique session token identifying the guest session. */
    session_token: string;

    /**
     * IP address from which the guest accessed the system; nullable for
     * privacy.
     */
    ip_address?: string | null | undefined;

    /**
     * Browser or client user agent string of the guest session; nullable if
     * unknown.
     */
    user_agent?: string | null | undefined;

    /** Timestamp when this guest session was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when this guest session record was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /** Timestamp marking soft deletion of this guest record; null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
