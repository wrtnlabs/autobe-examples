import { tags } from "typia";

/**
 * Order item entity representing individual SKU units within shopping mall
 * orders. Contains quantity and pricing details.
 *
 * Each order item links to a specific SKU and belongs to a particular order.
 * Records created and updated timestamps for audit.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderItem = {
  /** Primary Key of the order item */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged order's ID. Links this order item to a parent shopping mall
   * order.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /** Belonged SKU's ID. References the SKU associated with this order item. */
  shopping_mall_sku_id: string & tags.Format<"uuid">;

  /** Quantity of the SKU ordered. */
  quantity: number & tags.Type<"int32">;

  /** Price per unit of the SKU at the time of order. */
  unit_price: number;

  /** Total price for the SKU line item (quantity * unit_price). */
  total_price: number;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallOrderItem {
  /**
   * Request DTO for searching and filtering order items with pagination
   * support.
   *
   * Includes filtering by order ID, SKU ID, quantity, pricing, and date
   * ranges.
   */
  export type IRequest = {
    /**
     * Belonged order's unique identifier. Optional filter for querying
     * order items.
     */
    shopping_mall_order_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Belonged SKU's unique identifier. Optional filter for querying order
     * items.
     */
    shopping_mall_sku_id?: (string & tags.Format<"uuid">) | undefined;

    /** Quantity of the SKU ordered. Optional filter. */
    quantity?: (number & tags.Type<"int32">) | undefined;

    /** Price per unit of the SKU at the time of order. Optional filter. */
    unit_price?: number | undefined;

    /**
     * Total price for the SKU line item (quantity * unit_price). Optional
     * filter.
     */
    total_price?: number | undefined;

    /**
     * Timestamp from when the record was created (start range for
     * filtering). Optional filter.
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Timestamp until when the record was created (end range for
     * filtering). Optional filter.
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Timestamp from when the record was updated (start range for
     * filtering). Optional filter.
     */
    updated_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Timestamp until when the record was updated (end range for
     * filtering). Optional filter.
     */
    updated_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Field to order results by. Optional. */
    orderBy?: string | undefined;
  };

  /**
   * Request body schema for creating a new order item. Contains necessary
   * identifiers and pricing information.
   *
   * Properties are required to ensure complete order item creation data is
   * provided.
   *
   * No ID or timestamps are included as those are set by the system
   * automatically.
   */
  export type ICreate = {
    /** Belonged order's ID. Required to associate the item to an order. */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /** SKU identifier for the order item. */
    shopping_mall_sku_id: string & tags.Format<"uuid">;

    /** Quantity of the SKU ordered. */
    quantity: number & tags.Type<"int32">;

    /** Price per unit of the SKU at the time of order. */
    unit_price: number;

    /**
     * Total price for the SKU line item (calculated as quantity *
     * unit_price).
     */
    total_price: number;
  };

  /**
   * Update DTO for shopping mall order item. This allows modifying quantity
   * and pricing information of an order's SKU item, while preserving
   * identification references to order and SKU.
   */
  export type IUpdate = {
    /** Quantity of the SKU ordered. Indicates number of units being updated. */
    quantity?: (number & tags.Type<"int32">) | undefined;

    /**
     * Price per unit of the SKU at the time of order, used for
     * recalculating totals.
     */
    unit_price?: number | undefined;

    /** Total price for the SKU line item (quantity * unit_price). */
    total_price?: number | undefined;

    /**
     * Belonged order's unique ID, immutable and required for
     * identification.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /** Belonged SKU's unique ID, immutable for order item identity. */
    shopping_mall_sku_id: string & tags.Format<"uuid">;
  };
}
