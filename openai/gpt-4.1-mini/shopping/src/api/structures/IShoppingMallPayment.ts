import { tags } from "typia";

/**
 * Primary business entity representing payment transactions associated with
 * orders.
 *
 * Records include payment amount, method, confirmation status, and related
 * timestamps. Supports tracking multiple payments per order in complex payment
 * scenarios.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallPayment = {
  /**
   * Primary Key.
   *
   * Unique identifier for the payment record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged order's {@link shopping_mall_orders.id}.
   *
   * Foreign key referencing the associated order.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * Amount paid in this transaction.
   *
   * Represents the monetary value of the payment.
   */
  payment_amount: number;

  /**
   * Payment method used (e.g., credit card, PayPal, bank transfer).
   *
   * Indicates the mode of payment utilized.
   */
  payment_method: string;

  /**
   * Status of the payment (Pending, Completed, Failed).
   *
   * Reflects the current state of the payment process.
   */
  payment_status: string;

  /**
   * External payment gateway transaction identifier, nullable if not
   * applicable.
   *
   * Used to track the payment in external systems.
   */
  transaction_id?: string | null | undefined;

  /**
   * Timestamp when payment was confirmed.
   *
   * Indicates when the payment was verified successfully.
   */
  confirmed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Record creation timestamp.
   *
   * The date and time when this payment record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record update timestamp.
   *
   * The date and time when this payment record was last modified.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallPayment {
  /**
   * Update DTO for shopping mall payment transaction. Supports modifying
   * payment amount, method, status, transaction ID, and confirmation
   * timestamp to reflect the current state of a payment.
   */
  export type IUpdate = {
    /** Timestamp when payment was confirmed, nullable if not yet confirmed. */
    confirmed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Amount paid in this transaction, reflecting the current payment
     * value.
     */
    payment_amount: number;

    /** Payment method used, e.g., credit card, PayPal, etc. */
    payment_method: string;

    /**
     * Status of the payment, such as Pending, Completed, Failed, reflecting
     * current state.
     */
    payment_status: string;

    /**
     * Belonged order's unique ID linking payment to the corresponding
     * order.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * External payment gateway's transaction identifier, nullable if not
     * available.
     */
    transaction_id?: string | null | undefined;
  };

  /**
   * Primary business entity representing payment transactions associated with
   * orders.
   *
   * Records include payment amount, method, confirmation status, and related
   * timestamps. Supports tracking multiple payments per order in complex
   * payment scenarios.
   */
  export type ICreate = {
    /**
     * Belonged order's {@link shopping_mall_orders.id}.
     *
     * Foreign key referencing the associated order.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Amount paid in this transaction.
     *
     * Represents the monetary value of the payment.
     */
    payment_amount: number;

    /**
     * Payment method used (e.g., credit card, PayPal, bank transfer).
     *
     * Indicates the mode of payment utilized.
     */
    payment_method: string;

    /**
     * Status of the payment (Pending, Completed, Failed).
     *
     * Reflects the current state of the payment process.
     */
    payment_status: string;

    /**
     * External payment gateway transaction identifier, nullable if not
     * applicable.
     *
     * Used to track the payment in external systems.
     */
    transaction_id?: string | null | undefined;

    /**
     * Timestamp when payment was confirmed.
     *
     * Indicates when the payment was verified successfully.
     */
    confirmed_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
