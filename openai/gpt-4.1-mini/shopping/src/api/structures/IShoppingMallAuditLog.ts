import { tags } from "typia";

/**
 * Audit log entry capturing administrator actions and system events with
 * details and timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAuditLog = {
  /** Unique identifier of the audit log entry. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique identifier of the administrator who performed the action, nullable
   * if not applicable.
   */
  admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Unique identifier of the entity affected by the action, nullable if not
   * applicable.
   */
  entity_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Description of the action performed. */
  action: string;

  /** Timestamp when the action was performed. */
  timestamp: string & tags.Format<"date-time">;

  /** Optional, additional details about the action. */
  details?: string | null | undefined;
};
export namespace IShoppingMallAuditLog {
  /**
   * Parameters for searching and filtering audit logs with pagination
   * support.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Limitation of records per a page. @default 100 */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** A full-text search string for searching in audit logs. */
    search?: string | undefined;

    /** Unique identifier of the administrator who performed the action. */
    admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Unique identifier of the affected entity, such as an order or
     * product.
     */
    entity_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter for specific actions performed in the system. */
    action?: string | undefined;

    /** Filter for audit logs before this timestamp. */
    timestamp_before?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for audit logs after this timestamp. */
    timestamp_after?: (string & tags.Format<"date-time">) | undefined;
  };
}
