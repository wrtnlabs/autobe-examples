import { tags } from "typia";

/**
 * Cart items represent individual SKU units added by customers into their
 * shopping carts. Each item belongs to a specific shopping cart and points
 * directly to a SKU variant. This subsidiary table supports detailed cart
 * composition and enables dynamic cart item management.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Carts
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCartItem = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Contained shopping cart's ID. */
  shopping_mall_shopping_cart_id: string & tags.Format<"uuid">;

  /** Referenced SKU variant's ID. */
  shopping_mall_sku_id: string & tags.Format<"uuid">;

  /** Quantity of SKU units added to the cart. */
  quantity: number & tags.Type<"int32">;

  /** Timestamp when this cart item was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this cart item was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp for soft delete, null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCartItem {
  /**
   * Request parameters for searching and filtering shopping cart items.
   * Includes optional filters for shopping cart ID, SKU ID, quantity, and
   * timestamps. Supports partial match or range queries by accepting null
   * values where applicable.
   */
  export type IRequest = {
    /** Identifier of the parent shopping cart containing these items. */
    shopping_mall_shopping_cart_id: string & tags.Format<"uuid">;

    /**
     * Optional SKU identifier; may be null when filtering on other
     * criteria.
     */
    shopping_mall_sku_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional quantity of the SKU in the cart; nullable for filtering. */
    quantity?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Optional timestamp filter to search for cart items created at a
     * specific time.
     */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional timestamp filter to search for cart items updated at a
     * specific time.
     */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request payload to add a new SKU item into a shopping cart. Specifies the
   * shopping cart to add to, the SKU to add, and the quantity of that SKU.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Carts
   */
  export type ICreate = {
    /** Referenced shopping cart ID to which this item will be added. */
    shopping_mall_shopping_cart_id: string & tags.Format<"uuid">;

    /** Referenced SKU variant's ID to be added. */
    shopping_mall_sku_id: string & tags.Format<"uuid">;

    /** Number of SKU units to add. */
    quantity: number & tags.Type<"int32">;
  };

  /**
   * Update object for a shopping mall cart item. Contains editable properties
   * to change the quantity of the SKU in the customer's cart.
   */
  export type IUpdate = {
    /** Quantity of the SKU in the cart item. */
    quantity: number & tags.Type<"int32">;
  };
}
