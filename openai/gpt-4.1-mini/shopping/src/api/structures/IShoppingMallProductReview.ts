import { tags } from "typia";

/**
 * Product review entity representing feedback submitted by customers who
 * purchased the product.
 *
 * Includes rating, optional textual review, moderation status, and timestamps
 * for tracking creation, updates, and soft deletion.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallProductReview = {
  /** Unique identifier of the product review. */
  id: string & tags.Format<"uuid">;

  /** Unique identifier of the customer who submitted the review. */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /** Unique identifier of the product being reviewed. */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /**
   * Unique identifier of the order confirming the purchase for review
   * eligibility.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /** The rating score given by the customer, between 1 and 5 inclusive. */
  rating: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>;

  /** Optional textual content of the product review. */
  review_text?: string | null | undefined;

  /** Moderation status of the review that determines its visibility. */
  status: "pending" | "approved" | "rejected";

  /** Timestamp when the review was created in ISO 8601 format. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the review was last updated in ISO 8601 format. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Nullable timestamp indicating soft deletion of the review, or null if
   * active.
   */
  deleted_at: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallProductReview {
  /**
   * Request object for searching and filtering product reviews.
   *
   * Supports pagination and multi-criteria filtering such as rating, status,
   * product, and customer IDs.
   */
  export type IRequest = {
    /** Page number starting from 1 for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Number of items per page to retrieve. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * General search text for filtering reviews by content or other
     * clerical fields.
     */
    search?: string | undefined;

    /** Filter by exact rating value between 1 and 5. */
    filterRating?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>)
      | undefined;

    /** Filter reviews by moderation status. */
    filterStatus?: "pending" | "approved" | "rejected" | undefined;

    /** Filter reviews by associated product ID. */
    filterProductId?: (string & tags.Format<"uuid">) | undefined;

    /** Filter reviews by customer ID who submitted the review. */
    filterCustomerId?: (string & tags.Format<"uuid">) | undefined;
  };

  /**
   * Data required to create a new product review. Includes references to the
   * customer, product, and order confirming purchase. Captures customer's
   * rating and optional text review content. The review's moderation status
   * is initialized as 'pending' awaiting admin approval. This ensures only
   * verified buyers can submit reviews, maintaining review authenticity and
   * quality.
   */
  export type ICreate = {
    /**
     * Unique identifier of the customer submitting the review. References
     * the shopping_mall_customers.id field to ensure the reviewer is a
     * verified buyer.
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the product being reviewed. Must correspond to
     * an existing product in the shopping mall platform as indexed in
     * shopping_mall_products.id.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the order confirming purchase eligibility.
     * Ensures that reviews are submitted only by customers who have
     * completed a transaction containing the product.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Rating score provided by the customer for the product. Must be an
     * integer between 1 and 5 inclusive, representing the customer's
     * satisfaction level.
     */
    rating: number & tags.Type<"int32">;

    /**
     * Optional textual content of the customer review. Can provide
     * qualitative feedback, suggestions, or comments related to the product
     * experience. Maximum length typically limited to encourage concise
     * feedback.
     */
    review_text?: string | null | undefined;

    /**
     * Moderation status of the review. Newly created reviews start with
     * 'pending' status awaiting review by platform administrators.
     */
    status: "pending" | "approved" | "rejected";
  };

  /**
   * Data fields allowed for updating an existing product review. Allows
   * modification of the rating score, textual content, and moderation status.
   * This enables customers to revise their feedback and platform
   * administrators to manage review visibility.
   */
  export type IUpdate = {
    /**
     * Updated rating score from 1 to 5 inclusive. This reflects the
     * customer's revised evaluation of the product.
     */
    rating: number & tags.Type<"int32">;

    /**
     * Updated optional text content for the review. Allows customers to
     * modify their feedback or add additional comments.
     */
    review_text?: string | null | undefined;

    /**
     * Updated moderation status reflecting the current state after review
     * edits. Changes to this status may trigger further visibility
     * management actions on the platform.
     */
    status: "pending" | "approved" | "rejected";
  };

  /**
   * Summary view of a product review in the shopping mall platform.
   *
   * Optimized for listing reviews with critical identifiers such as customer,
   * product, and order IDs,
   *
   * Including rating, moderation status, and timestamps for display and
   * filtering.
   *
   * Excludes detailed review text and moderation comments.
   *
   * Each property is documented referencing Prisma schema column comments.
   */
  export type ISummary = {
    /**
     * Primary key of the product review.
     *
     * Uniquely identifies this review in the database.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the customer who submitted the review.
     *
     * Links the review to the customer's account.
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the product that is reviewed.
     *
     * Associates the review with a specific product.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the order confirming the purchase.
     *
     * Ensures review eligibility by linking to the transaction.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Numeric score given by the customer for the product.
     *
     * Typically ranged from 1 to 5 indicating satisfaction level.
     */
    rating: number & tags.Type<"int32">;

    /**
     * Moderation status of the review.
     *
     * Indicates if the review is pending approval, approved, or rejected.
     */
    status: string;

    /**
     * Timestamp recording when the review was created.
     *
     * Useful for sorting and auditing.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp recording the last update time for the review.
     *
     * Reflects modifications and moderation changes.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
