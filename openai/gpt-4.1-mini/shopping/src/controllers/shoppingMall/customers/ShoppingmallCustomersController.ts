import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postShoppingMallCustomers } from "../../../providers/postShoppingMallCustomers";

import { IShoppingMallCustomer } from "../../../api/structures/IShoppingMallCustomer";

@Controller("/shoppingMall/customers")
export class ShoppingmallCustomersController {
  /**
   * Create a new customer account.
   *
   * Register a new customer account with the shopping mall platform.
   *
   * Client applications submit required email and password_hash, and optionally
   * include nickname and phone number. The status field typically starts as
   * 'active', but can vary.
   *
   * Email must be unique. Password hash must meet security requirements prior
   * to submission.
   *
   * Upon success, returns customer data excluding sensitive information.
   *
   * No authentication required for this public operation.
   *
   * Request body must comply with the defined DTO schema ensuring correct field
   * validation and formatting.
   *
   * @param connection
   * @param body Customer registration payload
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: IShoppingMallCustomer.ICreate,
  ): Promise<IShoppingMallCustomer> {
    try {
      return await postShoppingMallCustomers({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
