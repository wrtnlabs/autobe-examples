import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patchShoppingMallAdminCustomers } from "../../../../providers/patchShoppingMallAdminCustomers";
import { AdminAuth } from "../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../decorators/payload/AdminPayload";

import { IPageIShoppingMallCustomer } from "../../../../api/structures/IPageIShoppingMallCustomer";
import { IShoppingMallCustomer } from "../../../../api/structures/IShoppingMallCustomer";

@Controller("/shoppingMall/admin/customers")
export class ShoppingmallAdminCustomersController {
  /**
   * Retrieve filtered and paginated customer list.
   *
   * Retrieve a filtered and paginated list of customers in the shopping mall
   * platform.
   *
   * Supports advanced search parameters including partial nickname match,
   * status filtering, and paging.
   *
   * Restricted to admin role due to sensitivity of customer information.
   *
   * Returns customer summaries including limited identification and status
   * information.
   *
   * Requires search criteria and pagination parameters in the request body
   * represented by IShoppingMallCustomer.IRequest DTO.
   *
   * Response contains a paginated list with customer summaries in
   * IPageIShoppingMallCustomer.ISummary DTO.
   *
   * This endpoint manipulates the shopping_mall_customers table in the
   * database.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for customer
   *   filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @AdminAuth()
    admin: AdminPayload,
    @TypedBody()
    body: IShoppingMallCustomer.IRequest,
  ): Promise<IPageIShoppingMallCustomer.ISummary> {
    try {
      return await patchShoppingMallAdminCustomers({
        admin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
