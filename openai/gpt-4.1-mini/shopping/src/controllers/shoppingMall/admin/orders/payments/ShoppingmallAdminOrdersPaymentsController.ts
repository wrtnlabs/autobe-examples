import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteShoppingMallAdminOrdersOrderIdPaymentsPaymentId } from "../../../../../providers/deleteShoppingMallAdminOrdersOrderIdPaymentsPaymentId";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

@Controller("/shoppingMall/admin/orders/:orderId/payments/:paymentId")
export class ShoppingmallAdminOrdersPaymentsController {
  /**
   * Delete a specific payment for an order.
   *
   * This operation allows deletion of a specific payment entry linked to an
   * order. The payment record identified by paymentId associated with the order
   * identified by orderId will be permanently removed from the database.
   *
   * Security considerations dictate that only authorized users with permissions
   * can perform this deletion due to the financial nature of payment data. No
   * request body is necessary, and no response body is returned.
   *
   * This operation interacts exclusively with the shopping_mall_payments table,
   * ensuring the payment and its related transaction details are fully erased.
   * This endpoint is part of overall order payment management workflows.
   *
   * Possible errors include 404 if the payment or order does not exist, or 403
   * if the user is unauthorized.
   *
   * @param connection
   * @param orderId Unique identifier of the target order
   * @param paymentId Unique identifier of the target payment
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erasePayment(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("orderId")
    orderId: string & tags.Format<"uuid">,
    @TypedParam("paymentId")
    paymentId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteShoppingMallAdminOrdersOrderIdPaymentsPaymentId({
        admin,
        orderId,
        paymentId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
