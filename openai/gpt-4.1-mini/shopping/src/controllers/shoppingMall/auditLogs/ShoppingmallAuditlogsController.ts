import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getShoppingMallAuditLogsId } from "../../../providers/getShoppingMallAuditLogsId";

import { IShoppingMallAuditLog } from "../../../api/structures/IShoppingMallAuditLog";

@Controller("/shoppingMall/auditLogs/:id")
export class ShoppingmallAuditlogsController {
  /**
   * Retrieve detailed information for a single audit log entry.
   *
   * Retrieve a specific audit log record by its unique identifier to obtain
   * comprehensive details of administrative or system actions related to the
   * e-commerce shopping mall platform.
   *
   * This operation requires no special authentication roles as audit logs might
   * be accessible to authorized system services or monitoring tools.
   *
   * Audit logs contain references to administrators and affected entities,
   * enabling detailed tracking of platform activities for compliance and
   * security auditing.
   *
   * The response includes all available audit log information, including action
   * descriptions, timestamps, and any additional metadata.
   *
   * Proper error handling is expected if the audit log ID does not exist or is
   * invalid.
   *
   * @param connection
   * @param id Unique identifier of the audit log entry
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallAuditLog> {
    try {
      return await getShoppingMallAuditLogsId({
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
