{"files":[{"filename":"schema-01-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_users","description":"Core user identity and authentication entity for the platform. Stores login identifiers and credential hash, as well as account lifecycle, consent timestamps, and profile basics. Authors of posts and comments in other components reference this model. Key relationships: referenced by role assignment tables such as {@link community_platform_admin_users}, {@link community_platform_community_moderators}, {@link community_platform_community_owners}, and profile/karma support via {@link community_platform_user_karmas}. Includes Terms/Privacy acceptance timestamps and optional marketing consent to satisfy compliance and audit requirements.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Unique email address used as a primary login identifier. Case-insensitive uniqueness should be enforced at database level (e.g., citext) in addition to application checks.","nullable":false},{"name":"username","type":"string","description":"Public handle for the user. Must be unique across the platform; used for mentions and profile URLs. Prefer case-insensitive uniqueness at DB.","nullable":false},{"name":"password_hash","type":"string","description":"Non-reversible password hash for authentication. Plaintext passwords are never stored.","nullable":false},{"name":"display_name","type":"string","description":"Optional display name presented in profiles. Can be changed by the user within policy limits.","nullable":true},{"name":"avatar_uri","type":"uri","description":"Optional URI pointing to the user’s avatar image resource.","nullable":true},{"name":"email_verified","type":"boolean","description":"Whether the user has verified their email address. Non-verified users are restricted from participation actions per business rules.","nullable":false},{"name":"account_state","type":"string","description":"Current account state string (e.g., PendingVerification, Active, Locked, Deactivated, PendingDeletion, Deleted, Banned). Used to gate capabilities.","nullable":false},{"name":"terms_accepted_at","type":"datetime","description":"Timestamp when the user accepted the Terms of Service at registration or re-consent. Required for compliance and auditing.","nullable":false},{"name":"privacy_accepted_at","type":"datetime","description":"Timestamp when the user accepted the Privacy Policy at registration or re-consent. Required for compliance and auditing.","nullable":false},{"name":"marketing_opt_in","type":"boolean","description":"Whether the user explicitly opted in to marketing communications. Defaults to false at the application level if no opt-in is offered.","nullable":false},{"name":"marketing_opt_in_at","type":"datetime","description":"Timestamp when marketing opt-in was granted. Null when not opted in.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the most recent successful login for auditing and security notifications.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for the user record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for the user record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, indicates the record is logically deleted and should not appear in normal queries.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"community_platform_user_karmas","description":"Per-user karma totals supporting ranking and reputation features. Holds aggregated integer values for post, comment, and total karma for a user. Sourced from votes on content; maintained by application logic. References {@link community_platform_users}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Belonged user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"post_karma","type":"int","description":"Cumulative karma derived from votes on the user’s posts. May be negative.","nullable":false},{"name":"comment_karma","type":"int","description":"Cumulative karma derived from votes on the user’s comments. May be negative.","nullable":false},{"name":"total_karma","type":"int","description":"Total karma (post + comment and other applicable sources) maintained by the application.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for this karma snapshot row.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last time karma values were updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for logical removal.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","updated_at"]}],"ginIndexes":[]},{"name":"community_platform_guest_users","description":"Marks users that currently hold the guest kind within system semantics. This supporting table records assignment lifecycle for auditability. References {@link community_platform_users}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Assigned user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Timestamp when this guest designation became effective.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Optional timestamp when this guest designation ended.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this role assignment record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this role assignment.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this role assignment.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","granted_at"]}],"ginIndexes":[]},{"name":"community_platform_member_users","description":"Marks users that hold the member role enabling participation (post, comment, vote, report) once eligibility is met. Tracks join lifecycle. References {@link community_platform_users}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Member user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"joined_at","type":"datetime","description":"Timestamp when member capabilities became effective for this user.","nullable":false},{"name":"status","type":"string","description":"Optional member status string for business workflows (e.g., active, restricted).","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this membership record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this membership record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this membership record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","joined_at"]}],"ginIndexes":[]},{"name":"community_platform_community_owners","description":"Community ownership assignments. Tracks ownership history per community for governance, transfers, and audits. Single active owner should be enforced at the application layer or via a partial unique index on (community_id) where revoked_at IS NULL when supported. References {@link community_platform_users} and {@link community_platform_communities}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owner user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Owned community’s {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"assigned_at","type":"datetime","description":"Timestamp when ownership became effective.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Optional timestamp when ownership ended (e.g., after transfer). When null, record is considered current.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this ownership record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this ownership record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this ownership record.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_user_id","assigned_at"]},{"fieldNames":["community_platform_community_id","assigned_at"]}],"ginIndexes":[]},{"name":"community_platform_community_moderators","description":"Community moderator assignments per community with lifecycle tracking and optional tiering. Enables independent management and cross-community queries. References {@link community_platform_users} and {@link community_platform_communities}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Moderator user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Moderated community’s {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Timestamp when moderator privileges began.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Optional timestamp when moderator privileges ended.","nullable":true},{"name":"tier","type":"string","description":"Optional moderator tier or role label (e.g., junior, full).","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this moderator assignment.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this moderator assignment.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this moderator assignment.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","granted_at"]},{"fieldNames":["community_platform_community_id","granted_at"]}],"ginIndexes":[]},{"name":"community_platform_admin_users","description":"Site-wide administrator role assignments for trust & safety and platform governance. Allows multiple grant/revoke cycles per user for historical auditability. Single active admin per user should be enforced at the application layer or via a partial unique index on (user_id) where revoked_at IS NULL when supported. References {@link community_platform_users}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Admin user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Timestamp when admin privileges were granted.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Optional timestamp when admin privileges ended.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for this admin assignment.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this admin assignment.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this admin assignment.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_user_id","granted_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-communities.prisma","namespace":"Communities","models":[{"name":"community_platform_communities","description":"Communities are the top-level spaces that organize posts and memberships. Each community has a globally unique handle stored in {name} (used in URLs) and a human-friendly {display_name}. This table persists community configuration required by business rules: visibility mode (public/restricted/private), NSFW labeling, quarantine state for safety, optional language/region defaults, and auto-archive window to lock old threads. Owners and moderators are managed via {@link community_platform_community_owners} and {@link community_platform_community_moderators}. Subscriptions are in {@link community_platform_subscriptions}. Posts in other components reference this model to attach content to a community.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Globally unique community handle (URL-safe identifier). Used for routing and mentions. Must be unique across the platform.","nullable":false},{"name":"display_name","type":"string","description":"Human-readable community title shown in UIs. Not required to be unique.","nullable":true},{"name":"description","type":"string","description":"Optional community description/about text used for discovery and policy transparency.","nullable":true},{"name":"visibility","type":"string","description":"Community visibility mode. Allowed values: public | restricted | private. Used by eligibility checks and feed assemblers.","nullable":false},{"name":"nsfw","type":"boolean","description":"Whether the community is labeled as NSFW. Enforces visibility gates and default labeling for submissions.","nullable":false},{"name":"auto_archive_days","type":"int","description":"Number of days after which posts auto-archive (>= 30 per business rules). Feeds and editors enforce read-only behavior after archival.","nullable":false},{"name":"language","type":"string","description":"Optional default language code for community policy and discovery (e.g., en, ko).","nullable":true},{"name":"region","type":"string","description":"Optional default region code for community policy and discovery (e.g., KR, US).","nullable":true},{"name":"quarantined","type":"boolean","description":"Whether the community is under quarantine per safety policy. Limits discovery and requires user acknowledgement.","nullable":false},{"name":"quarantined_at","type":"datetime","description":"Timestamp when quarantine began. Null when not quarantined.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp of the community.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of the community metadata.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, the community is removed from general listings.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["visibility","created_at"]},{"fieldNames":["nsfw"]},{"fieldNames":["quarantined"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"community_platform_subscriptions","description":"User-to-community subscription mapping representing follow state for feed inclusion. This table captures subscription lifecycle: status (e.g., pending for private/restricted approvals, subscribed for active, banned/blocked where applicable) and mute state to suppress delivery without unsubscribing. References {@link community_platform_users} and {@link community_platform_communities}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Subscribed user reference. Target model's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Target community reference. Target model's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"status","type":"string","description":"Subscription status. Allowed values (business semantics): pending | subscribed | banned | blocked. Use deleted_at to represent unsubscribed.","nullable":false},{"name":"muted","type":"boolean","description":"Whether the user has muted this community (suppresses delivery in Home while retaining subscription).","nullable":false},{"name":"muted_at","type":"datetime","description":"Timestamp when mute was applied. Null when not muted.","nullable":true},{"name":"created_at","type":"datetime","description":"Subscription creation timestamp (when the user subscribed or requested join).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last update to this subscription record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion (unsubscribe) timestamp. When set, the subscription is considered inactive for feed inclusion.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["community_platform_user_id","status","deleted_at"]},{"fieldNames":["community_platform_community_id","status","deleted_at"]},{"fieldNames":["community_platform_user_id","muted","deleted_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"community_platform_posts","description":"Core user-generated posts within a community. Each record represents a single post authored by a user and belongs to exactly one community. Supports three content types (TEXT, LINK, IMAGE) via {type}. Business lifecycle fields capture labels (nsfw, spoiler), visibility state (Active/Locked/Archived/RemovedByModeration/RemovedByAdmin/DeletedByAuthor/PendingReview/LegalHold), and control points (locked_at, archived_at). Edit transparency fields (edited_at, edit_count) support visible \"edited\" indicators and audit traces. Author is {@link community_platform_users}. Community is {@link community_platform_communities}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Author user's {@link community_platform_users.id}.","relation":{"name":"author","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Target community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Human-readable headline of the post. Business rule: 1–300 characters; trimmed of surrounding whitespace.","nullable":false},{"name":"type","type":"string","description":"Post content type. Application enforces one of: TEXT | LINK | IMAGE.","nullable":false},{"name":"body","type":"string","description":"Body text for TEXT posts. Optional and ignored for non-TEXT types by application rules.","nullable":true},{"name":"link_url","type":"uri","description":"Destination URL for LINK posts (http/https). Optional and ignored for non-LINK types by application rules.","nullable":true},{"name":"image_url","type":"uri","description":"Image URI for IMAGE posts (JPEG/PNG/GIF). Optional and ignored for non-IMAGE types by application rules.","nullable":true},{"name":"nsfw","type":"boolean","description":"Whether the post is marked Not Safe For Work. Enforced in visibility and previews per policy and user preferences.","nullable":false},{"name":"spoiler","type":"boolean","description":"Whether the post contains spoiler content. Controls preview shielding.","nullable":false},{"name":"visibility_state","type":"string","description":"Business visibility state of the post. Expected values include: Active, Locked, Archived, RemovedByModeration, RemovedByAdmin, DeletedByAuthor, PendingReview, LegalHold. Used to drive eligibility in feeds and interactions.","nullable":true},{"name":"locked_at","type":"datetime","description":"Timestamp when the post was locked (no new comments and vote changes). Null when unlocked.","nullable":true},{"name":"archived_at","type":"datetime","description":"Timestamp when the post was archived (read-only). Null when not archived.","nullable":true},{"name":"edited_at","type":"datetime","description":"Timestamp of the last edit by the author. Used for \"edited\" indicator timing.","nullable":true},{"name":"edit_count","type":"int","description":"Number of times the post content/metadata has been edited by the author.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp (UTC). Used for New sorting and audit trails.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp (UTC). Updated on content edits or state changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, the post is considered soft-deleted and excluded from standard queries.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_community_id","link_url","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_platform_comments","description":"User comments attached to posts with support for nested replies via optional parent reference. Each comment belongs to exactly one post {@link community_platform_posts} and has exactly one author {@link community_platform_users}. Thread-level locking and edit transparency fields support business rules and audit visibility. Parent-child self-relationship preserves children on parent removal through onDelete: SetNull.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Author user's {@link community_platform_users.id}.","relation":{"name":"author","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Optional parent comment's {@link community_platform_comments.id} for nested replies. Null for top-level comments.","relation":{"name":"parent","targetModel":"community_platform_comments","targetField":"id","mappingName":"recursive","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"body","type":"string","description":"Comment text content. Business rule: 1–10,000 characters; normalized whitespace; no empty-only text.","nullable":false},{"name":"locked_at","type":"datetime","description":"Timestamp when this comment thread node was locked. Prevents new replies beneath this node when set.","nullable":true},{"name":"edited_at","type":"datetime","description":"Timestamp of the last author edit. Used for \"edited\" indicator timing.","nullable":true},{"name":"edit_count","type":"int","description":"Number of times this comment was edited by the author.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp (UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp (UTC). Updated on content edits or state changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, the comment is considered soft-deleted and excluded from standard queries.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","parent_id","created_at"]},{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["parent_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[{"fieldName":"body"}]}]},{"filename":"schema-04-votes.prisma","namespace":"Votes","models":[{"name":"community_platform_post_votes","description":"User votes on posts. Each record represents a single user’s upvote or downvote on a specific post. Enforces exactly one vote per (user, post) via a composite unique index. Supports temporal analytics and soft deletion for retractions. References {@link community_platform_users} as voter and {@link community_platform_posts} as target.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Voter user's {@link community_platform_users.id}","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}","relation":{"name":"post","targetModel":"community_platform_posts","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"value","type":"int","description":"Vote value where -1 indicates downvote and +1 indicates upvote. Only -1 or +1 are valid.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when the vote is retracted or removed. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_post_id","deleted_at"]}],"ginIndexes":[]},{"name":"community_platform_comment_votes","description":"User votes on comments. Each record represents a single user’s upvote or downvote on a specific comment. Enforces exactly one vote per (user, comment) via a composite unique index. Supports temporal analytics and soft deletion for retractions. References {@link community_platform_users} as voter and {@link community_platform_comments} as target.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Voter user's {@link community_platform_users.id}","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_comment_id","type":"uuid","description":"Target comment's {@link community_platform_comments.id}","relation":{"name":"comment","targetModel":"community_platform_comments","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"value","type":"int","description":"Vote value where -1 indicates downvote and +1 indicates upvote. Only -1 or +1 are valid.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the vote record was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the vote record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when the vote is retracted or removed. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_comment_id","deleted_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-reports.prisma","namespace":"Reports","models":[{"name":"community_platform_reports","description":"User-submitted safety reports targeting either a post or a comment. Each record captures the reporter, a categorical reason, and a free-text explanation for triage. Exactly one of the two target references should be provided: either a post's {@link community_platform_posts.id} or a comment's {@link community_platform_comments.id}. Reports relate to reporters in {@link community_platform_users}. Designed for cross-community moderation queries, category-based triage, and audit timelines without embedding moderation outcomes (which are modeled in the moderation/cases domain). Note: Prisma cannot express the one-of constraint; enforce via application validation or a DB-level CHECK constraint.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Reporting user's {@link community_platform_users.id}.","relation":{"name":"reporter","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}. Exactly one of post or comment should be set.","relation":{"name":"post","targetModel":"community_platform_posts","targetFieldName":"id"},"unique":false,"nullable":true},{"name":"community_platform_comment_id","type":"uuid","description":"Target comment's {@link community_platform_comments.id}. Exactly one of post or comment should be set.","relation":{"name":"comment","targetModel":"community_platform_comments","targetFieldName":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"category","type":"string","description":"High-level report category for moderation triage. Example values include: spam, harassment/hate, sexual_content/child_safety, violence/threats, self_harm_risk, illegal, doxxing, misinformation, off_topic/low_effort, copyright, other.","nullable":false},{"name":"reason","type":"string","description":"Free-text explanation provided by the reporter describing why the content is inappropriate. Used for moderator review and search.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the report was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the report was last updated (e.g., user-edited reason).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["category","created_at"]},{"fieldNames":["community_platform_user_id","category","community_platform_post_id","created_at"]},{"fieldNames":["community_platform_user_id","category","community_platform_comment_id","created_at"]}],"ginIndexes":[{"fieldName":"reason"}]}]}]}