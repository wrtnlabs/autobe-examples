import { tags } from "typia";

/**
 * Post vote record (Prisma: community_platform_post_votes).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPostVote = {
  /**
   * Primary key.
   *
   * Prisma: id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Target post id.
   *
   * Prisma: community_platform_post_id.
   */
  community_platform_post_id: string & tags.Format<"uuid">;

  /**
   * Vote value: -1 (downvote) or +1 (upvote).
   *
   * Prisma: value.
   */
  value: -1 | 1;

  /**
   * Creation timestamp.
   *
   * Prisma: created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp.
   *
   * Prisma: updated_at.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformPostVote {
  /**
   * Request DTO for setting or changing a post vote.
   *
   * Maps directly to the community_platform_post_votes.value column in the
   * Prisma model. This DTO purposefully excludes identity fields
   * (community_platform_user_id and community_platform_post_id) because those
   * are derived from authentication context and route parameters.
   *
   * Per security requirements, ownership and actor fields must never be
   * accepted from client input. Although Update DTOs follow a Partial<T>
   * pattern (all fields optional), the corresponding endpoint can still
   * enforce `value` presence at runtime.
   */
  export type IUpdate = {
    /**
     * Vote value to apply for the authenticated user on the specified post.
     *
     * Only two integer values are accepted per business rules and Prisma
     * schema comments: -1 for a downvote and +1 for an upvote. Any other
     * integer is invalid.
     *
     * Security note: the user and post identifiers are inferred from the
     * path and authenticated context. Do not include user or post IDs in
     * this DTO.
     */
    value?: -1 | 1 | undefined;
  };
}
