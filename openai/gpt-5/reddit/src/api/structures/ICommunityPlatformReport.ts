import { tags } from "typia";

import { IEReportCategory } from "./IEReportCategory";

/**
 * Safety report entity for posts or comments.
 *
 * This schema directly maps to the Prisma model community_platform_reports. It
 * captures the reporter (community_platform_user_id), the target (exactly one
 * of community_platform_post_id or community_platform_comment_id), the
 * categorical reason (category), and a free-text explanation (reason).
 * Timestamps (created_at, updated_at) are recorded as timestamptz.
 *
 * Business rules: exactly one target must be present; duplicates within a time
 * window may be rejected; reporter identity comes from the authenticated
 * session. Sensitive fields such as credentials are never included.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformReport = any | any;
export namespace ICommunityPlatformReport {
  /**
   * Create DTO for submitting a new report.
   *
   * This request body accepts only business input fields: category and
   * reason. The reporter ID is taken from authentication context; the target
   * (post or comment) is specified by the API path parameter; and
   * system-managed fields such as id, created_at, and updated_at are set by
   * the server.
   *
   * Security: never accept actor IDs, IDs, or timestamps from clients. This
   * DTO maps to community_platform_reports for validation while restricting
   * inputs to safe fields.
   */
  export type ICreate = {
    /**
     * Required categorical reason for the report.
     *
     * Maps to community_platform_reports.category. Clients must use one of
     * the allowed values defined by IEReportCategory.
     */
    category: IEReportCategory;

    /**
     * Required free-text explanation for the report.
     *
     * Maps to community_platform_reports.reason. Provide concise,
     * actionable context for moderators.
     */
    reason: string & tags.MinLength<1>;
  };
}
