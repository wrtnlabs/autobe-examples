import { tags } from "typia";

import { IECommunityPlatformPostType } from "./IECommunityPlatformPostType";
import { IECommunityPlatformPostVisibilityState } from "./IECommunityPlatformPostVisibilityState";

/**
 * Post entity representing records from Prisma model community_platform_posts.
 *
 * Includes identifiers (id, community/community user links), content fields
 * (title, type, body/link_url/image_url per type), labels (nsfw, spoiler),
 * lifecycle metadata (visibility_state, locked_at, archived_at), edit
 * transparency (edited_at, edit_count), and audit timestamps (created_at,
 * updated_at, deleted_at).
 *
 * Sensitive credentials do not exist on this model, and ownership is
 * represented by foreign keys. Records where deleted_at is non-null are
 * typically filtered out of list/detail endpoints.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPost = {
  /** Primary key (UUID) of the post. Maps to community_platform_posts.id. */
  id: string & tags.Format<"uuid">;

  /**
   * Author user id (UUID). Maps to
   * community_platform_posts.community_platform_user_id referencing
   * community_platform_users.id.
   */
  community_platform_user_id: string & tags.Format<"uuid">;

  /**
   * Community id (UUID). Maps to
   * community_platform_posts.community_platform_community_id referencing
   * community_platform_communities.id.
   */
  community_platform_community_id: string & tags.Format<"uuid">;

  /**
   * Post headline text. Maps to community_platform_posts.title. Business
   * rule: 1–300 characters at creation.
   */
  title: string;

  /**
   * Content type enforced at application layer. Maps to
   * community_platform_posts.type.
   */
  type: IECommunityPlatformPostType;

  /**
   * Body text for TEXT posts. Nullable/omitted for non-TEXT posts. Maps to
   * community_platform_posts.body.
   */
  body?: string | null | undefined;

  /**
   * Destination URL for LINK posts. Nullable/omitted for non-LINK posts. Maps
   * to community_platform_posts.link_url.
   */
  link_url?: (string & tags.Format<"uri">) | null | undefined;

  /**
   * Image URI for IMAGE posts. Nullable/omitted for non-IMAGE posts. Maps to
   * community_platform_posts.image_url.
   */
  image_url?: (string & tags.Format<"uri">) | null | undefined;

  /**
   * NSFW label controlling visibility gates. Maps to
   * community_platform_posts.nsfw.
   */
  nsfw: boolean;

  /**
   * Spoiler label controlling preview shielding. Maps to
   * community_platform_posts.spoiler.
   */
  spoiler: boolean;

  /**
   * Business lifecycle state as modeled by
   * community_platform_posts.visibility_state. Nullable.
   */
  visibility_state?: IECommunityPlatformPostVisibilityState | null | undefined;

  /**
   * Timestamp when the post was locked (no new comments and vote changes).
   * Maps to community_platform_posts.locked_at.
   */
  locked_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when the post was archived (read-only). Maps to
   * community_platform_posts.archived_at.
   */
  archived_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp of the last author edit. Maps to
   * community_platform_posts.edited_at.
   */
  edited_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Number of author edits. Maps to community_platform_posts.edit_count. */
  edit_count: number & tags.Type<"int32">;

  /** Creation timestamp (UTC). Maps to community_platform_posts.created_at. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp (UTC). Maps to community_platform_posts.updated_at. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp. When non-null, the record is logically deleted
   * and excluded from standard queries. Maps to
   * community_platform_posts.deleted_at.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformPost {
  /**
   * Post creation request union with discriminator on "type".
   *
   * This schema aggregates the TEXT, LINK, and IMAGE creation variants under
   * a single DTO referenced by operations. The discriminator aligns with
   * community_platform_posts.type and enables validation routing.
   *
   * Prisma linkage: community_platform_posts. All properties in variant
   * schemas correspond to columns in this model (title, type,
   * body/link_url/image_url, nsfw, spoiler).
   */
  export type ICreate =
    | ICommunityPlatformPost.ICreate.ITEXT
    | ICommunityPlatformPost.ICreate.ILINK
    | ICommunityPlatformPost.ICreate.IIMAGE;
  export namespace ICreate {
    /**
     * Create a TEXT post.
     *
     * This variant enforces presence of textual body and constrains type to
     * TEXT.
     *
     * Prisma linkage: community_platform_posts (title, type, body, nsfw,
     * spoiler).
     */
    export type ITEXT = {
      /**
       * Post headline.
       *
       * Business rule: 1–300 characters; trimmed of whitespace per
       * community_platform_posts.title.
       */
      title: string & tags.MinLength<1> & tags.MaxLength<300>;

      /**
       * Discriminator for TEXT post creation. Must be exactly "TEXT".
       *
       * Maps to community_platform_posts.type; application constrains to
       * TEXT here.
       */
      type: "TEXT";

      /**
       * Body text for TEXT posts.
       *
       * Required for TEXT; maps to community_platform_posts.body. Max
       * 40,000 characters per business rules.
       */
      body: string & tags.MinLength<1> & tags.MaxLength<40000>;

      /**
       * Label indicating Not Safe For Work.
       *
       * Maps to community_platform_posts.nsfw; optional on create; may be
       * defaulted by community settings.
       */
      nsfw?: boolean | undefined;

      /**
       * Label indicating spoiler content.
       *
       * Maps to community_platform_posts.spoiler; optional on create.
       */
      spoiler?: boolean | undefined;
    };

    /**
     * Create a LINK post.
     *
     * This variant enforces a valid http/https URL and constrains type to
     * LINK. The server may perform additional domain policy checks and
     * duplicate detection.
     *
     * Prisma linkage: community_platform_posts (title, type, link_url,
     * nsfw, spoiler).
     */
    export type ILINK = {
      /**
       * Post headline.
       *
       * Business rule: 1–300 characters; trimmed of whitespace per
       * community_platform_posts.title.
       */
      title: string & tags.MinLength<1> & tags.MaxLength<300>;

      /**
       * Discriminator for LINK post creation. Must be exactly "LINK".
       *
       * Maps to community_platform_posts.type; application constrains to
       * LINK here.
       */
      type: "LINK";

      /**
       * Destination URL for LINK posts (http/https).
       *
       * Maps to community_platform_posts.link_url. Business limit: up to
       * 2,048 characters.
       */
      link_url: string & tags.MaxLength<2048> & tags.Format<"uri">;

      /**
       * Label indicating Not Safe For Work.
       *
       * Maps to community_platform_posts.nsfw; optional on create; may be
       * defaulted by community settings.
       */
      nsfw?: boolean | undefined;

      /**
       * Label indicating spoiler content.
       *
       * Maps to community_platform_posts.spoiler; optional on create.
       */
      spoiler?: boolean | undefined;
    };

    /**
     * Create an IMAGE post.
     *
     * This variant requires an image URL and constrains type to IMAGE.
     * Large binary payloads are handled out-of-band; this schema carries
     * the persisted reference per Prisma.
     *
     * Prisma linkage: community_platform_posts (title, type, image_url,
     * nsfw, spoiler).
     */
    export type IIMAGE = {
      /**
       * Post headline.
       *
       * Business rule: 1–300 characters; trimmed of surrounding
       * whitespace per community_platform_posts.title.
       */
      title: string & tags.MinLength<1> & tags.MaxLength<300>;

      /**
       * Discriminator for IMAGE post creation. Must be exactly "IMAGE".
       *
       * Maps to community_platform_posts.type; application constrains to
       * IMAGE here.
       */
      type: "IMAGE";

      /**
       * Image URI for IMAGE posts (JPEG/PNG/GIF) stored as a string
       * reference.
       *
       * Maps to community_platform_posts.image_url. Server enforces media
       * constraints and storage policy.
       */
      image_url: string & tags.Format<"uri">;

      /**
       * Label indicating Not Safe For Work.
       *
       * Maps to community_platform_posts.nsfw; optional at creation and
       * may be defaulted by community settings.
       */
      nsfw?: boolean | undefined;

      /**
       * Label indicating spoiler content.
       *
       * Maps to community_platform_posts.spoiler; optional at creation.
       */
      spoiler?: boolean | undefined;
    };
  }

  /**
   * Summary DTO for community_platform_posts.
   *
   * This schema presents essential, list-optimized fields while excluding
   * heavy payload columns such as body, link_url, and image_url. It aligns
   * with the Prisma model’s columns and business semantics for labels and
   * lifecycle state.
   *
   * Use this type for list and profile views where minimal fields are
   * preferred and where clients may need to check gating and lifecycle at a
   * glance (NSFW, spoiler, visibility_state, locked_at, archived_at).
   */
  export type ISummary = {
    /**
     * Primary key of the post row.
     *
     * Prisma: community_platform_posts.id (UUID).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Target community’s identifier.
     *
     * Prisma: community_platform_posts.community_platform_community_id
     * referencing community_platform_communities.id.
     */
    community_platform_community_id: string & tags.Format<"uuid">;

    /**
     * Human-readable headline of the post.
     *
     * Prisma: community_platform_posts.title. Business rule enforced at
     * write-time: 1–300 characters trimmed.
     */
    title: string;

    /**
     * Post content type constrained by business rules to one of TEXT | LINK
     * | IMAGE.
     *
     * Prisma: community_platform_posts.type (free-form String), constrained
     * by application logic.
     */
    type: "TEXT" | "LINK" | "IMAGE";

    /**
     * NSFW label for visibility gating and previews.
     *
     * Prisma: community_platform_posts.nsfw (Boolean).
     */
    nsfw: boolean;

    /**
     * Spoiler label controlling preview shielding.
     *
     * Prisma: community_platform_posts.spoiler (Boolean).
     */
    spoiler: boolean;

    /**
     * Business visibility state of the post (nullable in DB).
     *
     * Prisma: community_platform_posts.visibility_state (String?).
     */
    visibility_state?:
      | "Active"
      | "Locked"
      | "Archived"
      | "RemovedByModeration"
      | "RemovedByAdmin"
      | "DeletedByAuthor"
      | "PendingReview"
      | "LegalHold"
      | null
      | undefined;

    /**
     * Timestamp when the post was locked (nullable).
     *
     * Prisma: community_platform_posts.locked_at (Timestamptz?).
     */
    locked_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Timestamp when the post was archived (nullable).
     *
     * Prisma: community_platform_posts.archived_at (Timestamptz?).
     */
    archived_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp (UTC, timestamptz).
     *
     * Prisma: community_platform_posts.created_at.
     */
    created_at: string & tags.Format<"date-time">;
  };
}
