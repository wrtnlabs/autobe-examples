import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";
import { IClientContext } from "./IClientContext";

/**
 * Guest visitor actor DTO corresponding to Prisma table
 * todo_list_guest_visitors.
 *
 * This representation contains only non-sensitive metadata suitable for
 * administrative oversight and policy analysis. It does not include
 * authentication credentials because none exist on this table by design; guests
 * operate solely with temporary tokens.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoListGuestVisitor = {
  /**
   * Primary key of the guest visitor actor as defined in Prisma model
   * todo_list_guest_visitors.id.
   *
   * This UUID uniquely identifies an anonymous actor used before full
   * authentication. Records are standalone within the Actors domain and are
   * not linked to Todos in this minimal scope.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Creation timestamp mapped from Prisma column
   * todo_list_guest_visitors.created_at.
   *
   * Set when the guest visitor record is created during the join flow and
   * used for administrative observability.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last modification timestamp mapped from Prisma column
   * todo_list_guest_visitors.updated_at.
   *
   * Updated when the guest record is modified according to policy, enabling
   * operational insight into lifecycle changes.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Logical removal/deactivation timestamp mapped from Prisma column
   * todo_list_guest_visitors.deleted_at where null means active.
   *
   * When non-null, the guest record is considered deactivated. Registration
   * should create a new record rather than reviving logically removed
   * entries, per the Prisma schema comments and business policy.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoListGuestVisitor {
  /**
   * Create DTO for Guest Visitor registration.
   *
   * This request body is intentionally minimal and may be an empty object per
   * policy. No identity or credential fields are accepted for guest
   * creation.
   */
  export type ICreate = {};

  /**
   * Authorization response for a Guest Visitor.
   *
   * Returned after successful guest registration or token refresh operations.
   * Contains the actor id, a standard authorization token payload, and the
   * minimal guest actor identity derived from the Prisma model
   * todo_list_guest_visitors. Passwords or credential fields are never
   * present because the guest model contains none.
   */
  export type IAuthorized = {
    /**
     * Unique identifier of the authenticated guest actor.
     *
     * This corresponds to todo_list_guest_visitors.id and is included to
     * clearly identify the authorized subject.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Creation timestamp mapped from Prisma column
     * todo_list_guest_visitors.created_at.
     *
     * Set when the guest visitor record is created during the join flow and
     * used for administrative observability.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last modification timestamp mapped from Prisma column
     * todo_list_guest_visitors.updated_at.
     *
     * Updated when the guest record is modified according to policy,
     * enabling operational insight into lifecycle changes.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Logical removal/deactivation timestamp mapped from Prisma column
     * todo_list_guest_visitors.deleted_at where null means active.
     *
     * When non-null, the guest record is considered deactivated.
     * Registration should create a new record rather than reviving
     * logically removed entries, per the Prisma schema comments and
     * business policy.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /**
     * Minimal actor identity for the authorized guest visitor.
     *
     * This embeds non-sensitive metadata from the underlying Prisma record
     * (todo_list_guest_visitors) suitable for client-side context.
     */
    guestVisitor?: ITodoListGuestVisitor | undefined;
  };

  /**
   * Guest token refresh request body for exchanging a valid refresh token for
   * new credentials.
   *
   * This DTO is used by the guest refresh endpoint
   * (/auth/guestVisitor/refresh). It does not map directly to a Prisma model
   * table. The related Prisma entity for identity is
   * Actors.todo_list_guest_visitors (id, created_at, updated_at, deleted_at),
   * but no properties from that table are provided by clients in this
   * request.
   *
   * Security note: Do not include secrets beyond the refresh token. No
   * password or email fields exist for guest actors, and none must be
   * accepted here.
   */
  export type IRefresh = {
    /**
     * Refresh token to be exchanged for a new access token (and typically a
     * rotated refresh token).
     *
     * This value originates from a prior successful authorization for the
     * guest role. The token must pass integrity and expiry checks during
     * processing.
     */
    refreshToken: string;

    /**
     * Optional client context used by policy for telemetry, rate-limiting
     * hints, or device-bound validation.
     *
     * This object does not persist to the database and is not tied to any
     * Prisma model.
     */
    client?: IClientContext | undefined;
  };
}
