import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { deleteAuthMemberMfa } from "../../../../providers/deleteAuthMemberMfa";
import { MemberAuth } from "../../../../decorators/MemberAuth";
import { MemberPayload } from "../../../../decorators/payload/MemberPayload";

import { IEconDiscussMember } from "../../../../api/structures/IEconDiscussMember";

@Controller("/auth/member/mfa")
export class AuthMemberMfaController {
  /**
   * Disable 2FA by updating econ_discuss_users.mfa_enabled=false and adjusting
   * secrets as required.
   *
   * This endpoint turns off MFA for the user in econ_discuss_users by setting
   * mfa_enabled=false. It may also clear mfa_secret and regenerate
   * mfa_recovery_codes depending on policy; at minimum updated_at is changed. A
   * valid verification (TOTP or recovery code) is required to prevent
   * unauthorized disablement.
   *
   * The operation does not change role assignments in econ_discuss_members and
   * is available only to authenticated members.
   *
   * @param connection
   * @param body Confirmation code to authorize MFA disable.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async mfaDisable(
    @MemberAuth()
    member: MemberPayload,
    @TypedBody()
    body: IEconDiscussMember.IMfaDisable,
  ): Promise<IEconDiscussMember.IMfaDisabled> {
    try {
      return await deleteAuthMemberMfa({
        member,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
