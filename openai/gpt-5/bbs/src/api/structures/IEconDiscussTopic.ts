import { tags } from "typia";

import { IETopicSortBy } from "./IETopicSortBy";
import { IESortDirection } from "./IESortDirection";

/**
 * Curated taxonomy entry used to organize content, subscriptions, and expert
 * badges.
 *
 * Backed by Prisma model Topics.econ_discuss_topics, which defines: id (UUID
 * PK), code (unique slug), name, optional description, created_at, updated_at,
 * and a soft deletion column deleted_at for archival. This DTO exposes public
 * fields for active topics and omits internal archival state from responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussTopic = {
  /**
   * Primary key of the curated topic.
   *
   * Prisma: econ_discuss_topics.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Immutable business identifier (slug-like) for the topic used in URLs and
   * references.
   *
   * Prisma: econ_discuss_topics.code (unique).
   */
  code: string;

  /**
   * Human-readable topic name displayed to users.
   *
   * Prisma: econ_discuss_topics.name.
   */
  name: string;

  /**
   * Optional longer description explaining the topic scope and curation
   * notes.
   *
   * Prisma: econ_discuss_topics.description (nullable).
   */
  description?: string | undefined;

  /**
   * Creation timestamp of the topic record (UTC, ISO 8601 on the wire).
   *
   * Prisma: econ_discuss_topics.created_at (Timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of the topic record (UTC, ISO 8601 on the wire).
   *
   * Prisma: econ_discuss_topics.updated_at (Timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEconDiscussTopic {
  /**
   * Compact topic summary for discovery and references.
   *
   * Derived from Topics.econ_discuss_topics. Excludes long description to
   * keep list payloads efficient.
   */
  export type ISummary = {
    /**
     * Topic identifier.
     *
     * Prisma: Topics.econ_discuss_topics.id (UUID primary key).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Immutable business identifier (slug-like) for the topic.
     *
     * Prisma: Topics.econ_discuss_topics.code (unique).
     */
    code: string;

    /**
     * Human-readable topic name for display and search.
     *
     * Prisma: Topics.econ_discuss_topics.name (String).
     */
    name: string;
  };

  /**
   * Topic search/filter request for the curated taxonomy (Prisma:
   * Topics.econ_discuss_topics).
   *
   * Includes pagination (page/limit), keyword search, and sorting controls.
   * Public read semantics; providers must exclude records where deleted_at is
   * not null.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based index).
     *
     * Not persisted; aligns with IPage.IRequest.page.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records per page.
     *
     * Aligned to standard IPage limit semantics with an enforced upper
     * bound for performance.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>)
      | undefined;

    /**
     * Free-text keyword for topic discovery.
     *
     * Applies to econ_discuss_topics.name and
     * econ_discuss_topics.description (gin_trgm_ops indexes per Prisma).
     */
    q?: string | undefined;

    /**
     * Sort key mapping to econ_discuss_topics columns: name, created_at, or
     * updated_at.
     */
    sortBy?: IETopicSortBy | undefined;

    /** Sort direction for ordered listings. */
    sortDir?: IESortDirection | undefined;
  };

  /**
   * Request body to create a new curated topic.
   *
   * Maps to Prisma model Topics.econ_discuss_topics. Server populates
   * created_at/updated_at and enforces code uniqueness. Do not include id or
   * timestamps in create payloads.
   */
  export type ICreate = {
    /**
     * Unique, immutable topic code (slug). Must not collide with existing
     * topics.
     *
     * Prisma: econ_discuss_topics.code (unique).
     */
    code: string;

    /**
     * Display name of the topic.
     *
     * Prisma: econ_discuss_topics.name.
     */
    name: string;

    /**
     * Optional descriptive text about the topic’s scope.
     *
     * Prisma: econ_discuss_topics.description (nullable).
     */
    description?: string | undefined;
  };

  /**
   * Request body to update an existing topic’s mutable fields.
   *
   * Based on Prisma model Topics.econ_discuss_topics. The business identifier
   * code is immutable and is not accepted here. Server updates updated_at
   * automatically.
   */
  export type IUpdate = {
    /**
     * Updated display name for the topic.
     *
     * Prisma: econ_discuss_topics.name.
     */
    name?: string | undefined;

    /**
     * Updated descriptive text for the topic (optional).
     *
     * Prisma: econ_discuss_topics.description (nullable).
     */
    description?: string | undefined;
  };
}
