import { tags } from "typia";

/**
 * Post entity assembled from Articles.econ_discuss_posts.
 *
 * This schema exposes public-facing post fields directly derived from the
 * Prisma model (id, author reference, title, body, optional summary,
 * publication timestamps, created/updated timestamps). It intentionally omits
 * internal lifecycle fields such as deleted_at from responses.
 *
 * Prisma reference: Articles.econ_discuss_posts — "Authored, published content
 * items forming the core discussion surface."
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussPost = {
  /**
   * Primary key of a post record (econ_discuss_posts.id).
   *
   * Prisma reference: Articles.econ_discuss_posts → "Primary Key."
   */
  id: string & tags.Format<"uuid">;

  /**
   * Author user's identifier referencing econ_discuss_users (stored in
   * econ_discuss_posts.econ_discuss_user_id).
   *
   * Prisma reference: Articles.econ_discuss_posts → "Author user's
   * econ_discuss_users.id. Identifies who created the post."
   */
  author_user_id: string & tags.Format<"uuid">;

  /**
   * Human-readable post title used for listing and SEO.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Human-readable post
   * title for listing and SEO. Required at publish time."
   */
  title: string;

  /**
   * Main content body in sanitized, possibly markdown-like format.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Main content body in
   * sanitized, possibly markdown-like format. Used for full-text search."
   */
  body: string;

  /**
   * Optional short abstract or excerpt for previews and feeds.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Optional short abstract
   * or excerpt for previews and feeds."
   */
  summary?: string | null | undefined;

  /**
   * Publication timestamp for feeds and visibility checks.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Publication timestamp.
   * Supports chronological feeds and scheduling validations."
   */
  published_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional scheduled time for future publication (stored in UTC; displayed
   * in the author's timezone).
   *
   * Prisma reference: Articles.econ_discuss_posts → "Optional scheduled time
   * for future publication (stored in UTC, displayed in user timezone)."
   */
  scheduled_publish_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Creation timestamp for
   * the post record."
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma reference: Articles.econ_discuss_posts → "Last update timestamp
   * for the post record."
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEconDiscussPost {
  /**
   * Search/filter request for listing posts.
   *
   * Backed by Prisma Articles.econ_discuss_posts (id, econ_discuss_user_id,
   * title, body, summary, published_at, scheduled_publish_at, created_at,
   * updated_at, deleted_at) with joins to Articles.econ_discuss_post_topics
   * and Topics.econ_discuss_topics for topic filtering, and
   * Actors.econ_discuss_verified_experts for expert-only filtering.
   *
   * SECURITY: This DTO avoids direct user-id filters (authorId/user_id) and
   * uses non-identifying author text instead, per AutoBE request DTO rules.
   */
  export type IRequest = {
    /** Page number for pagination (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Page size (number of records per page). */
    pageSize?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Free-text keyword query applied to post title/body/summary
     * (trigram-indexed columns per Prisma comments).
     */
    q?: string | undefined;

    /**
     * Author filter by handle/display name (non-identifying).
     *
     * Prisma: filters join Articles.econ_discuss_posts.econ_discuss_user_id
     * → Actors.econ_discuss_users.display_name. Avoids direct user-id
     * filter per security rules.
     */
    author?: string | undefined;

    /**
     * Filter by one or more topic IDs linked via post–topic junction.
     *
     * Prisma: Articles.econ_discuss_post_topics.econ_discuss_topic_id (FK →
     * Topics.econ_discuss_topics.id).
     */
    topicIds?: (string & tags.Format<"uuid">)[] | undefined;

    /**
     * When true, restrict results to posts authored by verified experts
     * (join against Actors.econ_discuss_verified_experts).
     */
    expertOnly?: boolean | undefined;

    /**
     * Lower bound (inclusive) for publish time filtering (published_at ≥
     * dateFrom). Timestamps are stored UTC and returned as ISO 8601.
     */
    dateFrom?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound (inclusive) for publish time filtering (published_at ≤
     * dateTo). Timestamps are stored UTC and returned as ISO 8601.
     */
    dateTo?: (string & tags.Format<"date-time">) | undefined;

    /** Sort mode for the result set. */
    sort?: "new" | "trending" | undefined;
  };

  /**
   * Create DTO for posts (member-authored).
   *
   * Maps to Prisma Articles.econ_discuss_posts. Excludes system/ownership
   * fields (id, econ_discuss_user_id, created_at, updated_at, deleted_at,
   * published_at). The authenticated user becomes the author. Optional
   * topicIds are applied through junction records.
   */
  export type ICreate = {
    /**
     * Post title to be published.
     *
     * Prisma: Articles.econ_discuss_posts.title (required at publish).
     */
    title: string;

    /**
     * Main content body (sanitized markdown/text).
     *
     * Prisma: Articles.econ_discuss_posts.body.
     */
    body: string;

    /**
     * Optional short abstract for previews.
     *
     * Prisma: Articles.econ_discuss_posts.summary (nullable).
     */
    summary?: string | null | undefined;

    /**
     * Optional future publication time (UTC stored; rendered in user
     * timezone).
     *
     * Prisma: Articles.econ_discuss_posts.scheduled_publish_at (nullable).
     */
    scheduled_publish_at?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /**
     * Optional topic bindings to apply after creation via junction rows.
     *
     * Prisma: Articles.econ_discuss_post_topics (post↔topic).
     */
    topicIds?: (string & tags.Format<"uuid">)[] | undefined;
  };

  /**
   * Update DTO for posts. All fields optional (Partial pattern).
   *
   * Excludes identity/ownership and system-managed timestamps (id,
   * econ_discuss_user_id, created_at, updated_at, deleted_at). Publication
   * timestamp policies are service-managed; clients adjust schedule via
   * scheduled_publish_at.
   */
  export type IUpdate = {
    /**
     * Updated title of the post.
     *
     * Prisma: Articles.econ_discuss_posts.title.
     */
    title?: string | undefined;

    /**
     * Updated content body.
     *
     * Prisma: Articles.econ_discuss_posts.body.
     */
    body?: string | undefined;

    /**
     * Updated summary (nullable to clear).
     *
     * Prisma: Articles.econ_discuss_posts.summary.
     */
    summary?: string | null | undefined;

    /**
     * Updated schedule for future publication (UTC).
     *
     * Prisma: Articles.econ_discuss_posts.scheduled_publish_at.
     */
    scheduled_publish_at?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;
  };

  /**
   * Summary DTO for list views of posts.
   *
   * Optimized to avoid large text fields (excludes body). Contains essential
   * identifiers, display title, optional summary, author linkage, and key
   * dates for sorting.
   */
  export type ISummary = {
    /**
     * Post identifier.
     *
     * Prisma: Articles.econ_discuss_posts.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Post title for list display.
     *
     * Prisma: Articles.econ_discuss_posts.title.
     */
    title: string;

    /**
     * Optional short abstract for previews (no full body here).
     *
     * Prisma: Articles.econ_discuss_posts.summary.
     */
    summary?: string | null | undefined;

    /**
     * Author user id for linking/profile badges.
     *
     * Prisma: Articles.econ_discuss_posts.econ_discuss_user_id.
     */
    author_user_id: string & tags.Format<"uuid">;

    /**
     * Publication timestamp used for sorting/visibility.
     *
     * Prisma: Articles.econ_discuss_posts.published_at.
     */
    published_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp for tie-break/listing.
     *
     * Prisma: Articles.econ_discuss_posts.created_at.
     */
    created_at: string & tags.Format<"date-time">;
  };
}
