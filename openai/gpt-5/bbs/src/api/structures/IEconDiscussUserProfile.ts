import { tags } from "typia";

/**
 * User profile view combining base identity (Actors.econ_discuss_users) and
 * extended profile (Actors.econ_discuss_user_profiles).
 *
 * This DTO excludes sensitive authentication materials such as password_hash,
 * mfa_secret, and mfa_recovery_codes. It aggregates safe, public-facing fields
 * (display name, avatar, timezone/locale) and optional extended biography
 * fields (bio, affiliation, website, location).
 *
 * References:
 *
 * - Econ_discuss_users: primary account table with identity, preferences, and
 *   lifecycle timestamps.
 * - Econ_discuss_user_profiles: optional 1:1 profile details
 *   (bio/affiliation/website/location).
 * - Derived flags/values like isExpertVerified and reputation are computed from
 *   related tables (econ_discuss_verified_experts,
 *   econ_discuss_user_reputations) without requiring schema changes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussUserProfile = {
  /**
   * Primary key of the user.
   *
   * Maps to econ_discuss_users.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Publicly visible display name or handle.
   *
   * Maps to econ_discuss_users.display_name.
   */
  displayName: string;

  /**
   * Optional avatar image URI for the profile. Validate as a web URI in the
   * application layer.
   *
   * Maps to econ_discuss_users.avatar_uri (nullable VarChar).
   */
  avatarUri?: (string & tags.Format<"uri">) | null | undefined;

  /**
   * Preferred IANA timezone identifier used for notifications, digests, and
   * scheduling (e.g., Asia/Seoul).
   *
   * Maps to econ_discuss_users.timezone (nullable).
   */
  timezone?: string | null | undefined;

  /**
   * Preferred locale (e.g., en-US) for UI and communication.
   *
   * Maps to econ_discuss_users.locale (nullable).
   */
  locale?: string | null | undefined;

  /**
   * Whether the account’s email address has been verified.
   *
   * Maps to econ_discuss_users.email_verified. For public profiles, platforms
   * may omit showing this flag; for self endpoints it is typically included.
   */
  emailVerified: boolean;

  /**
   * Short biography or professional summary.
   *
   * Maps to econ_discuss_user_profiles.bio (nullable).
   */
  bio?: string | null | undefined;

  /**
   * Current affiliation or organization string.
   *
   * Maps to econ_discuss_user_profiles.affiliation (nullable).
   */
  affiliation?: string | null | undefined;

  /**
   * Personal or professional website URI.
   *
   * Maps to econ_discuss_user_profiles.website (nullable VarChar).
   */
  website?: (string & tags.Format<"uri">) | null | undefined;

  /**
   * Free‑form location string for public display.
   *
   * Maps to econ_discuss_user_profiles.location (nullable).
   */
  location?: string | null | undefined;

  /**
   * Computed flag indicating whether this user currently holds a verified
   * expert role/badge.
   *
   * Derived from presence of related rows in econ_discuss_verified_experts
   * and/or econ_discuss_expert_domain_badges (not a stored column).
   */
  isExpertVerified?: boolean | undefined;

  /**
   * Computed reputation score for the user if available at query time.
   *
   * Derived from econ_discuss_user_reputations.score; exposed for convenience
   * in profile queries. Not a stored column of the profile itself.
   */
  reputation?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

  /**
   * Record creation timestamp for the base identity.
   *
   * Maps to econ_discuss_users.created_at (timestamptz).
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp for the base identity/profile composite.
   *
   * Maps primarily to econ_discuss_users.updated_at; extended profile updates
   * may also track econ_discuss_user_profiles.updated_at.
   */
  updatedAt: string & tags.Format<"date-time">;
};
export namespace IEconDiscussUserProfile {
  /**
   * Update payload for a user’s public profile and preferences.
   *
   * This DTO intentionally restricts updates to safe, public-facing fields
   * spanning two Prisma tables: Actors.econ_discuss_users (display_name,
   * avatar_uri, timezone, locale) and Actors.econ_discuss_user_profiles (bio,
   * affiliation, website, location). It never accepts sensitive
   * authentication properties (password_hash, mfa_secret, mfa_recovery_codes)
   * or email fields.
   *
   * All properties are optional to follow a Partial<T> pattern for PATCH/PUT
   * semantics. When a field is not provided, no change is applied. Use
   * explicit null where clearing a value is allowed by policy.
   */
  export type IUpdate = {
    /**
     * Publicly visible handle displayed across the platform.
     *
     * Maps to Actors.econ_discuss_users.display_name (Prisma: String).
     * Business policies recommend reasonable length limits for professional
     * readability.
     */
    displayName?:
      | (string & tags.MinLength<1> & tags.MaxLength<120>)
      | undefined;

    /**
     * Optional avatar image URI for the profile.
     *
     * Maps to Actors.econ_discuss_users.avatar_uri (Prisma: String?,
     * VarChar). Must be a well‑formed URI when present.
     */
    avatarUri?: (string & tags.Format<"uri">) | null | undefined;

    /**
     * Preferred IANA timezone identifier used for notifications, digests,
     * and scheduling (e.g., "Asia/Seoul").
     *
     * Maps to Actors.econ_discuss_users.timezone (Prisma: String?).
     */
    timezone?: string | null | undefined;

    /**
     * Preferred locale for UI and communications (e.g., "en-US").
     *
     * Maps to Actors.econ_discuss_users.locale (Prisma: String?).
     */
    locale?: string | null | undefined;

    /**
     * Short biography or professional summary.
     *
     * Maps to Actors.econ_discuss_user_profiles.bio (Prisma: String?).
     */
    bio?: string | null | undefined;

    /**
     * Current affiliation or organization string for public display.
     *
     * Maps to Actors.econ_discuss_user_profiles.affiliation (Prisma:
     * String?).
     */
    affiliation?: string | null | undefined;

    /**
     * Personal or professional website URI for the profile.
     *
     * Maps to Actors.econ_discuss_user_profiles.website (Prisma: String?,
     * VarChar). Must be a well‑formed URI when present.
     */
    website?: (string & tags.Format<"uri">) | null | undefined;

    /**
     * Freeform location string for public display.
     *
     * Maps to Actors.econ_discuss_user_profiles.location (Prisma: String?).
     */
    location?: string | null | undefined;
  };
}
