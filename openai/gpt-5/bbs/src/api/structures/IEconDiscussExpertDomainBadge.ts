import { tags } from "typia";

import { IEconDiscussTopic } from "./IEconDiscussTopic";

/**
 * Expert domain badge granted to a verified expert for a specific curated
 * topic/domain.
 *
 * Backed by Prisma model: econ_discuss_expert_domain_badges. Key columns
 * include: id (UUID), user_id, econ_discuss_topic_id, verified_at,
 * valid_until?, revoked_at?, revoked_reason?, created_at, updated_at,
 * deleted_at?. The topic relation (econ_discuss_topics) provides human-readable
 * domain metadata (code/name/description).
 *
 * Security: This DTO is designed for public display on profiles. It
 * intentionally omits internal soft-deletion flags. The revokedReason field may
 * be redacted for non-governance consumers per policy.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussExpertDomainBadge = {
  /**
   * Unique identifier of the expert domain badge.
   *
   * Maps to econ_discuss_expert_domain_badges.id (UUID PK).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner expert user's ID.
   *
   * Maps to econ_discuss_expert_domain_badges.user_id (FK →
   * econ_discuss_users.id).
   */
  userId: string & tags.Format<"uuid">;

  /**
   * Linked curated topic/domain ID.
   *
   * Maps to econ_discuss_expert_domain_badges.econ_discuss_topic_id (FK →
   * econ_discuss_topics.id).
   */
  topicId: string & tags.Format<"uuid">;

  /**
   * Optional topic summary for display (resolved from econ_discuss_topics).
   * Not persisted in the badge row; provided for convenience in read APIs.
   */
  topic?: IEconDiscussTopic.ISummary | undefined;

  /**
   * Timestamp when the domain badge was approved.
   *
   * Maps to econ_discuss_expert_domain_badges.verified_at.
   */
  verifiedAt: string & tags.Format<"date-time">;

  /**
   * Optional expiration timestamp. When null, the badge remains valid until
   * policy change or revocation.
   *
   * Maps to econ_discuss_expert_domain_badges.valid_until.
   */
  validUntil?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when the badge was revoked for policy reasons, if applicable.
   *
   * Maps to econ_discuss_expert_domain_badges.revoked_at.
   */
  revokedAt?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional human-readable rationale for revocation. Intended for
   * governance; public APIs may redact this field per policy.
   *
   * Maps to econ_discuss_expert_domain_badges.revoked_reason.
   */
  revokedReason?: string | null | undefined;

  /**
   * Computed badge status for convenience in clients:
   *
   * - Active: revoked_at is null AND (valid_until is null OR valid_until is in
   *   the future)
   * - Expired: valid_until is in the past (and not revoked)
   * - Revoked: revoked_at is not null
   *
   * Note: This is a derived field, not an extra database column; allowed by
   * interface rules.
   */
  status?: "active" | "expired" | "revoked" | undefined;

  /**
   * Record creation timestamp.
   *
   * Maps to econ_discuss_expert_domain_badges.created_at.
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Maps to econ_discuss_expert_domain_badges.updated_at.
   */
  updatedAt: string & tags.Format<"date-time">;
};
export namespace IEconDiscussExpertDomainBadge {
  /**
   * Request parameters for listing a user's expert domain badges.
   *
   * Backed by Prisma model: econ_discuss_expert_domain_badges with columns
   * id, user_id, econ_discuss_topic_id, verified_at, valid_until?,
   * revoked_at?, revoked_reason?, created_at, updated_at, deleted_at?.
   * Filters map to those lifecycle columns. The status filter is derived from
   * valid_until and revoked_at per business rules.
   */
  export type IRequest = {
    /** Page index for pagination (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records per page. Servers may cap to protect
     * performance.
     */
    pageSize?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>)
      | undefined;

    /**
     * Filter by computed badge status:
     *
     * - Active: revoked_at is null AND (valid_until is null OR valid_until is
     *   in the future)
     * - Expired: valid_until is in the past
     * - Revoked: revoked_at is not null
     */
    status?: "active" | "expired" | "revoked" | undefined;

    /**
     * Filter by linked topic/domain
     * (econ_discuss_expert_domain_badges.econ_discuss_topic_id).
     */
    topicId?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Sort key for ordering badge rows:
     *
     * - Verified_at: time of approval
     * - Created_at: record creation time
     * - Valid_until: expiry timestamp (nulls sort last by default)
     */
    sortBy?: "verified_at" | "created_at" | "valid_until" | undefined;

    /** Sort direction for sortBy. */
    sortOrder?: "asc" | "desc" | undefined;
  };

  /**
   * Compact representation of a user’s verified expertise badge tied to a
   * curated economics topic.
   *
   * Sourced from Actors.econ_discuss_expert_domain_badges and joined to
   * Topics.econ_discuss_topics for human-readable labeling. This summary is
   * tailored for profile badges and expert-only discovery facets and excludes
   * sensitive fields such as any internal revocation rationale.
   */
  export type ISummary = {
    /**
     * Unique identifier of the expert domain badge.
     *
     * Maps to Actors.econ_discuss_expert_domain_badges.id, the primary key
     * for each per-domain badge assignment.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Curated topic/domain associated with the badge.
     *
     * Joins Actors.econ_discuss_expert_domain_badges.econ_discuss_topic_id
     * to Topics.econ_discuss_topics. The summary exposes only safe, public
     * taxonomy fields.
     */
    topic: IEconDiscussTopic.ISummary;

    /**
     * Timestamp when the badge was approved for the user.
     *
     * Backed by econ_discuss_expert_domain_badges.verified_at
     * (timestamptz).
     */
    verifiedAt: string & tags.Format<"date-time">;

    /**
     * Optional badge expiration timestamp.
     *
     * Maps to econ_discuss_expert_domain_badges.valid_until (nullable).
     * When null, validity is open-ended until policy change or revocation.
     */
    validUntil?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional timestamp indicating revocation.
     *
     * Backed by econ_discuss_expert_domain_badges.revoked_at (nullable).
     * Presence indicates the badge is no longer active.
     */
    revokedAt?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
