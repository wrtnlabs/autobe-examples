import { tags } from "typia";

import { IEEconDiscussDraftSortBy } from "./IEEconDiscussDraftSortBy";
import { IEEconDiscussSortOrder } from "./IEEconDiscussSortOrder";

/**
 * Private draft entity returned to the authenticated owner.
 *
 * This DTO reflects Articles.econ_discuss_post_drafts and intentionally
 * excludes internal/ownership fields (econ_discuss_user_id) and lifecycle
 * removal signals (deleted_at). It includes an optional link to the published
 * post via post_id (econ_discuss_post_id) and standard timestamps. Title/body
 * are optional by design to support early autosave.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussPostDraft = {
  /**
   * Unique identifier of the draft.
   *
   * Maps to Articles.econ_discuss_post_drafts.id (UUID primary key).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Working draft title (optional for early autosave).
   *
   * Maps to Articles.econ_discuss_post_drafts.title.
   */
  title?: string | null | undefined;

  /**
   * Working draft body (optional for early autosave).
   *
   * Maps to Articles.econ_discuss_post_drafts.body.
   */
  body?: string | null | undefined;

  /**
   * Identifier of the published post created from this draft, when
   * applicable.
   *
   * This property corresponds to
   * Articles.econ_discuss_post_drafts.econ_discuss_post_id. It is null when
   * the draft has not been published.
   */
  post_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Creation timestamp of the draft (ISO 8601).
   *
   * Maps to Articles.econ_discuss_post_drafts.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of the draft (ISO 8601).
   *
   * Maps to Articles.econ_discuss_post_drafts.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEconDiscussPostDraft {
  /**
   * Search/filter request body for listing private drafts (owner scope).
   *
   * Maps to Articles.econ_discuss_post_drafts. Supports pagination, optional
   * keyword against title/body, updated_at windowing, linkage filter via
   * econ_discuss_post_id, and server-side sorting using
   * updated_at/created_at/title.
   */
  export type IRequest = {
    /** Page number for pagination (1-based). */
    page: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * Number of records per page. Providers should enforce an upper bound
     * for performance.
     */
    pageSize: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * Optional keyword applied to title/body fullâ€‘text search.
     *
     * This targets Articles.econ_discuss_post_drafts.title and .body, which
     * have trigram indexes per Prisma comments.
     */
    q?: string | null | undefined;

    /**
     * Filter lower bound (inclusive) on updated_at using ISO 8601 (UTC).
     * Maps to Articles.econ_discuss_post_drafts.updated_at.
     */
    updatedFrom?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter upper bound (inclusive) on updated_at using ISO 8601 (UTC).
     * Maps to Articles.econ_discuss_post_drafts.updated_at.
     */
    updatedTo?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * When true, restrict to drafts linked to a published post
     * (econ_discuss_post_id not null). When false, restrict to drafts with
     * no published link. When null/omitted, do not filter on linkage.
     */
    publishedLink?: boolean | null | undefined;

    /** Field to sort by. Defaults to updated_at if not provided. */
    sortBy?: IEEconDiscussDraftSortBy | null | undefined;

    /** Sort direction. Defaults to desc when omitted. */
    order?: IEEconDiscussSortOrder | null | undefined;
  };

  /**
   * Create payload for a private long-form draft.
   *
   * Backed by Articles.econ_discuss_post_drafts, which stores private,
   * autosaved work prior to publication. The underlying Prisma model allows
   * nullable title and body so authors can save early progress without
   * completing required post fields.
   *
   * Security and lifecycle: ownership derives from the authenticated
   * principal and is persisted server-side as
   * econ_discuss_post_drafts.econ_discuss_user_id. No identifiers or system
   * timestamps are accepted here; created_at/updated_at are system-managed.
   */
  export type ICreate = {
    /**
     * Draft working title.
     *
     * Prisma reference: econ_discuss_post_drafts.title (nullable). Drafts
     * intentionally allow empty or early autosave states. Clients may
     * submit null during autosave to preserve incomplete input.
     */
    title?: string | null | undefined;

    /**
     * Draft working body content.
     *
     * Prisma reference: econ_discuss_post_drafts.body (nullable). Long-form
     * content under construction; drafts do not enforce post-level length
     * constraints. Null is acceptable during early autosave.
     */
    body?: string | null | undefined;
  };

  /**
   * Update payload for a private long-form draft.
   *
   * Targets Articles.econ_discuss_post_drafts. Only user-editable content
   * fields are exposed. Server enforces ownership and updates updated_at
   * accordingly.
   *
   * Notes: Clearing is represented by explicit nulls where allowed by the
   * Prisma columns.
   */
  export type IUpdate = {
    /**
     * New draft title to apply or null to clear.
     *
     * Prisma reference: econ_discuss_post_drafts.title (nullable).
     */
    title?: string | null | undefined;

    /**
     * New draft body to apply or null to clear.
     *
     * Prisma reference: econ_discuss_post_drafts.body (nullable).
     */
    body?: string | null | undefined;
  };
}
