import { tags } from "typia";

/**
 * Post version snapshot entity modeled after the Prisma table
 * econ_discuss_post_snapshots.
 *
 * Each row captures the exact state of a post at a point in time, including
 * text fields (title, body, optional summary) and the contemporaneous
 * published_at value. Versioning is per post (unique constraint on
 * [econ_discuss_post_id, version]). Temporal columns created_at and updated_at
 * provide auditability. The soft deletion column deleted_at exists in the
 * database for exceptional corrections and is intentionally omitted from this
 * public DTO.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconDiscussPostSnapshot = {
  /**
   * Primary key of the snapshot row.
   *
   * Maps to econ_discuss_post_snapshots.id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Source post’s identifier to which this snapshot belongs.
   *
   * FK to econ_discuss_posts.id (Prisma:
   * econ_discuss_post_snapshots.econ_discuss_post_id).
   */
  econ_discuss_post_id: string & tags.Format<"uuid">;

  /**
   * Editor/author identifier who produced this snapshot.
   *
   * FK to econ_discuss_users.id (Prisma:
   * econ_discuss_post_snapshots.econ_discuss_user_id).
   */
  econ_discuss_user_id: string & tags.Format<"uuid">;

  /**
   * Monotonic version number per post.
   *
   * Maps to econ_discuss_post_snapshots.version (unique with post_id).
   */
  version: number & tags.Type<"int32">;

  /**
   * Snapshot of the post title at the time this version was captured. Maps to
   * econ_discuss_post_snapshots.title.
   */
  title: string;

  /**
   * Snapshot of the post body at the time this version was captured. Maps to
   * econ_discuss_post_snapshots.body.
   */
  body: string;

  /**
   * Optional snapshot of the post summary captured for this version. Maps to
   * econ_discuss_post_snapshots.summary.
   */
  summary?: string | null | undefined;

  /**
   * Post’s published_at value captured when this snapshot was created
   * (nullable). Maps to econ_discuss_post_snapshots.published_at.
   */
  published_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Snapshot creation timestamp in UTC (ISO 8601). Maps to
   * econ_discuss_post_snapshots.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for the snapshot record in UTC (ISO 8601). Maps to
   * econ_discuss_post_snapshots.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEconDiscussPostSnapshot {
  /**
   * Search, sorting, and pagination request for listing versions from
   * econ_discuss_post_snapshots.
   *
   * This DTO is designed for advanced queries over the immutable snapshot
   * history captured by the Prisma model econ_discuss_post_snapshots.
   * Supported filters and sort keys reflect actual columns on that table
   * (version, created_at, updated_at) as well as the captured published_at
   * state.
   */
  export type IRequest = {
    /**
     * Page number (1-based). If null or omitted, a server default is
     * applied.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Page size (items per page). If null or omitted, a server
     * default/upper bound is applied.
     */
    pageSize?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | null
      | undefined;

    /**
     * Sort field for version history listing.
     *
     * - Version: numeric post-local version from
     *   econ_discuss_post_snapshots.version
     * - Created_at: snapshot creation timestamp
     * - Updated_at: snapshot last update timestamp
     * - Published_at: the post’s published_at value captured at snapshot time
     *   (nullable)
     */
    sort_by?:
      | "version"
      | "created_at"
      | "updated_at"
      | "published_at"
      | null
      | undefined;

    /** Sort direction to apply with sort_by (asc or desc). */
    order?: "asc" | "desc" | null | undefined;

    /**
     * Lower bound (inclusive) for version filtering. Maps to
     * econ_discuss_post_snapshots.version.
     */
    version_min?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | null
      | undefined;

    /**
     * Upper bound (inclusive) for version filtering. Maps to
     * econ_discuss_post_snapshots.version.
     */
    version_max?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | null
      | undefined;

    /**
     * Lower bound (inclusive) for created_at filter in ISO 8601 UTC. Maps
     * to econ_discuss_post_snapshots.created_at.
     */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Upper bound (inclusive) for created_at filter in ISO 8601 UTC. Maps
     * to econ_discuss_post_snapshots.created_at.
     */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional keyword for text search across snapshot title/body
     * (leverages trigram indexes noted on
     * econ_discuss_post_snapshots.title/body in Prisma).
     */
    q?: string | null | undefined;
  };
}
