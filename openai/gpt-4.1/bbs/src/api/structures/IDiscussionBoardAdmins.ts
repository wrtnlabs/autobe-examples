import { tags } from "typia";

/**
 * Administrator entity type.
 *
 * This schema models system administrators for the economic/political
 * discussion board, as stored in the discussion_board_admins Prisma DB table.
 * It encapsulates all audit, authentication, and profile fields, strictly
 * following the table's structure.
 *
 * Admins have unique authority and serve for privileged management, requiring
 * secure handling and compliance with business data policies. Sensitive
 * credentials (e.g., password_hash) are intentionally not included. All system
 * operations impacting admin records use these fields for read/display/update.
 * This type is never returned to normal members or guests.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardAdmins = {
  /**
   * Primary Key.
   *
   * This field uniquely identifies each admin record in the
   * discussion_board_admins table. It is a UUID generated by the database,
   * ensuring global uniqueness for all admin users.
   *
   * Used for all relationship references and audit tracking, but never to be
   * set by API calls directly.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique email address for administrator login and communication. Must be
   * business-verified as part of privileged account control.
   *
   * This is used for authentication/contact, and must comply with system
   * uniqueness constraints.
   */
  email: string;

  /**
   * Display name selected by admin, used for displaying the identity of admin
   * actions and audit events.
   *
   * Must be unique platform-wide among admin accounts.
   */
  username: string;

  /**
   * Boolean flag indicating whether the administrator account has been
   * confirmed via a verification link or equivalent email validation process.
   * This field is only set after the email verification step is complete.
   */
  email_verified: boolean;

  /**
   * Timestamp when the admin account has successfully completed verification
   * and is enabled for privileged access.
   *
   * Serves as the moment the admin can begin executing privileged actions.
   * Provided in ISO 8601 format as a string.
   */
  registration_completed_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for account creation and audit trail establishment for
   * onboarded admins.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for the most recent administrative account update, such as
   * profile changes or security resets. Important for tracking changes and
   * audit.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for soft-deletion of the admin account. Null if the account is
   * active. Only set when the account is flagged as deleted, not removed from
   * the table.
   *
   * Used to support audit, compliance, and possible administrative review
   * workflows.
   */
  deleted_at: (string & tags.Format<"date-time">) | null;
};
export namespace IDiscussionBoardAdmins {
  /**
   * Fields allowed to update for an administrator account in the discussion
   * board system, as per the discussion_board_admins Prisma schema.
   *
   * Permitted fields for editing an admin profile are strictly limited to
   * email and username. Updating system-managed, secret, or audit fields is
   * forbidden for regular update flows. Sensitive authentication credentials
   * (e.g., password) can only be set/changed through dedicated password
   * reset/verification operations. Email changes will require new
   * verification; attempts to update fields not present in the database or
   * not safely user-editable will fail validation. This update DTO enforces
   * compliance and safe mutation of only defined admin entity columns.
   */
  export type IUpdate = {
    /**
     * New email address for the admin, if being changed.
     *
     * This field is subject to business validation rules for uniqueness and
     * correct organizational domain. It updates the 'email' column; changes
     * reset email_verified.
     */
    email?: (string & tags.Format<"email">) | undefined;

    /**
     * New display username for the admin profile.
     *
     * Must conform to uniqueness and business constraints defined in the
     * schema. Corresponds to the 'username' column.
     */
    username?: string | undefined;
  };
}
