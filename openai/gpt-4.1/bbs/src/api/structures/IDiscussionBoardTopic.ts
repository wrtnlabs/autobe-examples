import { tags } from "typia";

import { IDiscussionBoardReply } from "./IDiscussionBoardReply";

/**
 * Discussion board topic entity for economic/political board. Represents the
 * main forum thread with subject, content, author, and timestamps. Each topic
 * is created by either a member or admin, not a guest. Directly references
 * replies posted to this topic. See discussion_board_topics table and
 * ERD/Prisma schema for all field and relationship descriptions.
 *
 * - Only one of author_member_id or author_admin_id is set for each topic
 *   depending on creator role. Guests cannot author topics.
 * - 'discussion_board_replies' provides the thread of replies in order.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IDiscussionBoardTopic = {
  /**
   * Primary key of the discussion topic record. This uniquely identifies the
   * topic across the system and is used as a reference in replies and links.
   * See discussion_board_topics.id in the Prisma schema.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier for the member author of this topic
   * (discussion_board_members.id). Set when a standard member creates the
   * topic. Only one of author_member_id or author_admin_id will be present
   * for a given topic. Reference: discussion_board_topics.author_member_id in
   * Prisma schema.
   */
  author_member_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Identifier for the admin author of this topic
   * (discussion_board_admins.id). Set when an administrator creates the
   * topic. Only one of author_member_id or author_admin_id will be present
   * for a given topic. Reference: discussion_board_topics.author_admin_id in
   * Prisma schema.
   */
  author_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Subject or title of the topic. Required, minimum 5, maximum 120
   * characters. Used for quick identification and list display in the forum.
   * See discussion_board_topics.subject in Prisma schema.
   */
  subject: string;

  /**
   * Main body text of the topic post. Required, minimum 10, maximum 4000
   * characters. Includes the initial question, argument, or opinion for the
   * discussion. See discussion_board_topics.content in Prisma schema.
   */
  content: string;

  /**
   * Timestamp when the topic was created in the discussion board. Recorded in
   * UTC according to the system's audit requirements. See
   * discussion_board_topics.created_at in Prisma schema.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for the most recent edit or update to the topic. Increases
   * transparency and supports audit need for modifications. See
   * discussion_board_topics.updated_at in Prisma schema.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Array of reply entities associated with this topic. Each item is a reply
   * record as defined by discussion_board_replies table. Relation:
   * discussion_board_topics.discussion_board_replies in Prisma schema.
   */
  discussion_board_replies?: IDiscussionBoardReply[] | undefined;
};
export namespace IDiscussionBoardTopic {
  /**
   * Request parameters for topic list/search operation.
   *
   * Provides comprehensive support for keyword search, author filtering (by
   * member or admin), date windows, pagination, and fielded sorting when
   * retrieving discussion_board_topics records for browsing and search.
   *
   * These request parameters strictly correspond to columns actually present
   * in the Prisma DB schema. Input validation must enforce type, value, and
   * mutual exclusivity where necessary. Designed for high-traffic search and
   * browse interfaces.
   */
  export type IRequest = {
    /**
     * Keyword(s) to search against topic subjects or content. Applied as
     * case-insensitive, index-accelerated search using trigram operations.
     * Allows users to find topics by relevant keywords or phrases.
     */
    search?: string | undefined;

    /**
     * Restrict the search to topics authored by a specific member. Accepts
     * a UUID corresponding to a member's record. If provided, overrides
     * general search.
     */
    author_member_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Restrict the search to topics authored by a specific admin. Accepts a
     * UUID. Mutually exclusive with author_member_id; only one should be
     * used at a time.
     */
    author_admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * ISO 8601 date-time. Returns only topics created after this timestamp.
     *
     * Supports forward pagination or creation window selection in search
     * requests.
     */
    after?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO 8601 date-time. Returns only topics created before this
     * timestamp.
     *
     * Supports backward pagination or historical slicing of the topic list.
     */
    before?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Specifies which field to sort results by. Only columns indexed in the
     * schema are permitted: either created_at or updated_at.
     */
    sort_by?: "created_at" | "updated_at" | undefined;

    /**
     * Sort direction for the requested sort field. 'asc' for ascending,
     * 'desc' for descending.
     */
    sort_order?: "asc" | "desc" | undefined;

    /**
     * Page number for paginated topic results. Starts at 1. Used in
     * combination with limit.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of topics per page for pagination. Maximum values and sensible
     * defaults controlled by business rules.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * DTO schema for creating a new discussion board topic (POST). Only member
   * or admin may use this type; guests are not permitted. Only includes
   * business fields that must be supplied by the user during topic creation.
   * See discussion_board_topics table in Prisma schema. System sets author
   * and timestamps automatically.
   */
  export type ICreate = {
    /**
     * Subject or title for the new topic. Required, minimum 5 and maximum
     * 120 characters. See discussion_board_topics.subject in Prisma
     * schema.
     */
    subject: string;

    /**
     * Main body of the new topic post. Required, must be at least 10 and no
     * more than 4000 characters. See discussion_board_topics.content in
     * Prisma schema.
     */
    content: string;
  };

  /**
   * Update payload for an existing discussion board topic.
   *
   * This schema is used for submission of updates to a topic's subject
   * (title) and/or content (body) by its author (member or admin) or by an
   * administrator. The available fields correspond exactly to the mutable
   * properties in the `discussion_board_topics` table: 'subject' and
   * 'content'. Business validation rules enforce subject length (5-120
   * characters) and content length (10-4000 characters). All properties are
   * optional in this type so the endpoint can support partial updates (PATCH
   * semantics).
   *
   * This DTO does not allow changing topic authorship or timestamps directly;
   * those are system-managed fields. Any unspecified field will remain
   * unchanged. Use of this type should strictly follow the access control
   * outlined in requirements (only topic authors or admins may update
   * topics). All updates will refresh the `updated_at` timestamp in the
   * underlying model.
   *
   * @author AutoBE
   * @prisma discussion_board_topics
   */
  export type IUpdate = {
    /**
     * Subject or title of the discussion topic. Minimum 5, maximum 120
     * characters. Optional for update, but if supplied, will replace the
     * previous title. Must not be empty or contain forbidden language.
     */
    subject?: (string & tags.MinLength<5> & tags.MaxLength<120>) | undefined;

    /**
     * Main body/content of the topic. Minimum 10, maximum 4000 characters.
     * Optional for update, but if present, will replace the previous
     * content. Must be valid according to business and moderation rules.
     */
    content?: (string & tags.MinLength<10> & tags.MaxLength<4000>) | undefined;
  };

  /**
   * Summary DTO for a discussion topic, optimized for fast listing, search,
   * and browsing interfaces.
   *
   * Includes identifying information, title/subject, author references
   * (member or admin), and key timestamps. This summary is returned in
   * paginated listings, feeds, and search results, where full topic content
   * and nested replies are unnecessary for performance and usability. Core
   * properties exactly match fields available in the
   * 'discussion_board_topics' table. Use for lightweight exploration and
   * user-friendly navigation within the economic/political discussion board.
   */
  export type ISummary = {
    /**
     * Unique identifier for the discussion topic. Primary key in the
     * 'discussion_board_topics' Prisma model.
     *
     * Required for referencing, editing, deleting, or displaying topic
     * details across the board. Always an immutable UUID string.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Subject or title of the discussion topic. Corresponds to the
     * 'subject' field in the 'discussion_board_topics' schema. Required,
     * between 5 and 120 characters per business validation.
     *
     * Displayed as the main headline on topic listings, landing pages, and
     * search results.
     */
    subject: string;

    /**
     * (When author is a member) The unique identifier (UUID) of the member
     * who authored this topic. Sourced from 'author_member_id' in the
     * database and nullable only if authored by an admin.
     *
     * Used for linking topics to member profiles, permissions checks, and
     * author attributions in summary/listing contexts. Null when
     * 'author_admin_id' is populated.
     */
    author_member_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (When author is an admin) The unique identifier (UUID) of the admin
     * who authored this topic. Sourced from 'author_admin_id' in the
     * database and nullable except when authored by an admin.
     *
     * Allows privilege escalation and audit trails in topic curation. Null
     * when 'author_member_id' is populated.
     */
    author_admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Timestamp (ISO 8601, UTC) indicating when the topic was created.
     * Reflects the 'created_at' field in the Prisma schema.
     *
     * Used for sorting, display recency, and management workflows
     * throughout the discussion board. Immutable after creation.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp (ISO 8601, UTC) indicating the most recent update to the
     * topic. Corresponds to 'updated_at' in the schema, and is updated each
     * time the topic's subject or content is modified.
     *
     * Displayed in listings for activity heatmaps or freshness scores, and
     * used for audit/timeline features.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
