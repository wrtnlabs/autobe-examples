import { tags } from "typia";

/**
 * A full analytics trigger configuration, as stored in the
 * shopping_mall_analytics_triggers table. Used to schedule, manage, and route
 * analytics or reporting jobs on the e-commerce platform. Contains auditing,
 * job typing, status, scheduling, outcome log, and soft-delete timestamp.
 * Admin-only access for configuration and control; record is referenced in
 * analytics dashboard tools, reporting UIs, and admin audit logs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAnalyticsTrigger = {
  /** Primary Key. UUID of the analytics trigger job. */
  id: string & tags.Format<"uuid">;

  /**
   * Admin who scheduled/created the analytics trigger. References
   * shopping_mall_admins.id.
   */
  shopping_mall_admin_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Type of analytics/report job (dashboard_update, report_export,
   * data_rebuild, etc.).
   */
  trigger_type: string;

  /**
   * Serialized JSON for trigger schedule and config. Contains cron, timer,
   * frequency, and custom parameters; format is application-defined.
   */
  schedule_config_json?: string | undefined;

  /**
   * Job status (pending, running, success, failed, cancelled). Drives
   * operational state and UI filtering for scheduled jobs.
   */
  status: string;

  /**
   * JSON log of analytics results, error messages, or success details.
   * Present when job has run at least once; may contain raw/proprietary
   * data.
   */
  outcome_log_json?: string | undefined;

  /** Job creation timestamp in ISO 8601 UTC format. */
  created_at: string & tags.Format<"date-time">;

  /**
   * Job record's latest update or status transition timestamp in ISO 8601 UTC
   * format.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion time for archival/cleanup, or null if still active. ISO
   * 8601 UTC format or null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAnalyticsTrigger {
  /**
   * A filter/search request for listing analytics triggers. Defines query
   * parameters for advanced search, filtering, and pagination of analytics
   * trigger jobs by type, status, admin, or date range. Supports operational
   * dashboards and audit search in the admin UI. All parameters are optional;
   * at least one should be specified to trigger filtered search.
   */
  export type IRequest = {
    /**
     * The type of the analytics trigger (e.g., dashboard_update,
     * report_export, data_rebuild). Used for filtering analytics jobs by
     * business function or job type.
     */
    trigger_type?: string | undefined;

    /**
     * Job execution status (e.g., pending, running, success, failed,
     * cancelled). Used to filter analytics triggers by their current or
     * past state. Strictly matches the domain values in the
     * shopping_mall_analytics_triggers table.
     */
    status?: string | undefined;

    /**
     * UUID of the admin who created/scheduled the analytics trigger. Used
     * for admin-specific filtering or searching.
     */
    admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Start of the creation timestamp range for filtering analytics trigger
     * jobs (inclusive, ISO 8601 format).
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End of the creation timestamp range for filtering analytics trigger
     * jobs (inclusive, ISO 8601 format).
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. Defaults to 1 if not specified. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * How many records per page. Defaults to 20 or system default if not
     * specified.
     */
    pageSize?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Sort order field (e.g., created_at, status, trigger_type). System may
     * support field-specific sorters.
     */
    sort?: string | undefined;

    /** Sort direction. Must be either 'asc' or 'desc'. */
    sortDir?: "asc" | "desc" | undefined;

    /**
     * Free-text search query on trigger_type, description, or admin name
     * for fuzzy search.
     */
    query?: string | undefined;
  };

  /**
   * Schema for creating a new analytics/reporting trigger in the
   * shopping_mall_analytics_triggers table. Used by admin dashboard to
   * schedule advanced analytics or reporting jobs, including dashboard
   * refresh, report export, customer activity aggregation, etc. All required
   * fields ensure the engine can determine the job type, start time, status,
   * admin responsibility, and have the correct scheduling configuration. See
   * entity definition for business/compliance notes. Only available to
   * admin-level users.
   */
  export type ICreate = {
    /**
     * Type of analytics or aggregation trigger (dashboard_update,
     * report_export, data_rebuild, etc.). Required for determining what
     * process or analytic is scheduled or executed. Supported values depend
     * on platform's analytic jobs.
     */
    trigger_type: string;

    /**
     * Serialized JSON for trigger schedule and config. This field stores
     * scheduling data (such as cron settings, repeat interval, activation
     * window) or additional configuration. Must be valid JSON encoding
     * representing all necessary scheduling details for the analytics
     * engine to process.
     */
    schedule_config_json: string;

    /**
     * Trigger/job status (pending, running, success, failed, cancelled).
     * Indicates the current lifecycle stage of the analytics job for admin
     * dashboard and monitoring purposes. Must match allowed status values
     * as per analytics engine implementation.
     */
    status: string;

    /**
     * JSON log of analytics results or errors. Optionally used to capture
     * completion status, error stacks, export summaries, record counts
     * processed, etc. Can be empty/null for jobs that have not completed or
     * are scheduled.
     */
    outcome_log_json?: string | undefined;

    /**
     * Admin who configured/scheduled the analytics trigger (UUID of
     * shopping_mall_admins.id). Must be a valid admin user and will be used
     * for audit/attribution purposes. Required for compliance logging.
     */
    shopping_mall_admin_id: string & tags.Format<"uuid">;
  };

  /**
   * Schema for updating an analytics/reporting trigger in the
   * shopping_mall_analytics_triggers table. All fields are independently
   * optional, allowing for patch-style updates of schedule, type, status,
   * admin, or outcome logs. Useful for admin dashboard update forms,
   * rescheduling jobs, correcting analytics definition errors, or updating
   * result logs post-run. Fields must match trigger execution and platform
   * business/compliance requirements.
   */
  export type IUpdate = {
    /**
     * (Optional) Updated trigger/job type (dashboard_update, report_export,
     * etc.). Changing this value reclassifies the analytics function of
     * this trigger and may alter which engine or report-runner is invoked
     * by the scheduler.
     */
    trigger_type?: string | undefined;

    /**
     * (Optional) New serialized JSON schedule/config block. Used to amend
     * recurring schedule, execution windows, or job configuration for the
     * analytic/export job. Must be valid JSON and match expected analytics
     * engine structure.
     */
    schedule_config_json?: string | undefined;

    /**
     * (Optional) Update to trigger/job status (e.g., pending, running,
     * success, failed, cancelled). Can be set by admin to enable/disable
     * the trigger or mark for re-execution as needed by analytics
     * workflow.
     */
    status?: string | undefined;

    /**
     * (Optional) New analytics result/errors log. Update/replace the JSON
     * context holding the output, result summary, stack trace, or error
     * diagnostics as generated by the job executor.
     */
    outcome_log_json?: string | undefined;

    /**
     * (Optional) Set new admin owner (UUID) for compliance or audit
     * updates. Useful for reassignment on workflow changes or admin
     * turnover.
     */
    shopping_mall_admin_id?: (string & tags.Format<"uuid">) | undefined;
  };

  /**
   * A summary type for Shopping Mall analytics triggers used in paginated or
   * index API responses. Represents key scheduling and diagnostic attributes
   * for scheduled analytics/report jobs for admin dashboard display and
   * filtering.
   *
   * - This DTO is used for admin dashboard server-side pagination and quick
   *   admin-level queries regarding analytics trigger jobs.
   * - Fields presented as summary must align with the underlying
   *   shopping_mall_analytics_triggers Prisma model comments and admin-facing
   *   requirements.
   *
   * The summary structure includes:
   *
   * - Unique identifier for the trigger
   * - Trigger type (such as dashboard update, export, data rebuild, etc.)
   * - Internal job status (pending, running, success, failed, cancelled)
   * - Assigned admin's identifier (if the trigger was scheduled by a specific
   *   admin)
   * - Job creation timestamp for audit/reporting purposes
   * - Updated timestamp for last modification (edit, schedule, outcome log)
   *
   * Detailed logs, full configuration JSON, and job outcome content are
   * omitted in summary. For complete detail views or editing, reference the
   * full IShoppingMallAnalyticsTrigger entity.
   */
  export type ISummary = any;
}
