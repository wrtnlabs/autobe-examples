import { tags } from "typia";

/**
 * Order status and event timeline record for shopping mall platform. This
 * entity stores the full audit trail of all status transitions,
 * customer/seller/admin actions, and business workflow events throughout an
 * order's lifecycle. Linked to shopping_mall_orders; each entry reflects one
 * business state change or timeline milestone in the order's journey. Used for
 * audit, customer service, UI order history, and root cause analysis in
 * escalations. Some fields are optional (actor_seller_id, actor_admin_id,
 * message) and are populated depending on event context. For best practices,
 * all transitions impacting customer/seller visibility are recorded here.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderStatusHistory = {
  /**
   * Primary key. Unique identifier for this order status history event
   * record. Referenced as order status timeline id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key to order (shopping_mall_orders.id) to which this status event
   * belongs.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * The actor's customer id triggering the event (if actioned by a customer),
   * otherwise null.
   */
  actor_customer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * The actor's seller id triggering the event (if actioned by a seller),
   * otherwise null.
   */
  actor_seller_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** The admin id triggering the event (if actioned/admin), otherwise null. */
  actor_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of order status timeline event. Examples: 'placed', 'status_change',
   * 'cancel_requested', 'refund_requested', 'shipment_updated', etc. Used for
   * audit, business logic, and UI status timeline views.
   */
  event_type: string;

  /**
   * Order status before this timeline event. Referenced for audit and
   * timeline diff.
   */
  status_before?: string | null | undefined;

  /**
   * Order status after this event (resulting status). Important for display
   * and state transition/recovery.
   */
  status_after?: string | null | undefined;

  /**
   * Event message, comment, or explanation. Used for human-readable audit
   * trail, internal notes, or customer communication about this timeline
   * event.
   */
  message?: string | null | undefined;

  /**
   * Timestamp of this event creation. Represents when the status change or
   * timeline event was recorded.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallOrderStatusHistory {
  /**
   * Request/search data for retrieving a paginated and filtered list of order
   * status history/timeline records. Fields map directly to filtering,
   * sorting, and pagination for timeline events of a specific order or
   * general status audit. All properties are optional; if none provided,
   * defaults are applied for full timeline retrieval.
   */
  export type IRequest = {
    /**
     * The unique identifier of the order for which the status history is
     * being queried. This field is required for API context but as a DTO,
     * the orderId can be included for search logic or filtering.
     */
    orderId?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional filter for the specific type of order event (e.g., placed,
     * status_change, cancel_requested, refund_requested, shipment_updated).
     * This narrows the status/timeline entries to only those of a specific
     * category.
     */
    event_type?: string | undefined;

    /**
     * Optional filter for the role of the actor who triggered the status
     * history event. Allowed values: 'customer', 'seller', 'admin'. Used
     * for audit or search-by-actor workflows.
     */
    actor_role?: string | undefined;

    /**
     * Retrieve status history entries created after this timestamp (ISO
     * 8601). Used for pagination or timeline constraint.
     */
    created_after?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Retrieve status history entries created before this timestamp (ISO
     * 8601). Used for pagination or timeline constraint.
     */
    created_before?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional filter to return status history events where the order
     * transitioned to this status value (e.g., 'pending', 'paid',
     * 'shipped', etc.)
     */
    status_after?: string | undefined;

    /**
     * Optional filter to return status history events where the order
     * transitioned from this status value.
     */
    status_before?: string | undefined;

    /** Page number for paginated queries. Defaults to 1 if not provided. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum number of records per page. Defaults to 20, maximum 100. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Sort field for timeline entries. Defaults to 'created_at' descending
     * (most recent events first).
     */
    sort?:
      | "created_at"
      | "event_type"
      | "actor_role"
      | "status_before"
      | "status_after"
      | undefined;

    /**
     * Order direction for sorting (ascending or descending). Default:
     * 'desc'.
     */
    order?: "asc" | "desc" | undefined;
  };
}
