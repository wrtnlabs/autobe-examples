import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents an administrator account entity within the shopping mall
 * e-commerce platform.
 *
 * This schema maps directly to the 'shopping_mall_admins' table in the Actors
 * namespace of the Prisma database schema. It contains all core profile and
 * authentication fields for platform administrators, as well as audit and
 * security-related properties. The schema supports account management,
 * including creation, detail fetch, and update operations, but does not expose
 * sensitive password_hash values in responses. It is foundational for
 * administrative workflows and dashboard operations, as described in the
 * requirements analysis documentation. All fields and security rules must
 * strictly follow the underlying database model and business logic, especially
 * regarding audit, compliance, and access control.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAdmin = {
  /**
   * The unique identifier (primary key) for the admin account, as stored in
   * the shopping_mall_admins table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The administrator's unique login email address. This must be globally
   * unique and is used for authentication and system communications according
   * to the platform requirements.
   */
  email: string & tags.Format<"email">;

  /**
   * The full name of the administrator as displayed in admin dashboards,
   * audit logs, and platform user interfaces. Used for audit, reporting, and
   * accountability.
   */
  full_name: string;

  /**
   * Admin account status. Typical values: 'active', 'disabled', 'suspended',
   * etc. Reflects operational and access state, and is critical for
   * compliance and platform security checks.
   */
  status: string;

  /**
   * Secret key for two-factor authentication. If present, admin is required
   * to complete 2FA during login. May be null if not yet configured. Used for
   * enhanced platform security.
   */
  two_factor_secret?: string | null | undefined;

  /**
   * Timestamp of last successful login to the administrator panel, for
   * audit/compliance and security monitoring. Null if never logged in.
   */
  last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when the admin account was created, as assigned by the system
   * on registration. Used for audit and timeline review.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when any attribute of the admin account was last updated.
   * Tracks last modification of name, status, 2FA, etc., for auditing and
   * risk analysis.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp for logical admin removal. Null unless the account
   * has been deleted. Used for compliance and possible data retention rules.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallAdmin {
  /**
   * DTO for registering a new admin account in the shopping_mall_admins
   * table. Used during administrator onboarding. All required fields
   * correspond directly to Prisma columns. Security best practices mandate
   * backend hashing of the plaintext password field on registration;
   * password_hash is never accepted or stored from the client. Status
   * defaults to 'pending' if not specified. Only has the properties present
   * in the underlying schema; no extraneous properties allowed. Two-factor
   * authentication (if required) is handled in a separate flow after initial
   * registration. All values are validated for format and uniqueness at the
   * business and schema layers.
   */
  export type ICreate = {
    /**
     * Admin's unique email address for login and communications, as
     * required by the shopping_mall_admins Prisma schema. Must be globally
     * unique and properly formatted per RFC 5322. Acts as the primary
     * contact and identifier for administrator authentication and audit
     * purposes.
     */
    email: string & tags.Format<"email">;

    /**
     * The admin's raw password, accepted securely over HTTPS during
     * registration. Plain text password that will be hashed and stored as
     * 'password_hash' server-side; never store or transmit hashes from the
     * client. Must meet platform password complexity requirements.
     */
    password: string;

    /**
     * Admin's full name for audit and dashboard tracking. Used for
     * identification purposes in administrative logs, audit actions,
     * dashboard displays, and all areas where administrative actions are
     * attributed. Must comply with internal naming conventions.
     */
    full_name: string;

    /**
     * Admin account status (e.g., 'active', 'disabled', 'suspended').
     * Determines if the admin can log in and perform actions. Typically set
     * to 'pending' on creation until verified or manually approved by
     * platform super admin. Corresponds to the 'status' field in
     * shopping_mall_admins.
     */
    status?: string | undefined;
  };

  /**
   * Authorization envelope response for admins issued after successful join
   * or login. Conforms to IAuthorized pattern, with standard JWT 'token'
   * property referencing IAuthorizationToken type. No secret 2FA credentials,
   * hashes, or sensitive information is ever included in this DTO. Used for
   * downstream API authentication and dashboard display. Must be the
   * system-of-record for the authenticated admin session and user claims.
   */
  export type IAuthorized = {
    /**
     * Unique identifier for the admin account, as stored in the
     * shopping_mall_admins table. Used as the principal key for identifying
     * administrator role and for JWT claim principal.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Admin's email address used for login and contact. Returned for
     * information and display purposes in admin dashboards. Fetched
     * directly from shopping_mall_admins.
     */
    email: string & tags.Format<"email">;

    /**
     * Full name of the admin for identification in audits and management
     * dashboards. Directly corresponds to the
     * shopping_mall_admins.full_name Prisma column.
     */
    full_name: string;

    /**
     * Current admin account status such as 'active', 'pending',
     * 'suspended', or 'disabled'. Controls platform access. Value must
     * match the status in shopping_mall_admins and may inform frontend
     * UI/UX or platform feature gating for admin role.
     */
    status: string;

    /**
     * Timestamp of last successful login to the administrator panel, for
     * audit/compliance and security monitoring. Null if never logged in.
     */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Timestamp when the admin account was created, as assigned by the
     * system on registration. Used for audit and timeline review.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when any attribute of the admin account was last updated.
     * Tracks last modification of name, status, 2FA, etc., for auditing and
     * risk analysis.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft-delete timestamp for logical admin removal. Null unless the
     * account has been deleted. Used for compliance and possible data
     * retention rules.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * DTO for admin login credentials. Used as request body for authentication
   * API integrating with shopping_mall_admins table. Enforces required fields
   * and password policy. DO NOT submit hashed password in this objectâ€”only
   * plaintext for credential validation. Descriptions reference Prisma schema
   * and compliance constraints.
   */
  export type ILogin = {
    /**
     * Administrator's email used for login/authentication. Must match the
     * stored record in shopping_mall_admins table.
     */
    email: string & tags.Format<"email">;

    /**
     * Plaintext password provided at login. Backend compares this using a
     * secure hash (BCrypt) against password_hash in shopping_mall_admins.
     * Never stored directly.
     */
    password: string & tags.MinLength<8> & tags.MaxLength<128>;
  };

  /**
   * DTO for admin session/token refresh operation. Used as request body for
   * obtaining new access/refresh tokens. Ensures token matches admin session
   * and complies with expiration/revocation business logic. Descriptions
   * reference corresponding Prisma schema fields.
   */
  export type IRefresh = {
    /**
     * Refresh token issued during initial admin login. Must exactly match a
     * non-revoked, non-expired record in shopping_mall_user_sessions for
     * this admin.
     */
    refresh_token: string;
  };

  /**
   * Search and filtering schema for paginated retrieval of admin user
   * profiles (shopping_mall_admins table). Used by admin dashboards for
   * finding, filtering, and listing platform administrators for managerial,
   * compliance, or analytics purposes. No authentication credentials or
   * security tokens are ever permitted.
   *
   * Typical filters include admin status, full name, email, and
   * registration/last login dates. Results are returned as paginated
   * summaries for efficiency in browsing large admin user datasets.
   */
  export type IRequest = {
    /**
     * (Optional) Filter results by admin user status (e.g., 'active',
     * 'disabled', or 'suspended'). This controls which admins are
     * surfaced.
     */
    status?: string | undefined;

    /**
     * (Optional) Filter by admin user email address. May be partial match
     * for search or exact email for direct lookup.
     */
    email?: string | undefined;

    /**
     * (Optional) Filter results by admin full name, supporting partial or
     * normalized match. Useful for searching by name when exact email is
     * not known.
     */
    full_name?: string | undefined;

    /**
     * (Optional) Return only admins whose account creation timestamp is
     * after or at this ISO8601 date/time.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Return only admins whose account creation timestamp is
     * before or at this ISO8601 date/time.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Filter for admins whose last successful login was after
     * this ISO8601 date/time. Used for identifying recently active admins.
     */
    last_login_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Filter for admins whose last successful login was before
     * this ISO8601 date/time.
     */
    last_login_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Name of the property to sort results by. Common fields:
     * 'created_at', 'status', 'full_name', 'email'.
     */
    sort_by?: string | undefined;

    /**
     * (Optional) Controls sorting direction for search results. Must be
     * 'asc' for ascending or 'desc' for descending.
     */
    sort_order?: "asc" | "desc" | undefined;

    /**
     * (Optional) Page number for pagination, starting from 1. Used in all
     * pageable endpoints.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * (Optional) Maximum admin records per page. Enforced by server limits;
     * typical default 20, maximum 100.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Request DTO for updating an administrator account profile in the shopping
   * mall system. This type references directly the shopping_mall_admins
   * entity in the Prisma model.
   *
   * Allows allowed fields to be modified by admins or system processes,
   * including name, status, email, and 2FA settings. Password_hash must NOT
   * be included or exposed hereâ€”use dedicated password reset/change APIs.
   * Required for admin management tools, profile update screens, and
   * audit-driven adjustments. All changes are recorded via updated_at field,
   * and modifications are tracked in audit logs for compliance.
   *
   * Business rules:
   *
   * - Only mutable fields are allowed.
   * - Account status change may have side-effects (access revocation/audit).
   * - Email changes must enforce uniqueness.
   * - 2FA can only be set/cleared via verified admin process.
   * - Non-editable fields (id, created_at, last_login_at, deleted_at) are
   *   omitted in the update DTO.
   * - Fields not included in the update payload are left unchanged.
   */
  export type IUpdate = {
    /**
     * (Optional) New email address for the admin account. Must be unique.
     * If not updating, omit this field.
     */
    email?: (string & tags.Format<"email">) | undefined;

    /**
     * (Optional) Updated full name for the administrator. Used for
     * dashboard and audit presentation.
     */
    full_name?: string | undefined;

    /**
     * (Optional) Account status after update. Supported values: 'active',
     * 'disabled', 'suspended', etc. Use with care, as status transitions
     * affect access and may be audited.
     */
    status?: string | undefined;

    /**
     * (Optional) Set or clear the TOTP (two-factor authentication) secret
     * for the admin account. If set, admin must complete 2FA for login. Use
     * null to clear/remove 2FA.
     */
    two_factor_secret?: string | null | undefined;
  };

  /**
   * Summary representation of a platform administrator for admin
   * listing/search results.
   *
   * This schema gives a pagination-optimized view of admin account
   * information for admin dashboards, search, and monitoring. It omits
   * sensitive authentication fields and focuses on attributes useful for
   * quick lookup, auditing, or admin assignment tasks.
   *
   * All fields and descriptions map to the shopping_mall_admins Prisma schema
   * and reflect only existing columns. The schema is intended to be used with
   * paginated result sets for dashboard search APIs, never for full admin
   * detail or authentication workflows.
   */
  export type ISummary = {
    /**
     * Primary Key. Unique identifier of the admin account in the shopping
     * mall platform. Always a UUID as defined in Prisma for
     * shopping_mall_admins.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Admin's unique email address for login and communications, as in
     * shopping_mall_admins.email.
     */
    email: string;

    /** Admin's personal name or identifier for UI display and audit logs. */
    full_name: string;

    /**
     * Admin account status: reflects if the admin is active, disabled,
     * suspended, or otherwise. Sourced from shopping_mall_admins.status
     * field.
     */
    status: string;

    /**
     * Timestamp of most recent successful login for the admin account. Null
     * if never logged in. Sourced from shopping_mall_admins.last_login_at.
     */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Admin account creation timestamp in ISO 8601 format, as in
     * shopping_mall_admins.created_at.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last updated timestamp for the admin profile, as in
     * shopping_mall_admins.updated_at.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft delete timestamp. Populated if the admin is logically deleted,
     * null otherwise. Aligns with shopping_mall_admins.deleted_at.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
