import { tags } from "typia";

/**
 * Hierarchical category tree node in the shopping mall e-commerce platform.
 * Maps to the 'shopping_mall_categories' table in the Prisma database schema.
 * Used for product categorization, search, catalog structure, and admin
 * navigation management. Supports full multi-language naming and tree
 * navigation. Contains parent/child structure, display order, is_active state
 * for platform-wide control, and audit fields for compliance and reporting.
 * This schema definition directly aligns with the entity-level documentation in
 * the provided ERD and Prisma schema. All business rules, constraints, and
 * field purposes are documented in field descriptions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCategory = {
  /**
   * Primary Key. Globally unique UUID identifier for the category record as
   * defined in shopping_mall_categories. Used as a reference in products,
   * catalogs, navigation, and ERD relationships.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional parent category's ID (UUID). Null for root categories.
   * Implements a recursive self-referencing relationship for category
   * hierarchies. Used to build full navigation and category trees from the
   * root to leaves.
   */
  parent_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Category name in Korean. Required for full localization support. Must be
   * unique within the parent category in Korean. Used as the primary display
   * name for Korean interfaces and search.
   */
  name_ko: string;

  /**
   * Category name in English. Required for internationalization and
   * multilingual admin dashboards. Must be unique within the parent category
   * in English. Used for English-language display and search.
   */
  name_en: string;

  /**
   * Optional descriptive text for the category in Korean. Provides richer
   * classification and catalog context for Korean users. Used in admin
   * dashboard, navigation, or for SEO. Can be null or empty.
   */
  description_ko?: string | null | undefined;

  /**
   * Optional descriptive text for the category in English. Used for
   * internationalization, catalog navigation, or SEO for English-language
   * users. May be null or empty if not set.
   */
  description_en?: string | null | undefined;

  /**
   * Ordering index (0-based integer) for display in navigation hierarchies.
   * Categories are typically sorted by this value within their parent. Used
   * by admin tools for fine-grained navigation and catalog structure.
   */
  display_order: number & tags.Type<"int32">;

  /**
   * Indicates whether the category and its children are active/enabled across
   * the platform. If false, this category and all subcategories are excluded
   * from public search and navigation. Used in admin tools for category
   * lifecycle and moderation workflows.
   */
  is_active: boolean;

  /**
   * Creation timestamp for the category. Automatically set at insert time.
   * Used for audit, sorting, and business reporting. (ISO 8601, Prisma
   * DateTime)
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last update to this category record. Used to invalidate
   * caches and trigger re-index events. Updated by admin category edits. (ISO
   * 8601, Prisma DateTime)
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of soft deletion for this category. Null if not deleted;
   * otherwise, marks the logical deletion for audit/logging. (ISO 8601,
   * Prisma DateTime or null). When set, category is hidden from public
   * navigation and search.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCategory {
  /**
   * Request parameters for searching, filtering, sorting, and paginating
   * category lists in the shopping mall platform. This DTO is referenced by
   * endpoints that return lists of shopping mall categories. All fields are
   * optionals and provide flexible search capabilities for both
   * customer-facing and admin dashboards.
   *
   * Fields include pagination controls (page, limit), parent_id for
   * hierarchical filtering, localized name filters, is_active for status,
   * display_order for navigation, and full-text search. Enum fields sort and
   * order control sort target and direction. All property types, constraints,
   * and default values are derived from the business requirements and Prisma
   * schema for shopping_mall_categories. Security and validation are handled
   * by the application layer.
   */
  export type IRequest = {
    /**
     * Page number for pagination. Used to retrieve a specific subset of
     * category records from the full result set. 1-based, and must be a
     * positive integer.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of category records to return per page. Used to control batch
     * size for pagination, with platform configuration typically limiting
     * upper bounds to avoid excess memory use or result set size. Defaults
     * vary by API, but typically 20. Must be a positive integer.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional filter to return only categories that are immediate children
     * of the specified parent category. Must be a valid UUID, or left
     * null/undefined for top-level/root search.
     */
    parent_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for category name in Korean. Supports substring/partial match
     * for search. Used for multilingual user interface and administrative
     * searches.
     */
    name_ko?: string | undefined;

    /**
     * Filter for category name in English. Supports partial or substring
     * search for finding categories in English-localized displays.
     */
    name_en?: string | undefined;

    /**
     * Boolean flag to filter only active (enabled) or inactive (disabled)
     * categories. Used by admin tools for category lifecycle management.
     */
    is_active?: boolean | undefined;

    /**
     * Optional filter/sort parameter to order or filter categories by
     * display order index. 0-based, integer. Used for admin sorting and to
     * control displayed navigation order.
     */
    display_order?: (number & tags.Type<"int32">) | undefined;

    /**
     * Field to sort category results by, such as 'display_order',
     * 'created_at', 'name_ko', or 'name_en'. Used with 'order' to define
     * query result ordering.
     */
    sort?: "display_order" | "created_at" | "name_ko" | "name_en" | undefined;

    /**
     * Sort order direction for categories. Typically 'asc' for ascending or
     * 'desc' for descending. Used in conjunction with 'sort' to specify
     * ordering.
     */
    order?: "asc" | "desc" | undefined;

    /**
     * General search keyword, used to find categories by partial matches in
     * name or description fields across localizations.
     */
    search?: string | undefined;
  };

  /**
   * Schema for creating a new product category in the
   * shopping_mall_categories table. Supports hierarchical category tree,
   * localization, display ordering, and enable/disable toggling.
   *
   * - Parent_id: Optional parent category UUID for hierarchy (null for root)
   * - Name_ko: Required Korean category name (unique within parent)
   * - Name_en: Required English category name (unique within parent)
   * - Description_ko: Optional long description in Korean
   * - Description_en: Optional long description in English
   * - Display_order: Required integer for navigation sort order (0-based)
   * - Is_active: Required boolean for enabling/disabling category
   *
   * References shopping_mall_categories model comment and business rules for
   * navigation and admin display.
   */
  export type ICreate = {
    /**
     * Optional parent category's ID. Root categories have null parent_id.
     * This field establishes category hierarchy. Must reference an existing
     * category UUID or null for root.
     */
    parent_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Category name in Korean. Required for localization support. Unique
     * within the parent category.
     */
    name_ko: string;

    /**
     * Category name in English. Required for localization support. Unique
     * within the parent category.
     */
    name_en: string;

    /**
     * Optional category description in Korean. Used for longer text or
     * category explanation.
     */
    description_ko?: string | null | undefined;

    /**
     * Optional category description in English. Used for longer text or
     * category explanation.
     */
    description_en?: string | null | undefined;

    /**
     * Ordering index for display in navigation, 0-based. Allows admin
     * sorting of sibling categories.
     */
    display_order: number & tags.Type<"int32">;

    /**
     * Whether the category is active/enabled across the platform. Inactive
     * disables all subcategories and associated products.
     */
    is_active: boolean;
  };

  /**
   * Schema for updating an existing product category in the
   * shopping_mall_categories table. Allows partial or full update of any
   * category property. All properties are optional for flexible PATCH/PUT
   * semantics.
   *
   * - Parent_id: Update hierarchy/parent (null for root)
   * - Name_ko: Update Korean name (unique within parent)
   * - Name_en: Update English name (unique within parent)
   * - Description_ko: Update or clear Korean description
   * - Description_en: Update or clear English description
   * - Display_order: Update sort index
   * - Is_active: Enable/disable category (recursively disables
   *   children/products if set false)
   *
   * References full update rules and unique constraint enforcement from the
   * Prisma schema.
   */
  export type IUpdate = {
    /**
     * New parent category's ID. Set to null for root. Must reference an
     * existing category UUID or null.
     */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Updated category name in Korean. Must be unique within the parent
     * category if changed.
     */
    name_ko?: string | undefined;

    /**
     * Updated category name in English. Must be unique within the parent
     * category if changed.
     */
    name_en?: string | undefined;

    /**
     * Updated or cleared description in Korean. Pass null to remove
     * existing description.
     */
    description_ko?: string | null | undefined;

    /**
     * Updated or cleared description in English. Pass null to remove
     * existing description.
     */
    description_en?: string | null | undefined;

    /**
     * Updated ordering index for navigation (0-based). Determines sibling
     * sort order.
     */
    display_order?: (number & tags.Type<"int32">) | undefined;

    /**
     * Set active/enabled status. Inactive disables subcategories/products
     * recursively.
     */
    is_active?: boolean | undefined;
  };

  /**
   * Summary DTO for product categories, for lightweight listings, dropdowns,
   * or navigation. Contains only essential category info and hierarchy
   * pointers. Based on `shopping_mall_categories` table. Does not include
   * full audit meta or multilingual descriptions.
   */
  export type ISummary = {
    /**
     * Primary key for this category. References the `id` column in
     * `shopping_mall_categories`. Uniquely identifies this category
     * throughout the platform. Always a valid UUID string.
     */
    id: string & tags.Format<"uuid">;

    /**
     * ID of the parent category if this is a subcategory. For root
     * categories, this should be null. Used to build hierarchical
     * navigation.
     */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Category name in Korean (for localization). Must be unique within its
     * parent for the Korean name. Direct mapping to `name_ko` in the DB.
     */
    name_ko: string;

    /**
     * Category name in English (for localization and global UI). Unique
     * within its parent for the English name. Sourced from `name_en` in the
     * schema.
     */
    name_en: string;

    /**
     * Ordering index for sibling categories (0-based). Used for frontend
     * category navigation display. Linked to `display_order` in table.
     */
    display_order: number & tags.Type<"int32">;

    /**
     * Whether this category is enabled (active) across the system. Inactive
     * disables all subcategories and products. Mirrors `is_active`.
     */
    is_active: boolean;
  };
}
