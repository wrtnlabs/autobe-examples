import { tags } from "typia";

/**
 * Cancellation record object as stored in shopping_mall_order_cancellations.
 * This type includes all attributes associated with cancellation eventsâ€”audit
 * fields, initiator references, business reason, status transitions, and
 * timepoints. Used for order management, customer service, compliance, and
 * workflow state tracking.
 *
 * References shopping_mall_order_cancellations Prisma model, and all properties
 * must strictly exist in this database schema/table. Descriptions here directly
 * reflect database column documentation and domain-relevant field constraints.
 * Sensitive admin/customer context (initiator_admin_id, initiator_customer_id)
 * is included for full auditability, subject to role-based display filtering as
 * per business logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderCancellation = {
  /**
   * The unique identifier for the cancellation record (UUID).
   *
   * Assigned automatically when the cancellation is created and used as the
   * primary key for referencing and audit.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The unique identifier (UUID) of the order being cancelled.
   *
   * References the primary key in shopping_mall_orders. Ties this
   * cancellation record to its related order, used in workflow, display, and
   * reporting.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * UUID of the customer who requested the cancellation, if applicable.
   *
   * Null if the cancellation was not requested by a customer (e.g.,
   * seller/admin-initiated or system action).
   */
  initiator_customer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * UUID of the seller who initiated or handled the cancellation, if present.
   *
   * Null for customer-initiated or admin-only cancellations.
   */
  initiator_seller_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * UUID of the admin who handled or initiated the cancellation.
   *
   * Null for customer/seller-initiated cancellations.
   */
  initiator_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Business reason code for the cancellation (e.g., 'customer_request',
   * 'fraud_suspected', 'oos', etc.).
   *
   * This is a structured field to enable reporting and workflow routing. The
   * value must match one of the allowed reasons defined by business policy
   * and platform logic.
   */
  reason_code: string;

  /**
   * Current status of the cancellation request (e.g., 'pending', 'approved',
   * 'denied', 'completed', etc.).
   *
   * Determines the workflow state. Business rules enforce allowed values and
   * transitions.
   */
  status: string;

  /**
   * Detailed textual explanation or justification for cancellation. Can be
   * provided by the initiator or by an admin during the review/approval
   * process.
   *
   * Intended for audit, dispute resolution, and compliance.
   */
  explanation?: string | null | undefined;

  /**
   * Timestamp when the cancellation was requested, in ISO 8601 format with
   * timezone.
   *
   * Used for SLA tracking, timeline display, and audit.
   */
  requested_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the cancellation was resolved or closed (approved/denied),
   * or null if not yet resolved.
   */
  resolved_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Creation timestamp of the cancellation record (ISO8601 with timezone). */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for the cancellation record (ISO8601 with
   * timezone).
   *
   * Used for concurrency control and workflow audit.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallOrderCancellation {
  /**
   * Request structure for initiating an order cancellation. Used by customers
   * to request cancellation of an in-progress order, or by sellers/admin for
   * platform-initiated cancellations.
   *
   * References business rules requiring validation of eligibility, reason
   * codes, and the linkage to the owning order. This object is used in
   * cancellation creation API operations and serves as the basis for audit
   * and workflow routing.
   */
  export type IRequest = {
    /**
     * The unique identifier (UUID) of the order for which the cancellation
     * is being requested.
     *
     * This value must correspond to a valid, existing order belonging to
     * the requester (customer or seller) and for which cancellation is
     * allowed by platform and business policies. Used to link the
     * cancellation request to its target order.
     */
    orderId: string & tags.Format<"uuid">;

    /**
     * A short code indicating the reason for the cancellation (e.g.,
     * 'customer_request', 'fraud_suspected', 'oos', 'seller_failure',
     * etc.).
     *
     * Allowed values are determined by business logic and may be presented
     * as an enumerated list in the user interface for consistency. Must
     * follow platform policies for structured cancellation reasons.
     */
    reason_code: string;

    /**
     * Free-text explanation or additional context for the cancellation
     * request.
     *
     * This field allows the requesting actor to provide a detailed
     * justification, supporting documentation, or other message that will
     * be stored for audit, review, and possibly for use in customer service
     * or dispute resolution workflows.
     *
     * The field is optional but strongly recommended for cancellations that
     * may be escalated or require admin approval.
     */
    explanation?: string | undefined;
  };

  /**
   * Update DTO for order cancellation event.
   *
   * Used to update cancellation records in shopping_mall_order_cancellations
   * by customer, seller, or admin (depending on workflow). This interface
   * enforces strict business logic for state transitions, allowing changes to
   * the cancellation reason, status, and optional explanation. Updates are
   * always audit-logged, and status changes must comply with the permissible
   * transition matrix in e-commerce requirements analysis.
   *
   * References cancellation reason codes, state machine for status, and
   * includes support for explanatory notes for compliance and dispute
   * reviews.
   */
  export type IUpdate = {
    /**
     * Business reason code for cancellation (customer_request,
     * fraud_suspected, oos, seller_failure, etc.). Must reference a
     * controlled vocabulary from business policy documentation.
     */
    reason_code: string;

    /**
     * Updated cancellation status (pending, approved, denied, completed,
     * etc.). Must reflect a valid transition as defined in platform
     * business logic.
     */
    status: string;

    /**
     * Optional audit explanation for this update. Provides more
     * human-readable context for audit logs or compliance review.
     */
    explanation?: string | undefined;
  };
}
