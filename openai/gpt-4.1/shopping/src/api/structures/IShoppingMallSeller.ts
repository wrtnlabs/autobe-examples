import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents a seller entity on the shoppingMall e-commerce platform. Each
 * seller corresponds to a record in shopping_mall_sellers. This includes
 * contact and compliance attributes for onboarding, catalog management, order
 * fulfillment, and regulatory requirements.
 *
 * All fields align with the shopping_mall_sellers table in the provided Prisma
 * schema and enforce strict business logic according to detailed schema and
 * requirements analysis. Fields such as "password_hash" are excluded for
 * security; only business/public/admin-appropriate fields are returned.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallSeller = {
  /**
   * Unique identifier for the seller. This is the primary key from the Prisma
   * shopping_mall_sellers table. Generated upon insertion and never changes.
   *
   * Used for all relationships and references on the platform.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The seller's login email address. Uniquely identifies the seller account.
   * Used for authentication and platform communications.
   *
   * Input is required to be unique platform-wide. Must be a valid formatted
   * email address.
   */
  email: string;

  /**
   * Legal or formal name of the seller's business, as registered on the
   * platform and used for KYC/business verification, catalog display, and
   * compliance. Must be unique per-seller and visible on seller-facing areas
   * such as order invoices or product detail pages.
   */
  business_name: string;

  /**
   * Name of the primary account holder, for use in support, KYC, and business
   * contact workflows. Can be a person or division name.
   */
  contact_name: string;

  /**
   * Main telephone or mobile number for KYC verification, support, and
   * notifications related to business account events. Must be provided and
   * verified according to admin workflow.
   */
  phone: string;

  /**
   * This is an optional field. If present, it should reference a public file
   * uploaded for KYC.
   */
  kyc_document_uri?: string | null | undefined;

  /**
   * Current approval status for the business entity and seller account.
   * Determines onboarding transition: expected states are 'pending',
   * 'approved', 'suspended', 'rejected'. Used to gate access to seller
   * features and catalog listing.
   */
  approval_status: string;

  /**
   * Business registration number as required by law for sellers on the
   * platform. Uniquely identifies the legal business entity. Used for
   * compliance and platform tax/legal reporting.
   */
  business_registration_number: string;

  /**
   * Indicates whether email verification flow has been completed for platform
   * authentication. False at initial registration; true after email
   * confirmation.
   */
  email_verified: boolean;

  /**
   * Account creation timestamp, stored in UTC as ISO-8601. Set by the
   * database on insert and never modified.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of the last update to this seller record. Used for audit trails
   * and change detection.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the seller account was soft-deleted (withdrawn) by user or
   * admin; if null, account is active. Non-null indicates account is not
   * available for login or management.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallSeller {
  /**
   * Request body for registering a new seller account on the platform.
   * Accepts only the plain password (never password_hash). All business
   * validation and uniqueness constraints follow the underlying schema.
   * Password is hashed on the server side as per security policy.
   */
  export type IJoin = {
    /**
     * Unique email address for the seller login/authentication. This must
     * be a valid email and is used for contacting the seller and for
     * sign-in. Defined as unique in the underlying Prisma schema.
     */
    email: string & tags.Format<"email">;

    /**
     * Plain text password chosen by the seller user at registration time.
     * Only the plain password is accepted here and will be hashed by the
     * backend. Never send password_hash from the client.
     */
    password: string;

    /**
     * Formal business entity name of the seller, required for legal
     * identification and invoice generation. This is displayed on product
     * listings, invoices, and admin dashboards.
     */
    business_name: string;

    /**
     * The personal name (not business name) of the primary contact for the
     * seller account, used for support and communications.
     */
    contact_name: string;

    /**
     * Primary phone number for the seller, used for notifications,
     * verification, and support contact.
     */
    phone: string;

    /**
     * URI to the uploaded KYC document (such as business registration or
     * ID) if provided at join time. This is optional at registration, but
     * required before full approval. May be left null at creation.
     */
    kyc_document_uri?: string | null | undefined;

    /**
     * Mandatory legal registration number for the seller's business entity.
     * Must be unique and is used for compliance, approval, and payment
     * operations.
     */
    business_registration_number: string;
  };

  /**
   * Seller JWT/token authorization response. Returned upon registration
   * (join) or login. Contains only non-sensitive seller identification and
   * the JWT token information, following standard IAuthorized response
   * structure. Never includes password, password_hash, or secrets. The token
   * contains all necessary payload for session management.
   */
  export type IAuthorized = {
    /**
     * Unique identifier (UUID, string) of the seller account that has just
     * been authenticated/registered. Direct match to
     * shopping_mall_sellers.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * The seller's login email address. Uniquely identifies the seller
     * account. Used for authentication and platform communications.
     *
     * Input is required to be unique platform-wide. Must be a valid
     * formatted email address.
     */
    email: string;

    /**
     * Legal or formal name of the seller's business, as registered on the
     * platform and used for KYC/business verification, catalog display, and
     * compliance. Must be unique per-seller and visible on seller-facing
     * areas such as order invoices or product detail pages.
     */
    business_name: string;

    /**
     * Name of the primary account holder, for use in support, KYC, and
     * business contact workflows. Can be a person or division name.
     */
    contact_name: string;

    /**
     * Main telephone or mobile number for KYC verification, support, and
     * notifications related to business account events. Must be provided
     * and verified according to admin workflow.
     */
    phone: string;

    /**
     * This field is optional. If present, it should reference a public file
     * uploaded for KYC.
     */
    kyc_document_uri?: string | null | undefined;

    /**
     * Current approval status for the business entity and seller account.
     * Determines onboarding transition: expected states are 'pending',
     * 'approved', 'suspended', 'rejected'. Used to gate access to seller
     * features and catalog listing.
     */
    approval_status: string;

    /**
     * Business registration number as required by law for sellers on the
     * platform. Uniquely identifies the legal business entity. Used for
     * compliance and platform tax/legal reporting.
     */
    business_registration_number: string;

    /**
     * Indicates whether email verification flow has been completed for
     * platform authentication. False at initial registration; true after
     * email confirmation.
     */
    email_verified: boolean;

    /**
     * Account creation timestamp, stored in UTC as ISO-8601. Set by the
     * database on insert and never modified.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of the last update to this seller record. Used for audit
     * trails and change detection.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the seller account was soft-deleted (withdrawn) by
     * user or admin; if null, account is active. Non-null indicates account
     * is not available for login or management.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Login request payload for authenticating a seller in the shopping mall
   * platform.
   *
   * This object includes the seller's account email (registered at sign-up)
   * and plaintext password (for verification against the stored password hash
   * in the backend). Password must not be hashed hereâ€”the server will perform
   * hashing and comparison. Fields must comply with business login policies
   * and validation constraints as described in the requirements analysis and
   * Prisma schema. Used for /auth/seller/login endpoint.
   */
  export type ILogin = {
    /**
     * Seller's unique login email address. Used for authentication and
     * communications. Must match the email used during seller registration.
     * Example: 'sellername@businessdomain.com'.
     */
    email: string & tags.Format<"email">;

    /**
     * Seller's plaintext password for authentication during login. Minimum
     * 8 characters, must satisfy password policy as enforced during
     * registration. Never returned in responses. Example:
     * 'S3curePassw0rd!'.
     */
    password: string & tags.MinLength<8> & tags.MaxLength<255>;
  };

  /**
   * Request body for refreshing seller authentication tokens in session
   * management.
   *
   * This DTO contains a single required property 'refresh_token', which is
   * the long-lived session token associated with the authenticated seller's
   * account. The value must match the corresponding active session maintained
   * in shopping_mall_user_sessions. Used for /auth/seller/refresh endpoint.
   * No additional actor or credential fields required or accepted.
   */
  export type IRefresh = {
    /**
     * The refresh token previously issued to the seller after login or
     * token refresh. Used to request new JWT tokens for prolonged sessions.
     * Must match a valid, non-revoked token associated with a session in
     * the system. Example: 'eyJhbGciOi...abcdef...etc'.
     */
    refresh_token: string & tags.MinLength<32> & tags.MaxLength<1024>;
  };

  /**
   * Request and filter/query parameters for paginated, searchable seller
   * listing endpoints. Each property matches a field in the
   * shopping_mall_sellers schema and supports typical search or sorting
   * use-cases for the seller admin dashboard or moderation flows.
   */
  export type IRequest = {
    /**
     * The legal or business entity name of the seller. Supports
     * fuzzy/partial search. References shopping_mall_sellers.business_name
     * in the schema. Admins and platform search may use this for onboarding
     * analytics, KYC review, or search list filtering.
     */
    business_name?: string | undefined;

    /**
     * Email address of the seller. Matches shopping_mall_sellers.email,
     * unique per seller. Used for search, authentication support, and
     * compliance checks.
     */
    email?: string | undefined;

    /**
     * Onboarding/operational approval status. e.g., 'pending', 'approved',
     * 'rejected', or 'suspended'. This is
     * shopping_mall_sellers.approval_status in the Prisma schema and an
     * indexed column. Used for filtering lists, workflow dashboards, and
     * batch moderation.
     */
    approval_status?: string | undefined;

    /**
     * Lower bound for seller account creation timestamp. Used for searching
     * sellers registered after this ISO 8601 date-time value. Tied to
     * shopping_mall_sellers.created_at.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound for seller account creation timestamp, for filtering
     * sellers created before this ISO 8601 date-time. References
     * shopping_mall_sellers.created_at.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Page number for paginated results. Defaults to 1 if omitted. Used in
     * conjunction with limit. 1-based index.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of results per page. Defaults to system configuration
     * (typically 20). Maximum is 100 per admin policy.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Specifies which column to sort results by. Must be one of allowed
     * fields: created_at, business_name, approval_status.
     */
    sort_by?: "created_at" | "business_name" | "approval_status" | undefined;

    /**
     * Specifies ascending or descending sort order. Enum: asc (default),
     * desc.
     */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Update payload for modifying seller account properties. All fields are
   * optional and changes are validated for permission according to role
   * workflows (seller vs admin). Only admin can update approval_status,
   * deleted_at, or force reverify email. Seller may update profile details
   * and re-supply KYC documentation. Each property is verified for
   * type/constraints before the update is applied.
   *
   * Field uniqueness and business logic constraints enforced per detailed
   * platform rules and extended schema comments. If a property is omitted,
   * original database value is retained.
   */
  export type IUpdate = {
    /**
     * Updated legal or business name to be displayed on the platform and
     * for compliance reporting. Must remain unique per seller; platform
     * validation checks uniqueness and business certification on change.
     */
    business_name?: string | undefined;

    /**
     * Updated contact name (person or division) for business/SLA
     * communication and audit. Changes may trigger update to KYC status by
     * compliance backend.
     */
    contact_name?: string | undefined;

    /**
     * New main business phone number for support, notification, and admin
     * verification. Must pass platform-level phone validation logic.
     */
    phone?: string | undefined;

    /**
     * Update seller's compliance/KYC document file URI. If reset to null,
     * compliance status must revert to pending/required by admin workflow.
     */
    kyc_document_uri?: string | null | undefined;

    /**
     * Admin-level status override: expected values are 'pending',
     * 'approved', 'rejected', or 'suspended'. A seller can never
     * self-update to 'approved' or 'suspended'; only admins may do so via
     * management flows. Regular sellers may only view this as read-only;
     * admin update action is gated by role.
     */
    approval_status?: string | undefined;

    /**
     * Indicates whether the email_verification process is completed (true)
     * or pending (false). Typically only changed as a result of successful
     * verification or explicit admin override.
     */
    email_verified?: boolean | undefined;

    /**
     * Update to the registered business/company number. Must remain unique
     * system-wide. Change will trigger compliance/KYC revalidation.
     */
    business_registration_number?: string | undefined;

    /**
     * (Admin-only) Logical removal of the seller account; sets timestamp to
     * indicate withdrawal. If null, no deletion has occurred. Only admins
     * should set this as non-null (at account closure or withdrawalâ€”the
     * value is system-set so updates from the API are rarely permitted in
     * usual flows).
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * A summary representation of a seller account for use in admin dashboards,
   * search results, or list/table views. Designed for quick reference to key
   * compliance, status, and business information. Excludes sensitive
   * authentication fields, full KYC details, or audit history. Strictly
   * mapped to shopping_mall_sellers entity for speed and security. Does not
   * expose password_hash, phone, email_verified, or deleted_at. Typically
   * used in paginated responses for seller management or catalog
   * attribution.
   */
  export type ISummary = {
    /**
     * Unique identifier for the seller, generated as a UUID. Mirrors the
     * 'id' column in the shopping_mall_sellers Prisma model.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Seller's unique email address used for authentication and
     * communications, aligned with the 'email' column.
     */
    email: string & tags.Format<"email">;

    /**
     * The official business entity name of the seller, from the
     * 'business_name' column. Used for catalog, order, and compliance
     * display.
     */
    business_name: string;

    /**
     * Current approval state of the seller account (pending, approved,
     * rejected, suspended, etc.), from the 'approval_status' column.
     */
    approval_status: string;

    /**
     * Name of the individual contact for the seller account, as per the
     * 'contact_name' field in shopping_mall_sellers.
     */
    contact_name: string;

    /**
     * Date/time when the seller account was created, matching the
     * 'created_at' timestamp in shopping_mall_sellers.
     */
    created_at: string & tags.Format<"date-time">;
  };
}
