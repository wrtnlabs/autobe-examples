import { tags } from "typia";

/**
 * Order shipment record.
 *
 * Represents an individual shipment for an order (may be multiple if split
 * fulfillment). Contains carrier, tracking, status, and shipment events.
 * Referenced by the parent order and used for order fulfillment tracking,
 * customer service audit, and analytics. All timestamps are ISO8601 strings.
 * The status field follows platform-defined shipment status progression as
 * explained in requirements and the ERD.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderShipment = {
  /** Primary Key. Unique identifier for the shipment record. */
  id: string & tags.Format<"uuid">;

  /**
   * Parent order's {@link shopping_mall_orders.id}. Reference to the
   * associated order.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * Business code for shipment/sub-shipment. Uniquely identifies shipment
   * within order.
   */
  shipment_number: string;

  /** Carrier name (logistics partner, e.g., CJ, FedEx, Sagawa). */
  carrier: string;

  /** Carrier-provided tracking number. */
  tracking_number?: string | null | undefined;

  /**
   * Current shipment status (e.g., pending, shipped, in_transit,
   * out_for_delivery, delivered, returned, cancelled).
   */
  status: string;

  /** Timestamp when shipment was dispatched/handed to carrier. */
  dispatched_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp when shipment was delivered. */
  delivered_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Seller/admin comments, special instructions or internal notes. */
  remark?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last modification timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft-deletion timestamp if record is logically deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallOrderShipment {
  /**
   * Search and filtering criteria for retrieving shipment records associated
   * with an order. Used in shopping mall platform order fulfillment and
   * logistics tracking APIs.
   *
   * Supports advanced filters for admin, seller, or customer shipment
   * queries:
   *
   * - Status (e.g., pending, shipped, in_transit, delivered)
   * - Carrier (e.g., 'CJ', 'FedEx', 'UPS')
   * - Tracking_number
   * - Time window (created_at, dispatched_at, delivered_at)
   * - Sorting
   * - Pagination controls (page, limit)
   *
   * Typically used as the requestBody for PATCH/POST to shipment list
   * endpoints.
   *
   * Reference: shopping_mall_order_shipments (Prisma ERD).
   */
  export type IRequest = {
    /**
     * Shipment status to filter on. Enum according to allowed shipment
     * transitions: 'pending', 'processing', 'shipped', 'in_transit',
     * 'out_for_delivery', 'delivered', 'returned', 'refunded', 'cancelled',
     * 'delivery_failed'. Optional field. Exact options are determined by
     * the order tracking requirements in the shopping mall platform, with
     * full validation at the provider layer.
     *
     * Reference: shopping_mall_order_shipments.status (Prisma, ERD,
     * requirements).
     */
    status?: string | undefined;

    /**
     * Carrier to filter shipments on (e.g., 'CJ', 'FedEx', 'UPS', etc.). If
     * provided, only shipments for this carrier will be returned. Optional
     * filter.
     *
     * Reference: shopping_mall_order_shipments.carrier (Prisma/ERD).
     */
    carrier?: string | undefined;

    /**
     * Filter for a specific tracking number (partial or full match).
     * Optional.
     *
     * Reference: shopping_mall_order_shipments.tracking_number
     * (Prisma/ERD).
     */
    tracking_number?: string | undefined;

    /**
     * ISO-8601 timestamp to filter shipments created after this date/time.
     * Optional. Can be used for date range filtering in search UI.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO-8601 timestamp to filter shipments created before this date/time.
     * Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO-8601 timestamp to filter by shipments dispatched after this
     * date/time. Optional. Used for operational visibility by
     * seller/admin.
     */
    dispatched_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO-8601 timestamp to filter by shipments dispatched before this
     * date/time. Optional.
     */
    dispatched_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO-8601 timestamp to filter by shipments delivered after this
     * date/time. Optional. Used mainly by customer for UI timeline
     * filtering.
     */
    delivered_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO-8601 timestamp to filter by shipments delivered before this
     * date/time. Optional.
     */
    delivered_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Sort order of the result (e.g., 'created_at', 'dispatched_at',
     * 'delivered_at'). Optional; default is 'created_at' descending.
     */
    sort_by?: string | undefined;

    /**
     * Direction for sorting. Accepts 'asc' or 'desc'. Optional, default is
     * 'desc'.
     */
    sort_order?: string | undefined;

    /** Page number for pagination. Optional. Defaults to 1 if not provided. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records per page. Optional. Defaults to 20; capped
     * at 100.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * DTO for updating shipment information associated with a specific order
   * shipment. Only editable fields are present. Null values erase existing
   * data for optional fields. Each update triggers audit logging and
   * potential notification/fulfillment logic.
   *
   * Follows constraints set by business logic and underlying schema; see ERD
   * for relationship.
   */
  export type IUpdate = {
    /** Carrier name (logistics partner, e.g., CJ, FedEx, Sagawa). */
    carrier: string;

    /** Carrier-provided tracking number. Set to null to remove. */
    tracking_number?: string | null | undefined;

    /**
     * Current shipment status (e.g., pending, shipped, in_transit,
     * out_for_delivery, delivered, returned, cancelled).
     */
    status: string;

    /**
     * Timestamp when shipment was dispatched/handed to carrier. Null to
     * clear.
     */
    dispatched_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when shipment was delivered. Null to clear. */
    delivered_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Seller/admin comments, special instructions, or internal notes. Null
     * to clear.
     */
    remark?: string | null | undefined;
  };
}
