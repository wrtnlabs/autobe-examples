import { tags } from "typia";

/**
 * Platform notification job entity reflecting the
 * shopping_mall_notification_jobs table for e-commerce platform admins to
 * manage user, group, or segment notifications (email, SMS, push, in-app,
 * etc).
 *
 * Each notification job is configured and managed by admins; it stores
 * parameters for notification type, job status, recipients, content templates,
 * scheduling, results, and audit fields. Creation, updating, deletion, and
 * retrieval of jobs are all performed via corresponding DTOs. Jobs may be
 * pending, running, completed, or failed, and contain full targeting and
 * configuration for audit and diagnosis.
 *
 * See Prisma schema for all fields:
 *
 * - Id: Unique job identifier (UUID)
 * - Shopping_mall_admin_id: UUID reference to admin owner (nullable)
 * - Job_type: Notification type (email, sms, push, in_app, etc)
 * - Job_status: Job execution status (pending, running, success, failed,
 *   cancelled)
 * - Target_json: JSON-encoded target recipients
 * - Config_json: JSON configuration (optional)
 * - Result_json: JSON result details (optional)
 * - Created_at, updated_at, deleted_at: Timestamps for audit/logging
 *
 * Related flows include notification monitoring, retry, diagnosis, and
 * compliance. No sensitive recipient or config data is returned to unauthorized
 * users.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallNotificationJob = {
  /** Unique identifier for the notification job. */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the admin who scheduled/triggered the notification job. Nullable
   * if not explicitly assigned.
   */
  shopping_mall_admin_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Type of notification job (email, sms, push, in_app, etc). Must match the
   * platform's supported notification channels.
   */
  job_type: string;

  /**
   * Execution status of the notification job (pending, running, success,
   * failed, cancelled).
   */
  job_status: string;

  /**
   * Serialized JSON array describing notification targets (user IDs, groups,
   * segments, topical broadcasts, etc.).
   */
  target_json: string;

  /**
   * Serialized JSON configuration for the notification job, such as template
   * reference, schedule, retry policy, etc. Optional and nullable.
   */
  config_json?: string | undefined;

  /**
   * Serialized JSON summary of outcomes, recipient statuses, delivery logs,
   * or failure details. Optional and nullable.
   */
  result_json?: string | undefined;

  /** Timestamp for when the notification job was created (ISO 8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for when the job was last updated (ISO 8601, UTC). */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp for logical deletion (soft delete); null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IShoppingMallNotificationJob {
  /**
   * Notification job creation schema for admin-initiated messaging to users,
   * groups, or segments. Used as the request body when creating a new
   * notification job in the shopping_mall_notification_jobs table. All
   * required fields must be specified as per schema for new jobs. This type
   * supports specification of job type (delivery channel), recipients, and
   * optional configuration or schedule. Refer to business requirements for
   * each notification channel, recipient targeting, and scheduling
   * constraints.
   */
  export type ICreate = {
    /**
     * Type of notification job (email, sms, push, in_app). Specifies the
     * delivery channel for the notification job to be scheduled. Example:
     * "email".
     */
    job_type: string;

    /**
     * Serialized JSON array specifying target recipients or segments of the
     * notification job. May include user IDs, groups, or segments. Used to
     * route the notification to the intended users, and must be valid
     * JSON.
     */
    target_json: string;

    /**
     * (Optional) Serialized JSON for job configuration/settings (e.g.,
     * template, scheduling, retry logic). Allows for extended job
     * configuration. If not needed, may be set to null.
     */
    config_json?: string | null | undefined;

    /**
     * (Optional) JSON-encoded schedule data and configuration, such as cron
     * or timing information. Used to specify exact delivery, delay,
     * recurrence, and control timing for scheduled notification jobs. If
     * not needed (immediate notification), may be set to null.
     */
    schedule_config_json?: string | null | undefined;
  };

  /**
   * Notification job update schema for modifying the status, recipients,
   * configuration, results, or schedule of an existing notification job. Used
   * as the request body in update notification job APIs. Enforces use of
   * job_status and allows for changing targeting, schedule, or result fields
   * as per platform requirements. For advanced workflow modifications,
   * consider side effects on user communications or job executions when
   * updating. See business rules for job status transitions and allowed
   * schedule modifications.
   */
  export type IUpdate = {
    /**
     * New job status (e.g., pending, running, success, failed, cancelled).
     * Used to update the current status of the scheduled or executed
     * notification job. Must match system-controlled job status enums.
     */
    job_status: string;

    /**
     * (Optional) Updated serialized JSON array of target recipients or
     * segments for the notification job. Supports retargeting or
     * reconfiguration for scheduled jobs. If no change, omit or set null.
     */
    target_json?: string | null | undefined;

    /**
     * (Optional) Updated configuration JSON for job delivery, template, or
     * retry parameters. If updating job delivery channel, template, or
     * other business options, specify as valid JSON string. If no change,
     * omit or set null.
     */
    config_json?: string | null | undefined;

    /**
     * (Optional) Updated job result JSON, such as per-recipient delivery
     * status, failure logs, or message receipts. Used to reflect
     * status/result after execution. Only set for jobs with a completed or
     * failed status. If not updating the result, omit or set null.
     */
    result_json?: string | null | undefined;

    /**
     * (Optional) Updated JSON-encoded schedule configuration for the job
     * (cron/timing info). Used to change or correct job scheduling
     * parameters. If no schedule update is needed, omit or set null.
     */
    schedule_config_json?: string | null | undefined;
  };
}
