import { tags } from "typia";

/**
 * Represents a single catalog image record attached to a product or SKU in the
 * shopping mall system. Maps directly to the shopping_mall_catalog_images
 * Prisma model, which contains product-level and variant-specific (SKU) images
 * for catalog/gallery display and management. Each catalog image holds a unique
 * URL, display order, optional alt text, and foreign keys for parent product
 * and SKU association. Used in image upload, search, paging/listing, and
 * product detail UIs. Description and field definitions reference full Prisma
 * schema comments for compliance and documentation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCatalogImage = {
  /**
   * Primary Key. Unique identifier (UUID) of the catalog image record in the
   * shopping_mall_catalog_images table. Used for CRUD operations and foreign
   * key reference in the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional foreign key reference to the owning product's id
   * (shopping_mall_products.id). Defines the product to which this catalog
   * image is attached. May be null for SKU-only images.
   */
  shopping_mall_product_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Optional foreign key reference to the owning product SKU's id
   * (shopping_mall_product_skus.id). Identifies the variant (color, size,
   * option) this image represents. May be null if the image is product-level
   * only.
   */
  shopping_mall_product_sku_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Image CDN URL. Absolute path to the hosted image file. String, max length
   * 80000 for platform compatibility. Must be a valid URL and support direct
   * linking for customer-facing catalog/gallery display. Field is unique and
   * indexed for quick lookups.
   */
  url: string & tags.MaxLength<80000>;

  /**
   * Alternative text (alt attribute) for the image, supporting accessibility
   * and SEO best practices. Optional, but strongly encouraged for product
   * images. Indexed for full-text search as needed.
   */
  alt_text?: string | undefined;

  /**
   * Ordering integer for presenting images in a catalog/gallery UI. 0-based
   * index for primary/secondary/etc. images within a product or SKU. Used to
   * define main image or user-custom gallery order.
   */
  display_order: number & tags.Type<"int32">;

  /**
   * Timestamp for when the catalog image record was created/uploaded. Follows
   * ISO 8601 format and platform conventions for audit/history.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallCatalogImage {
  /**
   * Request body schema for catalog image search, filtering, and pagination
   * in the shopping mall platform. Enables product/gallery image discovery
   * based on product/SKU, keyword query, and sorted paging. All properties
   * are optional, with schema logic enforcing UUID format and allowable sort
   * options. Returns paginated lists of images by
   * IPageIShoppingMallCatalogImage.
   */
  export type IRequest = {
    /**
     * The unique identifier (UUID) for the product to which catalog images
     * belong. This property enables filtering image queries by product
     * context and validates the existence of a related product record in
     * the shopping mall catalog. Reference integrity is enforced per
     * business logic. Required in most admin/seller use cases for catalog
     * image management or gallery retrieval.
     */
    productId?: (string & tags.Format<"uuid">) | undefined;

    /**
     * The unique identifier (UUID) for a product SKU (variant) used for
     * filtering catalog images at the SKU-variant level. Enables targeted
     * queries such as retrieving only images attached to a specific
     * color/size variant. Optional depending on whether filtering is at the
     * SKU or product level. String, must match an existing
     * shopping_mall_product_skus.id if supplied.
     */
    skuId?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Full-text search keyword(s) to match against catalog image metadata
     * such as alt_text, image_url, or related product/SKU codes. Used for
     * advanced search in admin UIs or image management workflows. Typically
     * uses case-insensitive trigram or fulltext indexes for efficient
     * discovery.
     */
    search?: string | undefined;

    /**
     * The field by which to sort the image results. Accepts only
     * whitelisted fields according to catalog business logic: 'created_at'
     * (sort by upload time, default descending) or 'display_order' (custom
     * gallery order).
     */
    sortBy?: "created_at" | "display_order" | undefined;

    /**
     * Sorting direction: 'asc' for ascending or 'desc' for descending. Must
     * be used in conjunction with sortBy. If not provided, defaults to
     * descending for created_at order (newest first) or ascending for
     * display_order.
     */
    sortDir?: "asc" | "desc" | undefined;

    /**
     * The 1-based page number for paginated image retrieval. Defaults to 1
     * if not specified. Used for frontend UI or API pagination.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of catalog image records to return per page. Default
     * and maximum platform limits may apply, e.g. 20-100 images per page.
     * Used in combination with 'page' for pagination control.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Creation contract for a product or SKU image within the e-commerce
   * catalog. Maps directly to shopping_mall_catalog_images in the Prisma
   * schema.
   */
  export type ICreate = {
    /**
     * Product this image belongs to. References the
     * shopping_mall_products.id column. Required for associating images at
     * the product level. Must be a valid UUID referring to an existing
     * product entity.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * SKU this image belongs to, if applicable. Use null or omit for
     * product-level images not tied to a SKU.
     */
    shopping_mall_product_sku_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * CDN or storage URL for the uploaded image asset. Must be a persistent
     * URI as referenced by the frontend. Maximum size restrictions and
     * allowed image types are enforced by business logic and upload
     * pipeline. Must be unique across all catalog images.
     */
    url: string;

    /** Alternative text for accessibility, optional. */
    alt_text?: string | null | undefined;

    /**
     * Ordering index for defining the image's position in the product or
     * SKU gallery, 0-based. Determines the sort sequence for image display.
     * Required and must be a non-negative integer.
     */
    display_order: number & tags.Type<"int32">;
  };

  /**
   * Update action schema for product/SKU image metadata as defined for
   * shopping_mall_catalog_images. Only fields eligible to change after upload
   * are exposed.
   */
  export type IUpdate = {
    /**
     * CDN or storage URL for the image file. If replaced, must meet
     * business rules for allowed file types/sizes.
     */
    url?: string | undefined;

    /**
     * Optional alternative text for screen readers and SEO; omit or null
     * for no alt.
     */
    alt_text?: string | null | undefined;

    /**
     * The 0-based order for gallery positioning of this image relative to
     * all other images for the same product or SKU. Required for sort
     * updates or gallery drag-and-drop. Must be a non-negative integer.
     */
    display_order?: (number & tags.Type<"int32">) | undefined;
  };
}
