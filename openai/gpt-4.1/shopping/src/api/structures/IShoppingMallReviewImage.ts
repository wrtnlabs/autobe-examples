import { tags } from "typia";

/**
 * Represents an image attached to a product review. Used for authenticating
 * customer feedback and enriching the review content with visual evidence. Each
 * image belongs to a single review and is referenced by its unique ID. All
 * review images are authed against moderation policies, and the attached URI is
 * used for customer-facing display.
 *
 * This object is mapped directly to the shopping_mall_review_images Prisma
 * schema, providing a persistent record of review images for moderation,
 * compliance, and product trust building. Deleting an image requires updating
 * parent review references and compliance with audit retention.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallReviewImage = {
  /**
   * Primary Key. Unique identifier for the review image record in the
   * database. This field is generated by the system and used to reference the
   * specific image throughout the platform.
   *
   * Referenced in the shopping_mall_review_images table. Must be a valid UUID
   * format as per the Prisma schema column definition.
   */
  id: string & tags.Format<"uuid">;

  /**
   * References the parent review's shopping_mall_reviews.id. Indicates to
   * which specific review this image is attached. This field must be a valid
   * UUID corresponding to an existing review record. Used for relationship
   * mapping and permission enforcement.
   *
   * Ensures logical linkage for review content management and image retrieval
   * flows.
   */
  shopping_mall_review_id: string & tags.Format<"uuid">;

  /**
   * URI for the attached image file. This is the CDN or storage reference for
   * the image asset. Required for all review images.
   *
   * Image must comply with platform guidelines for file size, content
   * moderation, and supported formats. (See platform requirements: up to 5
   * images per review, each â‰¤4MB). The value must be a valid URI and
   * preferably HTTPS. Referenced as a 80000-character varchar in the schema.
   */
  image_uri: string;

  /**
   * Image attachment creation time for auditing and timeline presentation.
   * This ISO 8601 'date-time' indicates when the image was associated with
   * the review record, supporting chronology and regulatory compliance.
   *
   * See shopping_mall_review_images.created_at. Always system-generated and
   * immutable after creation.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallReviewImage {
  /**
   * Review image creation payload for attaching an image to a product review.
   * This request object is sent by customers when uploading new images for
   * their review in compliance with moderation, format, and business policy
   * requirements. Only the image URI is accepted; all relational and audit
   * fields are handled by the system based on user authentication and parent
   * review context.
   *
   * Mapped directly to the shopping_mall_review_images Prisma schema for
   * record persistence and workflow orchestration.
   */
  export type ICreate = {
    /**
     * URI for the attached image file. This represents the CDN or cloud
     * storage location for the uploaded asset and is required for all image
     * attachment operations. Must be a valid, accessible URI. Images must
     * comply with file size, format, and content policy (typically up to
     * 4MB, max 5 per review).
     */
    image_uri: string;
  };
}
