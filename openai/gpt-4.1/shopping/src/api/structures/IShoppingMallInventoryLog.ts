import { tags } from "typia";

/**
 * Inventory adjustment log model for e-commerce platform, as per Prisma model
 * 'shopping_mall_inventory_logs'.
 *
 * Each entry records a single inventory change for audit, rollback, compliance,
 * and operational monitoring. Key fields capture action type, quantities
 * changed, adjustment reason, and links to the actor (admin/seller) if
 * applicable, as well as references to affected records.
 *
 * This schema is designed to support transparent, secure, and efficient
 * inventory tracking, and is cited throughout order, fulfillment, refund, and
 * stock management processes.
 *
 * - Fully references all documented fields in the underlying schema.
 * - Field comments are mapped to the appropriate OpenAPI descriptions, supporting
 *   business logic for traceability and compliance.
 * - Required fields are present in all adjustment log entries.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallInventoryLog = {
  /**
   * Primary Key of the inventory log entry. This serves as the globally
   * unique identifier for tracing the specific inventory adjustment in the
   * shopping mall platform.
   *
   * According to the Prisma schema, this field is a UUID and required for all
   * inventory log entries.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the inventory record that this log pertains to. This links
   * to the specific SKU's inventory which was adjusted.
   */
  shopping_mall_inventory_record_id: string & tags.Format<"uuid">;

  /**
   * Seller who performed this inventory change, if the adjustment was
   * initiated by a seller. May be null if the adjustment was done by an admin
   * or the system.
   */
  shopping_mall_seller_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Admin who performed the inventory change, if applicable. Null if not set. */
  shopping_mall_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of inventory change (increase, decrease, block, unblock, correction,
   * etc.). Business logic uses this as a key for inventory analytics,
   * auditing, or rollback operations.
   */
  change_type: string;

  /**
   * The integer value representing the quantity adjustment for this log
   * entry. Positive for increases and negative for decreases.
   */
  quantity_changed: number & tags.Type<"int32">;

  /**
   * Plain-text reason for the inventory adjustment. Examples include 'manual
   * correction', 'order fulfillment', or system-derived reasons. Optional
   * field that can be null.
   */
  reason?: string | null | undefined;

  /**
   * Optional reference to a related order or event, such as an order id if
   * this log entry was the result of a purchase or refund. Null if not
   * applicable.
   */
  reference_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Timestamp indicating when this inventory change log entry was recorded.
   * Used for audit trails and resolving chronology in inventory management.
   * Value expected to be in ISO 8601 format.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallInventoryLog {
  /**
   * Request body schema for searching, filtering, and paginating inventory
   * adjustment logs for a specific product SKU. Supports business auditing,
   * time range filtering, and actor-based queries as per business/operational
   * requirements. All fields directly reference their Prisma schema column or
   * mapped search logic in shopping_mall_inventory_logs.
   */
  export type IRequest = {
    /**
     * Page number for pagination (starts at 1). Optional; system default
     * used if not specified.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records per page (default: 100; business maximum
     * enforced in backend). Optional.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sorting descriptor, such as '-created_at' (descending by created_at),
     * 'quantity_changed', etc. Optional; default: '-created_at'.
     */
    sort?: string | undefined;

    /**
     * Filter for adjustment type. Possible values include: 'increase',
     * 'decrease', 'block', 'unblock', 'correction', 'purchase', 'refund',
     * 'system correction'. Optional.
     */
    change_type?: string | undefined;

    /**
     * Optional filter limiting results to a specific actor type (e.g.,
     * 'seller', 'admin'). Maps to the log's linked seller/admin foreign
     * key. Optional.
     */
    actor_type?: string | undefined;

    /**
     * Lower bound for filtering by log creation timestamp. ISO 8601 string.
     * Optional.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound for filtering by log creation timestamp. ISO 8601 string.
     * Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional filter by the reference order/event id (UUID); allows
     * searching for inventory changes related to a single order.
     */
    reference_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional substring search within the reason property. Uses partial
     * match/trigram index for efficient filtering.
     */
    reason?: string | undefined;
  };
}
