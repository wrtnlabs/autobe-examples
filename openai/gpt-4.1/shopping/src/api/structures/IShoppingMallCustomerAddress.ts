import { tags } from "typia";

/**
 * Represents an address managed by a customer for shipping, billing, or
 * delivery purposes. Linked to a single customer. Contains recipient name,
 * phone, region, postal code, two address lines, default flag, and timestamp
 * fields for creation, updates, and deletion (soft delete). This schema is
 * directly mapped from the shopping_mall_customer_addresses table and serves as
 * the core type for address management, order shipping address selection, and
 * delivery workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCustomerAddress = {
  /**
   * Primary Key. Unique identifier for this customer address. References
   * shopping_mall_customer_addresses.id in the database.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner customer of this address, references shopping_mall_customers.id.
   * Used to enforce address ownership and privacy.
   */
  customer_id: string & tags.Format<"uuid">;

  /**
   * Name of the individual receiving the shipment at this address. Typically
   * used for shipping labels and delivery.
   */
  recipient_name: string;

  /**
   * Contact number for the delivery recipient at the address. Used for
   * shipping and delivery notifications.
   */
  phone: string;

  /**
   * Administrative geographic region associated with the address
   * (city/province/district). Used for delivery routing and postal
   * validation.
   */
  region: string;

  /**
   * Postal or ZIP code for the address. Used for carrier delivery zone and
   * validation.
   */
  postal_code: string;

  /**
   * First line of the address (primary street, number, etc). Mandatory for
   * accurate location.
   */
  address_line1: string;

  /**
   * Optional second line of address (apartment, unit, etc). May be null if
   * not provided.
   */
  address_line2?: string | null | undefined;

  /**
   * Whether this is the customer's default address. Only one per customer can
   * be set as default.
   */
  is_default: boolean;

  /**
   * Date/time address entry was originally created. Used for sorting, audit,
   * and recency logic.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Date/time of last change to this address record. Used for sorting and
   * audit.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for logical soft-deletion of the address. If present, this
   * address is considered deleted and should not be shown in most user-facing
   * lists.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCustomerAddress {
  /**
   * Parameters for searching, filtering, sorting, and pagination of customer
   * address records. Used for retrieving a customer's address book, with
   * optional keyword searching, filtering by administrative region or postal
   * code, filtering by default flag, and pagination controls. Sorting can be
   * applied by creation or update time. All fields reflect the business
   * context of a user's address management and order fulfillment scenarios.
   */
  export type IRequest = {
    /**
     * Unique identifier of the customer whose addresses are being queried.
     * This is a foreign key to shopping_mall_customers.id.
     */
    customerId: string & tags.Format<"uuid">;

    /**
     * Keyword search for filtering addresses by recipient_name, phone,
     * region, or address lines. Partial match supported. Optional.
     */
    search?: string | undefined;

    /** Search filter for administrative region. Optional. */
    region?: string | undefined;

    /** Search filter for postal code or ZIP code. Optional. */
    postal_code?: string | undefined;

    /** Search filter for default address flag. */
    is_default?: boolean | undefined;

    /** Pagination: page number to fetch. Starts at 1. Optional. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Pagination: number of address records per page. Optional, defaults to
     * 20.
     */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;

    /**
     * Sorting field for address records, values are 'created_at' or
     * 'updated_at'.
     */
    sort_by?: "created_at" | "updated_at" | undefined;

    /** Sorting order, 'asc' for ascending, 'desc' for descending. */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Update information for a customer's address entry. This modifies
   * recipient name, contact, region, postal code, main/secondary address
   * lines, and "is_default" default selection, as defined in
   * shopping_mall_customer_addresses.
   *
   * All fields must comply with length, formatting, and validation
   * constraints documented in the schema/ERD. Only the owner may update own
   * address. If an address is being made default, it will unset previous
   * default addresses for that customer. Changes to primary contact or
   * location may cascade to in-progress orders if applicable.
   */
  export type IUpdate = {
    /**
     * The name of the individual who will receive the shipment at this
     * address. This corresponds to
     * shopping_mall_customer_addresses.recipient_name in the Prisma
     * schema.
     *
     * Should be a full, clear name for delivery personnel. Required by
     * business rules, length limits may apply.
     */
    recipient_name: string;

    /**
     * Contact number associated with the address, for delivery issues or
     * confirmations. Must be a valid phone number format, referencing
     * shopping_mall_customer_addresses.phone. Required by delivery
     * partners.
     */
    phone: string;

    /**
     * Administrative region, typically city/province/district, as stored in
     * shopping_mall_customer_addresses.region in Prisma schema. Used for
     * routing and regulatory compliance, and for display in address lists.
     */
    region: string;

    /**
     * Postal or ZIP code of the address. This is stored as
     * shopping_mall_customer_addresses.postal_code in the schema. Required
     * for accurate geolocation and carrier assignment.
     */
    postal_code: string;

    /**
     * First address line, usually street address and number.
     * shopping_mall_customer_addresses.address_line1 in schema. Required
     * field; must be enough for delivery to precisely reach the
     * building/unit/house.
     */
    address_line1: string;

    /**
     * Second line of address, often apartment, unit, building name, etc.
     * This is shopping_mall_customer_addresses.address_line2, which is
     * optional in the schema. Business rule: when present, helps carriers
     * properly find entrance/delivery location. Nullable.
     */
    address_line2?: string | null | undefined;

    /**
     * Indicates that this address is the default address for this customer.
     * shopping_mall_customer_addresses.is_default in schema. At most one
     * address can be default per customer; updating to default may switch
     * default status from another address to this one per business logic.
     */
    is_default?: boolean | undefined;
  };

  /**
   * Payload for creating a customer's address when registering or adding an
   * address for shipping, billing, or delivery purposes. Each property aligns
   * with the shopping_mall_customer_addresses Prisma model and ERD. Designed
   * to support user onboarding or address management flows. This schema is
   * also used as the 'address' object within customer registration/join
   * payloads.
   *
   * Fields:
   *
   * - Recipient_name: Required name of the individual receiving shipment.
   * - Phone: Required contact number for delivery at this address.
   * - Region: Required geographical region (city/province/district).
   * - Postal_code: Required postal or ZIP code.
   * - Address_line1: Required first address line (street, number).
   * - Address_line2: Optional second address line (apartment, unit, etc.).
   * - Is_default: Indicates whether this address should be set as the default
   *   address for the customer at creation (at least one address must be
   *   default on registration).
   *
   * Corresponds exactly to the shopping_mall_customer_addresses model. All
   * values are subject to business validation (length, format, field
   * requirements).
   */
  export type ICreate = {
    /**
     * Name of the individual for this address. Required for shipping and
     * identification by carriers. Example: 'Jane Kim'.
     */
    recipient_name: string;

    /**
     * Contact phone number for this address. Used for delivery and
     * notifications. Must be a valid number format per business validation.
     * Example: '+82-10-1234-5678'.
     */
    phone: string;

    /**
     * Administrative region (such as city or province) for this address.
     * Example: 'Seoul', 'Gyeonggi-do', 'Jongno-gu'.
     */
    region: string;

    /**
     * Postal or ZIP code (required). Used for address lookup, sorting, and
     * shipping calculation. Example: '03187'.
     */
    postal_code: string;

    /**
     * First line of the address, including street and number. Example: '123
     * Main St'.
     */
    address_line1: string;

    /**
     * Optional second address line (apartment, unit, etc.). Example: 'Apt
     * 101', or null if not provided.
     */
    address_line2?: string | null | undefined;

    /**
     * True if this address should be the default for the customer at
     * creation time. At least one address must be default on registration;
     * only one permitted per customer.
     */
    is_default: boolean;
  };
}
