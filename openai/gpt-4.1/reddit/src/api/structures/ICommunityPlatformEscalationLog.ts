import { tags } from "typia";

/**
 * A single platform escalation log entry. Records details on who escalated, for
 * what reason, the workflow, assignments, review/resolution summary, and
 * timing. Used for compliance, audit, conflict investigation, and appeal
 * review. Aligns to Prisma model: community_platform_escalation_logs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformEscalationLog = {
  /**
   * Primary key (UUID) of this escalation log entry. Unique, immutable
   * identifier of log record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The member, moderator, or admin who initiated the escalation. Referenced
   * from community_platform_members.id or related actor table.
   */
  initiator_id: string & tags.Format<"uuid">;

  /**
   * Platform admin assigned to this escalation, if applicable. References
   * community_platform_admins.id. Nullable if unassigned or yet to escalate.
   */
  destination_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * The underlying moderation report (community_platform_reports.id) at the
   * root of this escalation event.
   */
  report_id: string & tags.Format<"uuid">;

  /**
   * A free-text or coded reason for escalation, entered by the initiator or
   * the system at the time of event. Used for audit, compliance, or dispute
   * review.
   */
  escalation_reason: string;

  /**
   * Current escalation workflow status. Allowed: 'pending', 'in_review',
   * 'resolved', 'closed'. 'pending': Unreviewed; 'in_review': actively being
   * processed; 'resolved': completed; 'closed': finalized for
   * compliance/archive.
   */
  status: string;

  /**
   * Free-text summary (nullable) of how this escalation was resolved.
   * Populated by admin or moderator completing the workflow.
   */
  resolution_summary?: string | null | undefined;

  /**
   * Timestamp when this escalation log was created. ISO 8601 / RFC 3339
   * format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last update to this escalation log (status change,
   * assignment, summary edit, etc.), supporting audit and compliance
   * requirements.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformEscalationLog {
  /**
   * Filtering, searching, and pagination parameters for escalation log
   * listing and search. Supports advanced audit, incident, and compliance
   * queries. Every field is optional for broad queries; supply any
   * combination.
   */
  export type IRequest = {
    /**
     * Filter by initiator's member, moderator, or admin ID. Only include
     * escalation logs initiated by this actor.
     */
    initiator_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optionally filter to escalation logs assigned or routed to this admin
     * ID (typically where pending admin review or assignment occurred).
     */
    destination_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optionally filter by a specific moderated report involved in the
     * escalation, by UUID. Used in incident audit or report-specific
     * queries.
     */
    report_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by escalation workflow status. Allowed values: 'pending',
     * 'in_review', 'resolved', 'closed'. Multiple statuses may be allowed
     * in extended queries.
     */
    status?: string | undefined;

    /**
     * Start of date range for filtering escalation logs. ISO 8601 string
     * (inclusive); format: yyyy-MM-ddTHH:mm:ssZ
     */
    date_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * End of date range for filtering escalation logs. ISO 8601 string
     * (inclusive); format: yyyy-MM-ddTHH:mm:ssZ
     */
    date_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Field to sort escalation results by. Allowed: 'created_at',
     * 'updated_at', 'status', 'event_time'. Default: 'created_at'.
     */
    sort_by?: string | undefined;

    /** Sort direction. Allowed: 'asc' or 'desc'. Default: 'desc'. */
    sort_order?: "asc" | "desc" | undefined;

    /** Result page number for pagination. Defaults to 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records per page. Defaults and caps as per platform
     * pagination rules.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;
  };

  /**
   * Payload for creating a new escalation log record in the moderation and
   * abuse workflow. Must include identification for the initiator, the
   * triggering report, a description of why escalation is necessary, and
   * initial status. Optional assignment to an admin and outcome summary may
   * be included as context or when known.
   */
  export type ICreate = {
    /**
     * Unique identifier of the member or moderator/admin who initiates the
     * escalation. Must reference a valid platform actor.
     */
    initiator_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the report being escalated. Required reference
     * to the reported post or comment triggering this escalation.
     */
    report_id: string & tags.Format<"uuid">;

    /**
     * Free-form explanation provided by the initiator justifying why
     * escalation is necessary. May include context such as ambiguity,
     * conflict of interest, unresolved moderation, or severity of
     * violation. Recommended max length: 500 characters.
     */
    escalation_reason: string;

    /**
     * Unique identifier of the admin assigned to receive this escalation,
     * if known at creation time. May be omitted or set to null if
     * reassignment is expected later.
     */
    destination_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Initial status of the escalation event in the workflow. Typical
     * values: 'pending' (default), 'in_review' (admin assigned),
     * 'resolved', 'closed'. Platform may restrict allowed status enum
     * values.
     */
    status: "pending" | "in_review" | "resolved" | "closed";

    /**
     * Text description of the outcome/resolution. Optional at creation;
     * provided when finalizing or recording review outcome.
     */
    resolution_summary?: string | null | undefined;
  };

  /**
   * Payload to update a moderation escalation entry in the escalation log.
   * Allows changing workflow status, assigning a destination admin, or
   * supplying resolution summary. Follows strict audit and permission
   * controls.
   */
  export type IUpdate = {
    /**
     * Update or assign the admin responsible for resolving this escalation.
     * May be set to null if reassigned or unassigned.
     */
    destination_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Update the workflow status for this escalation event. Allowed values
     * are typically: 'pending', 'in_review', 'resolved', 'closed'.
     */
    status: "pending" | "in_review" | "resolved" | "closed";

    /**
     * Supply or update the resolution summary textâ€”describing the final
     * decision, rationale, or closing note for the escalation. May be set
     * to null for clearing the field.
     */
    resolution_summary?: string | null | undefined;
  };

  /**
   * Summary of an escalation log record from the
   * community_platform_escalation_logs table. Shows essential details for
   * queue/list display and audit: who originated the escalation, associated
   * report, status, and timestamps. It omits sensitive fields, full workflow
   * history, or moderator notes.
   */
  export type ISummary = {
    /** Unique identifier of the escalation log entry (primary key). */
    id: string & tags.Format<"uuid">;

    /** UUID of the member or moderator who initiated the escalation. */
    initiator_id: string & tags.Format<"uuid">;

    /**
     * UUID of the admin assigned to this escalation (nullable if not yet
     * assigned).
     */
    destination_admin_id?: (string & tags.Format<"uuid">) | undefined;

    /** Reference to associated report triggering the escalation. */
    report_id: string & tags.Format<"uuid">;

    /** Free-form reason for why this escalation was created. */
    escalation_reason: string;

    /**
     * Current status of the escalation (e.g., pending, in_review, resolved,
     * closed).
     */
    status: string;

    /** Timestamp of escalation log creation. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last update to this log. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };
}
