import { tags } from "typia";

/**
 * User profile preference settings for the Reddit-like community platform.
 * Represents a user's personal profile configuration, including appearance
 * options, privacy, notification, and messaging preferences. This object models
 * all profile preference fields found on the member profile preference screen,
 * respecting privacy and business logic for notification/appearance/email/badge
 * visibility per platform requirements. Follows the Prisma model
 * 'community_platform_profile_preferences' and includes 1-to-1 linkage with the
 * owning profile. Used for both profile display and self-service API calls for
 * updating preferences.
 *
 * Primary use cases include:
 *
 * - Displaying saved user settings on profile UI
 * - Applying user-selected options for notifications, theme, and language
 * - Enabling or disabling badge/email display, non-follower messaging, and
 *   notification customizations
 * - Compliance with user opt-outs/opt-ins and accessibility/appearance
 *   preferences
 *
 * Not all fields are required; only 'id' and 'community_platform_profile_id'
 * (links to profile) are always present. Settings may default as per platform
 * constants in case of null. All timestamps are in ISO8601 (UTC).
 *
 * Field mapping, types, and semantics follow directly from Prisma schema for
 * strong interface compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformProfilePreferences = {
  /**
   * Primary Key. Unique identifier for this profile preference entry. Always
   * a valid UUID, auto-assigned by the database system. Used as the main
   * reference and for linking preference records to user profiles.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the user profile this preference set belongs to (see
   * community_platform_profiles.id). Determines the owner/member for these
   * settings. 1:1 relationship.
   */
  community_platform_profile_id: string & tags.Format<"uuid">;

  /**
   * User's language preference (ISO 639-1), as used for displaying the
   * platform and notifications. If null or empty, defaults to platform
   * language settings or browser locale.
   */
  language?: string | null | undefined;

  /**
   * Preferred UI appearance theme. Expected values include 'light', 'dark',
   * or other documented theme keys. If null, defaults to application
   * standard.
   */
  theme?: string | null | undefined;

  /**
   * Boolean flag for whether to show display_email (from profile) on public
   * profile page. User-settable privacy option. If false, the display_email
   * is private; if true, public.
   */
  show_email: boolean;

  /**
   * Boolean flagâ€”if true, earned profile badges are visible to the public; if
   * false, only visible to the member/admin. User-controlled.
   */
  show_badges: boolean;

  /**
   * If true, the user permits incoming private messages from anyone, not just
   * followed/subscribed users. Used in platform messaging flows to respect
   * privacy/spam prevention.
   */
  allow_messages_from_nonfollowers: boolean;

  /**
   * Serialized preferences for notifications. Structure and contents defined
   * per platform, usually stores a JSON document. Null or omitted means
   * platform default notifications apply.
   */
  notification_settings?: string | null | undefined;

  /**
   * Timestamp for creation of this preference record, in ISO8601 UTC.
   *
   * Example: '2025-01-01T12:00:00Z'
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for last modification of the preference record, in ISO8601 UTC.
   * Always updated on any edit.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for this preference record (null if active). Used
   * for GDPR/eu privacy compliance.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
