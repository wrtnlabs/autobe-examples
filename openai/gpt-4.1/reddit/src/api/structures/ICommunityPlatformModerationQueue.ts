import { tags } from "typia";

/**
 * A moderation queue entry representing an open or ongoing moderation workflow
 * for a specific community report.
 *
 * Each instance is tied to a single community and content report (typically a
 * post or comment flagged for review), and may be assigned to a specific
 * moderator for handling. Status and priority fields drive automated or manual
 * triage and presentation in moderation dashboards. This object supports
 * compliance, workload distribution, and transparency/audit requirements for
 * scalable safety processes. See community_platform_moderation_queues table
 * documentation for implementation details.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformModerationQueue = {
  /**
   * Unique identifier (UUID) for the moderation queue entry. Corresponds to
   * the primary key in the community_platform_moderation_queues table. Used
   * to reference this queue item in update, detail, or audit APIs.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the community this moderation queue relates to. Foreign key to
   * community_platform_communities.id. Used to scope moderation workflow to a
   * specific community.
   */
  community_id: string & tags.Format<"uuid">;

  /**
   * UUID of the report this moderation queue entry is assigned for. Foreign
   * key to community_platform_reports.id, recording the content report at the
   * root of this queue case.
   */
  report_id: string & tags.Format<"uuid">;

  /**
   * UUID for the moderator assigned to handle this queue item, if assigned.
   * Foreign key to community_platform_moderators.id. Null if unassigned or
   * triaged to a group.
   */
  assigned_moderator_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Workflow status of the moderation queue record. Controlled vocabulary,
   * typical values: 'pending', 'in_progress', 'resolved', 'escalated'. Drives
   * sorting, prioritization, and UI presentation.
   */
  status: string;

  /**
   * Priority marker for triage and sorting. Example values: 'low', 'normal',
   * 'high', 'urgent'. Used to surface critical cases or incidents.
   */
  priority: string;

  /**
   * Timestamp when this moderation queue entry was created (ISO 8601).
   * Records the instant it entered queue workflow for tracking and SLA
   * management.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this moderation queue entry was last updated (ISO 8601).
   * Used for calculating time in queue, activity audits, and detecting
   * workflow staleness.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformModerationQueue {
  /**
   * Request DTO for searching, filtering, and paginating moderation queue
   * entries. Used by staff to retrieve subsets of moderation workload, filter
   * by assignee, community, priority, status, and paginate efficiently.
   * Should only reference fields present in
   * 'community_platform_moderation_queues' and match them directly. All
   * properties are optional except for query operational constraints
   * (pagination, sort).
   */
  export type IRequest = {
    /**
     * Filter queues to a specific community using its UUID. Enables
     * moderators/admins to search and manage only moderation workload for
     * the designated community. References the primary key from the
     * 'community_platform_communities' table.
     */
    community_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter/moderation queues to those currently assigned to a specific
     * moderator actor (by UUID). Supports personalized queue listing for
     * assigned moderators, workload review, and staffing dashboards. Value
     * is moderator UUID from 'community_platform_moderators'.
     */
    assigned_moderator_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Queue status filter. Possible values: pending, in_progress, resolved,
     * escalated, or any additional platform-defined states for moderation
     * workflow. Used to retrieve only queues in a particular state or to
     * filter dashboard workload.
     */
    status?: string | undefined;

    /**
     * Workflow priority filter, e.g., low, normal, high, urgent. Enables
     * staff to query or triage only those queues requiring specific urgency
     * escalation or order. Matches 'priority' field in
     * 'community_platform_moderation_queues'.
     */
    priority?: string | undefined;

    /**
     * Page number for pagination. Default is 1 (first page). Used with
     * limit and sort for result set navigation.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Result page size for pagination (default/maximum determined by API
     * policy; typical maximum 100). Defines number of queue records
     * returned per page.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Sort field for moderation queue records (e.g., created_at, priority,
     * status). Used to order queue search results per admin/moderator UI
     * workflows.
     */
    sort?: string | undefined;

    /**
     * Sort order for result set sorting. Only 'asc' (ascending) or 'desc'
     * (descending) permitted. Used in conjunction with sort key.
     */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Request body schema for creating a new entry in the moderation queue
   * (community_platform_moderation_queues).
   *
   * Supplied by a moderator or admin when submitting a new content report for
   * manual review, or by the platform in auto-triage scenarios. Must
   * reference both a valid community and content report. Fields allow
   * establishing assignment, initial status, and priority for scalable
   * queueing and moderation case management.
   */
  export type ICreate = {
    /**
     * UUID of the community to enqueue moderation for. Must reference a
     * valid row in community_platform_communities.
     */
    community_id: string & tags.Format<"uuid">;

    /**
     * UUID of the report to assign to moderation queue. Must reference a
     * valid row in community_platform_reports.
     */
    report_id: string & tags.Format<"uuid">;

    /**
     * Optional UUID for assigning an individual moderator at time of queue
     * entry creation (nullable). Must reference a row in
     * community_platform_moderators, or null for system-assigned/unassigned
     * items.
     */
    assigned_moderator_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Initial status of the moderation queue entry. Recommended values:
     * 'pending', 'in_progress', 'escalated'. Used to control workflow and
     * queue assignment logic.
     */
    status: string;

    /**
     * Triaging priority for the moderation case, such as 'normal', 'high',
     * or 'urgent'. Enables rapid routing of critical reports or compliance
     * deadlines.
     */
    priority: string;
  };

  /**
   * Update DTO for moderation queue entries representing work items for
   * moderation workflows.
   *
   * Fields may include updating the queue status (workflow step), assigning a
   * moderator, and changing triage priority. Typically, the update also
   * triggers an updated_at timestamp. Platform security restricts which roles
   * may assign, edit, or resolve moderation queue records and which status
   * transitions are allowed. All changes are logged for compliance. Only a
   * subset of fields may be permitted for certain role levels (e.g., only
   * admins can close or re-assign certain entries).
   */
  export type IUpdate = {
    /**
     * Workflow status of the moderation queue entry (e.g., 'pending',
     * 'in_progress', 'resolved', 'escalated').
     *
     * Changing this value moves the queue through moderation workflow
     * steps. Must match accepted business states. Typically, only allows
     * transitions as governed by business rules and moderator/admin role
     * permissions.
     */
    status?: string | undefined;

    /**
     * UUID of the moderator assigned to review this moderation queue entry.
     *
     * If absent, queue remains unassigned. Used for explicit moderation
     * hand-offs and assignment during review triage. Must match a valid
     * community_platform_moderators id for the relevant community.
     */
    assigned_moderator_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Workflow priority level for the entry (e.g., 'low', 'normal', 'high',
     * 'urgent').
     *
     * Allows moderation queues to be ordered and processed by importance,
     * with emergency or highly urgent items being surfaced immediately.
     * Should only accept allowed enum values per platform guidelines.
     */
    priority?: string | undefined;

    /**
     * Timestamp of last update to the entry.
     *
     * Set automatically on every change or edit; not generally written by
     * the client, but included for completeness.
     */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Summary representation of a moderation queue entry in the community
   * platform. Used for efficient display and management of open or
   * in-progress abuse, spam, or dispute reports. This type surfaces only the
   * identifiers, state, priority, and assignment fields, enabling dashboards
   * to sort and filter open cases and assign moderation resources. Directly
   * reflects the structure of the community_platform_moderation_queues table,
   * joining essential foreign keys and workflow states for rapid triage.
   *
   * This summary is used in moderation listings, workload dashboards, and
   * admin oversight reports. Timestamps and priority fields support SLA and
   * queue analytics; assignment and status are essential for case routing,
   * load balancing, and handoff logic. Fields are subsetted to avoid
   * excessive detail, aligning with batch processing flows and moderation
   * team handoffs.
   */
  export type ISummary = {
    /**
     * Unique identifier for the moderation queue entry as stored in
     * community_platform_moderation_queues. This is a stable ID for
     * referencing moderation queue actions and audit trails.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the target community for this moderation
     * workflow, syncing with moderation assignment and dashboard scoping.
     */
    community_id: string & tags.Format<"uuid">;

    /**
     * References the report triggering this moderation event. Links to a
     * record in community_platform_reports, indicating what content is
     * being processed.
     */
    report_id: string & tags.Format<"uuid">;

    /**
     * Current moderator responsible for handling this queue entry, if
     * assigned. Null if unassigned or in the general pool. Links to
     * community_platform_moderators.
     */
    assigned_moderator_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Workflow state of the moderation queue entry. Enum: pending,
     * in_progress, resolved, escalated. Used for triage, dashboard
     * filtering, and operational flows.
     */
    status: string;

    /**
     * Queue priority for sorting urgent tasks in moderation dashboards.
     * Typical values: low, normal, high, urgent.
     */
    priority: string;

    /**
     * Timestamp of queue entry creation (when the report was assigned or
     * escalated). Used for aging reports and SLAs.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of the last workflow action on this moderation queue entry.
     * Drives sorting by activity recency and resolution tracking.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
