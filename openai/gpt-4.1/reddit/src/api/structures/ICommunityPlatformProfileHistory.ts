import { tags } from "typia";

/**
 * A full snapshot of user profile state at the time of a change (username, bio,
 * status, privacy). Used for audit, rollback, and transparency per business
 * requirements.
 *
 * Based on community_platform_profile_histories table. Essential for reviewing
 * user-initiated or admin-driven modifications and enabling data retention
 * policies.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformProfileHistory = {
  /**
   * Unique identifier for the profile history record.
   *
   * Primary key of community_platform_profile_histories. Used for audit,
   * rollback, and change tracking.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the profile (FK) associated with this history event.
   *
   * Allows access to the related community_platform_profiles entity for
   * context.
   */
  community_platform_profile_id: string & tags.Format<"uuid">;

  /**
   * Snapshot of display name (username) at time of the change. Used to track
   * renames or display name changes for audit/compliance.
   */
  username: string;

  /**
   * Snapshot of user biography/about at the time of change.
   *
   * May be null if not set by user in this revision.
   */
  bio?: string | null | undefined;

  /**
   * Snapshot of profile image/avatar URI as of the recorded change.
   *
   * Null if not set.
   */
  avatar_uri?: string | null | undefined;

  /**
   * Snapshot of visible display email at time of update.
   *
   * May be null for privacy or unset.
   */
  display_email?: string | null | undefined;

  /**
   * Snapshot of user status (short mood/message) at time of change.
   *
   * May be null if not present.
   */
  status_message?: string | null | undefined;

  /**
   * User's privacy/visibility flag snapshot at the time of history event.
   * Indicates if the profile was public (true) or private (false) for this
   * revision.
   */
  is_public: boolean;

  /**
   * Username, admin label, or system for the actor causing this user profile
   * history record.
   *
   * Critical for accountability in audit and rollback scenarios.
   */
  changed_by_actor: string;

  /**
   * (Optional) Reason for the change if provided (e.g., user request,
   * moderation, system update). Explains context or event cause.
   */
  change_reason?: string | null | undefined;

  /**
   * When this change occurred and the snapshot was written. Used for timeline
   * audits and rollback.
   */
  changed_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when profile history record was created (may be same as
   * changed_at).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp for profile history record. Indicates logical
   * removal for GDPR/audit compliance.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformProfileHistory {
  /**
   * Paginated search and filter input for retrieving user profile edit/update
   * history from community_platform_profile_histories. Enables slicing by
   * edit/change time, changed_by_actor, fields changed, audit status, etc.
   * Used for account transparency, profile rollback, or admin audit trails.
   *
   * Include only properties defined on the model. Add pagination, filtering,
   * and ordering controls as relevant.
   */
  export type IRequest = {
    /** Page number for pagination; 1-based. */
    page?:
      | (number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>)
      | undefined;

    /** Number of history records per page. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;

    /** Filter by user/admin/system actor responsible for profile change. */
    changed_by_actor?: string | null | undefined;

    /** RFC3339 timestamp, start of change window. */
    date_range_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** RFC3339 timestamp, end of change window. */
    date_range_end?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter history records to only those where this field was changed
     * (e.g. 'username', 'bio', 'avatar_uri').
     */
    field_changed?: string | null | undefined;

    /** Sort order for results. */
    sort?: "changed_at" | "username" | "bio" | "avatar_uri" | undefined;

    /** Sort direction: ascending or descending. */
    order?: "asc" | "desc" | undefined;
  };
}
