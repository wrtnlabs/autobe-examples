import { tags } from "typia";

/**
 * Represents a single ban (temporary or permanent) as issued against a member,
 * typically as a consequence of moderation workflow or policy enforcement.
 *
 * Includes references to the banned member, the actor who issued the ban (admin
 * or moderator), the community affected (if applicable), the triggering report
 * (if present), and all relevant timestamps (creation, start, end, updates).
 * Contains human-readable reason for the ban, ban type, status, and full audit
 * details. This object is crucial for review, appeals flows, and
 * compliance/audit traceability. May be soft-deleted per system policy. All
 * permission checks on ban enforcement and recurrence are centralized on this
 * entity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformBanHistory = {
  /**
   * Primary key (UUID) for this ban history entry.
   *
   * System-assigned; unique per ban event.
   */
  id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * UUID of the member who was banned, referencing
   * community_platform_members.id.
   *
   * Every ban has exactly one target member.
   */
  banned_member_id: string & tags.Format<"uuid">;

  /**
   * UUID of the admin or moderator issuing the ban. Points to either
   * community_platform_admins.id or community_platform_moderators.id as
   * appropriate.
   *
   * Determines authority and audit origin.
   */
  issued_by_id: string & tags.Format<"uuid">;

  /**
   * UUID of the community where this ban is enforced, or null for a
   * global/platform-wide ban.
   *
   * If set, scope is limited to this community. Otherwise, ban applies
   * system-wide.
   */
  community_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * If the ban was originated by a user report, this is the UUID of that
   * community_platform_reports entry; null for manual or admin-only bans.
   *
   * Used for traceability and escalation context.
   */
  triggering_report_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Human-friendly reason for the ban as entered by the moderator or admin.
   * Free text, max 10,000 chars.
   *
   * Subject to audit and user transparency in appeals workflows.
   */
  reason: string;

  /**
   * Type of ban: 'temporary' (for limited-time bans) or 'permanent'. Only
   * allowed business enum values.
   *
   * Determines logic for expiration and feature lock management.
   */
  ban_type: string;

  /**
   * Timestamp for when the ban starts.
   *
   * May be backdated if applied retroactively, or set to current time for
   * immediate bans.
   */
  ban_start_at: string & tags.Format<"date-time">;

  /**
   * If the ban is temporary, this is the date/time it expires; otherwise,
   * null for permanent bans.
   *
   * Time zone: UTC.
   */
  ban_end_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Whether this ban is currently enforced for the specified user and
   * context.
   *
   * Set to false for expired, ended, or revoked bans; true if presently
   * enforced.
   */
  is_active: boolean;

  /** Ban record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this ban history entry was last edited/modified.
   *
   * Auditable field for compliance tracking.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformBanHistory {
  /**
   * DTO for creating a new ban history record in
   * community_platform_ban_histories. Records all audit, relationship, and
   * compliance fields needed by business requirements. See Prisma model for
   * field constraints and business logic.
   */
  export type ICreate = {
    /**
     * The ID of the banned member. References the primary key in the
     * community_platform_members table. This field is required and critical
     * for identifying who the ban is applied to.
     */
    banned_member_id: string & tags.Format<"uuid">;

    /**
     * ID of the moderator or admin issuing the ban. References the
     * corresponding user in the community_platform_admins or
     * community_platform_moderators table. Required for traceability and
     * audit purposes.
     */
    issued_by_id: string & tags.Format<"uuid">;

    /**
     * ID of the target community. If this is a platform-wide (global) ban,
     * this may be null. Otherwise, references the
     * community_platform_communities table.
     */
    community_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * ID of the report that triggered this ban, if applicable. Nullable.
     * References community_platform_reports.
     */
    triggering_report_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Human-readable explanation entered by the moderator/admin for why the
     * ban was applied. Required for compliance and audit. Should clearly
     * link to rule or behavioral violation.
     */
    reason: string;

    /**
     * Type of ban. Typically either 'temporary' or 'permanent'. Enum values
     * are enforced by business logic.
     */
    ban_type: string;

    /**
     * Timestamp indicating when the ban starts. Must be in ISO8601
     * date-time format.
     */
    ban_start_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for when a temporary ban ends. If the ban is permanent,
     * this should be null.
     */
    ban_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Indicates if the ban is currently active (true) or has ended/revoked
     * (false).
     */
    is_active: boolean;
  };

  /**
   * DTO for updating an existing ban history record in
   * community_platform_ban_histories. Supports partial updates: only the
   * supplied fields are changed. Fields correspond to Prisma schema for
   * business rule compliance.
   */
  export type IUpdate = {
    /**
     * Timestamp to update when a ban ends (for temporary bans). Null if
     * still permanent or active.
     */
    ban_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Updated reason for the ban, may be changed after appeals, forward
     * review, or admin correction.
     */
    reason?: string | undefined;

    /**
     * Update or correction to ban type. Enum values defined by business
     * rules.
     */
    ban_type?: string | undefined;

    /** Whether the ban is still in force (true) or has been lifted (false). */
    is_active?: boolean | undefined;

    /**
     * Current penalty status: e.g., 'active', 'expired', or 'revoked'.
     * Optional, for business tracking.
     */
    penalty_status?: string | undefined;
  };
}
