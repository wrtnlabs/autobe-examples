{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_platform_system_configs","description":"System-level configuration key-value pairs. Stores feature flags, threshold values, system-wide toggles, or settings for the platform. Critical for runtime configuration without code deployment. Used by platform services for feature switches or limits. Managed by admins only. No direct user data or relationships.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"Unique identifier for the configuration setting (e.g., 'max_post_length', 'enable_new_feature').","nullable":false},{"name":"value","type":"string","description":"Configurable value for the setting (string-encoded; can represent JSON, int, bool, etc.).","nullable":false},{"name":"description","type":"string","description":"Explanation of the configuration key's purpose.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this config was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this config was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_audit_logs","description":"System audit trail capturing all significant platform events and actions. Stores who did what, when, and what data was involved. Records admin actions, config changes, moderation events, user privilege escalations, and other critical events for compliance and forensic review.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"actor_type","type":"string","description":"The type of actor involved (e.g., 'member', 'moderator', 'admin', 'system_job').","nullable":false},{"name":"actor_id","type":"uuid","description":"UUID of the actor who performed the action (matches member, moderator, admin, or '00000000-0000-0000-0000-000000000000' for system jobs).","nullable":false},{"name":"action_type","type":"string","description":"High-level action performed (e.g., 'create', 'update', 'delete', 'config_change', 'user_ban', 'login', 'moderation_action').","nullable":false},{"name":"target_table","type":"string","description":"Name of the table affected by the action.","nullable":false},{"name":"target_id","type":"uuid","description":"UUID of the affected entity (row) in the target table.","nullable":true},{"name":"details","type":"string","description":"Structured (JSON/text) details about the event for audit/replay.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this audit log was written.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_id","created_at"]},{"fieldNames":["action_type","created_at"]},{"fieldNames":["target_table","target_id"]}],"ginIndexes":[{"fieldName":"action_type"},{"fieldName":"details"}]},{"name":"community_platform_banned_words","description":"List of banned (forbidden) words or phrases. Used by moderation and filtering to prevent prohibited content submissions. Managed by admins via moderation flows. May include system-wide and per-community words (future extension).","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"word","type":"string","description":"Word or phrase that is prohibited platform-wide.","nullable":false},{"name":"reason","type":"string","description":"Explanation for why this word/phrase is banned.","nullable":true},{"name":"active","type":"boolean","description":"Whether this banned word is currently enforced.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this word was added to the ban list.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this word entry was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp marking a soft deletion from the ban list (null if active).","nullable":true}],"uniqueIndexes":[{"fieldNames":["word"],"unique":true}],"plainIndexes":[],"ginIndexes":[{"fieldName":"reason"}]},{"name":"community_platform_file_uploads","description":"Platform-wide reference for all files uploaded via the platform. Tracks uploaded images, documents, or other assets used by posts, profiles, communities, or moderation. Links to the uploaded_by_member via foreign key. Records original filename, storage path/URL, mime type, file size, and status. Does NOT store file blobs directly.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"uploaded_by_member_id","type":"uuid","description":"Uploader's {@link community_platform_members.id}. The member who uploaded this file.","relation":{"name":"uploadedByMember","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"original_filename","type":"string","description":"Original filename as submitted by user.","nullable":false},{"name":"storage_key","type":"string","description":"Unique storage reference (e.g., S3 key, GCS path, etc.) for this file.","nullable":false},{"name":"mime_type","type":"string","description":"File's MIME type (e.g., 'image/png').","nullable":false},{"name":"file_size_bytes","type":"int","description":"Size of the file in bytes.","nullable":false},{"name":"url","type":"uri","description":"Public or signed URL for retrieving this file.","nullable":false},{"name":"status","type":"string","description":"Current status: 'active', 'deleted', 'archived', etc.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the file was uploaded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when file metadata was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp, null if file is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["storage_key"],"unique":true},{"fieldNames":["url"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["uploaded_by_member_id"]}],"ginIndexes":[{"fieldName":"original_filename"},{"fieldName":"mime_type"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_guests","description":"Ephemeral user entities representing site visitors in anonymous or no-login flows. Used for logging, tracking, or casual participation attribution. No authentication is possible. No identity persists beyond session unless upgraded to member. Not used for core operations or permissions. Minimal fields. Can link to cookies, IP logs, or anonymous session attributions for trace or moderation referencing. May reference profile for future upgrade paths. Not for direct API access. Stance: subsidiary.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"session_key","type":"string","description":"Anonymous session or tracking key, for attribution or moderation referencing. Opaque, session-tied. Not globally unique. Possibly device- or IP-bound. Used for ephemeral tracking only.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when guest record/session first established. For audit and abuse tracking.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft-deletion timestamp. Used for cleaning logs or honoring privacy/erasure requests.","nullable":true}],"uniqueIndexes":[{"fieldNames":["session_key"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_members","description":"Registered and verified users of the platform. Core actor for all primary business flows: content creation, voting, commenting, subscribing, and reporting. Subject to authentication, rate limits, karma effects, ban/restriction logic, and auditing. Email must be unique. Stores password hash for authentication. Records verification state and basic lifecycle data. Stance: primary.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Unique user email for authentication, required to be unique per member. Used for login and contact.","nullable":false},{"name":"password_hash","type":"string","description":"BCrypt or comparable hash of user's auth credential. NEVER store plain text passwords.","nullable":false},{"name":"email_verified","type":"boolean","description":"Whether email has been confirmed via platform verification flow. Cannot post/comment/vote unless true.","nullable":false},{"name":"status","type":"string","description":"Current member status: 'active', 'blocked', 'suspended', etc. Used for permission enforcement and ban handling.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when user account was registered.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last time account metadata was updated (profile or auth details).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft-deletion timestamp for ban/erasure or self-removal.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]},{"name":"community_platform_moderators","description":"Users assigned elevated moderation privileges within specific communities. May overlap with member but tracked distinctly for escalation, audit, and policy enforcement. Table tracks assignment/authentication context, scope, and status. Moderators can approve/reject content, manage bans, escalate reports. Each moderator is linked 1:1 with a member account. Email must be unique. Authentication required. Stance: primary.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Related member entity acting as basis for authentication and core participation. {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":true,"nullable":false},{"name":"community_id","type":"uuid","description":"Moderation privileges apply to this specific community. Links to target community for scope restriction. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"email","type":"string","description":"Moderator account email (for authentication/notification). Must match related member's email. Unique per moderator assignment.","nullable":false},{"name":"password_hash","type":"string","description":"BCrypt or comparable hash of moderator's login credential. Required for separate authentication context. Never store plaintext passwords.","nullable":false},{"name":"status","type":"string","description":"Moderator account status: 'active', 'suspended', 'resigned', etc. Used for permission enforcement and incident response.","nullable":false},{"name":"created_at","type":"datetime","description":"Account creation/assignment time, for audit and incident tracking.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update to assignment or moderator record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft deletion time for end of assignment, resignation, or role removal.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id"]}],"ginIndexes":[]},{"name":"community_platform_admins","description":"Top-level platform administrators with ultimate permissions for system management, disaster recovery, and policy enforcement. Restricted access, highly audited. Distinct from regular members and moderators. Authentication required via email/password, with multi-factor support recommended. Account may be created via backoffice/admin tools. Stance: primary.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Platform admin email (for authentication). Must be unique among all administrators and not reused across other actor tables.","nullable":false},{"name":"password_hash","type":"string","description":"Password hash for admin authentication (bcrypt or better). MFA or step-up auth is recommended. Never store plaintext passwords.","nullable":false},{"name":"superuser","type":"boolean","description":"Indicates if this admin has unrestricted emergency/superuser permissions. Used for separation of duty within administrators.","nullable":false},{"name":"status","type":"string","description":"Account status ('active', 'suspended', etc.) for admin. Affects access and actionability.","nullable":false},{"name":"created_at","type":"datetime","description":"Time admin account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last metadata update to admin account.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-deletion or account revocation time, if any.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"community_platform_communities","description":"Represents a top-level community/hub on the platform. Core entity holding community metadata (name, description, status, images) and organizational settings; foundation for posts, subscriptions, moderation, and content workflows. Linked to members (creator) and supports soft deletion and configuration changes. Subject to moderator and admin workflows.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"creator_member_id","type":"uuid","description":"The creator's {@link community_platform_members.id}. Community founder and initial moderator.","relation":{"name":"creatorMember","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Unique community identifier (display and URL). Case-insensitive. 3-100 characters.","nullable":false},{"name":"title","type":"string","description":"Community's display title. 3-100 characters, shown in listings/headers.","nullable":false},{"name":"description","type":"string","description":"Detailed community description. 10-10000 characters. Markdown allowed.","nullable":true},{"name":"slug","type":"string","description":"URL-safe slug, unique. Used for pretty URLs and direct linking.","nullable":false},{"name":"status","type":"string","description":"Current status (e.g., active, private, banned, archived). Drives accessibility and moderation.","nullable":false},{"name":"created_at","type":"datetime","description":"Community creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp (settings/title/images/status changes, etc.).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Time of soft deletion (archival); null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true},{"fieldNames":["slug"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"community_platform_community_rules","description":"Community-specific rules document. Defines posting, commenting, moderation, and content policies per community. Supports versioning (updated on edit) and enforces customized community governance (e.g., prohibited topics, formatting, moderation logic). Managed by moderators/admins. Each rule set belongs to one community.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Associated community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"body","type":"string","description":"The full text/rich content of community rules (Markdown supported), up to 50000 characters.","nullable":false},{"name":"version","type":"int","description":"Incrementing version number (used for audits; increments on rule update).","nullable":false},{"name":"published_at","type":"datetime","description":"Time of official rule publication; for versioning/audit.","nullable":false},{"name":"created_at","type":"datetime","description":"Time when rules entry was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Most recent time of rules update/edit.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_id","version"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id"]}],"ginIndexes":[]},{"name":"community_platform_community_banners","description":"Represents header/banner images or hero graphics for communities. Used for visual branding/identity. Each image is associated with one community and references a platform-wide file upload entry (in another table). Supports versioning and soft delete for branding changes/audit.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Community this banner belongs to {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"file_upload_id","type":"uuid","description":"Pointer to the actual file record {@link community_platform_file_uploads.id}.","relation":{"name":"fileUpload","targetModel":"community_platform_file_uploads"},"unique":false,"nullable":false}],"plainFields":[{"name":"order","type":"int","description":"Order/index for banners used in rotation/multiple banners ordering; small integer.","nullable":true},{"name":"alt_text","type":"string","description":"Alternative text for accessibility. 0-250 chars.","nullable":true},{"name":"active","type":"boolean","description":"Indicates if this banner is currently displayed. Allows disabling instead of deleting.","nullable":false},{"name":"created_at","type":"datetime","description":"Time when banner was created/uploaded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Most recent update to banner details.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft-deleted time (allowing image rotation without data loss). Null if active.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_id"]},{"fieldNames":["file_upload_id"]}],"ginIndexes":[]},{"name":"community_platform_community_images","description":"Contains general community images for branding, context, and other non-banner visuals: e.g., icon, background images. Linked to file uploads (for storage management) and to their respective community. Soft delete supported for image cleanup/rotation. Managed per-community by moderators/admins.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Community to which this image belongs {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"file_upload_id","type":"uuid","description":"Pointer to uploaded file {@link community_platform_file_uploads.id}.","relation":{"name":"fileUpload","targetModel":"community_platform_file_uploads"},"unique":false,"nullable":false}],"plainFields":[{"name":"image_type","type":"string","description":"Type of image (icon, background, etc.). For easy filtering.","nullable":false},{"name":"order","type":"int","description":"Order/priority for multiple community images of same type (if needed).","nullable":true},{"name":"alt_text","type":"string","description":"Accessibility alt text. 0-250 chars.","nullable":true},{"name":"active","type":"boolean","description":"Whether this image is currently displayed for the community.","nullable":false},{"name":"created_at","type":"datetime","description":"Time of image upload/record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update to image or metadata.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Archive/soft delete time. Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_id","image_type","order"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id"]},{"fieldNames":["file_upload_id"]}],"ginIndexes":[]},{"name":"community_platform_community_status_changes","description":"Snapshot/audit log of every status change (e.g., active, suspended, banned, private, archived) for each community. Each row records a transition event, who performed the change, the reason (admin/moderator action, rule violation, etc.), and timestamps. Enables time-travel visibility and business process audits; critical for compliance.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Affected community {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"performed_by_id","type":"uuid","description":"The responsible moderator/admin who took action {@link community_platform_admins.id} or {@link community_platform_moderators.id}.","relation":{"name":"performedBy","targetModel":"community_platform_admins"},"unique":false,"nullable":false}],"plainFields":[{"name":"previous_status","type":"string","description":"Prior status before event (e.g., active, suspended, private, etc.).","nullable":false},{"name":"new_status","type":"string","description":"Resulting status after the change.","nullable":false},{"name":"change_reason","type":"string","description":"Freeform or coded reason for change (policy, moderation event, violation, etc.).","nullable":true},{"name":"notes","type":"string","description":"Additional info/comments for moderation/audit.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when status change was recorded.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_community_moderator_assignments","description":"Assignment of platform members as moderators to specific communities. Each record represents the assignment relation, including start/end times, roles (e.g., owner/founder, full moderator, prose-only) and reason (in case of removals, resignations, etc.). Enables tracking of current and past moderator staff per community, key for compliance and permissions logic. Not a user table: reference is to community_platform_members.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Community for which moderation is assigned {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"member_id","type":"uuid","description":"Assigned member {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"role","type":"string","description":"Moderator role (owner, moderator, trial_mod, etc.). Defines permissions and hierarchy.","nullable":false},{"name":"assigned_by_id","type":"uuid","description":"Admin/moderator who assigned this moderator. For audit (+permission review).","nullable":false},{"name":"start_at","type":"datetime","description":"Assignment start time.","nullable":false},{"name":"end_at","type":"datetime","description":"If assignment ends (removal, resignation), time here. Null if active.","nullable":true},{"name":"note","type":"string","description":"Reason or note for assignment/removal. Short text.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation time.","nullable":false},{"name":"updated_at","type":"datetime","description":"When assignment record was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_id","member_id","role","start_at"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id"]},{"fieldNames":["member_id"]}],"ginIndexes":[]}]},{"filename":"schema-04-content.prisma","namespace":"Content","models":[{"name":"community_platform_posts","description":"Primary post entity representing user-generated content within a specific community. Posts may contain text, links, or images, and are subject to both user and moderator actions (creation, editing, removal, reporting). Posts are associated with a creator, target community, timestamps, status, and soft deletion fields. Voting and karma are linked through related tables (not present here). Attachments and links are referenced via subsidiary tables. Supports moderation status for workflow visibility. Key relationships: {@link community_platform_members}, {@link community_platform_communities}, {@link community_platform_comments}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Creator member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Target community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Post title (text, max 300 characters, used for indexing and search).","nullable":false},{"name":"content_body","type":"string","description":"Optional text content body for text posts (up to 40,000 characters).","nullable":true},{"name":"content_type","type":"string","description":"Indicates the type of post (text, link, or image). Must match one of allowed enum values in business logic.","nullable":false},{"name":"status","type":"string","description":"Moderation or publication status for workflow (e.g., pending, published, removed, hidden, mod_queued).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of post creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last substantive update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp (null if active, else deleted).","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_member_id","created_at"]},{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"community_platform_post_images","description":"Subsidiary table storing post image attachments. References uploaded files, each image linked to one parent post. Enforces image ordering, file type/size controlled elsewhere. All images referenced are stored in {@link community_platform_file_uploads}. Attachments are managed through the parent post UI. Deletion cascades from posts. Used for rendering image posts and galleries.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Parent post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"community_platform_file_upload_id","type":"uuid","description":"Image file reference from {@link community_platform_file_uploads.id}.","relation":{"name":"fileUpload","targetModel":"community_platform_file_uploads"},"unique":false,"nullable":false}],"plainFields":[{"name":"ordering","type":"int","description":"Image order for post (1..N, per post constraint).","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","ordering"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id"]}],"ginIndexes":[]},{"name":"community_platform_post_links","description":"Subsidiary table mapping external hyperlink information for link posts. Links are 1:N related to parent post; additional link metadata (e.g., preview, favicon) can be referenced here. All link validation and safety is handled at ingestion layer or application logic. Only used where post type is 'link'.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Parent post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"url","type":"uri","description":"Validated external link URL (must be well-formed, non-empty, and subject to platform policy).","nullable":false},{"name":"preview_title","type":"string","description":"Optional preview title extracted from target URL.","nullable":true},{"name":"preview_description","type":"string","description":"Optional preview description extracted from target URL.","nullable":true},{"name":"preview_image_uri","type":"uri","description":"Optional preview image/favico URI from target URL.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","url"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id"]}],"ginIndexes":[{"fieldName":"preview_title"}]},{"name":"community_platform_comments","description":"Primary table for user comments, supporting nested/threaded replies. Comments are associated with a post, an authoring member, and optionally a parent comment (self-referencing). Contains body text, timestamp, moderation status, and soft deletion. Each comment's nesting level and reply relationships are maintained. Voting and reporting are handled in separate tables. Key relationships: {@link community_platform_posts}, {@link community_platform_members}, self-relation for nesting.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Associated post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"community_platform_member_id","type":"uuid","description":"Authoring member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Optional parent comment reference for threading (self-relation to {@link community_platform_comments.id}).","relation":{"name":"parent","targetModel":"community_platform_comments","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"body","type":"string","description":"Comment body text (max 10,000 characters, validates text format).","nullable":false},{"name":"nesting_level","type":"int","description":"Current depth in comment thread (root=1, limited per system config).","nullable":false},{"name":"status","type":"string","description":"Moderation/publication status (e.g., published, deleted, hidden, mod_queued, removed).","nullable":false},{"name":"created_at","type":"datetime","description":"Time of comment creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Time of last edit or update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp (null when active).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_member_id","created_at"]},{"fieldNames":["parent_id"]},{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"community_platform_comment_edits","description":"Snapshot table recording the full edit/overwrite history of comment text. Used for auditing, moderation review, rollback, and transparency to end-users. Each entry references the original comment and includes prior content body, who edited, and timestamps. This is an append-only table. Key relationships: {@link community_platform_comments}, {@link community_platform_members} (for editor).","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"Original comment's {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":false},{"name":"edited_by_member_id","type":"uuid","description":"Member who performed the edit, from {@link community_platform_members.id}.","relation":{"name":"editor","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"old_body","type":"string","description":"Previous body content before this edit (max 10,000 characters, immutable once written in snapshot).","nullable":false},{"name":"edited_at","type":"datetime","description":"Timestamp when the edit was made (append-only).","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_comment_id","edited_at"]}],"ginIndexes":[{"fieldName":"old_body"}]}]},{"filename":"schema-05-subscriptions.prisma","namespace":"Subscriptions","models":[{"name":"community_platform_subscriptions","description":"Represents a single user (member) subscription to a specific community. Each row links a member to a community and supports subscription management, quota enforcement, and personalized feeds. Soft deletion supports unsubscribing and historical tracking. Referential integrity is enforced to members and communities. Used for per-user feed generation and community analytics.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Subscribed member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Targeted community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Subscription creation timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Time of unsubscribe (soft delete). Null when subscription is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["member_id","community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["member_id"]},{"fieldNames":["community_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_subscription_logs","description":"Logs all subscription and unsubscription events for audit, quota enforcement, and analytics. Each record indicates the event type (subscribe/unsubscribe), timestamp, and references to the member and community involved. Supports analytics and troubleshooting; not managed by users directly.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Actor member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Impacted community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false}],"plainFields":[{"name":"event_type","type":"string","description":"Describes event type: 'subscribe', 'unsubscribe', or future event types.","nullable":false},{"name":"event_at","type":"datetime","description":"Event timestamp for when the action occurred.","nullable":false},{"name":"metadata","type":"string","description":"Optional JSON-structured metadata for analytic/audit use. Should be null unless required for event context.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id"]},{"fieldNames":["community_id"]},{"fieldNames":["event_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-voting.prisma","namespace":"Voting","models":[{"name":"community_platform_post_votes","description":"Captures every upvote or downvote made by a member on a post. Each record represents a single vote action (up or down) by a member on a post. Enforces one vote per member per post. Used for calculating post rankings and user karma. Includes audit fields for vote time, status (active/revoked archival), and supports historical analysis. References {@link community_platform_posts.id} and {@link community_platform_members.id}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Voted post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":false},{"name":"community_platform_member_id","type":"uuid","description":"Voter member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_value","type":"int","nullable":false,"description":"Vote value indicating upvote (1) or downvote (-1)."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the vote action was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of the last update to the vote action."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete field. Vote is considered revoked or obsolete if set."}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","community_platform_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["community_platform_member_id","created_at"]}],"ginIndexes":[]},{"name":"community_platform_comment_votes","description":"Stores upvote or downvote events by members on individual comments. Ensures members can only vote once per comment, with audit and reversal supported. Used in comment ranking, controversial scoring, and karma calculation. References {@link community_platform_comments.id} and {@link community_platform_members.id}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"Voted comment's {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":false},{"name":"community_platform_member_id","type":"uuid","description":"Member who voted on the comment's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"vote_value","type":"int","nullable":false,"description":"Vote value, upvote (1) or downvote (-1)."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the comment vote was added."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Time of the last status update for this vote."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete field if vote is revoked or reversed."}],"uniqueIndexes":[{"fieldNames":["community_platform_comment_id","community_platform_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["community_platform_member_id","created_at"]}],"ginIndexes":[]},{"name":"community_platform_controversial_scores","description":"Materialized/performance-oriented table to track and cache controversial scores for posts and comments, including their last computed value and supporting real-time sorting. Not independently managed by users, but updated and referenced by content and ranking algorithms. Denormalized for hot/controversial listing purposes.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Associated post's {@link community_platform_posts.id} (nullable if representing a comment).","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comment_id","type":"uuid","description":"Associated comment's {@link community_platform_comments.id} (nullable if representing a post).","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"controversial_score","type":"double","nullable":false,"description":"Cached controversial score value for the item (calculated via algorithm; used for sorted listing)."},{"name":"score_updated_at","type":"datetime","nullable":false,"description":"Timestamp for last time the controversial score was computed or updated."}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id"],"unique":true},{"fieldNames":["community_platform_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["score_updated_at"]}],"ginIndexes":[]},{"name":"community_platform_vote_logs","description":"Audit log for all voting-related actions (post and comment), capturing user intent, system responses, IP or device fingerprint, and additional metadata for anti-abuse, forensics, and historical query. Used for investigations and reports, not directly manipulated by users.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Member whose action this vote log entry refers to. {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_post_id","type":"uuid","description":"Post being voted on (if relevant). Nullable for comment votes. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comment_id","type":"uuid","description":"Comment being voted on (if relevant). Nullable for post votes. {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"vote_type","type":"string","nullable":false,"description":"\"post\" or \"comment\" — type of the vote action logged."},{"name":"vote_value","type":"int","nullable":false,"description":"Action performed: upvote (1), downvote (-1), or zero (0) for revocation."},{"name":"ip_fingerprint","type":"string","nullable":true,"description":"Optional anonymized IP address or device fingerprint for abuse or anti-bot analysis."},{"name":"user_agent","type":"string","nullable":true,"description":"Optional user agent string for device/user analysis."},{"name":"action_status","type":"string","nullable":false,"description":"Result of attempted voting action (e.g., \"success\", \"duplicate\", \"revoked\", \"error\")."},{"name":"action_message","type":"string","nullable":true,"description":"Human-readable message for the audit log, describing action outcome or error."},{"name":"created_at","type":"datetime","nullable":false,"description":"Time this action was logged."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_member_id","created_at"]},{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_comment_id","created_at"]}],"ginIndexes":[{"fieldName":"action_message"}]}]},{"filename":"schema-07-profiles.prisma","namespace":"Profiles","models":[{"name":"community_platform_profiles","description":"Stores user profile information visible to the community, aggregating references to posts, comments, karma, badges, and displaying preferences. Each profile is uniquely associated with a platform member, moderator, or admin. Includes user display settings, privacy, and status information. Links to badges (community_platform_profile_badges), history (community_platform_profile_histories), and preferences (community_platform_profile_preferences).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Linked member's {@link community_platform_members.id}. Determines the owner of the profile.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"username","type":"string","description":"User's display name or handle, visible publicly. Must be unique.","nullable":false},{"name":"bio","type":"string","description":"Custom profile biography/about text shown on the profile page.","nullable":true},{"name":"avatar_uri","type":"uri","description":"Public URL to profile picture/avatar. Optional.","nullable":true},{"name":"display_email","type":"string","description":"Public display email for profile, if user opts in. Used for public contact/discovery.","nullable":true},{"name":"status_message","type":"string","description":"Short user-curated status, e.g., 'On vacation', visible on profile.","nullable":true},{"name":"is_public","type":"boolean","description":"Whether this profile is publicly visible or restricted by privacy settings.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when profile was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when profile was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion/recovery tracking.","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true},{"fieldNames":["community_platform_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["is_public"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"bio"}]},{"name":"community_platform_profile_badges","description":"Represents badges assigned to user profiles, reflecting rewards, achievements, or status earned by the user. Each badge is linked to a profile and includes badge type/name, granted timestamp, revocation info, and optional reason or issuer. Managed as part of profile functionality, not independently. Used to display user achievements on their profile.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_profile_id","type":"uuid","description":"Belonged profile's {@link community_platform_profiles.id}.","relation":{"name":"profile","targetModel":"community_platform_profiles"},"unique":false,"nullable":false},{"name":"community_platform_karma_award_id","type":"uuid","description":"Linked karma/badge definition from {@link community_platform_karma_awards.id}, if badge is tied to karma system.","relation":{"name":"award","targetModel":"community_platform_karma_awards"},"unique":false,"nullable":true}],"plainFields":[{"name":"badge_type","type":"string","description":"Type or category of badge (e.g., 'gold', 'anniversary', 'community-contributor').","nullable":false},{"name":"badge_name","type":"string","description":"Display name of badge assigned.","nullable":false},{"name":"issued_at","type":"datetime","description":"Time when badge was granted to the profile.","nullable":false},{"name":"issuer","type":"string","description":"Actor or system who issued the badge (username/admin name/system).","nullable":true},{"name":"revoked_at","type":"datetime","description":"When badge was revoked (if ever). Null otherwise.","nullable":true},{"name":"revoke_reason","type":"string","description":"Optional reason for badge revocation.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of badge assignment record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last badge assignment record update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion/recovery tracking.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_profile_id","badge_type"]},{"fieldNames":["issued_at"]}],"ginIndexes":[{"fieldName":"badge_name"}]},{"name":"community_platform_profile_histories","description":"Snapshot table storing historical changes to each user profile, capturing prior field values and changes for audit, policy compliance, and rollback. Enables a full versioned history of profile updates, privacy setting changes, and status modifications. Critical for legal/regulatory data retention and user history display.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_profile_id","type":"uuid","description":"Snapshot target profile {@link community_platform_profiles.id}.","relation":{"name":"profile","targetModel":"community_platform_profiles"},"unique":false,"nullable":false}],"plainFields":[{"name":"username","type":"string","description":"Snapshot of display name/handle at the time of change.","nullable":false},{"name":"bio","type":"string","description":"Snapshot of biography text at the time of change.","nullable":true},{"name":"avatar_uri","type":"uri","description":"Snapshot of avatar/profile image URL at the time of change.","nullable":true},{"name":"display_email","type":"string","description":"Snapshot of public profile email at the time of change.","nullable":true},{"name":"status_message","type":"string","description":"Snapshot of profile status at the time of change.","nullable":true},{"name":"is_public","type":"boolean","description":"Snapshot of privacy/visibility setting.","nullable":false},{"name":"changed_by_actor","type":"string","description":"Indicates what user/admin/system changed the profile (may be system, username, or admin name).","nullable":false},{"name":"change_reason","type":"string","description":"Reason for profile change (e.g., user request, moderation, system update).","nullable":true},{"name":"changed_at","type":"datetime","description":"When this change was recorded.","nullable":false},{"name":"created_at","type":"datetime","description":"Audit field for when this snapshot record was created.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for history record, if ever removed.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_profile_id","changed_at"]}],"ginIndexes":[{"fieldName":"username"},{"fieldName":"bio"}]},{"name":"community_platform_profile_preferences","description":"Holds user-configurable preferences related to profile appearance and privacy, such as notification settings, preferred language, dark mode, and profile/public info visibility. Each record is tied to a profile, one-to-one, and always managed through the profile's own settings. Critical for supporting opt-in/out flows, accessibility, and user configuration via web/mobile.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_profile_id","type":"uuid","description":"Reference to associated user profile {@link community_platform_profiles.id}.","relation":{"name":"profile","targetModel":"community_platform_profiles"},"unique":true,"nullable":false}],"plainFields":[{"name":"language","type":"string","description":"User’s preferred language setting for the platform or profile display.","nullable":true},{"name":"theme","type":"string","description":"Preferred visual theme (e.g., 'light', 'dark').","nullable":true},{"name":"show_email","type":"boolean","description":"Whether to show display email (see profile) on public profile page.","nullable":false},{"name":"show_badges","type":"boolean","description":"Whether to show earned badges to the public.","nullable":false},{"name":"allow_messages_from_nonfollowers","type":"boolean","description":"Whether the user permits incoming messages from people they don’t follow/subscriptions.","nullable":false},{"name":"notification_settings","type":"string","description":"Serialized (JSON or similar) notification settings—a flexible preferences blob for alerts, messaging, and platform info.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp for preference record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp for last preference modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion or recovery of preferences.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_profile_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-08-moderation.prisma","namespace":"Moderation","models":[{"name":"community_platform_reports","description":"Stores individual content reports filed by members against posts or comments, including the category, reason, reporting member, status, moderation review, and timestamps. Connects members, content, categories, and moderation workflow. Tracks status from submission to moderation resolution. Core of community safety and abuse workflow.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"reporting_member_id","type":"uuid","description":"Reporting user's {@link community_platform_members.id}. Links report to the member who filed it.","relation":{"name":"reportingMember","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}. Set if the reported content is a post.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Target comment's {@link community_platform_comments.id}. Set if the reported content is a comment.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true},{"name":"report_category_id","type":"uuid","description":"Report category {@link community_platform_report_categories.id}.","relation":{"name":"reportCategory","targetModel":"community_platform_report_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"reason_text","type":"string","description":"Optional free-form explanation provided by the reporting user (required if category is 'other').","nullable":true},{"name":"status","type":"string","description":"Current workflow status (pending, under_review, resolved, escalated, dismissed).","nullable":false},{"name":"moderation_result","type":"string","description":"Result or action taken by moderator upon resolving the report (e.g., removed, warning, no_action, banned, escalated).","nullable":true},{"name":"moderated_by_id","type":"uuid","description":"Moderator/admin who handled the report. References admin or moderator tables as appropriate.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when report was filed.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when report was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["reporting_member_id","post_id","comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]},{"fieldNames":["created_at"]},{"fieldNames":["report_category_id"]}],"ginIndexes":[{"fieldName":"reason_text"}]},{"name":"community_platform_report_categories","description":"Defines available reporting categories (e.g., spam, abuse, hate, off-topic, NSFW, harassment), as referenced by content reports. Maintains canonical mapping of categories and whether they allow free-text descriptions. Useful for reporting UI and policy enforcement.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique, human-readable name of the report category (e.g., 'spam', 'harassment').","nullable":false},{"name":"allow_free_text","type":"boolean","description":"Whether reporters can/must specify details in free text for this category.","nullable":false},{"name":"created_at","type":"datetime","description":"Category creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Category last modification timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_moderation_queues","description":"Moderation work queue, holding triaged and open reports pending moderator/admin review per community. Connects communities, referenced report, and assigns to an (optional) moderator/admin acting. Allows monitoring pending, in-progress, and resolved moderation workload.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_id","type":"uuid","description":"Target community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":false},{"name":"report_id","type":"uuid","description":"Associated report's {@link community_platform_reports.id}.","relation":{"name":"report","targetModel":"community_platform_reports"},"unique":true,"nullable":false},{"name":"assigned_moderator_id","type":"uuid","description":"Moderator/admin currently reviewing this queue entry. Nullable if unassigned.","relation":{"name":"assignedModerator","targetModel":"community_platform_moderators"},"unique":false,"nullable":true}],"plainFields":[{"name":"status","type":"string","description":"Workflow status (pending, in_progress, resolved, escalated).","nullable":false},{"name":"priority","type":"string","description":"Priority of moderation queue entry (low, normal, high, urgent).","nullable":false},{"name":"created_at","type":"datetime","description":"Queue entry creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Queue entry last update timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["report_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_id","status"]},{"fieldNames":["assigned_moderator_id"]}],"ginIndexes":[]},{"name":"community_platform_ban_histories","description":"Tracks member bans at the community or platform level, including the moderator/admin who issued the ban, banned member, duration, and reason. Provides a historical record for appeals, escalation, and audit purposes. Each ban is linked to its report (if triggered by one).","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"banned_member_id","type":"uuid","description":"The ID of the banned member {@link community_platform_members.id}.","relation":{"name":"bannedMember","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"issued_by_id","type":"uuid","description":"Moderator/admin who issued the ban. References admin or moderator tables as appropriate.","relation":{"name":"issuedBy","targetModel":"community_platform_admins"},"unique":false,"nullable":false},{"name":"community_id","type":"uuid","description":"Community affected by the ban. Nullable if platform-wide ban. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true},{"name":"triggering_report_id","type":"uuid","description":"Report that triggered the ban. Nullable if manual ban. {@link community_platform_reports.id}.","relation":{"name":"triggeringReport","targetModel":"community_platform_reports"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"Text description of the ban reason as entered by moderator/admin.","nullable":false},{"name":"ban_type","type":"string","description":"Type of ban (temporary, permanent).","nullable":false},{"name":"ban_start_at","type":"datetime","description":"Ban start time.","nullable":false},{"name":"ban_end_at","type":"datetime","description":"Ban end time, nullable for permanent bans.","nullable":true},{"name":"is_active","type":"boolean","description":"If the ban is currently active.","nullable":false},{"name":"created_at","type":"datetime","description":"Ban record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Ban record last update timestamp.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["banned_member_id","is_active"]},{"fieldNames":["community_id"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"community_platform_moderation_actions","description":"Logs all moderation actions performed on reports, posts, or comments, including moderator/admin actor, action type, content target, description, and timestamps. Enables full audit trail of safety interventions, for compliance, analytics, and review.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_id","type":"uuid","description":"ID of moderator/admin who performed this action. References respective actor table.","relation":{"name":"actor","targetModel":"community_platform_admins"},"unique":false,"nullable":false},{"name":"target_post_id","type":"uuid","description":"Post affected by moderation action. Nullable if comment or member ban affected. {@link community_platform_posts.id}.","relation":{"name":"targetPost","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"target_comment_id","type":"uuid","description":"Comment affected by moderation action. Nullable if post or member ban affected. {@link community_platform_comments.id}.","relation":{"name":"targetComment","targetModel":"community_platform_comments"},"unique":false,"nullable":true},{"name":"report_id","type":"uuid","description":"Related report, if any. Nullable for manual actions. {@link community_platform_reports.id}.","relation":{"name":"report","targetModel":"community_platform_reports"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action (remove_post, remove_comment, pin, warn_user, ban_user, escalate, dismiss, edit_content, other).","nullable":false},{"name":"description","type":"string","description":"Free-form text describing the action taken.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the moderation action was performed.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_id"]},{"fieldNames":["action_type"]},{"fieldNames":["report_id"]},{"fieldNames":["target_post_id"]},{"fieldNames":["target_comment_id"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_escalation_logs","description":"Captures audit of all escalations in the moderation workflow, e.g., unresolved reports or moderator conflicts sent to admin review. Tracks escalation initiator, destination (role/admin), original report or action affected, reason, status, and resolution timestamps. Essential for transparency and compliance in difficult moderation cases.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"initiator_id","type":"uuid","description":"Member or moderator/admin who initiated escalation. References appropriate role table.","relation":{"name":"initiator","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"destination_admin_id","type":"uuid","description":"Admin to whom this escalation is assigned. {@link community_platform_admins.id}.","relation":{"name":"destinationAdmin","targetModel":"community_platform_admins"},"unique":false,"nullable":true},{"name":"report_id","type":"uuid","description":"Report at the root of this escalation. {@link community_platform_reports.id}.","relation":{"name":"report","targetModel":"community_platform_reports"},"unique":true,"nullable":false}],"plainFields":[{"name":"escalation_reason","type":"string","description":"Free-form escalation reason/summary entered by initiator.","nullable":false},{"name":"status","type":"string","description":"Escalation workflow status (pending, in_review, resolved, closed).","nullable":false},{"name":"resolution_summary","type":"string","description":"Summary of how the escalation was resolved (if applicable).","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the escalation log was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the escalation log was last updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["report_id"],"unique":true}],"plainIndexes":[{"fieldNames":["initiator_id"]},{"fieldNames":["destination_admin_id"]},{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"escalation_reason"}]}]},{"filename":"schema-09-karma.prisma","namespace":"Karma","models":[{"name":"community_platform_karma_ledgers","description":"Holds the current karma state for each member, aggregated across the platform and per community. Supports enforcement of permission checks and karma-based feature gating. Links to {@link community_platform_members} and optionally to {@link community_platform_communities}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Belonged member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Referenced community's {@link community_platform_communities.id}. Nullable for system-wide karma.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"current_karma","type":"int","description":"The current karma value for the member (can be negative).","nullable":false},{"name":"feature_lock_reason","type":"string","description":"Business reason for feature lockout (if karma gating applies). Nullable when no lock.","nullable":true},{"name":"updated_at","type":"datetime","description":"Last time the ledger was updated.","nullable":false},{"name":"created_at","type":"datetime","description":"Ledger creation timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_member_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_member_id"]},{"fieldNames":["community_platform_community_id"]}],"ginIndexes":[]},{"name":"community_platform_karma_penalties","description":"Tracks penalties (reductions, suspensions) assigned to members for rule violations or moderation actions. Supports moderation/business workflows for temporary or permanent penalty assignment. Connects to {@link community_platform_members}, {@link community_platform_communities}, with reason and penalty period.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Penalized member's {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Targeted community's {@link community_platform_communities.id}. Nullable for global penalty.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"penalty_type","type":"string","description":"Type of penalty (e.g. 'deduction', 'suspension').","nullable":false},{"name":"penalty_value","type":"int","description":"Numeric value for penalty (negative for deduction, duration if suspension).","nullable":false},{"name":"penalty_reason","type":"string","description":"Detailed human-readable reason for penalty.","nullable":false},{"name":"penalty_status","type":"string","description":"Current penalty status (active, expired, revoked).","nullable":false},{"name":"applied_at","type":"datetime","description":"The time penalty was applied.","nullable":false},{"name":"expires_at","type":"datetime","description":"Nullable. Penalty expiration timestamp.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_member_id"]},{"fieldNames":["penalty_status"]}],"ginIndexes":[]},{"name":"community_platform_karma_history","description":"Transactional append-only history of karma changes (positive or negative) for audit, traceability, and point-attribution. Records every karma-affecting event, such as post votes, commentary, moderation actions. Links to relevant member, community, post or comment, and event type.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Member affected by the karma event. {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Nullable. Scoping to community if relevant. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true},{"name":"community_platform_post_id","type":"uuid","description":"Nullable. Related post if karma event comes from a post. {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts"},"unique":false,"nullable":true},{"name":"community_platform_comment_id","type":"uuid","description":"Nullable. Related comment if karma event comes from a comment. {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of karma event (e.g. 'upvote', 'downvote', 'moderation_penalty', 'admin_adjustment').","nullable":false},{"name":"change_amount","type":"int","description":"Signed integer delta of karma (positive or negative).","nullable":false},{"name":"event_context","type":"string","description":"Short context or source for the event (e.g. 'voting', 'system', 'moderation').","nullable":false},{"name":"event_time","type":"datetime","description":"Timestamp for when the karma change was registered.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp (usually same as event_time).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_member_id"]},{"fieldNames":["community_platform_community_id"]},{"fieldNames":["event_type"]},{"fieldNames":["event_time"]}],"ginIndexes":[]},{"name":"community_platform_karma_thresholds","description":"Holds platform or community-specific karma thresholds with business meaning, such as points needed to unlock features, or penalties to lock features. Links to communities (nullable for platform-wide threshold).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Nullable. Community to which threshold applies. {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"threshold_type","type":"string","description":"Business type/key for the threshold (e.g. 'post_creation', 'comment_voting', 'subscription_unlock').","nullable":false},{"name":"threshold_value","type":"int","description":"Required karma value for this threshold.","nullable":false},{"name":"feature_lock_reason","type":"string","description":"Reason for gating associated with this threshold (human-readable, optional).","nullable":true},{"name":"created_at","type":"datetime","description":"Row creation timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","threshold_type"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"community_platform_karma_awards","description":"Tracks historical awards or badges given to members as a result of their karma-accrued achievements. Each row is a single award event, not the display badge (which is managed in a profile component). Links to member, community (optional), award type, and event time for full traceability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_member_id","type":"uuid","description":"Member who received the award. {@link community_platform_members.id}.","relation":{"name":"member","targetModel":"community_platform_members"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Nullable. Community in which the award was accrued (for community-specific badges). {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities"},"unique":false,"nullable":true}],"plainFields":[{"name":"award_type","type":"string","description":"Type or key of the award (e.g. 'gold', 'founder', 'legendary').","nullable":false},{"name":"award_reason","type":"string","description":"Short human-readable description of why the award was granted.","nullable":true},{"name":"event_time","type":"datetime","description":"Time when the award was granted.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_member_id"]},{"fieldNames":["award_type"]}],"ginIndexes":[]}]}]}