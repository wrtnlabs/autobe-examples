/// Immutable audit log entries capturing system and moderation events for
/// compliance and incident investigation. Each record references acting
/// principals and related objects (post, thread, report, moderation case).
/// Relations intentionally use nullable foreign keys and MUST use SET NULL
/// or RESTRICT on delete to preserve audit history when referenced objects
/// are removed. This model is append-only and classified as a snapshot for
/// retention and legal export workflows.
///
/// @namespace Audit
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model econ_political_forum_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Acting user's {@link econ_political_forum_registereduser.id}. Nullable
  /// for system actions.
  registereduser_id String?
  
  /// Acting moderator's {@link econ_political_forum_moderator.id}. Nullable
  /// when action is not by a moderator.
  moderator_id String?
  
  /// Referenced post {@link econ_political_forum_posts.id}. Nullable to
  /// preserve audit when posts are removed.
  post_id String?
  
  /// Referenced thread {@link econ_political_forum_threads.id}. Nullable to
  /// preserve audit when threads are removed.
  thread_id String?
  
  /// Associated report {@link econ_political_forum_reports.id}. Nullable to
  /// preserve audit records independent of report lifecycle.
  report_id String?
  
  /// Associated moderation case {@link
  /// econ_political_forum_moderation_cases.id}. Nullable to preserve audit
  /// records independent of case lifecycle.
  moderation_case_id String?
  
  /// Categorical action type (e.g., 'create', 'edit', 'delete', 'hide',
  /// 'warn', 'suspend', 'escalate', 'legal_disclosure').
  action_type String
  
  /// Type of target object (e.g.,
  /// 'post','thread','user','report','moderation_case').
  target_type String
  
  /// Canonical identifier of the target as a string for cross-domain queries;
  /// nullable when not applicable.
  target_identifier String?
  
  /// Free-text or JSON-serialized details of the event (evidence snapshot,
  /// moderator rationale, metadata). Keep size reasonable; heavy binary
  /// artifacts should be stored externally and referenced by
  /// evidence_reference.
  details String?
  
  /// Timestamp when the audit entry was recorded (ISO 8601).
  created_at DateTime
  
  /// Whether the entry was generated by an automated system (true) or by a
  /// human actor (false).
  created_by_system Boolean
  
  //----
  // RELATIONS
  //----
  actor econ_political_forum_registereduser? @relation(fields: [registereduser_id], references: [id], onDelete: Cascade)
  moderator econ_political_forum_moderator? @relation(fields: [moderator_id], references: [id], onDelete: Cascade)
  post econ_political_forum_posts? @relation(fields: [post_id], references: [id], onDelete: Cascade)
  thread econ_political_forum_threads? @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  report econ_political_forum_reports? @relation(fields: [report_id], references: [id], onDelete: Cascade)
  moderationCase econ_political_forum_moderation_cases? @relation(fields: [moderation_case_id], references: [id], onDelete: Cascade)
  
  @@index([moderation_case_id])
  
  @@index([moderator_id, created_at])
  @@index([thread_id, created_at])
  @@index([report_id, created_at])
  @@index([registereduser_id, created_at], map: "econ_political_forum_audit_logs_registereduser_id_crea_5c8d1f7c")
  @@index([post_id, created_at])
  @@index([target_type, created_at])
}

/// Legal hold records that prevent deletion or purging of content subject to
/// legal or investigatory requirements. Holds must persist independently of
/// target object lifecycle; relations use nullable FKs and application/DB
/// logic must prevent purge while holds are active. Classified as subsidiary
/// because holds support enforcement rather than user-facing CRUD.
///
/// @namespace Audit
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model econ_political_forum_legal_holds {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Administrator or legal officer who placed the hold. {@link
  /// econ_political_forum_registereduser.id}. Nullable when placed by
  /// system/legal process.
  registereduser_id String?
  
  /// If the hold targets a specific post, reference to {@link
  /// econ_political_forum_posts.id}. Nullable when the hold targets a thread
  /// or case.
  post_id String?
  
  /// If the hold targets a thread, reference to {@link
  /// econ_political_forum_threads.id}. Nullable when not applicable.
  thread_id String?
  
  /// Optional link to a related moderation case {@link
  /// econ_political_forum_moderation_cases.id} that motivated the hold.
  moderation_case_id String?
  
  /// Short human-readable reason for the legal hold (e.g., 'subpoena', 'law
  /// enforcement request', 'litigation').
  hold_reason String
  
  /// Timestamp when the hold became effective (ISO 8601).
  hold_start DateTime
  
  /// Optional timestamp when the hold is scheduled to end; null if indefinite.
  hold_end DateTime?
  
  /// Whether the hold is currently active and prevents purging.
  is_active Boolean
  
  /// Optional free-text notes or case identifiers for internal use; do not
  /// expose sensitive PII in this field without access controls.
  notes String?
  
  /// Timestamp when the hold record was created.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  holder econ_political_forum_registereduser? @relation(fields: [registereduser_id], references: [id], onDelete: Cascade)
  post econ_political_forum_posts? @relation(fields: [post_id], references: [id], onDelete: Cascade)
  thread econ_political_forum_threads? @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  moderationCase econ_political_forum_moderation_cases? @relation(fields: [moderation_case_id], references: [id], onDelete: Cascade)
  
  @@index([moderation_case_id])
  
  @@index([post_id, hold_start])
  @@index([thread_id, hold_start])
  @@index([registereduser_id])
  @@index([is_active, hold_start])
}