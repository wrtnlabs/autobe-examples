import { tags } from "typia";

/**
 * IEconPoliticalForumTag — Canonical tag entity mapping to the Prisma model
 * `econ_political_forum_tags`.
 *
 * This schema exposes only properties that exist in the referenced Prisma model
 * and is safe for use in detailed responses. It intentionally omits any secrets
 * or system-managed properties that do not exist in Prisma. Use this type for
 * full-detail responses only; for list views use the `.ISummary` variant.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconPoliticalForumTag = {
  /**
   * Primary key UUID of the tag as stored in the `econ_political_forum_tags`
   * Prisma model.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Normalized, human-readable tag name. Maps to `name` column in the Prisma
   * model.
   *
   * Provide a short, discoverable label such as "fiscal-policy". This field
   * is unique among active tags.
   */
  name: string;

  /**
   * URL-friendly lower-case slug for the tag. Maps to `slug` column in the
   * Prisma model.
   *
   * Must be URL-safe and unique; server enforces uniqueness.
   */
  slug: string;

  /**
   * Optional longer description explaining the tag's scope. This maps to
   * `description` in the Prisma model and may be null.
   */
  description?: string | null | undefined;

  /**
   * Record creation timestamp from the database (Prisma `created_at` column).
   * Only present because the Prisma model defines this timestamp.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp from the database (Prisma `updated_at`
   * column). Only present because the Prisma model defines this timestamp.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp; null when the tag is active. This maps to
   * `deleted_at` in the Prisma model.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEconPoliticalForumTag {
  /**
   * IEconPoliticalForumTag.IRequest — Request DTO for listing/searching tags.
   *
   * This type is used for search and pagination requests. It intentionally
   * does NOT include `x-autobe-prisma-schema` because it is not a direct
   * table mapping. Admin-only flags (includeDeleted) are documented and
   * enforced server-side.
   */
  export type IRequest = {
    /**
     * Page number for page/limit pagination (1-based). Use either
     * page/limit or cursor; server default page=1.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of items per page. Server enforces a maximum (for example
     * 100).
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Opaque cursor for cursor-based pagination. When provided, cursor
     * pagination takes precedence over page/limit.
     */
    cursor?: string | undefined;

    /**
     * Free-text search query applied to tag name and description. Use for
     * partial matching; server sanitizes input.
     */
    q?: string | undefined;

    /**
     * If true, include soft-deleted tags (deleted_at not null). This flag
     * is restricted to administrator requests; non-admin requests must not
     * set this flag or will receive 403.
     */
    includeDeleted?: boolean | undefined;

    /** Field to sort by. Allowed values: 'name' or 'created_at'. */
    sort_by?: "name" | "created_at" | undefined;

    /** Sort order. Allowed values: 'asc' or 'desc'. */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * IEconPoliticalForumTag.ICreate — DTO used when creating a new tag.
   *
   * This request schema maps to the Prisma model `econ_political_forum_tags`
   * and includes only the fields clients may provide when creating a tag.
   * System-managed fields (id, created_at, updated_at, deleted_at) are not
   * accepted in this DTO and are generated by the server. The server will
   * enforce uniqueness on `name` and `slug` and validate slug formatting. If
   * a uniqueness conflict occurs, the API will return a 409 Conflict.
   */
  export type ICreate = {
    /**
     * Required normalized tag name to create.
     *
     * Provide a short, normalized name (for example: "fiscal-policy"). The
     * server enforces uniqueness of this field among active tags.
     */
    name: string;

    /**
     * Required URL-friendly slug for the tag.
     *
     * Should be lower-case, trimmed, and URL-safe. The server will validate
     * uniqueness of slug and may reject values that conflict with existing
     * tags.
     */
    slug: string;

    /**
     * Optional descriptive text explaining the tag's purpose.
     *
     * If not provided, this field may be null. This field maps to
     * econ_political_forum_tags.description and is intended for editorial
     * context only.
     */
    description?: string | null | undefined;
  };

  /**
   * Tag update DTO for econPoliticalForum.
   *
   * This object is used to update mutable fields of an existing normalized
   * tag record. Each property, when present, maps directly to a column on the
   * Prisma model `econ_political_forum_tags`. All fields are optional for
   * partial updates. The server enforces uniqueness and normalization rules
   * for `name` and `slug` and will validate inputs before persisting.
   *
   * Usage notes:
   *
   * - Clients should provide only the fields they intend to change.
   * - The server may sanitize or normalize values (for example, lower-casing
   *   `slug`).
   */
  export type IUpdate = {
    /**
     * Canonical, human-readable tag name. Maps to `name` in the
     * `econ_political_forum_tags` table.
     *
     * Provide a normalized name suitable for discovery (e.g.,
     * "fiscal-policy"). The server enforces uniqueness among active tags
     * and may return 409 Conflict if a duplicate exists.
     */
    name?: string | undefined;

    /**
     * URL-friendly slug used for routing and lookups. Maps to `slug` in the
     * `econ_political_forum_tags` table.
     *
     * Provide a lower-case, URL-safe value (no spaces). If omitted, the
     * server may derive a slug from `name`.
     */
    slug?: string | undefined;

    /**
     * Optional longer description of the tag's purpose and scope. Maps to
     * `description` in `econ_political_forum_tags`.
     *
     * Provide human-friendly guidance (examples of use, clarifying scope).
     * To explicitly clear the description, pass null.
     */
    description?: string | null | undefined;
  };

  /**
   * IEconPoliticalForumTag.ISummary — Summary view for tag lists.
   *
   * Contains only essential fields for listing and discovery. Excludes large
   * textual descriptions and any sensitive/internal fields. Maps to the
   * Prisma model `econ_political_forum_tags`.
   */
  export type ISummary = {
    /** Tag primary key (UUID). */
    id: string & tags.Format<"uuid">;

    /** Tag name for list displays. */
    name: string;

    /** URL-friendly slug used for routing and link generation. */
    slug: string;
  };
}
