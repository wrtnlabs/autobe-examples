import { tags } from "typia";

/**
 * Site-level configuration setting used by econPoliticalForum.
 *
 * This schema represents the canonical configuration item stored in the
 * database (Prisma model: econ_political_forum_site_settings). Each record
 * contains a unique key, a string value (application-typed by runtime),
 * optional metadata (description, environment), and visibility flag (is_public)
 * used to control exposure. Timestamps document creation and modification. When
 * x-autobe-prisma-schema is present, every property corresponds to a column in
 * the referenced Prisma model.
 *
 * Business notes:
 *
 * - The application interprets the `value` string according to the key's expected
 *   type (boolean, integer, JSON). Do not assume typed semantics at the schema
 *   level.
 * - `key` uniqueness is enforced at the DB layer; API clients should treat key
 *   collisions as 409 Conflict.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEconPoliticalForumSiteSetting = {
  /**
   * Primary key UUID of the site setting record.
   *
   * Maps to econ_political_forum_site_settings.id in the Prisma schema. Used
   * as the stable identifier for configuration entries.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique configuration key (namespace.form). Example:
   * 'moderation.report_threshold'.
   *
   * This value is unique and used by the application to look up runtime
   * configuration. It must follow the project's key naming conventions.
   */
  key: string;

  /**
   * Configuration value stored as a string. Interpretation (boolean/int/json)
   * is performed by application logic.
   *
   * This field maps to econ_political_forum_site_settings.value in the Prisma
   * model.
   */
  value: string;

  /**
   * Optional human-readable description explaining the purpose of the setting
   * for administrators.
   *
   * Maps to econ_political_forum_site_settings.description. May be null when
   * not provided.
   */
  description?: string | null | undefined;

  /**
   * Optional environment tag (for example: 'production', 'staging') used to
   * scope overrides. Maps to econ_political_forum_site_settings.environment.
   *
   * If null, the setting is considered environment-agnostic.
   */
  environment?: string | null | undefined;

  /**
   * Whether this setting is visible to non-admin clients/UI. When true, the
   * application MAY expose a redacted or controlled view to public APIs.
   *
   * Maps to econ_political_forum_site_settings.is_public.
   */
  is_public: boolean;

  /**
   * Record creation timestamp in ISO 8601 format (UTC).
   *
   * Maps to econ_political_forum_site_settings.created_at in the Prisma
   * schema.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp in ISO 8601 format (UTC). Updated by server when
   * the record is modified.
   *
   * Maps to econ_political_forum_site_settings.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp. When non-null the setting is considered
   * archived/removed from active listings.
   *
   * Maps to econ_political_forum_site_settings.deleted_at and may be null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEconPoliticalForumSiteSetting {
  /**
   * Partial DTO for updating site settings. This type maps to the Prisma
   * model econ_political_forum_site_settings and includes only mutable fields
   * that administrators may change via the API. System-managed fields (id,
   * created_at, updated_at, deleted_at) are not accepted in update payloads
   * and are generated by the server.
   */
  export type IUpdate = {
    /**
     * New value for the configuration key. Stored as string; interpretation
     * is the application's responsibility.
     */
    value?: string | undefined;

    /**
     * Optional updated human-readable description. Null clears the
     * description.
     */
    description?: string | null | undefined;

    /**
     * Optional environment tag to scope this setting. Null removes
     * environment scoping.
     */
    environment?: string | null | undefined;

    /**
     * Optional toggle to change whether the setting is visible to non-admin
     * clients.
     */
    is_public?: boolean | undefined;
  };
}
