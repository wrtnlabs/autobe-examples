import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postAuthModeratorPasswordConfirm } from "../../../../../providers/postAuthModeratorPasswordConfirm";

import { IEconPoliticalForumModerator } from "../../../../../api/structures/IEconPoliticalForumModerator";

@Controller("/auth/moderator/password/confirm")
export class AuthModeratorPasswordConfirmController {
  /**
   * Confirm password reset and update password (consume
   * econ_political_forum_password_resets token).
   *
   * Purpose and functionality: This endpoint consumes a previously issued
   * password reset token and sets a new password for the account by updating
   * econ_political_forum_registereduser.password_hash. It marks the
   * corresponding econ_political_forum_password_resets record used=true and
   * sets used_at for audit.
   *
   * Implementation details and required fields: The request body must include
   * the reset token and the new password. The implementation must validate the
   * reset_token against reset_token_hash and ensure expires_at has not passed
   * and used is false. On success it must update password_hash on
   * econ_political_forum_registereduser, set
   * econ_political_forum_password_resets.used and used_at, and invalidate
   * active sessions (set deleted_at on relevant econ_political_forum_sessions)
   * to force re-authentication.
   *
   * Role-specific integration and business context: This flow supports both
   * moderators and general registered users; when applied to a moderator
   * account it has immediate effect on their ability to authenticate for
   * moderation actions. The operation should record an audit entry in
   * econ_political_forum_audit_logs indicating the password change event for
   * the account.
   *
   * Security considerations within schema constraints: Reset tokens must be
   * single-use and are stored hashed (reset_token_hash). After a successful
   * reset, refresh tokens and sessions must be invalidated for safety
   * (econ_political_forum_sessions.deleted_at). The password must meet platform
   * password policy before updating password_hash.
   *
   * Related operations and workflow integration: This operation ties back to
   * the requestPasswordReset endpoint and is part of the account recovery
   * workflow; administrators may also perform password resets in exceptional
   * circumstances using admin tools that must record appropriate audit logs.
   *
   * @param connection
   * @param body Password reset confirmation containing reset token and new
   *   password.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async confirmPasswordReset(
    @TypedBody()
    body: IEconPoliticalForumModerator.IPasswordResetConfirm,
  ): Promise<IEconPoliticalForumModerator.IPasswordResetConfirmAck> {
    try {
      return await postAuthModeratorPasswordConfirm({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
