import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postAuthRegisteredUserVerifyEmailResend } from "../../../../../providers/postAuthRegisteredUserVerifyEmailResend";

import { IEconPoliticalForumRegisteredUser } from "../../../../../api/structures/IEconPoliticalForumRegisteredUser";

@Controller("/auth/registeredUser/verify-email/resend")
export class AuthRegistereduserVerify_emailResendController {
  /**
   * Resend email verification link to a registered user's email address.
   *
   * Purpose and functionality: Allow a user to request the verification email
   * be resent. This only creates a new verification token and triggers the
   * email send; it does not change `email_verified` until the token is
   * consumed.
   *
   * Implementation details using confirmed schema fields: Request includes
   * `email`. If a matching `econ_political_forum_registereduser` exists and
   * `email_verified` is false, the system generates a new verification token,
   * stores or references it appropriately, and sends the verification email.
   * Always return a generic success response to avoid account enumeration.
   *
   * Role-specific integration and business context: Public endpoint. When
   * categories require verification
   * (`econ_political_forum_categories.requires_verification`), this endpoint
   * supports users who need verification to post in those categories.
   *
   * Security considerations within schema constraints: Rate-limit resend
   * requests. Track resend attempts and optionally store resend events in
   * `econ_political_forum_audit_logs`.
   *
   * Related operations and workflow integration: Complements `join` and
   * `verifyEmail` operations.
   *
   * @param connection
   * @param body Resend verification request containing the account email.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async resendVerification(
    @TypedBody()
    body: IEconPoliticalForumRegisteredUser.IResendVerification,
  ): Promise<IEconPoliticalForumRegisteredUser.IGenericSuccess> {
    try {
      return await postAuthRegisteredUserVerifyEmailResend({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
