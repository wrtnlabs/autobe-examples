import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postAuthAdministratorPasswordReset } from "../../../../../providers/postAuthAdministratorPasswordReset";

import { IEconPoliticalForumAdministrator } from "../../../../../api/structures/IEconPoliticalForumAdministrator";

@Controller("/auth/administrator/password/reset")
export class AuthAdministratorPasswordResetController {
  /**
   * Request a password reset (creates econ_political_forum_password_resets
   * entry).
   *
   * Purpose and overview: Allows an administrator to request a password reset
   * for their account. This operation creates a new row in
   * econ_political_forum_password_resets with reset_token_hash and expires_at,
   * and sends a single-use reset link to the registered email address
   * associated with the econ_political_forum_registereduser record.
   *
   * Implementation details and schema references: Persist only a hash of the
   * issued token (reset_token_hash) and set an expiry in the expires_at field.
   * The password_resets.used and used_at fields will be updated upon successful
   * reset. The action should create an audit entry in
   * econ_political_forum_audit_logs describing the reset request.
   *
   * Role-specific integration and business context: This endpoint is public
   * (for account recovery) but should be rate-limited and protected by
   * anti-abuse checks. The operation references
   * econ_political_forum_registereduser.email to deliver the reset message.
   *
   * Security considerations: Limit resend attempts (e.g., 5 per 24h). Ensure
   * reset_token_hash is unpredictable and single-use. Upon successful password
   * reset, invalidate existing sessions (econ_political_forum_sessions) and
   * record session revocation events.
   *
   * Related operations and workflow integration: Followed by POST
   * /auth/administrator/password/reset/confirm which consumes the reset token
   * and updates econ_political_forum_registereduser.password_hash.
   *
   * @param connection
   * @param body Password reset request containing the administrator's email
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async requestPasswordReset(
    @TypedBody()
    body: IEconPoliticalForumAdministrator.IRequestPasswordReset,
  ): Promise<IEconPoliticalForumAdministrator.IResetRequestResponse> {
    try {
      return await postAuthAdministratorPasswordReset({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
