import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getAuthAdministratorEmailVerifyToken } from "../../../../../providers/getAuthAdministratorEmailVerifyToken";

import { IEconPoliticalForumAdministrator } from "../../../../../api/structures/IEconPoliticalForumAdministrator";

@Controller("/auth/administrator/email/verify/:token")
export class AuthAdministratorEmailVerifyController {
  /**
   * Verify administrator email (sets email_verified and verified_at on
   * econ_political_forum_registereduser).
   *
   * Purpose and overview: Confirm an administrator's email address using a
   * single-use verification token. On success, set registered user fields
   * email_verified = true and verified_at to the timestamp, stored on
   * econ_political_forum_registereduser.
   *
   * Implementation details and schema references: The operation will validate
   * the provided token (implementation may use
   * econ_political_forum_password_resets or a dedicated verification token
   * table). Upon validation, set email_verified = true and verified_at on the
   * registered user row, update updated_at, and record an audit entry in
   * econ_political_forum_audit_logs.
   *
   * Role-specific integration and business context: Email verification affects
   * posting privileges in categories that require verification
   * (econ_political_forum_categories.requires_verification). Administrators
   * must verify email prior to performing certain high-risk actions depending
   * on policy.
   *
   * Security considerations: Verification tokens must be single-use and
   * time-limited. Limit resends and record verification attempts in audit logs.
   * Do not reveal whether the token maps to a specific user in public error
   * messages.
   *
   * Related operations and workflow integration: Connects to POST
   * /auth/administrator/join (initial issuance) and to category posting rules
   * that require email_verified.
   *
   * @param connection
   * @param token Verification token
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async verifyEmail(
    @TypedParam("token")
    token: string & tags.Format<"uuid">,
  ): Promise<IEconPoliticalForumAdministrator.IVerifyEmailResponse> {
    try {
      return await getAuthAdministratorEmailVerifyToken({
        token,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
