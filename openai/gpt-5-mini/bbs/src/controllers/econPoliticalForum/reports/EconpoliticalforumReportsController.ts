import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postEconPoliticalForumReports } from "../../../providers/postEconPoliticalForumReports";

import { IEconPoliticalForumReport } from "../../../api/structures/IEconPoliticalForumReport";

@Controller("/econPoliticalForum/reports")
export class EconpoliticalforumReportsController {
  /**
   * Create a report for a post or thread (public: guests may file reports).
   *
   * Create a structured report that flags a post or thread for moderator
   * review.
   *
   * Purpose and overview: This endpoint allows visitors (authenticated or not)
   * to notify moderators about content that may violate policy. It creates an
   * immutable record in econ_political_forum_reports and returns the persisted
   * report. Implementation must validate inputs and sanitize reporter_text.
   *
   * Security and permissions: Public endpoint. Unauthenticated requests are
   * allowed but must be subject to anti-abuse controls (rate limiting,
   * CAPTCHA). Authenticated requests will set reporter_id from session. The
   * public response must redact reporter identity for anonymous reports or when
   * the caller is not a moderator/admin.
   *
   * Relationship to the database: Writes to econ_political_forum_reports fields
   * (reported_post_id, reported_thread_id, reason_code, reporter_text,
   * reporter_anonymous, status, priority, created_at, deleted_at). The server
   * must validate that at least one of reported_post_id or reported_thread_id
   * is present and that provided target IDs exist when possible.
   *
   * Validation and business rules: Validate reason_code against allowed values
   * (harassment, doxxing, misinformation, illegal_content, spam, other).
   * Enforce reporter_text max length (e.g., 2000 chars) and sanitize content.
   * Return 400 when validation fails, 404 when target not found, 429 for rate
   * limits.
   *
   * @param connection
   * @param body Report creation payload: specify the target (reported_post_id
   *   OR reported_thread_id), a structured reason_code, optional reporter_text,
   *   and optional anonymity preference.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: IEconPoliticalForumReport.ICreate,
  ): Promise<IEconPoliticalForumReport> {
    try {
      return await postEconPoliticalForumReports({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
