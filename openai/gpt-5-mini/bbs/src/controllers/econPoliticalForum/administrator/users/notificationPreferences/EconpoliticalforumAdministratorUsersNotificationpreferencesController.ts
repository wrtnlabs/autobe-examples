import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getEconPoliticalForumAdministratorUsersUserIdNotificationPreferences } from "../../../../../providers/getEconPoliticalForumAdministratorUsersUserIdNotificationPreferences";
import { AdministratorAuth } from "../../../../../decorators/AdministratorAuth";
import { AdministratorPayload } from "../../../../../decorators/payload/AdministratorPayload";

import { IEconPoliticalForumNotificationPreferences } from "../../../../../api/structures/IEconPoliticalForumNotificationPreferences";

@Controller(
  "/econPoliticalForum/administrator/users/:userId/notificationPreferences",
)
export class EconpoliticalforumAdministratorUsersNotificationpreferencesController {
  /**
   * Administrator: get a user's notification preferences.
   *
   * Purpose and overview:
   *
   * Administrator view of a user's notification preferences
   * (econ_political_forum_notification_preferences). This endpoint is intended
   * for admin support and audit workflows and returns full preference records
   * including the preferences_payload subject to sanitization rules.
   *
   * Security and permissions:
   *
   * This endpoint requires administrator privileges. All administrator reads
   * MUST create an immutable audit log entry recording admin id, timestamp,
   * target user id, and a short reason. Admin access to preferences_payload
   * MUST be subject to content-sanitization rules to avoid exposing secrets.
   *
   * Relationship to database entity:
   *
   * Operates on econ_political_forum_notification_preferences. Implementation
   * should fetch the record by registereduser_id and return the mapped DTO
   * IEconPoliticalForumNotificationPreferences. If the preferences row is
   * soft-deleted, follow product policy for return behavior and ensure admin
   * access is still logged.
   *
   * Validation and business rules:
   *
   * - Path parameter userId must be a UUID.
   * - Authorization: only administrators may call this endpoint.
   * - Admin reads MUST be logged in audit logs with reason.
   * - Preferences_payload must be validated and sanitized before inclusion in
   *   responses; disallow secrets.
   *
   * Related operations:
   *
   * - GET
   *   /econPoliticalForum/registeredUser/users/{userId}/notificationPreferences
   *   (owner view)
   * - PUT
   *   /econPoliticalForum/administrator/users/{userId}/notificationPreferences
   *   (admin update - if implemented must follow stricter rules)
   *
   * Error handling:
   *
   * - 400: invalid UUID format
   * - 401: authentication required
   * - 403: caller not authorized (not an administrator)
   * - 404: user or preferences not found
   * - 500: server error
   *
   * @param connection
   * @param userId Unique identifier (UUID) of the target registered user whose
   *   preferences are requested
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async atNotificationPreferencesByAdmin(
    @AdministratorAuth()
    administrator: AdministratorPayload,
    @TypedParam("userId")
    userId: string & tags.Format<"uuid">,
  ): Promise<IEconPoliticalForumNotificationPreferences> {
    try {
      return await getEconPoliticalForumAdministratorUsersUserIdNotificationPreferences(
        {
          administrator,
          userId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
