import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteEconPoliticalForumModeratorThreadsThreadIdTagsTagId } from "../../../../../providers/deleteEconPoliticalForumModeratorThreadsThreadIdTagsTagId";
import { ModeratorAuth } from "../../../../../decorators/ModeratorAuth";
import { ModeratorPayload } from "../../../../../decorators/payload/ModeratorPayload";

@Controller("/econPoliticalForum/moderator/threads/:threadId/tags/:tagId")
export class EconpoliticalforumModeratorThreadsTagsController {
  /**
   * Remove tag from thread (soft-delete thread_tag mapping).
   *
   * Remove a tag from a thread by soft-deleting the mapping record.
   *
   * Purpose and overview: This endpoint updates
   * econ_political_forum_thread_tags.deleted_at to mark the mapping as removed
   * while retaining the record for audit and potential reactivation.
   *
   * Security and permissions: Only authorized moderation roles (moderator or
   * administrator) may perform this action. The server MUST record the action
   * in moderation logs (econ_political_forum_moderation_logs / audit logs)
   * including moderator id, action_type, rationale, and linked report or case
   * id when applicable.
   *
   * Validation and business rules: Validate threadId and tagId as UUIDs.
   * Confirm the mapping exists. Before deletion, check
   * econ_political_forum_legal_holds and related moderation_case for active
   * holds; if present, return 423 Locked and include reference id. The API is
   * idempotent: if the mapping is already soft-deleted, return 204 No Content.
   *
   * Expected behavior and error handling: On success return 204 No Content.
   * Errors: 400 for invalid IDs, 401/403 for auth/permission errors, 404 if
   * thread or tag not found, 423 if locked by legal hold, 500 for server
   * errors.
   *
   * @param connection
   * @param threadId UUID of the target thread (econ_political_forum_threads.id)
   * @param tagId UUID of the tag to remove (econ_political_forum_tags.id)
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @ModeratorAuth()
    moderator: ModeratorPayload,
    @TypedParam("threadId")
    threadId: string & tags.Format<"uuid">,
    @TypedParam("tagId")
    tagId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteEconPoliticalForumModeratorThreadsThreadIdTagsTagId({
        moderator,
        threadId,
        tagId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
