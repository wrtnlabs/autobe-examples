import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteEconPoliticalForumModeratorPostsPostId } from "../../../../providers/deleteEconPoliticalForumModeratorPostsPostId";
import { ModeratorAuth } from "../../../../decorators/ModeratorAuth";
import { ModeratorPayload } from "../../../../decorators/payload/ModeratorPayload";

@Controller("/econPoliticalForum/moderator/posts/:postId")
export class EconpoliticalforumModeratorPostsController {
  /**
   * Moderator: Soft-delete a post by ID (econ_political_forum_posts).
   *
   * Purpose and overview: Allows moderators to soft-delete posts by setting
   * econ_political_forum_posts.deleted_at. Moderator actions MUST be recorded
   * in econ_political_forum_moderation_logs with action_type, reason_code, and
   * a short rationale. The service MUST check econ_political_forum_legal_holds
   * and prohibit deletion when an active hold exists, returning 423 Locked and
   * recording the attempt in audit logs.
   *
   * Security and auditing:
   *
   * - Only active moderators (and administrators) should be permitted to call
   *   this endpoint. All moderator actions must be auditable via
   *   econ_political_forum_audit_logs and
   *   econ_political_forum_moderation_logs.
   *
   * Responses:
   *
   * - 204 No Content on success
   * - 403 Forbidden if caller lacks moderator privileges
   * - 423 Locked if legal hold prevents deletion
   * - 404 Not Found if post does not exist
   *
   * @param connection
   * @param postId Target post's ID (econ_political_forum_posts.id)
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @ModeratorAuth()
    moderator: ModeratorPayload,
    @TypedParam("postId")
    postId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteEconPoliticalForumModeratorPostsPostId({
        moderator,
        postId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
