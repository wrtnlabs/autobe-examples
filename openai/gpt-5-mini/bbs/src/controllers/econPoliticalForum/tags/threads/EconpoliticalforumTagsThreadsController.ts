import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patchEconPoliticalForumTagsTagIdThreads } from "../../../../providers/patchEconPoliticalForumTagsTagIdThreads";

import { IPageIEconPoliticalForumThread } from "../../../../api/structures/IPageIEconPoliticalForumThread";
import { IEconPoliticalForumThread } from "../../../../api/structures/IEconPoliticalForumThread";

@Controller("/econPoliticalForum/tags/:tagId/threads")
export class EconpoliticalforumTagsThreadsController {
  /**
   * List and search threads for a specific tag with pagination and filters.
   *
   * Purpose and overview: Returns a filtered and paginated list of thread
   * summaries associated with the specified tag id. The operation sources
   * associations from econ_political_forum_thread_tags and thread metadata from
   * econ_political_forum_threads. Use this endpoint for tag landing pages and
   * tag-based discovery.
   *
   * Visibility and permissions: This is a public read operation by default (no
   * authentication required). Implementations MUST exclude soft-deleted threads
   * (threads.deleted_at IS NOT NULL) and soft-deleted tags (tags.deleted_at IS
   * NOT NULL) for unauthenticated or regular callers. Moderators and
   * administrators may request includeDeleted to view soft-deleted items for
   * triage.
   *
   * Filtering, sorting and performance notes:
   *
   * - Input filters: full-text query on thread.title, threads.category_id,
   *   threads.author_id, threads.created_at range, and membership via
   *   econ_political_forum_thread_tags.tag_id.
   * - Sorting by aggregated metrics such as "mostVoted" or "mostReplied" requires
   *   pre-computed aggregates (materialized views) or runtime aggregation
   *   across votes/posts; implementers should document expected performance and
   *   may restrict or disable these sorts if aggregates are not available.
   * - Default page size: 20. Maximum allowed page size: 100.
   *
   * Errors and edge cases:
   *
   * - 400: invalid filters (bad date format, unsupported sort value)
   * - 404: tag not found or tag soft-deleted (unless caller is admin/moderator
   *   and explicitly requested inclusion)
   * - 429: rate limiting on search endpoints
   *
   * @param connection
   * @param tagId UUID of the tag to filter threads by (maps to
   *   econ_political_forum_tags.id)
   * @param body Search, filtering and pagination parameters (full-text query,
   *   categoryId, authorId, created_from, created_to, sort, cursor or
   *   page/limit) scoped to the specified tag.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedParam("tagId")
    tagId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IEconPoliticalForumThread.IRequest,
  ): Promise<IPageIEconPoliticalForumThread.ISummary> {
    try {
      return await patchEconPoliticalForumTagsTagIdThreads({
        tagId,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
