import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Guest record representation for todoApp.
 *
 * This object corresponds directly to the Prisma model `todo_app_guest` and
 * includes the persisted fields that are safe to expose in API responses. The
 * schema intentionally uses the same field names as the Prisma model to
 * facilitate server-side mapping and validation. Sensitive or internal-only
 * fields are not present on the Prisma model and therefore are not included
 * here.
 *
 * Use this type when returning persisted guest information from endpoints such
 * as guest creation or administrative retrieval. When exposing this object in
 * responses, ensure that access control rules are applied (admin-only endpoints
 * may reveal full emails while lower-privilege support views may redact PII).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppGuest = {
  /**
   * Primary key for the guest record as defined in the Prisma model
   * (todo_app_guest.id).
   *
   * This value is system-generated (UUID) when a guest record is created. It
   * uniquely identifies the guest entry and SHOULD be used for any subsequent
   * server-side operations that reference the guest (for example, token
   * issuance or activity updates).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional visitor-provided email address recorded on the guest entry.
   *
   * This field maps directly to the Prisma column todo_app_guest.email and is
   * nullable by design. When present it SHOULD conform to a valid email
   * format. Use of this field is optional for anonymous guests; when supplied
   * it enables lightweight communication or follow-up flows (for example,
   * passwordless links or recovery).
   */
  email?: (string & tags.Format<"email">) | null | undefined;

  /**
   * Timestamp when the guest record was created (Prisma:
   * todo_app_guest.created_at).
   *
   * This field is populated by the server at insertion time and expressed as
   * an ISO 8601 date-time with timezone. It is guaranteed to be present for
   * every persisted guest record and is useful for retention, audit, and
   * housekeeping.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Optional timestamp of the guest's last observed activity (Prisma:
   * todo_app_guest.last_active_at).
   *
   * This field is nullable and updated by server-side activity handlers (for
   * example, when a guest refreshes tokens or performs actions). Null
   * indicates no observed subsequent activity since creation.
   */
  last_active_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional housekeeping status for the guest record (Prisma:
   * todo_app_guest.status).
   *
   * Typical values might include 'active', 'bounced', or other operational
   * markers used by support systems. This field is optional and nullable in
   * the Prisma schema; use it for administrative classification only.
   */
  status?: string | null | undefined;
};
export namespace ITodoAppGuest {
  /**
   * Payload to create a guest record (maps to the Prisma model
   * `todo_app_guest`).
   *
   * This request object contains only fields the client may provide when
   * creating an ephemeral or anonymous guest record. System-managed fields
   * (id, created_at, last_active_at, status) are set by the server and MUST
   * NOT be provided by the client.
   */
  export type IJoin = {
    /**
     * Optional visitor email address as defined by the Prisma model
     * `todo_app_guest.email`.
     *
     * This property maps directly to the `email` column in the
     * `todo_app_guest` Prisma model and is nullable by design. When
     * provided, the value MUST be a valid email address. Clients may omit
     * this property to create an anonymous guest record; the server will
     * generate system-managed fields such as `id` and `created_at` and must
     * set them itself.
     */
    email?: (string & tags.Format<"email">) | null | undefined;
  };

  /**
   * Authorization response returned after successful guest creation or token
   * refresh.
   *
   * This object contains both persisted guest attributes (those that exist on
   * the `todo_app_guest` Prisma model) and a computed `token` property that
   * provides the authorization material for client usage. The `id` and
   * `token` properties are always present in successful authorization
   * responses. Timestamps use ISO 8601 date-time format. Audit and
   * security-sensitive fields are intentionally excluded from this response.
   */
  export type IAuthorized = {
    /**
     * Unique identifier for the guest record.
     *
     * This value corresponds to the `todo_app_guest.id` primary key in the
     * Prisma model. It is generated by the server as a UUID and is intended
     * for client usage to reference the created guest record in subsequent
     * calls.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Guest email as stored on the `todo_app_guest` row (nullable).
     *
     * When present, this is the persisted `email` column value for the
     * guest. It may be `null` for anonymous guests. This property is
     * provided in the authorized response to help clients display or cache
     * guest contact data when available.
     */
    email?: (string & tags.Format<"email">) | null | undefined;

    /**
     * Record creation timestamp for the guest entry.
     *
     * This corresponds to the `todo_app_guest.created_at` column in the
     * Prisma model and is expressed in RFC 3339 / ISO 8601 date-time format
     * (UTC recommended). It indicates when the guest record was created by
     * the server.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last observed activity timestamp for the guest (nullable).
     *
     * Maps to `todo_app_guest.last_active_at`. This field may be updated by
     * refresh or activity endpoints and is `null` until the guest performs
     * subsequent interactions.
     */
    last_active_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Administrative housekeeping status for the guest as stored in
     * `todo_app_guest.status`.
     *
     * This optional field is used for administrative classification (for
     * example, "active", "bounced"). Values are implementation-defined
     * strings stored in the Prisma model. Clients SHOULD treat this as
     * informational only and MUST NOT rely on exact status text for
     * client-side logic unless agreed with the service contract.
     */
    status?: string | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Guest refresh request used to obtain a new short-lived access token for
   * an existing guest identity.
   *
   * This request payload contains a single required property,
   * `refresh_token`, which represents the refresh credential issued by the
   * server when the guest session was created. On successful validation the
   * server SHOULD update the guest record's `last_active_at`
   * (todo_app_guest.last_active_at) to the current timestamp and MAY record
   * the refresh event in audit logs (todo_app_audit_records) for operational
   * observability.
   *
   * This schema is a request DTO and does not directly map to a persistent
   * Prisma model column for token material; the underlying `todo_app_guest`
   * model contains `id`, `email`, `created_at`, `last_active_at`, and
   * `status`. Do NOT include any sensitive secrets or password material in
   * this request. All descriptions and processing notes are provided for
   * implementers and API consumers.
   */
  export type IRefresh = {
    /**
     * Opaque refresh credential previously issued to the guest session. The
     * server validates this token, rotates or replaces it when appropriate,
     * and issues a new access token on success. This value is required and
     * must be provided exactly as issued by the service (do not URL-encode
     * or alter).
     */
    refresh_token: string & tags.MinLength<1>;
  };

  /**
   * Request DTO for searching and paginating guest records.
   *
   * This object is intended for administrative search endpoints that query
   * the `todo_app_guest` table. All fields are optional: omit fields you do
   * not wish to filter by. Date-time filters must be provided in ISO 8601
   * format. Pagination and sorting hints are provided to guide efficient
   * server-side querying.
   *
   * Note: This type is a query/request object and does not use
   * x-autobe-prisma-schema linkage because it describes operation parameters
   * rather than a direct persisted model representation.
   */
  export type IRequest = {
    /**
     * Optional filter for guest email. Supports exact or partial match
     * depending on server implementation (e.g., prefix or contains).
     * Provide the email string without surrounding wildcards; the server
     * determines matching semantics.
     */
    email?: string | undefined;

    /**
     * Optional filter for guest status (e.g., 'active', 'bounced'). When
     * provided, the server SHALL filter records by the exact status value.
     */
    status?: string | undefined;

    /**
     * Optional lower bound (inclusive) for created_at timestamp. Format:
     * ISO 8601 date-time. Use to restrict results to guests created on or
     * after this timestamp.
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional upper bound (inclusive) for created_at timestamp. Format:
     * ISO 8601 date-time. Use to restrict results to guests created on or
     * before this timestamp.
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional lower bound (inclusive) for last_active_at timestamp.
     * Format: ISO 8601 date-time.
     */
    last_active_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional upper bound (inclusive) for last_active_at timestamp.
     * Format: ISO 8601 date-time.
     */
    last_active_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Page number for pagination (1-based). If omitted the server may
     * default to page 1.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of records per page for pagination. The server SHOULD enforce
     * a maximum page size to protect performance (for example, 100). If
     * omitted the server may apply a sensible default (for example, 20).
     */
    pageSize?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort key for results. Allowed values correspond to indexed timestamp
     * columns on the Prisma model. Use 'created_at' or 'last_active_at'.
     */
    sortBy?: "created_at" | "last_active_at" | undefined;

    /**
     * Sort direction. Allowed values: 'asc' for ascending, 'desc' for
     * descending.
     */
    sortOrder?: "asc" | "desc" | undefined;
  };

  /**
   * Guest summary record returned in administrative listings.
   *
   * This summary contains only safe, non-sensitive fields drawn directly from
   * the Prisma model `todo_app_guest`. It intentionally excludes any
   * credentials (there are none on the model) and provides nullable fields
   * via oneOf to represent database nullability.
   */
  export type ISummary = {
    /**
     * Primary key of the guest record (UUID). This value is assigned by the
     * server when the guest row is created.
     *
     * Used to correlate temporary sessions and short-lived tokens to the
     * guest entry.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Optional email address provided by the visitor. This field is
     * nullable in the Prisma model and may be omitted for anonymous
     * guests.
     *
     * When present, it should be a valid email address; when absent the
     * value is null.
     */
    email?: (string & tags.Format<"email">) | null | undefined;

    /**
     * Timestamp when the guest row was created in the database (ISO 8601 /
     * date-time). This field exists in the Prisma model and is populated by
     * the server.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Nullable timestamp of the guest's last observed activity. May be null
     * if no subsequent activity has been recorded.
     *
     * Represented in ISO 8601 date-time format when present.
     */
    last_active_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional housekeeping status for the guest record (for example
     * 'active' or 'bounced'). This mirrors the nullable status column in
     * the Prisma model.
     */
    status?: string | null | undefined;
  };
}
