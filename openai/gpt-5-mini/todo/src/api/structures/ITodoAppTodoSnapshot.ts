import { tags } from "typia";

/**
 * A todo snapshot representing the state of a todo_app_todos row at a specific
 * point in time.
 *
 * This schema maps directly to the Prisma model `todo_app_todo_snapshots`. It
 * includes all persisted columns from that model and mirrors their optionality:
 * nullable fields in the Prisma model are represented using oneOf with a null
 * variant. Use this schema for snapshot retrieval and version-history
 * responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppTodoSnapshot = {
  /**
   * Primary key of the snapshot record. Corresponds to
   * todo_app_todo_snapshots.id in the Prisma schema.
   *
   * This field is a system-generated UUID that uniquely identifies the
   * snapshot. It is used for lookups and audit/history references.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the source todo item. Corresponds to
   * todo_app_todo_snapshots.todo_app_todo_id.
   *
   * This UUID links the snapshot to the original todo_app_todos record and is
   * required to correlate history with the live todo.
   */
  todo_app_todo_id: string & tags.Format<"uuid">;

  /**
   * Snapshot of the todo title at the time the snapshot was taken.
   * Corresponds to todo_app_todo_snapshots.title.
   *
   * This is a textual copy of the source title and is intended for display in
   * history/version views.
   */
  title: string;

  /**
   * Snapshot of the todo description at snapshot time. Corresponds to
   * todo_app_todo_snapshots.description.
   *
   * This field is nullable in the Prisma model and therefore may be null when
   * no description existed at snapshot time.
   */
  description?: string | null | undefined;

  /**
   * Snapshot of the completion flag at snapshot time. Corresponds to
   * todo_app_todo_snapshots.is_completed.
   *
   * True indicates the source todo was completed at the captured moment;
   * false indicates it was not.
   */
  is_completed: boolean;

  /**
   * Snapshot of the completed_at timestamp (if set on source). Corresponds to
   * todo_app_todo_snapshots.completed_at.
   *
   * This is nullable and records when the source todo was marked completed at
   * the time of snapshot.
   */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Snapshot of the optional manual ordering position. Corresponds to
   * todo_app_todo_snapshots.position.
   *
   * This integer is nullable and used by clients that maintain custom
   * ordering.
   */
  position?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * Original created_at from the source todo at snapshot time. Corresponds to
   * todo_app_todo_snapshots.created_at.
   *
   * Represents when the source todo was originally created; useful for
   * historical context in the snapshot.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Original updated_at from the source todo at snapshot time. Corresponds to
   * todo_app_todo_snapshots.updated_at.
   *
   * Indicates the latest modification time on the source todo as observed
   * when the snapshot was taken.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Original deleted_at from the source todo at snapshot time (nullable).
   * Corresponds to todo_app_todo_snapshots.deleted_at.
   *
   * When present, this indicates the source todo was soft-deleted at or
   * before the snapshot time.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when this snapshot was created. Corresponds to
   * todo_app_todo_snapshots.snapshot_at.
   *
   * This field records the point-in-time when the snapshot was captured and
   * is required for ordering snapshot history.
   */
  snapshot_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppTodoSnapshot {
  /**
   * Request DTO for listing todo snapshots. Contains pagination, sorting, and
   * filter parameters that map to fields on the `todo_app_todo_snapshots`
   * model.
   *
   * This DTO is intended for use with the snapshot listing endpoint and
   * supports server-side limits and validation. All date-time fields must use
   * ISO 8601 date-time format where provided.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based). If omitted, the server default
     * page is applied.
     *
     * Clients should use sensible paging to avoid large responses.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of items per page. Server may enforce a maximum. If omitted
     * the server default page size will be used.
     */
    pageSize?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort key for snapshots. Allowed values reference snapshot fields on
     * the model: 'snapshot_at' (default) or 'created_at'.
     *
     * Exact enum values must be used.
     */
    sortBy?: "snapshot_at" | "created_at" | undefined;

    /**
     * Sort direction. Allowed values: 'asc' or 'desc'.
     *
     * Defaults to 'desc' when not provided.
     */
    sortOrder?: "asc" | "desc" | undefined;

    /**
     * Optional lower bound (inclusive) for snapshot_at filtering. Use ISO
     * 8601 date-time format.
     *
     * Provide null explicitly if no lower bound is intended.
     */
    snapshotAtFrom?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional upper bound (inclusive) for snapshot_at filtering. Use ISO
     * 8601 date-time format.
     *
     * Provide null explicitly if no upper bound is intended.
     */
    snapshotAtTo?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filter for snapshot is_completed state. When true, only
     * snapshots captured from completed todos are returned. When false,
     * only non-completed snapshots are returned. Null or omitted returns
     * both.
     */
    isCompleted?: boolean | null | undefined;

    /**
     * When true, include snapshots taken when the source todo had
     * deleted_at set. Default is false; snapshots of deleted source todos
     * are excluded unless explicitly requested.
     */
    includeDeleted?: boolean | undefined;

    /**
     * Optional UUID of the parent todo (todo_app_todos.id) to scope
     * snapshots to a specific todo. When provided, results will be limited
     * to snapshots for that todo.
     */
    todoId?: (string & tags.Format<"uuid">) | undefined;
  };
}
