import { tags } from "typia";

/**
 * Full representation of a todo record mapped to the Prisma model
 * `todo_app_todos`.
 *
 * This schema includes all persistent fields defined by the database model and
 * is intended for detailed item views returned by read endpoints (GET
 * /todoApp/user/todos/{todoId}) and for responses from create/update
 * operations. Sensitive or system-managed fields (IDs and timestamps) are
 * documented as server-managed and should not be accepted from untrusted
 * clients in create/update requests.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppTodo = {
  /**
   * Primary identifier for the todo item as defined in the Prisma model
   * `todo_app_todos`.
   *
   * This value is a UUID generated by the system and uniquely identifies the
   * record. It is used in API paths and references (for example, when
   * fetching or updating a single todo). Do not allow clients to set or
   * change this value; it is system-managed.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the owning user as stored in `todo_app_todos.user_id`.
   *
   * This property links the todo to the owning `todo_app_user` record. The
   * API must ensure returned todos belong to the requesting user (or that the
   * caller is authorized to view the resource). This field is
   * system-populated on create and must not be accepted from untrusted
   * clients in create/update requests.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * Short task title taken from the `title` column in the Prisma model.
   *
   * This is a required, public-facing field used for quick-capture and list
   * display. Business validation: the title should be non-empty after
   * trimming and constrained in length by server-side policy (recommended
   * 1â€“250 characters).
   */
  title: string;

  /**
   * Optional longer description or notes for the todo item as defined by
   * `description` in the Prisma model.
   *
   * This field may be null when no description is provided. When present it
   * can contain additional details to help users recall context; server-side
   * validation should limit length (recommended <= 4000 characters).
   */
  description?: string | null | undefined;

  /**
   * Boolean flag reflecting completion state of the todo (`is_completed`
   * column in Prisma).
   *
   * True indicates the item has been completed. The API should update
   * `completed_at` when this flag transitions to true and clear
   * `completed_at` when it transitions back to false.
   */
  is_completed: boolean;

  /**
   * Timestamp when the todo was marked completed (`completed_at` in Prisma).
   *
   * This is null for incomplete items. When present it is an RFC 3339 / ISO
   * 8601 timestamp representing the completion time. The server is
   * authoritative for this value.
   */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional integer used by clients to indicate manual ordering (`position`
   * column in Prisma).
   *
   * Nullable: when not provided the server or client may fall back to default
   * ordering (e.g., created_at desc). If provided, it must be an integer and
   * may be used for sort-by-position views.
   */
  position?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * Record creation timestamp from the `created_at` Prisma column.
   *
   * This is a server-set timestamp indicating when the todo was originally
   * created. It is provided to clients for display and sorting and must be
   * produced in ISO 8601 / RFC 3339 format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last-modified timestamp from the `updated_at` Prisma column.
   *
   * The server updates this on every change to the todo record. Clients
   * should use this value for caching, concurrency checks, and to detect
   * changes.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp corresponding to `deleted_at` in the Prisma model.
   *
   * When null, the item is active (or completed). When set to a timestamp the
   * item is considered soft-deleted and should be excluded from default list
   * views. The retention and purge policy for deleted items is an operational
   * concern described in product requirements.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppTodo {
  /**
   * Request DTO for listing/searching todos owned by the requesting user.
   *
   * This object contains pagination, filtering, and sorting parameters that
   * map to the `todo_app_todos` model fields. All properties are optional to
   * allow flexible queries. Servers SHOULD validate parameters and enforce
   * sane defaults and limits to prevent expensive queries.
   */
  export type IRequest = {
    /**
     * Page number for pagination. Use 1-based indexing. Optional: if
     * omitted the server will default to the first page.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of items per page for paginated results. The server enforces a
     * maximum page size (recommended max 100) to protect performance. If
     * omitted the server default will apply.
     */
    pageSize?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Optional filter to return only items matching completion state. When
     * omitted, both completed and active items are returned (subject to
     * deleted-item exclusion).
     */
    isCompleted?: boolean | undefined;

    /**
     * When true, include soft-deleted records (items where `deleted_at` is
     * not null). This flag should be used only in recovery or
     * administrative contexts. By default (false or omitted) deleted items
     * are excluded.
     */
    includeDeleted?: boolean | undefined;

    /**
     * Sort key. Allowed values map to columns in the Prisma model:
     * `created_at` or `position`. Use `created_at` for chronological order
     * and `position` for client-managed ordering.
     */
    sortBy?: "created_at" | "position" | undefined;

    /**
     * Sort direction applied to the `sortBy` key. Allowed values: `asc` or
     * `desc`. Default server behavior should be documented in the API (for
     * example, newest-first for created_at).
     */
    sortOrder?: "asc" | "desc" | undefined;

    /**
     * Optional simple text search applied to title and/or description. The
     * server may implement simple substring matching or use indexed search
     * depending on implementation. Keep queries short for performance.
     */
    q?: string | undefined;
  };

  /**
   * Create DTO for todo_app_todos.
   *
   * This schema defines the request body for creating a new todo item. It
   * intentionally includes only user-editable fields that exist on the
   * `todo_app_todos` Prisma model. System-managed fields such as `id`,
   * `user_id`, `created_at`, `updated_at`, `completed_at`, and `deleted_at`
   * are NOT accepted in this payload and will be set by the server. The
   * `title` property is required; other properties are optional and will be
   * validated against the constraints described above.
   */
  export type ICreate = {
    /**
     * Short task title used for quick capture and display.
     *
     * This property maps to the Prisma model column `todo_app_todos.title`.
     * It is a required business field and must contain at least one
     * non-whitespace character. Use a concise summary suitable for list
     * displays (recommended max 250 characters). The server will trim
     * leading and trailing whitespace before validation.
     */
    title: string & tags.MinLength<1> & tags.MaxLength<250>;

    /**
     * Optional longer description or notes for the todo item.
     *
     * This property maps to `todo_app_todos.description` in the Prisma
     * model. It may be omitted when creating a todo. If provided, the text
     * should be suitable for display in a detail view. Maximum length is
     * 4000 characters; the server may trim surrounding whitespace.
     */
    description?: (string & tags.MaxLength<4000>) | undefined;

    /**
     * Optional integer used by clients to indicate manual ordering or
     * position within a list.
     *
     * This property maps to `todo_app_todos.position` in the Prisma model.
     * When present, it must be an integer. The server may normalize or
     * adjust positions when persisting to maintain list invariants.
     */
    position?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional initial completion state for the new todo.
     *
     * This property maps to `todo_app_todos.is_completed` in the Prisma
     * model. If omitted, the server will default the value to false. If
     * provided as true, the server will also set the server-side
     * `completed_at` timestamp according to business rules.
     */
    is_completed?: boolean | undefined;
  };

  /**
   * Update DTO for todo_app_todos.
   *
   * All properties are optional to support partial updates (PATCH/PUT
   * semantics where partial payloads are permitted). This schema permits only
   * client-editable columns defined on the `todo_app_todos` Prisma model.
   * Immutable and system-managed columns (e.g., `id`, `user_id`,
   * `created_at`, `updated_at`, `deleted_at`) must not be supplied by clients
   * and will be enforced server-side. Validation rules for each property
   * mirror the constraints described in the create DTO.
   */
  export type IUpdate = {
    /**
     * Updated short title for the todo item.
     *
     * This property maps to `todo_app_todos.title` and is optional in
     * update payloads. When present, it must be a non-empty string (1..250
     * chars after trimming). Use this field to change the display summary
     * of the todo.
     */
    title?: (string & tags.MinLength<1> & tags.MaxLength<250>) | undefined;

    /**
     * Updated longer description or notes for the todo.
     *
     * This property maps to `todo_app_todos.description` in the Prisma
     * model. It is optional for updates. If omitted, the existing
     * description remains unchanged. To clear an existing description, send
     * an explicit empty string if policy allows; null semantics are
     * implementation-dependent and clients should follow the API guide.
     */
    description?: (string & tags.MaxLength<4000>) | undefined;

    /**
     * Updated integer position used for ordering within a list.
     *
     * This property maps to `todo_app_todos.position`. Provide an integer
     * value when reordering items. The server may re-normalize positions to
     * maintain ordering constraints.
     */
    position?: (number & tags.Type<"int32">) | undefined;

    /**
     * Toggle completion state for the todo item.
     *
     * This property maps to `todo_app_todos.is_completed`. When set to
     * true, the server will set `completed_at` to the current timestamp.
     * When set to false, the server will clear `completed_at` and set the
     * item back to the active state. This field is optional in update
     * payloads.
     */
    is_completed?: boolean | undefined;
  };

  /**
   * Compact representation of a Todo item suitable for list views.
   *
   * This summary schema corresponds to the Prisma model `todo_app_todos` and
   * intentionally excludes large-text fields (for example, the full
   * `description`) to keep list responses lightweight. Clients that need the
   * full content must request the detailed `ITodoAppTodo` entity via the
   * single-item endpoint.
   */
  export type ISummary = {
    /**
     * Primary identifier of the todo item (Prisma: todo_app_todos.id).
     *
     * This UUID is assigned by the server at creation and is the canonical
     * reference used in item-level operations and audit records.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Short task title used for display and quick capture (Prisma:
     * todo_app_todos.title).
     *
     * Titles should be concise and are the primary field shown in list
     * views. Validation rules require non-empty trimmed strings; length
     * guidance is 1â€“250 characters.
     */
    title: string;

    /**
     * Completion flag indicating whether the todo is marked completed
     * (Prisma: todo_app_todos.is_completed).
     *
     * Use this flag for quick filtering in lists and to drive UI state.
     */
    is_completed: boolean;

    /**
     * Timestamp when the todo was marked completed (Prisma:
     * todo_app_todos.completed_at).
     *
     * Nullable: null indicates the item is not completed. When set, it
     * records the exact server time the todo entered the completed state.
     */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional client-managed integer used for manual ordering (Prisma:
     * todo_app_todos.position).
     *
     * This property is nullable and may be used by clients to represent
     * custom sort order. The server stores the numeric position if
     * provided.
     */
    position?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Record creation timestamp for the todo (Prisma:
     * todo_app_todos.created_at).
     *
     * Managed by the server; included to support sorting and display of
     * when the item was created.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last modification timestamp for the todo (Prisma:
     * todo_app_todos.updated_at).
     *
     * This timestamp updates on every successful modification and enables
     * clients to detect recent changes and synchronize state.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
